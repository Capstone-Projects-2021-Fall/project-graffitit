<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.DocDB</name>
    </assembly>
    <members>
        <member name="T:Amazon.DocDB.Internal.IPreSignedUrlRequest">
            <summary>
            Interface implemented by requests that are supported by <see cref="T:Amazon.DocDB.Internal.PreSignedUrlRequestHandler"/> 
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Internal.IPreSignedUrlRequest.SourceRegion">
            <summary>
            <para>
            Gets and sets the source region for the operation.
            If set, the PreSignedUrl property is not required for cross-region operations.
            PreSignedUrl will be auto-generated based on SourceRegion, and sent by the client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Internal.IPreSignedUrlRequest.PreSignedUrl">
            <summary>
            Gets and sets the property PreSignedUrl.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Internal.PreSignedUrlRequestHandler">
            <summary>
            Custom pipeline handler to populate PreSignedUrl if it's empty, and the SourceRegion paramter is populated.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Internal.PreSignedUrlRequestHandler.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Construct instance of PreSignedUrlRequestHandler
            </summary>
            <param name="credentials"></param>
        </member>
        <member name="M:Amazon.DocDB.Internal.PreSignedUrlRequestHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.DocDB.Internal.PreSignedUrlRequestHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.DocDB.Internal.PreSignedUrlRequestHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            <para>
            Auto-generates pre-signed URLs for requests that implement <see cref="T:Amazon.DocDB.Internal.IPreSignedUrlRequest"/>.
            if the PreSignedUrl property isn't set and the SourceRegion property is set.
            </para>
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.DocDB.Internal.AmazonDocDBMetadata">
            <summary>
            Service metadata for  Amazon DocDB service
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Internal.AmazonDocDBMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Internal.AmazonDocDBMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CopyDBClusterSnapshotRequest">
            <summary>
            Container for the parameters to the CopyDBClusterSnapshot operation.
            Copies a snapshot of a cluster.
            
             
            <para>
            To copy a cluster snapshot from a shared manual cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared cluster snapshot. You can only
            copy a shared DB cluster snapshot, whether encrypted or not, in the same Region.
            </para>
             
            <para>
            To cancel the copy operation after it is in progress, delete the target cluster snapshot
            identified by <code>TargetDBClusterSnapshotIdentifier</code> while that cluster snapshot
            is in the <i>copying</i> status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterSnapshotRequest.SourceRegion">
            <summary>
            <para>
            The SourceRegion for generating the PreSignedUrl property.
            If SourceRegion is set and the PreSignedUrl property is not,
            then PreSignedUrl will be automatically generated by the client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterSnapshotRequest.CopyTags">
            <summary>
            Gets and sets the property CopyTags. 
            <para>
            Set to <code>true</code> to copy all tags from the source cluster snapshot to the
            target cluster snapshot, and otherwise <code>false</code>. The default is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterSnapshotRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The KMS key ID for an encrypted cluster snapshot. The KMS key ID is the Amazon Resource
            Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key. 
            </para>
             
            <para>
            If you copy an encrypted cluster snapshot from your account, you can specify a value
            for <code>KmsKeyId</code> to encrypt the copy with a new KMS encryption key. If you
            don't specify a value for <code>KmsKeyId</code>, then the copy of the cluster snapshot
            is encrypted with the same KMS key as the source cluster snapshot.
            </para>
             
            <para>
            If you copy an encrypted cluster snapshot that is shared from another account, then
            you must specify a value for <code>KmsKeyId</code>.
            </para>
             
            <para>
            To copy an encrypted cluster snapshot to another Region, set <code>KmsKeyId</code>
            to the KMS key ID that you want to use to encrypt the copy of the cluster snapshot
            in the destination Region. KMS encryption keys are specific to the Region that they
            are created in, and you can't use encryption keys from one Region in another Region.
            </para>
             
            <para>
            If you copy an unencrypted cluster snapshot and specify a value for the <code>KmsKeyId</code>
            parameter, an error is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterSnapshotRequest.PreSignedUrl">
            <summary>
            Gets and sets the property PreSignedUrl. 
            <para>
            The URL that contains a Signature Version 4 signed request for the<code>CopyDBClusterSnapshot</code>
            API action in the Region that contains the source cluster snapshot to copy. You must
            use the <code>PreSignedUrl</code> parameter when copying a cluster snapshot from another
            Region.
            </para>
             
            <para>
            If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code>
            (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code>
            manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed URL that
            is a valid request for the operation that can be executed in the source Region.
            </para>
             
            <para>
            The presigned URL must be a valid request for the <code>CopyDBClusterSnapshot</code>
            API action that can be executed in the source Region that contains the cluster snapshot
            to be copied. The presigned URL request must contain the following parameter values:
            </para>
             <ul> <li> 
            <para>
             <code>SourceRegion</code> - The ID of the region that contains the snapshot to be
            copied.
            </para>
             </li> <li> 
            <para>
             <code>SourceDBClusterSnapshotIdentifier</code> - The identifier for the the encrypted
            cluster snapshot to be copied. This identifier must be in the Amazon Resource Name
            (ARN) format for the source Region. For example, if you are copying an encrypted cluster
            snapshot from the us-east-1 Region, then your <code>SourceDBClusterSnapshotIdentifier</code>
            looks something like the following: <code>arn:aws:rds:us-east-1:12345678012:sample-cluster:sample-cluster-snapshot</code>.
            </para>
             </li> <li> 
            <para>
             <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new cluster
            snapshot to be created. This parameter isn't case sensitive.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterSnapshotRequest.SourceDBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property SourceDBClusterSnapshotIdentifier. 
            <para>
            The identifier of the cluster snapshot to copy. This parameter is not case sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must specify a valid system snapshot in the <i>available</i> state.
            </para>
             </li> <li> 
            <para>
            If the source snapshot is in the same Region as the copy, specify a valid snapshot
            identifier.
            </para>
             </li> <li> 
            <para>
            If the source snapshot is in a different Region than the copy, specify a valid cluster
            snapshot ARN.
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster-snapshot1</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterSnapshotRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterSnapshotRequest.TargetDBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property TargetDBClusterSnapshotIdentifier. 
            <para>
            The identifier of the new cluster snapshot to create from the source cluster snapshot.
            This parameter is not case sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens. 
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens. 
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster-snapshot2</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateDBClusterRequest">
            <summary>
            Container for the parameters to the CreateDBCluster operation.
            Creates a new Amazon DocumentDB cluster.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.SourceRegion">
            <summary>
            <para>
            The SourceRegion for generating the PreSignedUrl property.
            If SourceRegion is set and the PreSignedUrl property is not,
            then PreSignedUrl will be automatically generated by the client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            A list of Amazon EC2 Availability Zones that instances in the cluster can be created
            in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            The number of days for which automated backups are retained. You must specify a minimum
            value of 1.
            </para>
             
            <para>
            Default: 1
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be a value from 1 to 35.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The cluster identifier. This parameter is stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens. 
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens. 
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the cluster parameter group to associate with this cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            A subnet group to associate with this cluster.
            </para>
             
            <para>
            Constraints: Must match the name of an existing <code>DBSubnetGroup</code>. Must not
            be default.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>
            is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>
            is disabled. <code>DeletionProtection</code> protects clusters from being accidentally
            deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.EnableCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnableCloudwatchLogsExports. 
            <para>
            A list of log types that need to be enabled for exporting to Amazon CloudWatch Logs.
            You can enable audit logs or profiler logs. For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html">
            Auditing Amazon DocumentDB Events</a> and <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/profiling.html">
            Profiling Amazon DocumentDB Operations</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the database engine to be used for this cluster.
            </para>
             
            <para>
            Valid values: <code>docdb</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version number of the database engine to use. The <code>--engine-version</code>
            will default to the latest major engine version. For production workloads, we recommend
            explicitly declaring this parameter with the intended major engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.GlobalClusterIdentifier">
            <summary>
            Gets and sets the property GlobalClusterIdentifier. 
            <para>
            The cluster identifier of the new global cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The KMS key identifier for an encrypted cluster.
            </para>
             
            <para>
            The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are creating a cluster using the same account that owns the KMS encryption
            key that is used to encrypt the new cluster, you can use the KMS key alias instead
            of the ARN for the KMS encryption key.
            </para>
             
            <para>
            If an encryption key is not specified in <code>KmsKeyId</code>: 
            </para>
             <ul> <li> 
            <para>
            If the <code>StorageEncrypted</code> parameter is <code>true</code>, Amazon DocumentDB
            uses your default encryption key. 
            </para>
             </li> </ul> 
            <para>
            KMS creates the default encryption key for your account. Your account has a different
            default encryption key for each Regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.MasterUsername">
            <summary>
            Gets and sets the property MasterUsername. 
            <para>
            The name of the master user for the cluster.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be from 1 to 63 letters or numbers.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot be a reserved word for the chosen database engine. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.MasterUserPassword">
            <summary>
            Gets and sets the property MasterUserPassword. 
            <para>
            The password for the master database user. This password can contain any printable
            ASCII character except forward slash (/), double quote ("), or the "at" symbol (@).
            </para>
             
            <para>
            Constraints: Must contain from 8 to 100 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port number on which the instances in the cluster accept connections.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.PreferredBackupWindow">
            <summary>
            Gets and sets the property PreferredBackupWindow. 
            <para>
            The daily time range during which automated backups are created if automated backups
            are enabled using the <code>BackupRetentionPeriod</code> parameter. 
            </para>
             
            <para>
            The default is a 30-minute window selected at random from an 8-hour block of time
            for each Region. 
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be in the format <code>hh24:mi-hh24:mi</code>.
            </para>
             </li> <li> 
            <para>
            Must be in Universal Coordinated Time (UTC).
            </para>
             </li> <li> 
            <para>
            Must not conflict with the preferred maintenance window. 
            </para>
             </li> <li> 
            <para>
            Must be at least 30 minutes.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).
            </para>
             
            <para>
            Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> 
            </para>
             
            <para>
            The default is a 30-minute window selected at random from an 8-hour block of time
            for each Region, occurring on a random day of the week.
            </para>
             
            <para>
            Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun
            </para>
             
            <para>
            Constraints: Minimum 30-minute window.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.PreSignedUrl">
            <summary>
            Gets and sets the property PreSignedUrl. 
            <para>
            Not currently supported. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            Specifies whether the cluster is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterRequest.VpcSecurityGroupIds">
            <summary>
            Gets and sets the property VpcSecurityGroupIds. 
            <para>
            A list of EC2 VPC security groups to associate with this cluster. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.AddSourceIdentifierToSubscriptionRequest">
            <summary>
            Container for the parameters to the AddSourceIdentifierToSubscription operation.
            Adds a source identifier to an existing event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.AddSourceIdentifierToSubscriptionRequest.SourceIdentifier">
            <summary>
            Gets and sets the property SourceIdentifier. 
            <para>
            The identifier of the event source to be added:
            </para>
             <ul> <li> 
            <para>
            If the source type is an instance, a <code>DBInstanceIdentifier</code> must be provided.
            </para>
             </li> <li> 
            <para>
            If the source type is a security group, a <code>DBSecurityGroupName</code> must be
            provided.
            </para>
             </li> <li> 
            <para>
            If the source type is a parameter group, a <code>DBParameterGroupName</code> must
            be provided.
            </para>
             </li> <li> 
            <para>
            If the source type is a snapshot, a <code>DBSnapshotIdentifier</code> must be provided.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.AddSourceIdentifierToSubscriptionRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the Amazon DocumentDB event notification subscription that you want to
            add a source identifier to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.AddSourceIdentifierToSubscriptionResponse">
            <summary>
            This is the response object from the AddSourceIdentifierToSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.AddSourceIdentifierToSubscriptionResponse.EventSubscription">
            <summary>
            Gets and sets the property EventSubscription.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.AddTagsToResourceRequest">
            <summary>
            Container for the parameters to the AddTagsToResource operation.
            Adds metadata tags to an Amazon DocumentDB resource. You can use these tags with cost
            allocation reporting to track costs that are associated with Amazon DocumentDB resources
            or in a <code>Condition</code> statement in an Identity and Access Management (IAM)
            policy for Amazon DocumentDB.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.AddTagsToResourceRequest.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The Amazon DocumentDB resource that the tags are added to. This value is an Amazon
            Resource Name .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.AddTagsToResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the Amazon DocumentDB resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.AddTagsToResourceResponse">
            <summary>
            This is the response object from the AddTagsToResource operation.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ApplyPendingMaintenanceActionRequest">
            <summary>
            Container for the parameters to the ApplyPendingMaintenanceAction operation.
            Applies a pending maintenance action to a resource (for example, to an Amazon DocumentDB
            instance).
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ApplyPendingMaintenanceActionRequest.ApplyAction">
            <summary>
            Gets and sets the property ApplyAction. 
            <para>
            The pending maintenance action to apply to this resource.
            </para>
             
            <para>
            Valid values: <code>system-update</code>, <code>db-upgrade</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ApplyPendingMaintenanceActionRequest.OptInType">
            <summary>
            Gets and sets the property OptInType. 
            <para>
            A value that specifies the type of opt-in request or undoes an opt-in request. An
            opt-in request of type <code>immediate</code> can't be undone.
            </para>
             
            <para>
            Valid values:
            </para>
             <ul> <li> 
            <para>
             <code>immediate</code> - Apply the maintenance action immediately.
            </para>
             </li> <li> 
            <para>
             <code>next-maintenance</code> - Apply the maintenance action during the next maintenance
            window for the resource. 
            </para>
             </li> <li> 
            <para>
             <code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in
            requests.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ApplyPendingMaintenanceActionRequest.ResourceIdentifier">
            <summary>
            Gets and sets the property ResourceIdentifier. 
            <para>
            The Amazon Resource Name (ARN) of the resource that the pending maintenance action
            applies to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ApplyPendingMaintenanceActionResponse">
            <summary>
            This is the response object from the ApplyPendingMaintenanceAction operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ApplyPendingMaintenanceActionResponse.ResourcePendingMaintenanceActions">
            <summary>
            Gets and sets the property ResourcePendingMaintenanceActions.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.AuthorizationNotFoundException">
            <summary>
            The specified CIDR IP or Amazon EC2 security group isn't authorized for the specified
            security group.
            
             
            <para>
            Amazon DocumentDB also might not be authorized to perform necessary actions on your
            behalf using IAM.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.AuthorizationNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new AuthorizationNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.AuthorizationNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AuthorizationNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.AuthorizationNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of AuthorizationNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.AuthorizationNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthorizationNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.AuthorizationNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthorizationNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.AuthorizationNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AuthorizationNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.AuthorizationNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.AvailabilityZone">
            <summary>
            Information about an Availability Zone.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.AvailabilityZone.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Availability Zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.Certificate">
            <summary>
            A certificate authority (CA) certificate for an account.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Certificate.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The Amazon Resource Name (ARN) for the certificate.
            </para>
             
            <para>
            Example: <code>arn:aws:rds:us-east-1::cert:rds-ca-2019</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Certificate.CertificateIdentifier">
            <summary>
            Gets and sets the property CertificateIdentifier. 
            <para>
            The unique key that identifies a certificate.
            </para>
             
            <para>
            Example: <code>rds-ca-2019</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Certificate.CertificateType">
            <summary>
            Gets and sets the property CertificateType. 
            <para>
            The type of the certificate.
            </para>
             
            <para>
            Example: <code>CA</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Certificate.Thumbprint">
            <summary>
            Gets and sets the property Thumbprint. 
            <para>
            The thumbprint of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Certificate.ValidFrom">
            <summary>
            Gets and sets the property ValidFrom. 
            <para>
            The starting date-time from which the certificate is valid.
            </para>
             
            <para>
            Example: <code>2019-07-31T17:57:09Z</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Certificate.ValidTill">
            <summary>
            Gets and sets the property ValidTill. 
            <para>
            The date-time after which the certificate is no longer valid.
            </para>
             
            <para>
            Example: <code>2024-07-31T17:57:09Z</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CertificateNotFoundException">
            <summary>
            <code>CertificateIdentifier</code> doesn't refer to an existing certificate.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.CertificateNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new CertificateNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.CertificateNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CertificateNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.CertificateNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of CertificateNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.CertificateNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CertificateNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.CertificateNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CertificateNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.CertificateNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CertificateNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.CertificateNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.CloudwatchLogsExportConfiguration">
            <summary>
            The configuration setting for the log types to be enabled for export to Amazon CloudWatch
            Logs for a specific instance or cluster.
            
             
            <para>
            The <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine
            which logs are exported (or not exported) to CloudWatch Logs. The values within these
            arrays depend on the engine that is being used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CloudwatchLogsExportConfiguration.DisableLogTypes">
            <summary>
            Gets and sets the property DisableLogTypes. 
            <para>
            The list of log types to disable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CloudwatchLogsExportConfiguration.EnableLogTypes">
            <summary>
            Gets and sets the property EnableLogTypes. 
            <para>
            The list of log types to enable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CopyDBClusterParameterGroupRequest">
            <summary>
            Container for the parameters to the CopyDBClusterParameterGroup operation.
            Copies the specified cluster parameter group.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterParameterGroupRequest.SourceDBClusterParameterGroupIdentifier">
            <summary>
            Gets and sets the property SourceDBClusterParameterGroupIdentifier. 
            <para>
            The identifier or Amazon Resource Name (ARN) for the source cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must specify a valid cluster parameter group.
            </para>
             </li> <li> 
            <para>
            If the source cluster parameter group is in the same Region as the copy, specify a
            valid parameter group identifier; for example, <code>my-db-cluster-param-group</code>,
            or a valid ARN.
            </para>
             </li> <li> 
            <para>
            If the source parameter group is in a different Region than the copy, specify a valid
            cluster parameter group ARN; for example, <code>arn:aws:rds:us-east-1:123456789012:sample-cluster:sample-parameter-group</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterParameterGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags that are to be assigned to the parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterParameterGroupRequest.TargetDBClusterParameterGroupDescription">
            <summary>
            Gets and sets the property TargetDBClusterParameterGroupDescription. 
            <para>
            A description for the copied cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterParameterGroupRequest.TargetDBClusterParameterGroupIdentifier">
            <summary>
            Gets and sets the property TargetDBClusterParameterGroupIdentifier. 
            <para>
            The identifier for the copied cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Cannot be null, empty, or blank.
            </para>
             </li> <li> 
            <para>
            Must contain from 1 to 255 letters, numbers, or hyphens. 
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens. 
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster-param-group1</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CopyDBClusterParameterGroupResponse">
            <summary>
            This is the response object from the CopyDBClusterParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterParameterGroupResponse.DBClusterParameterGroup">
            <summary>
            Gets and sets the property DBClusterParameterGroup.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CopyDBClusterSnapshotResponse">
            <summary>
            This is the response object from the CopyDBClusterSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CopyDBClusterSnapshotResponse.DBClusterSnapshot">
            <summary>
            Gets and sets the property DBClusterSnapshot.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateDBClusterParameterGroupRequest">
            <summary>
            Container for the parameters to the CreateDBClusterParameterGroup operation.
            Creates a new cluster parameter group.
            
             
            <para>
            Parameters in a cluster parameter group apply to all of the instances in a cluster.
            </para>
             
            <para>
            A cluster parameter group is initially created with the default parameters for the
            database engine used by instances in the cluster. In Amazon DocumentDB, you cannot
            make modifications directly to the <code>default.docdb3.6</code> cluster parameter
            group. If your Amazon DocumentDB cluster is using the default cluster parameter group
            and you want to modify a value in it, you must first <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-create.html">
            create a new parameter group</a> or <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-copy.html">
            copy an existing parameter group</a>, modify it, and then apply the modified parameter
            group to your cluster. For the new cluster parameter group and associated settings
            to take effect, you must then reboot the instances in the cluster without failover.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-modify.html">
            Modifying Amazon DocumentDB Cluster Parameter Groups</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterParameterGroupRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must not match the name of an existing <code>DBClusterParameterGroup</code>.
            </para>
             </li> </ul> <note> 
            <para>
            This value is stored as a lowercase string.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterParameterGroupRequest.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The cluster parameter group family name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterParameterGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description for the cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterParameterGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateDBClusterParameterGroupResponse">
            <summary>
            This is the response object from the CreateDBClusterParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterParameterGroupResponse.DBClusterParameterGroup">
            <summary>
            Gets and sets the property DBClusterParameterGroup.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateDBClusterResponse">
            <summary>
            This is the response object from the CreateDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateDBClusterSnapshotRequest">
            <summary>
            Container for the parameters to the CreateDBClusterSnapshot operation.
            Creates a snapshot of a cluster.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterSnapshotRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The identifier of the cluster to create a snapshot for. This parameter is not case
            sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing <code>DBCluster</code>.
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterSnapshotRequest.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            The identifier of the cluster snapshot. This parameter is stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens. 
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster-snapshot1</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterSnapshotRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateDBClusterSnapshotResponse">
            <summary>
            This is the response object from the CreateDBClusterSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBClusterSnapshotResponse.DBClusterSnapshot">
            <summary>
            Gets and sets the property DBClusterSnapshot.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateDBInstanceRequest">
            <summary>
            Container for the parameters to the CreateDBInstance operation.
            Creates a new instance.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBInstanceRequest.AutoMinorVersionUpgrade">
            <summary>
            Gets and sets the property AutoMinorVersionUpgrade. 
            <para>
            This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform
            minor version upgrades regardless of the value set.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBInstanceRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Amazon EC2 Availability Zone that the instance is created in. 
            </para>
             
            <para>
            Default: A random, system-chosen Availability Zone in the endpoint's Region.
            </para>
             
            <para>
            Example: <code>us-east-1d</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBInstanceRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The identifier of the cluster that the instance will belong to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBInstanceRequest.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
            The compute and memory capacity of the instance; for example, <code>db.r5.large</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBInstanceRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The instance identifier. This parameter is stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> 
            <para>
            Example: <code>mydbinstance</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBInstanceRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the database engine to be used for this instance.
            </para>
             
            <para>
            Valid value: <code>docdb</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBInstanceRequest.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            The time range each week during which system maintenance can occur, in Universal Coordinated
            Time (UTC).
            </para>
             
            <para>
             Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> 
            </para>
             
            <para>
            The default is a 30-minute window selected at random from an 8-hour block of time
            for each Region, occurring on a random day of the week. 
            </para>
             
            <para>
            Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun
            </para>
             
            <para>
            Constraints: Minimum 30-minute window.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBInstanceRequest.PromotionTier">
            <summary>
            Gets and sets the property PromotionTier. 
            <para>
            A value that specifies the order in which an Amazon DocumentDB replica is promoted
            to the primary instance after a failure of the existing primary instance.
            </para>
             
            <para>
            Default: 1
            </para>
             
            <para>
            Valid values: 0-15
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBInstanceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the instance. You can assign up to 10 tags to an instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateDBInstanceResponse">
            <summary>
            This is the response object from the CreateDBInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBInstanceResponse.DBInstance">
            <summary>
            Gets and sets the property DBInstance.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateDBSubnetGroupRequest">
            <summary>
            Container for the parameters to the CreateDBSubnetGroup operation.
            Creates a new subnet group. subnet groups must contain at least one subnet in at least
            two Availability Zones in the Region.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBSubnetGroupRequest.DBSubnetGroupDescription">
            <summary>
            Gets and sets the property DBSubnetGroupDescription. 
            <para>
            The description for the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBSubnetGroupRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name for the subnet group. This value is stored as a lowercase string.
            </para>
             
            <para>
            Constraints: Must contain no more than 255 letters, numbers, periods, underscores,
            spaces, or hyphens. Must not be default.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBSubnetGroupRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The Amazon EC2 subnet IDs for the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBSubnetGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateDBSubnetGroupResponse">
            <summary>
            This is the response object from the CreateDBSubnetGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateDBSubnetGroupResponse.DBSubnetGroup">
            <summary>
            Gets and sets the property DBSubnetGroup.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateEventSubscriptionRequest">
            <summary>
            Container for the parameters to the CreateEventSubscription operation.
            Creates an Amazon DocumentDB event notification subscription. This action requires
            a topic Amazon Resource Name (ARN) created by using the Amazon DocumentDB console,
            the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon SNS, you
            must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed
            in the Amazon SNS console.
            
             
            <para>
            You can specify the type of source (<code>SourceType</code>) that you want to be notified
            of. You can also provide a list of Amazon DocumentDB sources (<code>SourceIds</code>)
            that trigger the events, and you can provide a list of event categories (<code>EventCategories</code>)
            for events that you want to be notified of. For example, you can specify <code>SourceType
            = db-instance</code>, <code>SourceIds = mydbinstance1, mydbinstance2</code> and <code>EventCategories
            = Availability, Backup</code>.
            </para>
             
            <para>
            If you specify both the <code>SourceType</code> and <code>SourceIds</code> (such as
            <code>SourceType = db-instance</code> and <code>SourceIdentifier = myDBInstance1</code>),
            you are notified of all the <code>db-instance</code> events for the specified source.
            If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>,
            you receive notice of the events for that source type for all your Amazon DocumentDB
            sources. If you do not specify either the <code>SourceType</code> or the <code>SourceIdentifier</code>,
            you are notified of events generated from all Amazon DocumentDB sources belonging
            to your customer account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateEventSubscriptionRequest.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
             A Boolean value; set to <code>true</code> to activate the subscription, set to <code>false</code>
            to create the subscription but not active it. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateEventSubscriptionRequest.EventCategories">
            <summary>
            Gets and sets the property EventCategories. 
            <para>
             A list of event categories for a <code>SourceType</code> that you want to subscribe
            to. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateEventSubscriptionRequest.SnsTopicArn">
            <summary>
            Gets and sets the property SnsTopicArn. 
            <para>
            The Amazon Resource Name (ARN) of the SNS topic created for event notification. Amazon
            SNS creates the ARN when you create a topic and subscribe to it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateEventSubscriptionRequest.SourceIds">
            <summary>
            Gets and sets the property SourceIds. 
            <para>
            The list of identifiers of the event sources for which events are returned. If not
            specified, then all sources are included in the response. An identifier must begin
            with a letter and must contain only ASCII letters, digits, and hyphens; it can't end
            with a hyphen or contain two consecutive hyphens.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If <code>SourceIds</code> are provided, <code>SourceType</code> must also be provided.
            </para>
             </li> <li> 
            <para>
            If the source type is an instance, a <code>DBInstanceIdentifier</code> must be provided.
            </para>
             </li> <li> 
            <para>
            If the source type is a security group, a <code>DBSecurityGroupName</code> must be
            provided.
            </para>
             </li> <li> 
            <para>
            If the source type is a parameter group, a <code>DBParameterGroupName</code> must
            be provided.
            </para>
             </li> <li> 
            <para>
            If the source type is a snapshot, a <code>DBSnapshotIdentifier</code> must be provided.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateEventSubscriptionRequest.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The type of source that is generating the events. For example, if you want to be notified
            of events generated by an instance, you would set this parameter to <code>db-instance</code>.
            If this value is not specified, all events are returned.
            </para>
             
            <para>
            Valid values: <code>db-instance</code>, <code>db-cluster</code>, <code>db-parameter-group</code>,
            <code>db-security-group</code>, <code>db-cluster-snapshot</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateEventSubscriptionRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the subscription.
            </para>
             
            <para>
            Constraints: The name must be fewer than 255 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateEventSubscriptionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the event subscription.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateEventSubscriptionResponse">
            <summary>
            This is the response object from the CreateEventSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateEventSubscriptionResponse.EventSubscription">
            <summary>
            Gets and sets the property EventSubscription.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateGlobalClusterRequest">
            <summary>
            Container for the parameters to the CreateGlobalCluster operation.
            Creates an Amazon DocumentDB global cluster that can span multiple multiple Regions.
            The global cluster contains one primary cluster with read-write capability, and up-to
            give read-only secondary clusters. Global clusters uses storage-based fast replication
            across regions with latencies less than one second, using dedicated infrastructure
            with no impact to your workload’s performance.
            
              
            <para>
            You can create a global cluster that is initially empty, and then add a primary and
            a secondary to it. Or you can specify an existing cluster during the create operation,
            and this cluster becomes the primary of the global cluster. 
            </para>
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateGlobalClusterRequest.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The name for your database of up to 64 alpha-numeric characters. If you do not provide
            a name, Amazon DocumentDB will not create a database in the global cluster you are
            creating.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateGlobalClusterRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            The deletion protection setting for the new global cluster. The global cluster can't
            be deleted when deletion protection is enabled. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateGlobalClusterRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the database engine to be used for this cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateGlobalClusterRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The engine version of the global cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateGlobalClusterRequest.GlobalClusterIdentifier">
            <summary>
            Gets and sets the property GlobalClusterIdentifier. 
            <para>
            The cluster identifier of the new global cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateGlobalClusterRequest.SourceDBClusterIdentifier">
            <summary>
            Gets and sets the property SourceDBClusterIdentifier. 
            <para>
            The Amazon Resource Name (ARN) to use as the primary cluster of the global cluster.
            This parameter is optional.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateGlobalClusterRequest.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            The storage encryption setting for the new global cluster. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.CreateGlobalClusterResponse">
            <summary>
            This is the response object from the CreateGlobalCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.CreateGlobalClusterResponse.GlobalCluster">
            <summary>
            Gets and sets the property GlobalCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBCluster">
            <summary>
            Detailed information about a cluster.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.AssociatedRoles">
            <summary>
            Gets and sets the property AssociatedRoles. 
            <para>
            Provides a list of the Identity and Access Management (IAM) roles that are associated
            with the cluster. (IAM) roles that are associated with a cluster grant permission
            for the cluster to access other Amazon Web Services services on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            Provides the list of Amazon EC2 Availability Zones that instances in the cluster can
            be created in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            Specifies the number of days for which automatic snapshots are retained.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.ClusterCreateTime">
            <summary>
            Gets and sets the property ClusterCreateTime. 
            <para>
            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.DBClusterArn">
            <summary>
            Gets and sets the property DBClusterArn. 
            <para>
            The Amazon Resource Name (ARN) for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            Contains a user-supplied cluster identifier. This identifier is the unique key that
            identifies a cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.DBClusterMembers">
            <summary>
            Gets and sets the property DBClusterMembers. 
            <para>
            Provides the list of instances that make up the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.DBClusterParameterGroup">
            <summary>
            Gets and sets the property DBClusterParameterGroup. 
            <para>
            Specifies the name of the cluster parameter group for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.DbClusterResourceId">
            <summary>
            Gets and sets the property DbClusterResourceId. 
            <para>
            The Region-unique, immutable identifier for the cluster. This identifier is found
            in CloudTrail log entries whenever the KMS key for the cluster is accessed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.DBSubnetGroup">
            <summary>
            Gets and sets the property DBSubnetGroup. 
            <para>
            Specifies information on the subnet group that is associated with the cluster, including
            the name, description, and subnets in the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>
            is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>
            is disabled. <code>DeletionProtection</code> protects clusters from being accidentally
            deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.EarliestRestorableTime">
            <summary>
            Gets and sets the property EarliestRestorableTime. 
            <para>
            The earliest time to which a database can be restored with point-in-time restore.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.EnabledCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnabledCloudwatchLogsExports. 
            <para>
            A list of log types that this cluster is configured to export to Amazon CloudWatch
            Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            Specifies the connection endpoint for the primary instance of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            Provides the name of the database engine to be used for this cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Indicates the database engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.HostedZoneId">
            <summary>
            Gets and sets the property HostedZoneId. 
            <para>
            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            If <code>StorageEncrypted</code> is <code>true</code>, the KMS key identifier for
            the encrypted cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.LatestRestorableTime">
            <summary>
            Gets and sets the property LatestRestorableTime. 
            <para>
            Specifies the latest time to which a database can be restored with point-in-time restore.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.MasterUsername">
            <summary>
            Gets and sets the property MasterUsername. 
            <para>
            Contains the master user name for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.MultiAZ">
            <summary>
            Gets and sets the property MultiAZ. 
            <para>
            Specifies whether the cluster has instances in multiple Availability Zones.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.PercentProgress">
            <summary>
            Gets and sets the property PercentProgress. 
            <para>
            Specifies the progress of the operation as a percentage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            Specifies the port that the database engine is listening on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.PreferredBackupWindow">
            <summary>
            Gets and sets the property PreferredBackupWindow. 
            <para>
            Specifies the daily time range during which automated backups are created if automated
            backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            Specifies the weekly time range during which system maintenance can occur, in Universal
            Coordinated Time (UTC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.ReaderEndpoint">
            <summary>
            Gets and sets the property ReaderEndpoint. 
            <para>
            The reader endpoint for the cluster. The reader endpoint for a cluster load balances
            connections across the Amazon DocumentDB replicas that are available in a cluster.
            As clients request new connections to the reader endpoint, Amazon DocumentDB distributes
            the connection requests among the Amazon DocumentDB replicas in the cluster. This
            functionality can help balance your read workload across multiple Amazon DocumentDB
            replicas in your cluster. 
            </para>
             
            <para>
            If a failover occurs, and the Amazon DocumentDB replica that you are connected to
            is promoted to be the primary instance, your connection is dropped. To continue sending
            your read workload to other Amazon DocumentDB replicas in the cluster, you can then
            reconnect to the reader endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.ReadReplicaIdentifiers">
            <summary>
            Gets and sets the property ReadReplicaIdentifiers. 
            <para>
            Contains one or more identifiers of the secondary clusters that are associated with
            this cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.ReplicationSourceIdentifier">
            <summary>
            Gets and sets the property ReplicationSourceIdentifier. 
            <para>
            Contains the identifier of the source cluster if this cluster is a secondary cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Specifies the current state of this cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            Specifies whether the cluster is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBCluster.VpcSecurityGroups">
            <summary>
            Gets and sets the property VpcSecurityGroups. 
            <para>
            Provides a list of virtual private cloud (VPC) security groups that the cluster belongs
            to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            <summary>
            You already have a cluster with the given identifier.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterMember">
            <summary>
            Contains information about an instance that is part of a cluster.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterMember.DBClusterParameterGroupStatus">
            <summary>
            Gets and sets the property DBClusterParameterGroupStatus. 
            <para>
            Specifies the status of the cluster parameter group for this member of the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterMember.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            Specifies the instance identifier for this member of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterMember.IsClusterWriter">
            <summary>
            Gets and sets the property IsClusterWriter. 
            <para>
            A value that is <code>true</code> if the cluster member is the primary instance for
            the cluster and <code>false</code> otherwise.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterMember.PromotionTier">
            <summary>
            Gets and sets the property PromotionTier. 
            <para>
            A value that specifies the order in which an Amazon DocumentDB replica is promoted
            to the primary instance after a failure of the existing primary instance. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <summary>
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterParameterGroup">
            <summary>
            Detailed information about a cluster parameter group.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterParameterGroup.DBClusterParameterGroupArn">
            <summary>
            Gets and sets the property DBClusterParameterGroupArn. 
            <para>
            The Amazon Resource Name (ARN) for the cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterParameterGroup.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            Provides the name of the cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterParameterGroup.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            Provides the name of the parameter group family that this cluster parameter group
            is compatible with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterParameterGroup.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Provides the customer-specified description for this cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException">
            <summary>
            <code>DBClusterParameterGroupName</code> doesn't refer to an existing cluster parameter
            group.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterParameterGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterParameterGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterParameterGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            <summary>
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterRole">
            <summary>
            Describes an Identity and Access Management (IAM) role that is associated with a cluster.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterRole.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAMrole that is associated with the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterRole.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Describes the state of association between the IAMrole and the cluster. The <code>Status</code>
            property returns one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>ACTIVE</code> - The IAMrole ARN is associated with the cluster and can be used
            to access other Amazon Web Services services on your behalf.
            </para>
             </li> <li> 
            <para>
             <code>PENDING</code> - The IAMrole ARN is being associated with the cluster.
            </para>
             </li> <li> 
            <para>
             <code>INVALID</code> - The IAMrole ARN is associated with the cluster, but the cluster
            cannot assume the IAMrole to access other Amazon Web Services services on your behalf.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterSnapshot">
            <summary>
            Detailed information about a cluster snapshot.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            Provides the list of Amazon EC2 Availability Zones that instances in the cluster snapshot
            can be restored in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.ClusterCreateTime">
            <summary>
            Gets and sets the property ClusterCreateTime. 
            <para>
            Specifies the time when the cluster was created, in Universal Coordinated Time (UTC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            Specifies the cluster identifier of the cluster that this cluster snapshot was created
            from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.DBClusterSnapshotArn">
            <summary>
            Gets and sets the property DBClusterSnapshotArn. 
            <para>
            The Amazon Resource Name (ARN) for the cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            Specifies the identifier for the cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            Specifies the name of the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Provides the version of the database engine for this cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            If <code>StorageEncrypted</code> is <code>true</code>, the KMS key identifier for
            the encrypted cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.MasterUsername">
            <summary>
            Gets and sets the property MasterUsername. 
            <para>
            Provides the master user name for the cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.PercentProgress">
            <summary>
            Gets and sets the property PercentProgress. 
            <para>
            Specifies the percentage of the estimated data that has been transferred.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            Specifies the port that the cluster was listening on at the time of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.SnapshotCreateTime">
            <summary>
            Gets and sets the property SnapshotCreateTime. 
            <para>
            Provides the time when the snapshot was taken, in UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.SnapshotType">
            <summary>
            Gets and sets the property SnapshotType. 
            <para>
            Provides the type of the cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.SourceDBClusterSnapshotArn">
            <summary>
            Gets and sets the property SourceDBClusterSnapshotArn. 
            <para>
            If the cluster snapshot was copied from a source cluster snapshot, the ARN for the
            source cluster snapshot; otherwise, a null value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Specifies the status of this cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            Specifies whether the cluster snapshot is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshot.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            Provides the virtual private cloud (VPC) ID that is associated with the cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            <summary>
            You already have a cluster snapshot with the given identifier.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterSnapshotAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterSnapshotAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterSnapshotAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterSnapshotAttribute">
            <summary>
            Contains the name and values of a manual cluster snapshot attribute.
            
             
            <para>
            Manual cluster snapshot attributes are used to authorize other accounts to restore
            a manual cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshotAttribute.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the manual cluster snapshot attribute.
            </para>
             
            <para>
            The attribute named <code>restore</code> refers to the list of accounts that have
            permission to copy or restore the manual cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshotAttribute.AttributeValues">
            <summary>
            Gets and sets the property AttributeValues. 
            <para>
            The values for the manual cluster snapshot attribute.
            </para>
             
            <para>
            If the <code>AttributeName</code> field is set to <code>restore</code>, then this
            element returns a list of IDs of the accounts that are authorized to copy or restore
            the manual cluster snapshot. If a value of <code>all</code> is in the list, then the
            manual cluster snapshot is public and available for any account to copy or restore.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterSnapshotAttributesResult">
            <summary>
            Detailed information about the attributes that are associated with a cluster snapshot.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshotAttributesResult.DBClusterSnapshotAttributes">
            <summary>
            Gets and sets the property DBClusterSnapshotAttributes. 
            <para>
            The list of attributes and values for the cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBClusterSnapshotAttributesResult.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            The identifier of the cluster snapshot that the attributes apply to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <summary>
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterSnapshotNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterSnapshotNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterSnapshotNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBEngineVersion">
            <summary>
            Detailed information about an engine version.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBEngineVersion.DBEngineDescription">
            <summary>
            Gets and sets the property DBEngineDescription. 
            <para>
            The description of the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBEngineVersion.DBEngineVersionDescription">
            <summary>
            Gets and sets the property DBEngineVersionDescription. 
            <para>
            The description of the database engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBEngineVersion.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The name of the parameter group family for the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBEngineVersion.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBEngineVersion.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version number of the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBEngineVersion.ExportableLogTypes">
            <summary>
            Gets and sets the property ExportableLogTypes. 
            <para>
            The types of logs that the database engine has available for export to Amazon CloudWatch
            Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBEngineVersion.SupportsLogExportsToCloudwatchLogs">
            <summary>
            Gets and sets the property SupportsLogExportsToCloudwatchLogs. 
            <para>
            A value that indicates whether the engine version supports exporting the log types
            specified by <code>ExportableLogTypes</code> to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBEngineVersion.ValidUpgradeTarget">
            <summary>
            Gets and sets the property ValidUpgradeTarget. 
            <para>
            A list of engine versions that this database engine version can be upgraded to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBInstance">
            <summary>
            Detailed information about an instance.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.AutoMinorVersionUpgrade">
            <summary>
            Gets and sets the property AutoMinorVersionUpgrade. 
            <para>
            Does not apply. This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB
            does not perform minor version upgrades regardless of the value set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            Specifies the name of the Availability Zone that the instance is located in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            Specifies the number of days for which automatic snapshots are retained.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.CACertificateIdentifier">
            <summary>
            Gets and sets the property CACertificateIdentifier. 
            <para>
            The identifier of the CA certificate for this DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            Contains the name of the cluster that the instance is a member of if the instance
            is a member of a cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.DBInstanceArn">
            <summary>
            Gets and sets the property DBInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
            Contains the name of the compute and memory capacity class of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            Contains a user-provided database identifier. This identifier is the unique key that
            identifies an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.DBInstanceStatus">
            <summary>
            Gets and sets the property DBInstanceStatus. 
            <para>
            Specifies the current state of this database.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.DbiResourceId">
            <summary>
            Gets and sets the property DbiResourceId. 
            <para>
            The Region-unique, immutable identifier for the instance. This identifier is found
            in CloudTrail log entries whenever the KMS key for the instance is accessed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.DBSubnetGroup">
            <summary>
            Gets and sets the property DBSubnetGroup. 
            <para>
            Specifies information on the subnet group that is associated with the instance, including
            the name, description, and subnets in the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.EnabledCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnabledCloudwatchLogsExports. 
            <para>
            A list of log types that this instance is configured to export to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            Specifies the connection endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            Provides the name of the database engine to be used for this instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Indicates the database engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.InstanceCreateTime">
            <summary>
            Gets and sets the property InstanceCreateTime. 
            <para>
            Provides the date and time that the instance was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
             If <code>StorageEncrypted</code> is <code>true</code>, the KMS key identifier for
            the encrypted instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.LatestRestorableTime">
            <summary>
            Gets and sets the property LatestRestorableTime. 
            <para>
            Specifies the latest time to which a database can be restored with point-in-time restore.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.PendingModifiedValues">
            <summary>
            Gets and sets the property PendingModifiedValues. 
            <para>
            Specifies that changes to the instance are pending. This element is included only
            when changes are pending. Specific changes are identified by subelements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.PreferredBackupWindow">
            <summary>
            Gets and sets the property PreferredBackupWindow. 
            <para>
             Specifies the daily time range during which automated backups are created if automated
            backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            Specifies the weekly time range during which system maintenance can occur, in Universal
            Coordinated Time (UTC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.PromotionTier">
            <summary>
            Gets and sets the property PromotionTier. 
            <para>
            A value that specifies the order in which an Amazon DocumentDB replica is promoted
            to the primary instance after a failure of the existing primary instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.PubliclyAccessible">
            <summary>
            Gets and sets the property PubliclyAccessible. 
            <para>
            Not supported. Amazon DocumentDB does not currently support public endpoints. The
            value of <code>PubliclyAccessible</code> is always <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.StatusInfos">
            <summary>
            Gets and sets the property StatusInfos. 
            <para>
            The status of a read replica. If the instance is not a read replica, this is blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            Specifies whether or not the instance is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstance.VpcSecurityGroups">
            <summary>
            Gets and sets the property VpcSecurityGroups. 
            <para>
            Provides a list of VPC security group elements that the instance belongs to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBInstanceAlreadyExistsException">
            <summary>
            You already have a instance with the given identifier.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBInstanceAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBInstanceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBInstanceAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBInstanceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBInstanceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBInstanceAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <summary>
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBInstanceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBInstanceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBInstanceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBInstanceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBInstanceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBInstanceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBInstanceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBInstanceStatusInfo">
            <summary>
            Provides a list of status information for an instance.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstanceStatusInfo.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            Details of the error if there is an error for the instance. If the instance is not
            in an error state, this value is blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstanceStatusInfo.Normal">
            <summary>
            Gets and sets the property Normal. 
            <para>
            A Boolean value that is <code>true</code> if the instance is operating normally, or
            <code>false</code> if the instance is in an error state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstanceStatusInfo.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Status of the instance. For a <code>StatusType</code> of read replica, the values
            can be <code>replicating</code>, error, <code>stopped</code>, or <code>terminated</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBInstanceStatusInfo.StatusType">
            <summary>
            Gets and sets the property StatusType. 
            <para>
            This value is currently "<code>read replication</code>."
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException">
            <summary>
            A parameter group with the same name already exists.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBParameterGroupAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBParameterGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBParameterGroupAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBParameterGroupAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <summary>
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBParameterGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBParameterGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBParameterGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException">
            <summary>
            This request would cause you to exceed the allowed number of parameter groups.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DBParameterGroupQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBParameterGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBParameterGroupQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBParameterGroupQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBSecurityGroupNotFoundException">
            <summary>
            <code>DBSecurityGroupName</code> doesn't refer to an existing security group.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSecurityGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBSecurityGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSecurityGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSecurityGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSecurityGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSecurityGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSecurityGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSecurityGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSecurityGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSecurityGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException">
            <summary>
            <code>DBSnapshotIdentifier</code> is already being used by an existing snapshot.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBSnapshotAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSnapshotAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSnapshotAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <summary>
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBSnapshotNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSnapshotNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSnapshotNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSnapshotNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBSubnetGroup">
            <summary>
            Detailed information about a subnet group.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBSubnetGroup.DBSubnetGroupArn">
            <summary>
            Gets and sets the property DBSubnetGroupArn. 
            <para>
            The Amazon Resource Name (ARN) for the DB subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBSubnetGroup.DBSubnetGroupDescription">
            <summary>
            Gets and sets the property DBSubnetGroupDescription. 
            <para>
            Provides the description of the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBSubnetGroup.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name of the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBSubnetGroup.SubnetGroupStatus">
            <summary>
            Gets and sets the property SubnetGroupStatus. 
            <para>
            Provides the status of the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBSubnetGroup.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            Detailed information about one or more subnets within a subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DBSubnetGroup.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            Provides the virtual private cloud (VPC) ID of the subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException">
            <summary>
            <code>DBSubnetGroupName</code> is already being used by an existing subnet group.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBSubnetGroupAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSubnetGroupAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            <summary>
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.String)">
            <summary>
            Constructs a new DBSubnetGroupDoesNotCoverEnoughAZsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupDoesNotCoverEnoughAZsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupDoesNotCoverEnoughAZsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupDoesNotCoverEnoughAZsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupDoesNotCoverEnoughAZsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSubnetGroupDoesNotCoverEnoughAZsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <summary>
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBSubnetGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSubnetGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException">
            <summary>
            The request would cause you to exceed the allowed number of subnet groups.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DBSubnetGroupQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSubnetGroupQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBSubnetQuotaExceededException">
            <summary>
            The request would cause you to exceed the allowed number of subnets in a subnet group.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DBSubnetQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSubnetQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSubnetQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSubnetQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBSubnetQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DBUpgradeDependencyFailureException">
            <summary>
            The upgrade failed because a resource that the depends on can't be modified.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DBUpgradeDependencyFailureException.#ctor(System.String)">
            <summary>
            Constructs a new DBUpgradeDependencyFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBUpgradeDependencyFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBUpgradeDependencyFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBUpgradeDependencyFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBUpgradeDependencyFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBUpgradeDependencyFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBUpgradeDependencyFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBUpgradeDependencyFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBUpgradeDependencyFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.DBUpgradeDependencyFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBUpgradeDependencyFailureException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.DBUpgradeDependencyFailureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteDBClusterParameterGroupRequest">
            <summary>
            Container for the parameters to the DeleteDBClusterParameterGroup operation.
            Deletes a specified cluster parameter group. The cluster parameter group to be deleted
            can't be associated with any clusters.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteDBClusterParameterGroupRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be the name of an existing cluster parameter group.
            </para>
             </li> <li> 
            <para>
            You can't delete a default cluster parameter group.
            </para>
             </li> <li> 
            <para>
            Cannot be associated with any clusters.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteDBClusterParameterGroupResponse">
            <summary>
            This is the response object from the DeleteDBClusterParameterGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteDBClusterRequest">
            <summary>
            Container for the parameters to the DeleteDBCluster operation.
            Deletes a previously provisioned cluster. When you delete a cluster, all automated
            backups for that cluster are deleted and can't be recovered. Manual DB cluster snapshots
            of the specified cluster are not deleted.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The cluster identifier for the cluster to be deleted. This parameter isn't case sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match an existing <code>DBClusterIdentifier</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteDBClusterRequest.FinalDBSnapshotIdentifier">
            <summary>
            Gets and sets the property FinalDBSnapshotIdentifier. 
            <para>
             The cluster snapshot identifier of the new cluster snapshot created when <code>SkipFinalSnapshot</code>
            is set to <code>false</code>. 
            </para>
             <note> 
            <para>
             Specifying this parameter and also setting the <code>SkipFinalShapshot</code> parameter
            to <code>true</code> results in an error. 
            </para>
             </note> 
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be from 1 to 255 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteDBClusterRequest.SkipFinalSnapshot">
            <summary>
            Gets and sets the property SkipFinalSnapshot. 
            <para>
             Determines whether a final cluster snapshot is created before the cluster is deleted.
            If <code>true</code> is specified, no cluster snapshot is created. If <code>false</code>
            is specified, a cluster snapshot is created before the DB cluster is deleted. 
            </para>
             <note> 
            <para>
            If <code>SkipFinalSnapshot</code> is <code>false</code>, you must specify a <code>FinalDBSnapshotIdentifier</code>
            parameter.
            </para>
             </note> 
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteDBClusterResponse">
            <summary>
            This is the response object from the DeleteDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteDBClusterSnapshotRequest">
            <summary>
            Container for the parameters to the DeleteDBClusterSnapshot operation.
            Deletes a cluster snapshot. If the snapshot is being copied, the copy operation is
            terminated.
            
             <note> 
            <para>
            The cluster snapshot must be in the <code>available</code> state to be deleted.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteDBClusterSnapshotRequest.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            The identifier of the cluster snapshot to delete.
            </para>
             
            <para>
            Constraints: Must be the name of an existing cluster snapshot in the <code>available</code>
            state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteDBClusterSnapshotResponse">
            <summary>
            This is the response object from the DeleteDBClusterSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteDBClusterSnapshotResponse.DBClusterSnapshot">
            <summary>
            Gets and sets the property DBClusterSnapshot.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteDBInstanceRequest">
            <summary>
            Container for the parameters to the DeleteDBInstance operation.
            Deletes a previously provisioned instance.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteDBInstanceRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The instance identifier for the instance to be deleted. This parameter isn't case
            sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the name of an existing instance.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteDBInstanceResponse">
            <summary>
            This is the response object from the DeleteDBInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteDBInstanceResponse.DBInstance">
            <summary>
            Gets and sets the property DBInstance.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteDBSubnetGroupRequest">
            <summary>
            Container for the parameters to the DeleteDBSubnetGroup operation.
            Deletes a subnet group.
            
             <note> 
            <para>
            The specified database subnet group must not be associated with any DB instances.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteDBSubnetGroupRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name of the database subnet group to delete.
            </para>
             <note> 
            <para>
            You can't delete the default subnet group.
            </para>
             </note> 
            <para>
            Constraints:
            </para>
             
            <para>
            Must match the name of an existing <code>DBSubnetGroup</code>. Must not be default.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteDBSubnetGroupResponse">
            <summary>
            This is the response object from the DeleteDBSubnetGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteEventSubscriptionRequest">
            <summary>
            Container for the parameters to the DeleteEventSubscription operation.
            Deletes an Amazon DocumentDB event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteEventSubscriptionRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the Amazon DocumentDB event notification subscription that you want to
            delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteEventSubscriptionResponse">
            <summary>
            This is the response object from the DeleteEventSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteEventSubscriptionResponse.EventSubscription">
            <summary>
            Gets and sets the property EventSubscription.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteGlobalClusterRequest">
            <summary>
            Container for the parameters to the DeleteGlobalCluster operation.
            Deletes a global cluster. The primary and secondary clusters must already be detached
            or deleted before attempting to delete a global cluster.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteGlobalClusterRequest.GlobalClusterIdentifier">
            <summary>
            Gets and sets the property GlobalClusterIdentifier. 
            <para>
            The cluster identifier of the global cluster being deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DeleteGlobalClusterResponse">
            <summary>
            This is the response object from the DeleteGlobalCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DeleteGlobalClusterResponse.GlobalCluster">
            <summary>
            Gets and sets the property GlobalCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeCertificatesRequest">
            <summary>
            Container for the parameters to the DescribeCertificates operation.
            Returns a list of certificate authority (CA) certificates provided by Amazon DocumentDB
            for this account.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeCertificatesRequest.CertificateIdentifier">
            <summary>
            Gets and sets the property CertificateIdentifier. 
            <para>
            The user-supplied certificate identifier. If this parameter is specified, information
            for only the specified certificate is returned. If this parameter is omitted, a list
            of up to <code>MaxRecords</code> certificates is returned. This parameter is not case
            sensitive.
            </para>
             
            <para>
            Constraints
            </para>
             <ul> <li> 
            <para>
            Must match an existing <code>CertificateIdentifier</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeCertificatesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeCertificatesRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous <code>DescribeCertificates</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeCertificatesRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Minimum: 20
            </para>
             </li> <li> 
            <para>
            Maximum: 100
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeCertificatesResponse">
            <summary>
            This is the response object from the DescribeCertificates operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeCertificatesResponse.Certificates">
            <summary>
            Gets and sets the property Certificates. 
            <para>
            A list of certificates for this account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeCertificatesResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided if the number of records retrieved is greater
            than <code>MaxRecords</code>. If this parameter is specified, the marker specifies
            the next record in the list. Including the value of <code>Marker</code> in the next
            call to <code>DescribeCertificates</code> results in the next page of certificates.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest">
            <summary>
            Container for the parameters to the DescribeDBClusterParameterGroups operation.
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list contains only the description of the specified cluster
            parameter group.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of a specific cluster parameter group to return details for.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If provided, must match the name of an existing <code>DBClusterParameterGroup</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsResponse">
            <summary>
            Represents the output of <a>DBClusterParameterGroups</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsResponse.DBClusterParameterGroups">
            <summary>
            Gets and sets the property DBClusterParameterGroups. 
            <para>
            A list of cluster parameter groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterParametersRequest">
            <summary>
            Container for the parameters to the DescribeDBClusterParameters operation.
            Returns the detailed parameter list for a particular cluster parameter group.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParametersRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of a specific cluster parameter group to return parameter details for.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If provided, must match the name of an existing <code>DBClusterParameterGroup</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParametersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParametersRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParametersRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParametersRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
             A value that indicates to return only parameters for a specific source. Parameter
            sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterParametersResponse">
            <summary>
            Represents the output of <a>DBClusterParameterGroup</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParametersResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParametersResponse.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Provides a list of parameters for the cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesRequest">
            <summary>
            Container for the parameters to the DescribeDBClusterSnapshotAttributes operation.
            Returns a list of cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When you share snapshots with other accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the accounts that
            are authorized to copy or restore the manual cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual cluster snapshot is public and can be copied or restored by all accounts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesRequest.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            The identifier for the cluster snapshot to describe the attributes for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesResponse">
            <summary>
            This is the response object from the DescribeDBClusterSnapshotAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesResponse.DBClusterSnapshotAttributesResult">
            <summary>
            Gets and sets the property DBClusterSnapshotAttributesResult.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest">
            <summary>
            Container for the parameters to the DescribeDBClusterSnapshots operation.
            Returns information about cluster snapshots. This API operation supports pagination.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The ID of the cluster to retrieve the list of cluster snapshots for. This parameter
            can't be used with the <code>DBClusterSnapshotIdentifier</code> parameter. This parameter
            is not case sensitive. 
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If provided, must match the identifier of an existing <code>DBCluster</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            A specific cluster snapshot identifier to describe. This parameter can't be used with
            the <code>DBClusterIdentifier</code> parameter. This value is stored as a lowercase
            string. 
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If provided, must match the identifier of an existing <code>DBClusterSnapshot</code>.
            </para>
             </li> <li> 
            <para>
            If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter
            must also be specified.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest.IncludePublic">
            <summary>
            Gets and sets the property IncludePublic. 
            <para>
            Set to <code>true</code> to include manual cluster snapshots that are public and can
            be copied or restored by any account, and otherwise <code>false</code>. The default
            is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest.IncludeShared">
            <summary>
            Gets and sets the property IncludeShared. 
            <para>
            Set to <code>true</code> to include shared manual cluster snapshots from other accounts
            that this account has been given permission to copy or restore, and otherwise <code>false</code>.
            The default is <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest.SnapshotType">
            <summary>
            Gets and sets the property SnapshotType. 
            <para>
            The type of cluster snapshots to be returned. You can specify one of the following
            values:
            </para>
             <ul> <li> 
            <para>
             <code>automated</code> - Return all cluster snapshots that Amazon DocumentDB has
            automatically created for your account.
            </para>
             </li> <li> 
            <para>
             <code>manual</code> - Return all cluster snapshots that you have manually created
            for your account.
            </para>
             </li> <li> 
            <para>
             <code>shared</code> - Return all manual cluster snapshots that have been shared to
            your account.
            </para>
             </li> <li> 
            <para>
             <code>public</code> - Return all cluster snapshots that have been marked as public.
            </para>
             </li> </ul> 
            <para>
            If you don't specify a <code>SnapshotType</code> value, then both automated and manual
            cluster snapshots are returned. You can include shared cluster snapshots with these
            results by setting the <code>IncludeShared</code> parameter to <code>true</code>.
            You can include public cluster snapshots with these results by setting the<code>IncludePublic</code>
            parameter to <code>true</code>.
            </para>
             
            <para>
            The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply
            for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>.
            The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code>
            is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply
            when <code>SnapshotType</code> is set to <code>public</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterSnapshotsResponse">
            <summary>
            Represents the output of <a>DescribeDBClusterSnapshots</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsResponse.DBClusterSnapshots">
            <summary>
            Gets and sets the property DBClusterSnapshots. 
            <para>
            Provides a list of cluster snapshots.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClustersRequest">
            <summary>
            Container for the parameters to the DescribeDBClusters operation.
            Returns information about provisioned Amazon DocumentDB clusters. This API operation
            supports pagination. For certain management features such as cluster and instance
            lifecycle management, Amazon DocumentDB leverages operational technology that is shared
            with Amazon RDS and Amazon Neptune. Use the <code>filterName=engine,Values=docdb</code>
            filter parameter to return only Amazon DocumentDB clusters.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClustersRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The user-provided cluster identifier. If this parameter is specified, information
            from only the specific cluster is returned. This parameter isn't case sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If provided, must match an existing <code>DBClusterIdentifier</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClustersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A filter that specifies one or more clusters to describe.
            </para>
             
            <para>
            Supported filters:
            </para>
             <ul> <li> 
            <para>
             <code>db-cluster-id</code> - Accepts cluster identifiers and cluster Amazon Resource
            Names (ARNs). The results list only includes information about the clusters identified
            by these ARNs.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClustersRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClustersRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClustersResponse">
            <summary>
            Represents the output of <a>DescribeDBClusters</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClustersResponse.DBClusters">
            <summary>
            Gets and sets the property DBClusters. 
            <para>
            A list of clusters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClustersResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBEngineVersionsRequest">
            <summary>
            Container for the parameters to the DescribeDBEngineVersions operation.
            Returns a list of the available engines.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsRequest.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The name of a specific parameter group family to return details for.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If provided, must match an existing <code>DBParameterGroupFamily</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsRequest.DefaultOnly">
            <summary>
            Gets and sets the property DefaultOnly. 
            <para>
            Indicates that only the default version of the specified engine or engine and major
            version combination is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The database engine to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The database engine version to return.
            </para>
             
            <para>
            Example: <code>3.6.0</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsRequest.ListSupportedCharacterSets">
            <summary>
            Gets and sets the property ListSupportedCharacterSets. 
            <para>
            If this parameter is specified and the requested engine supports the <code>CharacterSetName</code>
            parameter for <code>CreateDBInstance</code>, the response includes a list of supported
            character sets for each engine version. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsRequest.ListSupportedTimezones">
            <summary>
            Gets and sets the property ListSupportedTimezones. 
            <para>
            If this parameter is specified and the requested engine supports the <code>TimeZone</code>
            parameter for <code>CreateDBInstance</code>, the response includes a list of supported
            time zones for each engine version. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBEngineVersionsResponse">
            <summary>
            Represents the output of <a>DescribeDBEngineVersions</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsResponse.DBEngineVersions">
            <summary>
            Gets and sets the property DBEngineVersions. 
            <para>
            Detailed information about one or more engine versions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBInstancesRequest">
            <summary>
            Container for the parameters to the DescribeDBInstances operation.
            Returns information about provisioned Amazon DocumentDB instances. This API supports
            pagination.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBInstancesRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The user-provided instance identifier. If this parameter is specified, information
            from only the specific instance is returned. This parameter isn't case sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If provided, must match the identifier of an existing <code>DBInstance</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBInstancesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A filter that specifies one or more instances to describe.
            </para>
             
            <para>
            Supported filters:
            </para>
             <ul> <li> 
            <para>
             <code>db-cluster-id</code> - Accepts cluster identifiers and cluster Amazon Resource
            Names (ARNs). The results list includes only the information about the instances that
            are associated with the clusters that are identified by these ARNs.
            </para>
             </li> <li> 
            <para>
             <code>db-instance-id</code> - Accepts instance identifiers and instance ARNs. The
            results list includes only the information about the instances that are identified
            by these ARNs.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBInstancesRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBInstancesRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBInstancesResponse">
            <summary>
            Represents the output of <a>DescribeDBInstances</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBInstancesResponse.DBInstances">
            <summary>
            Gets and sets the property DBInstances. 
            <para>
            Detailed information about one or more instances. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBInstancesResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest">
            <summary>
            Container for the parameters to the DescribeDBSubnetGroups operation.
            Returns a list of <code>DBSubnetGroup</code> descriptions. If a <code>DBSubnetGroupName</code>
            is specified, the list will contain only the descriptions of the specified <code>DBSubnetGroup</code>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name of the subnet group to return details for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBSubnetGroupsResponse">
            <summary>
            Represents the output of <a>DescribeDBSubnetGroups</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBSubnetGroupsResponse.DBSubnetGroups">
            <summary>
            Gets and sets the property DBSubnetGroups. 
            <para>
            Detailed information about one or more subnet groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBSubnetGroupsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersRequest">
            <summary>
            Container for the parameters to the DescribeEngineDefaultClusterParameters operation.
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersRequest.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The name of the cluster parameter group family to return the engine parameter information
            for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersResponse">
            <summary>
            This is the response object from the DescribeEngineDefaultClusterParameters operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersResponse.EngineDefaults">
            <summary>
            Gets and sets the property EngineDefaults.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeEventCategoriesRequest">
            <summary>
            Container for the parameters to the DescribeEventCategories operation.
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventCategoriesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventCategoriesRequest.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The type of source that is generating the events.
            </para>
             
            <para>
            Valid values: <code>db-instance</code>, <code>db-parameter-group</code>, <code>db-security-group</code>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeEventCategoriesResponse">
            <summary>
            Represents the output of <a>DescribeEventCategories</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventCategoriesResponse.EventCategoriesMapList">
            <summary>
            Gets and sets the property EventCategoriesMapList. 
            <para>
            A list of event category maps.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeEventsRequest">
            <summary>
            Container for the parameters to the DescribeEvents operation.
            Returns events related to instances, security groups, snapshots, and DB parameter
            groups for the past 14 days. You can obtain events specific to a particular DB instance,
            security group, snapshot, or parameter group by providing the name as a parameter.
            By default, the events of the past hour are returned.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsRequest.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The number of minutes to retrieve events for.
            </para>
             
            <para>
            Default: 60
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
             The end of the time interval for which to retrieve events, specified in ISO 8601
            format. 
            </para>
             
            <para>
            Example: 2009-07-08T18:00Z
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsRequest.EventCategories">
            <summary>
            Gets and sets the property EventCategories. 
            <para>
            A list of event categories that trigger notifications for an event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsRequest.SourceIdentifier">
            <summary>
            Gets and sets the property SourceIdentifier. 
            <para>
            The identifier of the event source for which events are returned. If not specified,
            then all sources are included in the response.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If <code>SourceIdentifier</code> is provided, <code>SourceType</code> must also be
            provided.
            </para>
             </li> <li> 
            <para>
            If the source type is <code>DBInstance</code>, a <code>DBInstanceIdentifier</code>
            must be provided.
            </para>
             </li> <li> 
            <para>
            If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code>
            must be provided.
            </para>
             </li> <li> 
            <para>
            If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code>
            must be provided.
            </para>
             </li> <li> 
            <para>
            If the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code>
            must be provided.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsRequest.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The event source to retrieve events for. If no value is specified, all events are
            returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
             The beginning of the time interval to retrieve events for, specified in ISO 8601
            format. 
            </para>
             
            <para>
            Example: 2009-07-08T18:00Z
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeEventsResponse">
            <summary>
            Represents the output of <a>DescribeEvents</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsResponse.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            Detailed information about one or more events. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeEventSubscriptionsRequest">
            <summary>
            Container for the parameters to the DescribeEventSubscriptions operation.
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>,
            <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.
            
             
            <para>
            If you specify a <code>SubscriptionName</code>, lists the description for that subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventSubscriptionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventSubscriptionsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventSubscriptionsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventSubscriptionsRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the Amazon DocumentDB event notification subscription that you want to
            describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeEventSubscriptionsResponse">
            <summary>
            Represents the output of <a>DescribeEventSubscriptions</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventSubscriptionsResponse.EventSubscriptionsList">
            <summary>
            Gets and sets the property EventSubscriptionsList. 
            <para>
            A list of event subscriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventSubscriptionsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeGlobalClustersRequest">
            <summary>
            Container for the parameters to the DescribeGlobalClusters operation.
            Returns information about Amazon DocumentDB global clusters. This API supports pagination.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeGlobalClustersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A filter that specifies one or more global DB clusters to describe.
            </para>
             
            <para>
            Supported filters: <code>db-cluster-id</code> accepts cluster identifiers and cluster
            Amazon Resource Names (ARNs). The results list will only include information about
            the clusters identified by these ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeGlobalClustersRequest.GlobalClusterIdentifier">
            <summary>
            Gets and sets the property GlobalClusterIdentifier. 
            <para>
            The user-supplied cluster identifier. If this parameter is specified, information
            from only the specific cluster is returned. This parameter isn't case-sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeGlobalClustersRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous <code>DescribeGlobalClusters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeGlobalClustersRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that you can retrieve the remaining results. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeGlobalClustersResponse">
            <summary>
            This is the response object from the DescribeGlobalClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeGlobalClustersResponse.GlobalClusters">
            <summary>
            Gets and sets the property GlobalClusters.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeGlobalClustersResponse.Marker">
            <summary>
            Gets and sets the property Marker.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest">
            <summary>
            Container for the parameters to the DescribeOrderableDBInstanceOptions operation.
            Returns a list of orderable instance options for the specified engine.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
            The instance class filter value. Specify this parameter to show only the available
            offerings that match the specified instance class.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the engine to retrieve instance options for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The engine version filter value. Specify this parameter to show only the available
            offerings that match the specified engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest.LicenseModel">
            <summary>
            Gets and sets the property LicenseModel. 
            <para>
            The license model filter value. Specify this parameter to show only the available
            offerings that match the specified license model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest.Vpc">
            <summary>
            Gets and sets the property Vpc. 
            <para>
            The virtual private cloud (VPC) filter value. Specify this parameter to show only
            the available VPC or non-VPC offerings.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsResponse">
            <summary>
            Represents the output of <a>DescribeOrderableDBInstanceOptions</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsResponse.OrderableDBInstanceOptions">
            <summary>
            Gets and sets the property OrderableDBInstanceOptions. 
            <para>
            The options that are available for a particular orderable instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest">
            <summary>
            Container for the parameters to the DescribePendingMaintenanceActions operation.
            Returns a list of resources (for example, instances) that have at least one pending
            maintenance action.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A filter that specifies one or more resources to return pending maintenance actions
            for.
            </para>
             
            <para>
            Supported filters:
            </para>
             <ul> <li> 
            <para>
             <code>db-cluster-id</code> - Accepts cluster identifiers and cluster Amazon Resource
            Names (ARNs). The results list includes only pending maintenance actions for the clusters
            identified by these ARNs.
            </para>
             </li> <li> 
            <para>
             <code>db-instance-id</code> - Accepts instance identifiers and instance ARNs. The
            results list includes only pending maintenance actions for the DB instances identified
            by these ARNs.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token (marker) is included
            in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest.ResourceIdentifier">
            <summary>
            Gets and sets the property ResourceIdentifier. 
            <para>
            The ARN of a resource to return pending maintenance actions for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribePendingMaintenanceActionsResponse">
            <summary>
            Represents the output of <a>DescribePendingMaintenanceActions</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribePendingMaintenanceActionsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribePendingMaintenanceActionsResponse.PendingMaintenanceActions">
            <summary>
            Gets and sets the property PendingMaintenanceActions. 
            <para>
            The maintenance actions to be applied.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.Endpoint">
            <summary>
            Network information for accessing a cluster or instance. Client programs must specify
            a valid endpoint to access these Amazon DocumentDB resources.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Endpoint.Address">
            <summary>
            Gets and sets the property Address. 
            <para>
            Specifies the DNS address of the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Endpoint.HostedZoneId">
            <summary>
            Gets and sets the property HostedZoneId. 
            <para>
            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Endpoint.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            Specifies the port that the database engine is listening on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.EngineDefaults">
            <summary>
            Contains the result of a successful invocation of the <code>DescribeEngineDefaultClusterParameters</code>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EngineDefaults.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The name of the cluster parameter group family to return the engine parameter information
            for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EngineDefaults.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EngineDefaults.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            The parameters of a particular cluster parameter group family.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.Event">
            <summary>
            Detailed information about an event.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Event.Date">
            <summary>
            Gets and sets the property Date. 
            <para>
            Specifies the date and time of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Event.EventCategories">
            <summary>
            Gets and sets the property EventCategories. 
            <para>
            Specifies the category for the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Event.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            Provides the text of this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Event.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The Amazon Resource Name (ARN) for the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Event.SourceIdentifier">
            <summary>
            Gets and sets the property SourceIdentifier. 
            <para>
            Provides the identifier for the source of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Event.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            Specifies the source type for this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.EventCategoriesMap">
            <summary>
            An event source type, accompanied by one or more event category names.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventCategoriesMap.EventCategories">
            <summary>
            Gets and sets the property EventCategories. 
            <para>
            The event categories for the specified source type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventCategoriesMap.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The source type that the returned categories belong to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.EventSubscription">
            <summary>
            Detailed information about an event to which you have subscribed.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventSubscription.CustomerAwsId">
            <summary>
            Gets and sets the property CustomerAwsId. 
            <para>
            The Amazon Web Services customer account that is associated with the Amazon DocumentDB
            event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventSubscription.CustSubscriptionId">
            <summary>
            Gets and sets the property CustSubscriptionId. 
            <para>
            The Amazon DocumentDB event notification subscription ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventSubscription.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            A Boolean value indicating whether the subscription is enabled. A value of <code>true</code>
            indicates that the subscription is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventSubscription.EventCategoriesList">
            <summary>
            Gets and sets the property EventCategoriesList. 
            <para>
            A list of event categories for the Amazon DocumentDB event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventSubscription.EventSubscriptionArn">
            <summary>
            Gets and sets the property EventSubscriptionArn. 
            <para>
            The Amazon Resource Name (ARN) for the event subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventSubscription.SnsTopicArn">
            <summary>
            Gets and sets the property SnsTopicArn. 
            <para>
            The topic ARN of the Amazon DocumentDB event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventSubscription.SourceIdsList">
            <summary>
            Gets and sets the property SourceIdsList. 
            <para>
            A list of source IDs for the Amazon DocumentDB event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventSubscription.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The source type for the Amazon DocumentDB event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventSubscription.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the Amazon DocumentDB event notification subscription.
            </para>
             
            <para>
            Constraints:
            </para>
             
            <para>
            Can be one of the following: <code>creating</code>, <code>modifying</code>, <code>deleting</code>,
            <code>active</code>, <code>no-permission</code>, <code>topic-not-exist</code> 
            </para>
             
            <para>
            The <code>no-permission</code> status indicates that Amazon DocumentDB no longer has
            permission to post to the SNS topic. The <code>topic-not-exist</code> status indicates
            that the topic was deleted after the subscription was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.EventSubscription.SubscriptionCreationTime">
            <summary>
            Gets and sets the property SubscriptionCreationTime. 
            <para>
            The time at which the Amazon DocumentDB event notification subscription was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException">
            <summary>
            You have reached the maximum number of event subscriptions.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new EventSubscriptionQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EventSubscriptionQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of EventSubscriptionQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EventSubscriptionQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EventSubscriptionQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EventSubscriptionQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.FailoverDBClusterRequest">
            <summary>
            Container for the parameters to the FailoverDBCluster operation.
            Forces a failover for a cluster.
            
             
            <para>
            A failover for a cluster promotes one of the Amazon DocumentDB replicas (read-only
            instances) in the cluster to be the primary instance (the cluster writer).
            </para>
             
            <para>
            If the primary instance fails, Amazon DocumentDB automatically fails over to an Amazon
            DocumentDB replica, if one exists. You can force a failover when you want to simulate
            a failure of a primary instance for testing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.FailoverDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            A cluster identifier to force a failover for. This parameter is not case sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing <code>DBCluster</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.FailoverDBClusterRequest.TargetDBInstanceIdentifier">
            <summary>
            Gets and sets the property TargetDBInstanceIdentifier. 
            <para>
            The name of the instance to promote to the primary instance.
            </para>
             
            <para>
            You must specify the instance identifier for an Amazon DocumentDB replica in the cluster.
            For example, <code>mydbcluster-replica1</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.FailoverDBClusterResponse">
            <summary>
            This is the response object from the FailoverDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.FailoverDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.Filter">
            <summary>
            A named set of filter values, used to return a more specific list of results. You
            can use a filter to match a set of resources by specific criteria, such as IDs.
            
             
            <para>
            Wildcards are not supported in filters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Filter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the filter. Filter names are case sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Filter.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            One or more filter values. Filter values are case sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.GlobalCluster">
            <summary>
            A data type representing an Amazon DocumentDB global cluster.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalCluster.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The default database name within the new global cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalCluster.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            The deletion protection setting for the new global cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalCluster.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The Amazon DocumentDB database engine used by the global cluster. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalCluster.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Indicates the database engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalCluster.GlobalClusterArn">
            <summary>
            Gets and sets the property GlobalClusterArn. 
            <para>
            The Amazon Resource Name (ARN) for the global cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalCluster.GlobalClusterIdentifier">
            <summary>
            Gets and sets the property GlobalClusterIdentifier. 
            <para>
            Contains a user-supplied global cluster identifier. This identifier is the unique
            key that identifies a global cluster. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalCluster.GlobalClusterMembers">
            <summary>
            Gets and sets the property GlobalClusterMembers. 
            <para>
            The list of cluster IDs for secondary clusters within the global cluster. Currently
            limited to one item. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalCluster.GlobalClusterResourceId">
            <summary>
            Gets and sets the property GlobalClusterResourceId. 
            <para>
            The Region-unique, immutable identifier for the global database cluster. This identifier
            is found in AWS CloudTrail log entries whenever the AWS KMS customer master key (CMK)
            for the cluster is accessed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalCluster.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Specifies the current state of this global cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalCluster.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            The storage encryption setting for the global cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException">
            <summary>
            The <code>GlobalClusterIdentifier</code> already exists. Choose a new global cluster
            identifier (unique name) to create a new global cluster.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new GlobalClusterAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of GlobalClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of GlobalClusterAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GlobalClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GlobalClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the GlobalClusterAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.GlobalClusterMember">
            <summary>
            A data structure with information about any primary and secondary clusters associated
            with an Amazon DocumentDB global clusters.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalClusterMember.DBClusterArn">
            <summary>
            Gets and sets the property DBClusterArn. 
            <para>
            The Amazon Resource Name (ARN) for each Amazon DocumentDB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalClusterMember.IsWriter">
            <summary>
            Gets and sets the property IsWriter. 
            <para>
             Specifies whether the Amazon DocumentDB cluster is the primary cluster (that is,
            has read-write capability) for the Amazon DocumentDB global cluster with which it
            is associated. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.GlobalClusterMember.Readers">
            <summary>
            Gets and sets the property Readers. 
            <para>
            The Amazon Resource Name (ARN) for each read-only secondary cluster associated with
            the Aurora global cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            <summary>
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new GlobalClusterNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of GlobalClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of GlobalClusterNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GlobalClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GlobalClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the GlobalClusterNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.GlobalClusterQuotaExceededException">
            <summary>
            The number of global clusters for this account is already at the maximum allowed.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new GlobalClusterQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of GlobalClusterQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of GlobalClusterQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GlobalClusterQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GlobalClusterQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the GlobalClusterQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.GlobalClusterQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InstanceQuotaExceededException">
            <summary>
            The request would cause you to exceed the allowed number of instances.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InstanceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new InstanceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InstanceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InstanceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InstanceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of InstanceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InstanceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InstanceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InstanceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InstanceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InstanceQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InstanceQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InstanceQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InsufficientDBClusterCapacityException">
            <summary>
            The cluster doesn't have enough capacity for the current operation.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBClusterCapacityException.#ctor(System.String)">
            <summary>
            Constructs a new InsufficientDBClusterCapacityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBClusterCapacityException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InsufficientDBClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBClusterCapacityException.#ctor(System.Exception)">
            <summary>
            Construct instance of InsufficientDBClusterCapacityException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBClusterCapacityException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientDBClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBClusterCapacityException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientDBClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBClusterCapacityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InsufficientDBClusterCapacityException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBClusterCapacityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException">
            <summary>
            The specified instance class isn't available in the specified Availability Zone.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException.#ctor(System.String)">
            <summary>
            Constructs a new InsufficientDBInstanceCapacityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InsufficientDBInstanceCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException.#ctor(System.Exception)">
            <summary>
            Construct instance of InsufficientDBInstanceCapacityException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientDBInstanceCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientDBInstanceCapacityException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InsufficientDBInstanceCapacityException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            <summary>
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException.#ctor(System.String)">
            <summary>
            Constructs a new InsufficientStorageClusterCapacityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InsufficientStorageClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException.#ctor(System.Exception)">
            <summary>
            Construct instance of InsufficientStorageClusterCapacityException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientStorageClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientStorageClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InsufficientStorageClusterCapacityException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionRequestMarshaller">
            <summary>
            AddSourceIdentifierToSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionRequestMarshaller.Marshall(Amazon.DocDB.Model.AddSourceIdentifierToSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddSourceIdentifierToSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller">
            <summary>
            AddTagsToResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller.Marshall(Amazon.DocDB.Model.AddTagsToResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddTagsToResource operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionRequestMarshaller">
            <summary>
            ApplyPendingMaintenanceAction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionRequestMarshaller.Marshall(Amazon.DocDB.Model.ApplyPendingMaintenanceActionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ApplyPendingMaintenanceAction operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.AuthorizationNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AuthorizationNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AuthorizationNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AuthorizationNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.AuthorizationNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller">
            <summary>
            Response Unmarshaller for AvailabilityZone Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CertificateNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CertificateNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CertificateNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CertificateNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CertificateNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CertificateUnmarshaller">
            <summary>
            Response Unmarshaller for Certificate Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupRequestMarshaller">
            <summary>
            CopyDBClusterParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.DocDB.Model.CopyDBClusterParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CopyDBClusterParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotRequestMarshaller">
            <summary>
            CopyDBClusterSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotRequestMarshaller.Marshall(Amazon.DocDB.Model.CopyDBClusterSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CopyDBClusterSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupRequestMarshaller">
            <summary>
            CreateDBClusterParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.DocDB.Model.CreateDBClusterParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBClusterParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterRequestMarshaller">
            <summary>
            CreateDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterRequestMarshaller.Marshall(Amazon.DocDB.Model.CreateDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotRequestMarshaller">
            <summary>
            CreateDBClusterSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotRequestMarshaller.Marshall(Amazon.DocDB.Model.CreateDBClusterSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBClusterSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBInstanceRequestMarshaller">
            <summary>
            CreateDBInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBInstanceRequestMarshaller.Marshall(Amazon.DocDB.Model.CreateDBInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBSubnetGroupRequestMarshaller">
            <summary>
            CreateDBSubnetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBSubnetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBSubnetGroupRequestMarshaller.Marshall(Amazon.DocDB.Model.CreateDBSubnetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBSubnetGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBSubnetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBSubnetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBSubnetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBSubnetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateDBSubnetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateEventSubscriptionRequestMarshaller">
            <summary>
            CreateEventSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateEventSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateEventSubscriptionRequestMarshaller.Marshall(Amazon.DocDB.Model.CreateEventSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateEventSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateEventSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateEventSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateEventSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateEventSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateEventSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateGlobalClusterRequestMarshaller">
            <summary>
            CreateGlobalCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateGlobalClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateGlobalClusterRequestMarshaller.Marshall(Amazon.DocDB.Model.CreateGlobalClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateGlobalClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateGlobalClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateGlobalCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateGlobalClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateGlobalClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.CreateGlobalClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterMemberUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterMember Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterMemberUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterMemberUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterMemberUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterParameterGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterParameterGroupNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterParameterGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterParameterGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterParameterGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterParameterGroupUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterParameterGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterParameterGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterParameterGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterParameterGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterRoleUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterRole Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterRoleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterRoleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterRoleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterSnapshotAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributesResultUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterSnapshotAttributesResult Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributesResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributesResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributesResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterSnapshotAttribute Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterSnapshotNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterSnapshot Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterSnapshotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterUnmarshaller">
            <summary>
            Response Unmarshaller for DBCluster Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBClusterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBEngineVersionUnmarshaller">
            <summary>
            Response Unmarshaller for DBEngineVersion Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBEngineVersionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBEngineVersionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBEngineVersionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBInstanceAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBInstanceNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceStatusInfoUnmarshaller">
            <summary>
            Response Unmarshaller for DBInstanceStatusInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceStatusInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceStatusInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceStatusInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceUnmarshaller">
            <summary>
            Response Unmarshaller for DBInstance Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBInstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBParameterGroupAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBParameterGroupNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBParameterGroupQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBParameterGroupQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSecurityGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSecurityGroupNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSecurityGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSecurityGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSecurityGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSnapshotAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSnapshotAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSnapshotAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSnapshotAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSnapshotAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSnapshotNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSnapshotNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSnapshotNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSnapshotNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSnapshotNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetGroupAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetGroupDoesNotCoverEnoughAZsException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetGroupNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetGroupQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBSubnetQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DBUpgradeDependencyFailureExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBUpgradeDependencyFailureException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBUpgradeDependencyFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DBUpgradeDependencyFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DBUpgradeDependencyFailureExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupRequestMarshaller">
            <summary>
            DeleteDBClusterParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.DocDB.Model.DeleteDBClusterParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBClusterParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterRequestMarshaller">
            <summary>
            DeleteDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterRequestMarshaller.Marshall(Amazon.DocDB.Model.DeleteDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotRequestMarshaller">
            <summary>
            DeleteDBClusterSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotRequestMarshaller.Marshall(Amazon.DocDB.Model.DeleteDBClusterSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBClusterSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBInstanceRequestMarshaller">
            <summary>
            DeleteDBInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBInstanceRequestMarshaller.Marshall(Amazon.DocDB.Model.DeleteDBInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupRequestMarshaller">
            <summary>
            DeleteDBSubnetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupRequestMarshaller.Marshall(Amazon.DocDB.Model.DeleteDBSubnetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBSubnetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteEventSubscriptionRequestMarshaller">
            <summary>
            DeleteEventSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteEventSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteEventSubscriptionRequestMarshaller.Marshall(Amazon.DocDB.Model.DeleteEventSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteEventSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteEventSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteEventSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteEventSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteEventSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteEventSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteGlobalClusterRequestMarshaller">
            <summary>
            DeleteGlobalCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteGlobalClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteGlobalClusterRequestMarshaller.Marshall(Amazon.DocDB.Model.DeleteGlobalClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteGlobalClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteGlobalClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteGlobalCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteGlobalClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteGlobalClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DeleteGlobalClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeCertificatesRequestMarshaller">
            <summary>
            DescribeCertificates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeCertificatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeCertificatesRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeCertificatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeCertificatesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeCertificatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCertificates operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeCertificatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeCertificatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeCertificatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsRequestMarshaller">
            <summary>
            DescribeDBClusterParameterGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusterParameterGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParametersRequestMarshaller">
            <summary>
            DescribeDBClusterParameters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParametersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParametersRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeDBClusterParametersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParametersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParametersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusterParameters operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParametersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParametersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterParametersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesRequestMarshaller">
            <summary>
            DescribeDBClusterSnapshotAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusterSnapshotAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsRequestMarshaller">
            <summary>
            DescribeDBClusterSnapshots Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusterSnapshots operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClustersRequestMarshaller">
            <summary>
            DescribeDBClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClustersRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeDBClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClustersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsRequestMarshaller">
            <summary>
            DescribeDBEngineVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeDBEngineVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBEngineVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBInstancesRequestMarshaller">
            <summary>
            DescribeDBInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBInstancesRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeDBInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBInstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsRequestMarshaller">
            <summary>
            DescribeDBSubnetGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBSubnetGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersRequestMarshaller">
            <summary>
            DescribeEngineDefaultClusterParameters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEngineDefaultClusterParameters operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventCategoriesRequestMarshaller">
            <summary>
            DescribeEventCategories Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventCategoriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventCategoriesRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeEventCategoriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventCategoriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventCategoriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEventCategories operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventCategoriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventCategoriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventCategoriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller">
            <summary>
            DescribeEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsRequestMarshaller">
            <summary>
            DescribeEventSubscriptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeEventSubscriptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEventSubscriptions operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeGlobalClustersRequestMarshaller">
            <summary>
            DescribeGlobalClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeGlobalClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeGlobalClustersRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeGlobalClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeGlobalClustersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeGlobalClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeGlobalClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeGlobalClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeGlobalClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeGlobalClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsRequestMarshaller">
            <summary>
            DescribeOrderableDBInstanceOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeOrderableDBInstanceOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsRequestMarshaller">
            <summary>
            DescribePendingMaintenanceActions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsRequestMarshaller.Marshall(Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribePendingMaintenanceActions operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.EndpointUnmarshaller">
            <summary>
            Response Unmarshaller for Endpoint Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.EndpointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.EngineDefaultsUnmarshaller">
            <summary>
            Response Unmarshaller for EngineDefaults Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EngineDefaultsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EngineDefaultsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.EngineDefaultsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.EventCategoriesMapUnmarshaller">
            <summary>
            Response Unmarshaller for EventCategoriesMap Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EventCategoriesMapUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EventCategoriesMapUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.EventCategoriesMapUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.EventSubscriptionQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EventSubscriptionQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EventSubscriptionQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EventSubscriptionQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.EventSubscriptionQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.EventSubscriptionUnmarshaller">
            <summary>
            Response Unmarshaller for EventSubscription Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EventSubscriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EventSubscriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.EventSubscriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.EventUnmarshaller">
            <summary>
            Response Unmarshaller for Event Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.EventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.EventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.FailoverDBClusterRequestMarshaller">
            <summary>
            FailoverDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.FailoverDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.FailoverDBClusterRequestMarshaller.Marshall(Amazon.DocDB.Model.FailoverDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.FailoverDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.FailoverDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for FailoverDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.FailoverDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.FailoverDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.FailoverDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for GlobalClusterAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterMemberUnmarshaller">
            <summary>
            Response Unmarshaller for GlobalClusterMember Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterMemberUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterMemberUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterMemberUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for GlobalClusterNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for GlobalClusterQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterUnmarshaller">
            <summary>
            Response Unmarshaller for GlobalCluster Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.GlobalClusterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InstanceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InstanceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InstanceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InstanceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientDBClusterCapacityExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InsufficientDBClusterCapacityException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientDBClusterCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientDBClusterCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientDBClusterCapacityExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientDBInstanceCapacityExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InsufficientDBInstanceCapacityException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientDBInstanceCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientDBInstanceCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientDBInstanceCapacityExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientStorageClusterCapacityExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InsufficientStorageClusterCapacityException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientStorageClusterCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientStorageClusterCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InsufficientStorageClusterCapacityExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBClusterSnapshotStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBClusterSnapshotStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBClusterSnapshotStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBClusterSnapshotStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBClusterSnapshotStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBClusterStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBClusterStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBClusterStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBClusterStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBClusterStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBInstanceStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBInstanceStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBInstanceStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBInstanceStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBInstanceStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBParameterGroupStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBParameterGroupStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBParameterGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBParameterGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBParameterGroupStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSecurityGroupStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBSecurityGroupStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSecurityGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSecurityGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSecurityGroupStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSnapshotStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBSnapshotStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSnapshotStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSnapshotStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSnapshotStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSubnetGroupStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBSubnetGroupStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSubnetGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSubnetGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSubnetGroupStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSubnetStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBSubnetStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSubnetStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSubnetStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidDBSubnetStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidEventSubscriptionStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidEventSubscriptionStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidEventSubscriptionStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidEventSubscriptionStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidEventSubscriptionStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidGlobalClusterStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidGlobalClusterStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidGlobalClusterStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidGlobalClusterStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidGlobalClusterStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidRestoreExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRestoreException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidRestoreExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidRestoreExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidRestoreExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidSubnetException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidVPCNetworkStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.KMSKeyNotAccessibleExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for KMSKeyNotAccessibleException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.KMSKeyNotAccessibleExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.KMSKeyNotAccessibleExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.KMSKeyNotAccessibleExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.DocDB.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupRequestMarshaller">
            <summary>
            ModifyDBClusterParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.DocDB.Model.ModifyDBClusterParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBClusterParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterRequestMarshaller">
            <summary>
            ModifyDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterRequestMarshaller.Marshall(Amazon.DocDB.Model.ModifyDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeRequestMarshaller">
            <summary>
            ModifyDBClusterSnapshotAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeRequestMarshaller.Marshall(Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBClusterSnapshotAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBInstanceRequestMarshaller">
            <summary>
            ModifyDBInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBInstanceRequestMarshaller.Marshall(Amazon.DocDB.Model.ModifyDBInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupRequestMarshaller">
            <summary>
            ModifyDBSubnetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupRequestMarshaller.Marshall(Amazon.DocDB.Model.ModifyDBSubnetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBSubnetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyEventSubscriptionRequestMarshaller">
            <summary>
            ModifyEventSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyEventSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyEventSubscriptionRequestMarshaller.Marshall(Amazon.DocDB.Model.ModifyEventSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyEventSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyEventSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyEventSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyEventSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyEventSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyEventSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyGlobalClusterRequestMarshaller">
            <summary>
            ModifyGlobalCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyGlobalClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyGlobalClusterRequestMarshaller.Marshall(Amazon.DocDB.Model.ModifyGlobalClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyGlobalClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyGlobalClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyGlobalCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyGlobalClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyGlobalClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ModifyGlobalClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.OrderableDBInstanceOptionUnmarshaller">
            <summary>
            Response Unmarshaller for OrderableDBInstanceOption Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.OrderableDBInstanceOptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.OrderableDBInstanceOptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.OrderableDBInstanceOptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ParameterUnmarshaller">
            <summary>
            Response Unmarshaller for Parameter Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ParameterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingCloudwatchLogsExportsUnmarshaller">
            <summary>
            Response Unmarshaller for PendingCloudwatchLogsExports Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingCloudwatchLogsExportsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingCloudwatchLogsExportsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingCloudwatchLogsExportsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingMaintenanceActionUnmarshaller">
            <summary>
            Response Unmarshaller for PendingMaintenanceAction Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingMaintenanceActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingMaintenanceActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingMaintenanceActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingModifiedValuesUnmarshaller">
            <summary>
            Response Unmarshaller for PendingModifiedValues Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingModifiedValuesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingModifiedValuesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.PendingModifiedValuesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RebootDBInstanceRequestMarshaller">
            <summary>
            RebootDBInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RebootDBInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RebootDBInstanceRequestMarshaller.Marshall(Amazon.DocDB.Model.RebootDBInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RebootDBInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RebootDBInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RebootDBInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RebootDBInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RebootDBInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RebootDBInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveFromGlobalClusterRequestMarshaller">
            <summary>
            RemoveFromGlobalCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveFromGlobalClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveFromGlobalClusterRequestMarshaller.Marshall(Amazon.DocDB.Model.RemoveFromGlobalClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveFromGlobalClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveFromGlobalClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveFromGlobalCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveFromGlobalClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveFromGlobalClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveFromGlobalClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionRequestMarshaller">
            <summary>
            RemoveSourceIdentifierFromSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Marshall(Amazon.DocDB.Model.RemoveSourceIdentifierFromSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveSourceIdentifierFromSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller">
            <summary>
            RemoveTagsFromResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller.Marshall(Amazon.DocDB.Model.RemoveTagsFromResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTagsFromResource operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupRequestMarshaller">
            <summary>
            ResetDBClusterParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.DocDB.Model.ResetDBClusterParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetDBClusterParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.ResourcePendingMaintenanceActionsUnmarshaller">
            <summary>
            Response Unmarshaller for ResourcePendingMaintenanceActions Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ResourcePendingMaintenanceActionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.ResourcePendingMaintenanceActionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.ResourcePendingMaintenanceActionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotRequestMarshaller">
            <summary>
            RestoreDBClusterFromSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotRequestMarshaller.Marshall(Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreDBClusterFromSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeRequestMarshaller">
            <summary>
            RestoreDBClusterToPointInTime Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeRequestMarshaller.Marshall(Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreDBClusterToPointInTime operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SharedSnapshotQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SharedSnapshotQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SharedSnapshotQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SharedSnapshotQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SharedSnapshotQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SnapshotQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SnapshotQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SnapshotQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SnapshotQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SnapshotQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSInvalidTopicExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SNSInvalidTopicException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSInvalidTopicExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSInvalidTopicExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSInvalidTopicExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSNoAuthorizationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SNSNoAuthorizationException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSNoAuthorizationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSNoAuthorizationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSNoAuthorizationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSTopicArnNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SNSTopicArnNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSTopicArnNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSTopicArnNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SNSTopicArnNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SourceNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.StartDBClusterRequestMarshaller">
            <summary>
            StartDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StartDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StartDBClusterRequestMarshaller.Marshall(Amazon.DocDB.Model.StartDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.StartDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.StartDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StartDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StartDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.StartDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.StopDBClusterRequestMarshaller">
            <summary>
            StopDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StopDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StopDBClusterRequestMarshaller.Marshall(Amazon.DocDB.Model.StopDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.StopDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.StopDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StopDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StopDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.StopDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.StorageQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for StorageQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StorageQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StorageQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.StorageQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.StorageTypeNotSupportedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for StorageTypeNotSupportedException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StorageTypeNotSupportedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.StorageTypeNotSupportedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.StorageTypeNotSupportedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SubnetAlreadyInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubnetAlreadyInUseException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SubnetAlreadyInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SubnetAlreadyInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SubnetAlreadyInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SubnetUnmarshaller">
            <summary>
            Response Unmarshaller for Subnet Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionAlreadyExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubscriptionAlreadyExistException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionAlreadyExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionAlreadyExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionAlreadyExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionCategoryNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubscriptionCategoryNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionCategoryNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionCategoryNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionCategoryNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubscriptionNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.SubscriptionNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.UpgradeTargetUnmarshaller">
            <summary>
            Response Unmarshaller for UpgradeTarget Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.UpgradeTargetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.UpgradeTargetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.UpgradeTargetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.Internal.MarshallTransformations.VpcSecurityGroupMembershipUnmarshaller">
            <summary>
            Response Unmarshaller for VpcSecurityGroupMembership Object
            </summary>  
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.VpcSecurityGroupMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DocDB.Model.Internal.MarshallTransformations.VpcSecurityGroupMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DocDB.Model.Internal.MarshallTransformations.VpcSecurityGroupMembershipUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            <summary>
            The provided value isn't a valid cluster snapshot state.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBClusterSnapshotStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBClusterSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBClusterSnapshotStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBClusterSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBClusterSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBClusterSnapshotStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            <summary>
            The cluster isn't in a valid state.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBClusterStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBClusterStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBClusterStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBClusterStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBClusterStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBClusterStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBClusterStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            <summary>
            The specified instance isn't in the <i>available</i> state.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBInstanceStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBInstanceStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBInstanceStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBInstanceStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBInstanceStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBInstanceStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBInstanceStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBInstanceStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBInstanceStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBInstanceStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBInstanceStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBInstanceStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBInstanceStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            <summary>
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBParameterGroupStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBParameterGroupStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBParameterGroupStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBParameterGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBParameterGroupStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBParameterGroupStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBParameterGroupStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBParameterGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBParameterGroupStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBParameterGroupStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBParameterGroupStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBParameterGroupStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBParameterGroupStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException">
            <summary>
            The state of the security group doesn't allow deletion.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBSecurityGroupStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBSecurityGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBSecurityGroupStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSecurityGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSecurityGroupStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBSecurityGroupStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidDBSnapshotStateException">
            <summary>
            The state of the snapshot doesn't allow deletion.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSnapshotStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBSnapshotStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSnapshotStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSnapshotStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBSnapshotStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSnapshotStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSnapshotStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSnapshotStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBSnapshotStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSnapshotStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            <summary>
            The subnet group can't be deleted because it's in use.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBSubnetGroupStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBSubnetGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBSubnetGroupStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSubnetGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSubnetGroupStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBSubnetGroupStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidDBSubnetStateException">
            <summary>
            The subnet isn't in the <i>available</i> state.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBSubnetStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBSubnetStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBSubnetStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSubnetStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSubnetStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBSubnetStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidDBSubnetStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidEventSubscriptionStateException">
            <summary>
            Someone else might be modifying a subscription. Wait a few seconds, and try again.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidEventSubscriptionStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidEventSubscriptionStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidEventSubscriptionStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidEventSubscriptionStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidEventSubscriptionStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidEventSubscriptionStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidEventSubscriptionStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEventSubscriptionStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidEventSubscriptionStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEventSubscriptionStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidEventSubscriptionStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidEventSubscriptionStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidEventSubscriptionStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            <summary>
            The requested operation can't be performed while the cluster is in this state.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidGlobalClusterStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidGlobalClusterStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidGlobalClusterStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidGlobalClusterStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidGlobalClusterStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidGlobalClusterStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidGlobalClusterStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidGlobalClusterStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidGlobalClusterStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidGlobalClusterStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidGlobalClusterStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidGlobalClusterStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidGlobalClusterStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidRestoreException">
            <summary>
            You cannot restore from a virtual private cloud (VPC) backup to a non-VPC DB instance.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidRestoreException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRestoreException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidRestoreException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRestoreException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidRestoreException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRestoreException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidRestoreException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRestoreException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidRestoreException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRestoreException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidRestoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRestoreException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidRestoreException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidSubnetException">
            <summary>
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidSubnetException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSubnetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidSubnetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidSubnetException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidSubnetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidSubnetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidSubnetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSubnetException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidSubnetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            <summary>
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidVPCNetworkStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidVPCNetworkStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidVPCNetworkStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidVPCNetworkStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidVPCNetworkStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidVPCNetworkStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidVPCNetworkStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidVPCNetworkStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.InvalidVPCNetworkStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            <summary>
            An error occurred when accessing an KMS key.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.KMSKeyNotAccessibleException.#ctor(System.String)">
            <summary>
            Constructs a new KMSKeyNotAccessibleException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.KMSKeyNotAccessibleException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of KMSKeyNotAccessibleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.KMSKeyNotAccessibleException.#ctor(System.Exception)">
            <summary>
            Construct instance of KMSKeyNotAccessibleException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.KMSKeyNotAccessibleException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of KMSKeyNotAccessibleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.KMSKeyNotAccessibleException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of KMSKeyNotAccessibleException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.KMSKeyNotAccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the KMSKeyNotAccessibleException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.KMSKeyNotAccessibleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists all tags on an Amazon DocumentDB resource.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ListTagsForResourceRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ListTagsForResourceRequest.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The Amazon DocumentDB resource with tags to be listed. This value is an Amazon Resource
            Name (ARN).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ListTagsForResourceResponse">
            <summary>
            Represents the output of <a>ListTagsForResource</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ListTagsForResourceResponse.TagList">
            <summary>
            Gets and sets the property TagList. 
            <para>
            A list of one or more tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyDBClusterParameterGroupRequest">
            <summary>
            Container for the parameters to the ModifyDBClusterParameterGroup operation.
            Modifies the parameters of a cluster parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request. 
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot or maintenance window before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you create a cluster parameter group, you should wait at least 5 minutes before
            creating your first cluster that uses that cluster parameter group as the default
            parameter group. This allows Amazon DocumentDB to fully complete the create action
            before the parameter group is used as the default for a new cluster. This step is
            especially important for parameters that are critical when creating the default database
            for a cluster, such as the character set for the default database defined by the <code>character_set_database</code>
            parameter.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterParameterGroupRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the cluster parameter group to modify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterParameterGroupRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            A list of parameters in the cluster parameter group to modify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyDBClusterParameterGroupResponse">
            <summary>
            Contains the name of a cluster parameter group.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterParameterGroupResponse.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of a cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be from 1 to 255 letters or numbers.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> <note> 
            <para>
            This value is stored as a lowercase string.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyDBClusterRequest">
            <summary>
            Container for the parameters to the ModifyDBCluster operation.
            Modifies a setting for an Amazon DocumentDB cluster. You can change one or more database
            configuration parameters by specifying these parameters and the new values in the
            request.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.ApplyImmediately">
            <summary>
            Gets and sets the property ApplyImmediately. 
            <para>
            A value that specifies whether the changes in this request and any pending changes
            are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the cluster. If this parameter is set to <code>false</code>, changes to
            the cluster are applied during the next maintenance window.
            </para>
             
            <para>
            The <code>ApplyImmediately</code> parameter affects only the <code>NewDBClusterIdentifier</code>
            and <code>MasterUserPassword</code> values. If you set this parameter value to <code>false</code>,
            the changes to the <code>NewDBClusterIdentifier</code> and <code>MasterUserPassword</code>
            values are applied during the next maintenance window. All other changes are applied
            immediately, regardless of the value of the <code>ApplyImmediately</code> parameter.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            The number of days for which automated backups are retained. You must specify a minimum
            value of 1.
            </para>
             
            <para>
            Default: 1
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be a value from 1 to 35.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.CloudwatchLogsExportConfiguration">
            <summary>
            Gets and sets the property CloudwatchLogsExportConfiguration. 
            <para>
            The configuration setting for the log types to be enabled for export to Amazon CloudWatch
            Logs for a specific instance or cluster. The <code>EnableLogTypes</code> and <code>DisableLogTypes</code>
            arrays determine which logs are exported (or not exported) to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The cluster identifier for the cluster that is being modified. This parameter is not
            case sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing <code>DBCluster</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the cluster parameter group to use for the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>
            is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>
            is disabled. <code>DeletionProtection</code> protects clusters from being accidentally
            deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version number of the database engine to which you want to upgrade. Modifying
            engine version is not supported on Amazon DocumentDB.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.MasterUserPassword">
            <summary>
            Gets and sets the property MasterUserPassword. 
            <para>
            The password for the master database user. This password can contain any printable
            ASCII character except forward slash (/), double quote ("), or the "at" symbol (@).
            </para>
             
            <para>
            Constraints: Must contain from 8 to 100 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.NewDBClusterIdentifier">
            <summary>
            Gets and sets the property NewDBClusterIdentifier. 
            <para>
            The new cluster identifier for the cluster when renaming a cluster. This value is
            stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster2</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port number on which the cluster accepts connections.
            </para>
             
            <para>
            Constraints: Must be a value from <code>1150</code> to <code>65535</code>. 
            </para>
             
            <para>
            Default: The same port as the original cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.PreferredBackupWindow">
            <summary>
            Gets and sets the property PreferredBackupWindow. 
            <para>
            The daily time range during which automated backups are created if automated backups
            are enabled, using the <code>BackupRetentionPeriod</code> parameter. 
            </para>
             
            <para>
            The default is a 30-minute window selected at random from an 8-hour block of time
            for each Region. 
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be in the format <code>hh24:mi-hh24:mi</code>.
            </para>
             </li> <li> 
            <para>
            Must be in Universal Coordinated Time (UTC).
            </para>
             </li> <li> 
            <para>
            Must not conflict with the preferred maintenance window.
            </para>
             </li> <li> 
            <para>
            Must be at least 30 minutes.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).
            </para>
             
            <para>
            Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> 
            </para>
             
            <para>
            The default is a 30-minute window selected at random from an 8-hour block of time
            for each Region, occurring on a random day of the week. 
            </para>
             
            <para>
            Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun
            </para>
             
            <para>
            Constraints: Minimum 30-minute window.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterRequest.VpcSecurityGroupIds">
            <summary>
            Gets and sets the property VpcSecurityGroupIds. 
            <para>
            A list of virtual private cloud (VPC) security groups that the cluster will belong
            to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyDBClusterResponse">
            <summary>
            This is the response object from the ModifyDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeRequest">
            <summary>
            Container for the parameters to the ModifyDBClusterSnapshotAttribute operation.
            Adds an attribute and values to, or removes an attribute and values from, a manual
            cluster snapshot.
            
             
            <para>
            To share a manual cluster snapshot with other accounts, specify <code>restore</code>
            as the <code>AttributeName</code>, and use the <code>ValuesToAdd</code> parameter
            to add a list of IDs of the accounts that are authorized to restore the manual cluster
            snapshot. Use the value <code>all</code> to make the manual cluster snapshot public,
            which means that it can be copied or restored by all accounts. Do not add the <code>all</code>
            value for any manual cluster snapshots that contain private information that you don't
            want available to all accounts. If a manual cluster snapshot is encrypted, it can
            be shared, but only by specifying a list of authorized account IDs for the <code>ValuesToAdd</code>
            parameter. You can't use <code>all</code> as a value for that parameter in this case.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the cluster snapshot attribute to modify.
            </para>
             
            <para>
            To manage authorization for other accounts to copy or restore a manual cluster snapshot,
            set this value to <code>restore</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeRequest.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            The identifier for the cluster snapshot to modify the attributes for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeRequest.ValuesToAdd">
            <summary>
            Gets and sets the property ValuesToAdd. 
            <para>
            A list of cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.
            </para>
             
            <para>
            To authorize other accounts to copy or restore a manual cluster snapshot, set this
            list to include one or more account IDs. To make the manual cluster snapshot restorable
            by any account, set it to <code>all</code>. Do not add the <code>all</code> value
            for any manual cluster snapshots that contain private information that you don't want
            to be available to all accounts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeRequest.ValuesToRemove">
            <summary>
            Gets and sets the property ValuesToRemove. 
            <para>
            A list of cluster snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.
            </para>
             
            <para>
            To remove authorization for other accounts to copy or restore a manual cluster snapshot,
            set this list to include one or more account identifiers. To remove authorization
            for any account to copy or restore the cluster snapshot, set it to <code>all</code>
            . If you specify <code>all</code>, an account whose account ID is explicitly added
            to the <code>restore</code> attribute can still copy or restore a manual cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeResponse">
            <summary>
            This is the response object from the ModifyDBClusterSnapshotAttribute operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeResponse.DBClusterSnapshotAttributesResult">
            <summary>
            Gets and sets the property DBClusterSnapshotAttributesResult.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyDBInstanceRequest">
            <summary>
            Container for the parameters to the ModifyDBInstance operation.
            Modifies settings for an instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBInstanceRequest.ApplyImmediately">
            <summary>
            Gets and sets the property ApplyImmediately. 
            <para>
            Specifies whether the modifications in this request and any pending modifications
            are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the instance. 
            </para>
             
            <para>
             If this parameter is set to <code>false</code>, changes to the instance are applied
            during the next maintenance window. Some parameter changes can cause an outage and
            are applied on the next reboot.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBInstanceRequest.AutoMinorVersionUpgrade">
            <summary>
            Gets and sets the property AutoMinorVersionUpgrade. 
            <para>
            This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB does not perform
            minor version upgrades regardless of the value set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBInstanceRequest.CACertificateIdentifier">
            <summary>
            Gets and sets the property CACertificateIdentifier. 
            <para>
            Indicates the certificate that needs to be associated with the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBInstanceRequest.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
            The new compute and memory capacity of the instance; for example, <code>db.r5.large</code>.
            Not all instance classes are available in all Regions. 
            </para>
             
            <para>
            If you modify the instance class, an outage occurs during the change. The change is
            applied during the next maintenance window, unless <code>ApplyImmediately</code> is
            specified as <code>true</code> for this request. 
            </para>
             
            <para>
            Default: Uses existing setting.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBInstanceRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The instance identifier. This value is stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing <code>DBInstance</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBInstanceRequest.NewDBInstanceIdentifier">
            <summary>
            Gets and sets the property NewDBInstanceIdentifier. 
            <para>
             The new instance identifier for the instance when renaming an instance. When you
            change the instance identifier, an instance reboot occurs immediately if you set <code>Apply
            Immediately</code> to <code>true</code>. It occurs during the next maintenance window
            if you set <code>Apply Immediately</code> to <code>false</code>. This value is stored
            as a lowercase string. 
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> 
            <para>
            Example: <code>mydbinstance</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBInstanceRequest.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            The weekly time range (in UTC) during which system maintenance can occur, which might
            result in an outage. Changing this parameter doesn't result in an outage except in
            the following situation, and the change is asynchronously applied as soon as possible.
            If there are pending actions that cause a reboot, and the maintenance window is changed
            to include the current time, changing this parameter causes a reboot of the instance.
            If you are moving this window to the current time, there must be at least 30 minutes
            between the current time and end of the window to ensure that pending changes are
            applied.
            </para>
             
            <para>
            Default: Uses existing setting.
            </para>
             
            <para>
            Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> 
            </para>
             
            <para>
            Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun
            </para>
             
            <para>
            Constraints: Must be at least 30 minutes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBInstanceRequest.PromotionTier">
            <summary>
            Gets and sets the property PromotionTier. 
            <para>
            A value that specifies the order in which an Amazon DocumentDB replica is promoted
            to the primary instance after a failure of the existing primary instance.
            </para>
             
            <para>
            Default: 1
            </para>
             
            <para>
            Valid values: 0-15
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyDBInstanceResponse">
            <summary>
            This is the response object from the ModifyDBInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBInstanceResponse.DBInstance">
            <summary>
            Gets and sets the property DBInstance.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyDBSubnetGroupRequest">
            <summary>
            Container for the parameters to the ModifyDBSubnetGroup operation.
            Modifies an existing subnet group. subnet groups must contain at least one subnet
            in at least two Availability Zones in the Region.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBSubnetGroupRequest.DBSubnetGroupDescription">
            <summary>
            Gets and sets the property DBSubnetGroupDescription. 
            <para>
            The description for the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBSubnetGroupRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name for the subnet group. This value is stored as a lowercase string. You can't
            modify the default subnet group. 
            </para>
             
            <para>
            Constraints: Must match the name of an existing <code>DBSubnetGroup</code>. Must not
            be default.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBSubnetGroupRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The Amazon EC2 subnet IDs for the subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyDBSubnetGroupResponse">
            <summary>
            This is the response object from the ModifyDBSubnetGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyDBSubnetGroupResponse.DBSubnetGroup">
            <summary>
            Gets and sets the property DBSubnetGroup.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyEventSubscriptionRequest">
            <summary>
            Container for the parameters to the ModifyEventSubscription operation.
            Modifies an existing Amazon DocumentDB event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyEventSubscriptionRequest.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
             A Boolean value; set to <code>true</code> to activate the subscription. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyEventSubscriptionRequest.EventCategories">
            <summary>
            Gets and sets the property EventCategories. 
            <para>
             A list of event categories for a <code>SourceType</code> that you want to subscribe
            to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyEventSubscriptionRequest.SnsTopicArn">
            <summary>
            Gets and sets the property SnsTopicArn. 
            <para>
            The Amazon Resource Name (ARN) of the SNS topic created for event notification. The
            ARN is created by Amazon SNS when you create a topic and subscribe to it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyEventSubscriptionRequest.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The type of source that is generating the events. For example, if you want to be notified
            of events generated by an instance, set this parameter to <code>db-instance</code>.
            If this value is not specified, all events are returned.
            </para>
             
            <para>
            Valid values: <code>db-instance</code>, <code>db-parameter-group</code>, <code>db-security-group</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyEventSubscriptionRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the Amazon DocumentDB event notification subscription.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyEventSubscriptionResponse">
            <summary>
            This is the response object from the ModifyEventSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyEventSubscriptionResponse.EventSubscription">
            <summary>
            Gets and sets the property EventSubscription.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyGlobalClusterRequest">
            <summary>
            Container for the parameters to the ModifyGlobalCluster operation.
            Modify a setting for an Amazon DocumentDB global cluster. You can change one or more
            configuration parameters (for example: deletion protection), or the global cluster
            identifier by specifying these parameters and the new values in the request.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyGlobalClusterRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            Indicates if the global cluster has deletion protection enabled. The global cluster
            can't be deleted when deletion protection is enabled. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyGlobalClusterRequest.GlobalClusterIdentifier">
            <summary>
            Gets and sets the property GlobalClusterIdentifier. 
            <para>
            The identifier for the global cluster being modified. This parameter isn't case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing global cluster.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyGlobalClusterRequest.NewGlobalClusterIdentifier">
            <summary>
            Gets and sets the property NewGlobalClusterIdentifier. 
            <para>
            The new identifier for a global cluster when you modify a global cluster. This value
            is stored as a lowercase string.
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens
            </para>
             
            <para>
            The first character must be a letter
            </para>
             
            <para>
            Can't end with a hyphen or contain two consecutive hyphens
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster2</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ModifyGlobalClusterResponse">
            <summary>
            This is the response object from the ModifyGlobalCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ModifyGlobalClusterResponse.GlobalCluster">
            <summary>
            Gets and sets the property GlobalCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.OrderableDBInstanceOption">
            <summary>
            The options that are available for an instance.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.OrderableDBInstanceOption.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            A list of Availability Zones for an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.OrderableDBInstanceOption.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
            The instance class for an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.OrderableDBInstanceOption.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The engine type of an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.OrderableDBInstanceOption.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The engine version of an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.OrderableDBInstanceOption.LicenseModel">
            <summary>
            Gets and sets the property LicenseModel. 
            <para>
            The license model for an instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.OrderableDBInstanceOption.Vpc">
            <summary>
            Gets and sets the property Vpc. 
            <para>
            Indicates whether an instance is in a virtual private cloud (VPC).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.Parameter">
            <summary>
            Detailed information about an individual parameter.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Parameter.AllowedValues">
            <summary>
            Gets and sets the property AllowedValues. 
            <para>
            Specifies the valid range of values for the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Parameter.ApplyMethod">
            <summary>
            Gets and sets the property ApplyMethod. 
            <para>
            Indicates when to apply parameter updates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Parameter.ApplyType">
            <summary>
            Gets and sets the property ApplyType. 
            <para>
            Specifies the engine-specific parameters type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Parameter.DataType">
            <summary>
            Gets and sets the property DataType. 
            <para>
            Specifies the valid data type for the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Parameter.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Provides a description of the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Parameter.IsModifiable">
            <summary>
            Gets and sets the property IsModifiable. 
            <para>
             Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can
            be modified. Some parameters have security or operational implications that prevent
            them from being changed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Parameter.MinimumEngineVersion">
            <summary>
            Gets and sets the property MinimumEngineVersion. 
            <para>
            The earliest engine version to which the parameter can apply.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Parameter.ParameterName">
            <summary>
            Gets and sets the property ParameterName. 
            <para>
            Specifies the name of the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Parameter.ParameterValue">
            <summary>
            Gets and sets the property ParameterValue. 
            <para>
            Specifies the value of the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Parameter.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            Indicates the source of the parameter value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.PendingCloudwatchLogsExports">
            <summary>
            A list of the log types whose configuration is still pending. These log types are
            in the process of being activated or deactivated.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingCloudwatchLogsExports.LogTypesToDisable">
            <summary>
            Gets and sets the property LogTypesToDisable. 
            <para>
            Log types that are in the process of being enabled. After they are enabled, these
            log types are exported to Amazon CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingCloudwatchLogsExports.LogTypesToEnable">
            <summary>
            Gets and sets the property LogTypesToEnable. 
            <para>
            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.PendingMaintenanceAction">
            <summary>
            Provides information about a pending maintenance action for a resource.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingMaintenanceAction.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            The type of pending maintenance action that is available for the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingMaintenanceAction.AutoAppliedAfterDate">
            <summary>
            Gets and sets the property AutoAppliedAfterDate. 
            <para>
            The date of the maintenance window when the action is applied. The maintenance action
            is applied to the resource during its first maintenance window after this date. If
            this date is specified, any <code>next-maintenance</code> opt-in requests are ignored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingMaintenanceAction.CurrentApplyDate">
            <summary>
            Gets and sets the property CurrentApplyDate. 
            <para>
            The effective date when the pending maintenance action is applied to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingMaintenanceAction.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description providing more detail about the maintenance action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingMaintenanceAction.ForcedApplyDate">
            <summary>
            Gets and sets the property ForcedApplyDate. 
            <para>
            The date when the maintenance action is automatically applied. The maintenance action
            is applied to the resource on this date regardless of the maintenance window for the
            resource. If this date is specified, any <code>immediate</code> opt-in requests are
            ignored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingMaintenanceAction.OptInStatus">
            <summary>
            Gets and sets the property OptInStatus. 
            <para>
            Indicates the type of opt-in request that has been received for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.PendingModifiedValues">
            <summary>
            One or more modified settings for an instance. These modified settings have been
            requested, but haven't been applied yet.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.AllocatedStorage">
            <summary>
            Gets and sets the property AllocatedStorage. 
            <para>
             Contains the new <code>AllocatedStorage</code> size for then instance that will be
            applied or is currently being applied. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            Specifies the pending number of days for which automated backups are retained.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.CACertificateIdentifier">
            <summary>
            Gets and sets the property CACertificateIdentifier. 
            <para>
            Specifies the identifier of the certificate authority (CA) certificate for the DB
            instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
             Contains the new <code>DBInstanceClass</code> for the instance that will be applied
            or is currently being applied. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
             Contains the new <code>DBInstanceIdentifier</code> for the instance that will be
            applied or is currently being applied. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The new subnet group for the instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Indicates the database engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            Specifies the new Provisioned IOPS value for the instance that will be applied or
            is currently being applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.LicenseModel">
            <summary>
            Gets and sets the property LicenseModel. 
            <para>
            The license model for the instance.
            </para>
             
            <para>
            Valid values: <code>license-included</code>, <code>bring-your-own-license</code>,
            <code>general-public-license</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.MasterUserPassword">
            <summary>
            Gets and sets the property MasterUserPassword. 
            <para>
            Contains the pending or currently in-progress change of the master credentials for
            the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.MultiAZ">
            <summary>
            Gets and sets the property MultiAZ. 
            <para>
            Indicates that the Single-AZ instance is to change to a Multi-AZ deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.PendingCloudwatchLogsExports">
            <summary>
            Gets and sets the property PendingCloudwatchLogsExports. 
            <para>
            A list of the log types whose configuration is still pending. These log types are
            in the process of being activated or deactivated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            Specifies the pending port for the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.PendingModifiedValues.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            Specifies the storage type to be associated with the instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RebootDBInstanceRequest">
            <summary>
            Container for the parameters to the RebootDBInstance operation.
            You might need to reboot your instance, usually for maintenance reasons. For example,
            if you make certain changes, or if you change the cluster parameter group that is
            associated with the instance, you must reboot the instance for the changes to take
            effect. 
            
             
            <para>
            Rebooting an instance restarts the database engine service. Rebooting an instance
            results in a momentary outage, during which the instance status is set to <i>rebooting</i>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RebootDBInstanceRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The instance identifier. This parameter is stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing <code>DBInstance</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RebootDBInstanceRequest.ForceFailover">
            <summary>
            Gets and sets the property ForceFailover. 
            <para>
             When <code>true</code>, the reboot is conducted through a Multi-AZ failover. 
            </para>
             
            <para>
            Constraint: You can't specify <code>true</code> if the instance is not configured
            for Multi-AZ.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RebootDBInstanceResponse">
            <summary>
            This is the response object from the RebootDBInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RebootDBInstanceResponse.DBInstance">
            <summary>
            Gets and sets the property DBInstance.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RemoveFromGlobalClusterRequest">
            <summary>
            Container for the parameters to the RemoveFromGlobalCluster operation.
            Detaches an Amazon DocumentDB secondary cluster from a global cluster. The cluster
            becomes a standalone cluster with read-write capability instead of being read-only
            and receiving data from a primary in a different region. 
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RemoveFromGlobalClusterRequest.DbClusterIdentifier">
            <summary>
            Gets and sets the property DbClusterIdentifier. 
            <para>
            The Amazon Resource Name (ARN) identifying the cluster that was detached from the
            Amazon DocumentDB global cluster. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RemoveFromGlobalClusterRequest.GlobalClusterIdentifier">
            <summary>
            Gets and sets the property GlobalClusterIdentifier. 
            <para>
            The cluster identifier to detach from the Amazon DocumentDB global cluster. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RemoveFromGlobalClusterResponse">
            <summary>
            This is the response object from the RemoveFromGlobalCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RemoveFromGlobalClusterResponse.GlobalCluster">
            <summary>
            Gets and sets the property GlobalCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RemoveSourceIdentifierFromSubscriptionRequest">
            <summary>
            Container for the parameters to the RemoveSourceIdentifierFromSubscription operation.
            Removes a source identifier from an existing Amazon DocumentDB event notification
            subscription.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RemoveSourceIdentifierFromSubscriptionRequest.SourceIdentifier">
            <summary>
            Gets and sets the property SourceIdentifier. 
            <para>
             The source identifier to be removed from the subscription, such as the instance identifier
            for an instance, or the name of a security group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RemoveSourceIdentifierFromSubscriptionRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the Amazon DocumentDB event notification subscription that you want to
            remove a source identifier from.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RemoveSourceIdentifierFromSubscriptionResponse">
            <summary>
            This is the response object from the RemoveSourceIdentifierFromSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RemoveSourceIdentifierFromSubscriptionResponse.EventSubscription">
            <summary>
            Gets and sets the property EventSubscription.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RemoveTagsFromResourceRequest">
            <summary>
            Container for the parameters to the RemoveTagsFromResource operation.
            Removes metadata tags from an Amazon DocumentDB resource.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RemoveTagsFromResourceRequest.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The Amazon DocumentDB resource that the tags are removed from. This value is an Amazon
            Resource Name (ARN).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RemoveTagsFromResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The tag key (name) of the tag to be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RemoveTagsFromResourceResponse">
            <summary>
            This is the response object from the RemoveTagsFromResource operation.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ResetDBClusterParameterGroupRequest">
            <summary>
            Container for the parameters to the ResetDBClusterParameterGroup operation.
            Modifies the parameters of a cluster parameter group to the default value. To reset
            specific parameters, submit a list of the following: <code>ParameterName</code> and
            <code>ApplyMethod</code>. To reset the entire cluster parameter group, specify the
            <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
            
             
            <para>
             When you reset the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            reboot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ResetDBClusterParameterGroupRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the cluster parameter group to reset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ResetDBClusterParameterGroupRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            A list of parameter names in the cluster parameter group to reset to the default values.
            You can't use this parameter if the <code>ResetAllParameters</code> parameter is set
            to <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ResetDBClusterParameterGroupRequest.ResetAllParameters">
            <summary>
            Gets and sets the property ResetAllParameters. 
            <para>
            A value that is set to <code>true</code> to reset all parameters in the cluster parameter
            group to their default values, and <code>false</code> otherwise. You can't use this
            parameter if there is a list of parameter names specified for the <code>Parameters</code>
            parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ResetDBClusterParameterGroupResponse">
            <summary>
            Contains the name of a cluster parameter group.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ResetDBClusterParameterGroupResponse.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of a cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be from 1 to 255 letters or numbers.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> <note> 
            <para>
            This value is stored as a lowercase string.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.ResourceNotFoundException">
            <summary>
            The specified resource ID was not found.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.ResourcePendingMaintenanceActions">
            <summary>
            Represents the output of <a>ApplyPendingMaintenanceAction</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ResourcePendingMaintenanceActions.PendingMaintenanceActionDetails">
            <summary>
            Gets and sets the property PendingMaintenanceActionDetails. 
            <para>
            A list that provides details about the pending maintenance actions for the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.ResourcePendingMaintenanceActions.ResourceIdentifier">
            <summary>
            Gets and sets the property ResourceIdentifier. 
            <para>
            The Amazon Resource Name (ARN) of the resource that has pending maintenance actions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest">
            <summary>
            Container for the parameters to the RestoreDBClusterFromSnapshot operation.
            Creates a new cluster from a snapshot or cluster snapshot.
            
             
            <para>
            If a snapshot is specified, the target cluster is created from the source DB snapshot
            with a default configuration and default security group.
            </para>
             
            <para>
            If a cluster snapshot is specified, the target cluster is created from the source
            cluster restore point with the same configuration as the original source DB cluster,
            except that the new cluster is created with the default security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            Provides the list of Amazon EC2 Availability Zones that instances in the restored
            DB cluster can be created in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The name of the cluster to create from the snapshot or cluster snapshot. This parameter
            isn't case sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-snapshot-id</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name of the subnet group to use for the new cluster.
            </para>
             
            <para>
            Constraints: If provided, must match the name of an existing <code>DBSubnetGroup</code>.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>
            is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>
            is disabled. <code>DeletionProtection</code> protects clusters from being accidentally
            deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.EnableCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnableCloudwatchLogsExports. 
            <para>
            A list of log types that must be enabled for exporting to Amazon CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The database engine to use for the new cluster.
            </para>
             
            <para>
            Default: The same as source.
            </para>
             
            <para>
            Constraint: Must be compatible with the engine of the source.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version of the database engine to use for the new cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The KMS key identifier to use when restoring an encrypted cluster from a DB snapshot
            or cluster snapshot.
            </para>
             
            <para>
            The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are restoring a cluster with the same account that owns the KMS encryption
            key used to encrypt the new cluster, then you can use the KMS key alias instead of
            the ARN for the KMS encryption key.
            </para>
             
            <para>
            If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following
            occurs:
            </para>
             <ul> <li> 
            <para>
            If the snapshot or cluster snapshot in <code>SnapshotIdentifier</code> is encrypted,
            then the restored cluster is encrypted using the KMS key that was used to encrypt
            the snapshot or the cluster snapshot.
            </para>
             </li> <li> 
            <para>
            If the snapshot or the cluster snapshot in <code>SnapshotIdentifier</code> is not
            encrypted, then the restored DB cluster is not encrypted.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port number on which the new cluster accepts connections.
            </para>
             
            <para>
            Constraints: Must be a value from <code>1150</code> to <code>65535</code>.
            </para>
             
            <para>
            Default: The same port as the original cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.SnapshotIdentifier">
            <summary>
            Gets and sets the property SnapshotIdentifier. 
            <para>
            The identifier for the snapshot or cluster snapshot to restore from.
            </para>
             
            <para>
            You can use either the name or the Amazon Resource Name (ARN) to specify a cluster
            snapshot. However, you can use only the ARN to specify a snapshot.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing snapshot.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the restored cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest.VpcSecurityGroupIds">
            <summary>
            Gets and sets the property VpcSecurityGroupIds. 
            <para>
            A list of virtual private cloud (VPC) security groups that the new cluster will belong
            to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotResponse">
            <summary>
            This is the response object from the RestoreDBClusterFromSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterFromSnapshotResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest">
            <summary>
            Container for the parameters to the RestoreDBClusterToPointInTime operation.
            Restores a cluster to an arbitrary point in time. Users can restore to any point in
            time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target cluster is created from the source cluster with the same configuration
            as the original cluster, except that the new cluster is created with the default security
            group.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The name of the new cluster to be created.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The subnet group name to use for the new cluster.
            </para>
             
            <para>
            Constraints: If provided, must match the name of an existing <code>DBSubnetGroup</code>.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>
            is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>
            is disabled. <code>DeletionProtection</code> protects clusters from being accidentally
            deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.EnableCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnableCloudwatchLogsExports. 
            <para>
            A list of log types that must be enabled for exporting to Amazon CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The KMS key identifier to use when restoring an encrypted cluster from an encrypted
            cluster.
            </para>
             
            <para>
            The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are restoring a cluster with the same account that owns the KMS encryption
            key used to encrypt the new cluster, then you can use the KMS key alias instead of
            the ARN for the KMS encryption key.
            </para>
             
            <para>
            You can restore to a new cluster and encrypt the new cluster with an KMS key that
            is different from the KMS key used to encrypt the source cluster. The new DB cluster
            is encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.
            </para>
             
            <para>
            If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following
            occurs:
            </para>
             <ul> <li> 
            <para>
            If the cluster is encrypted, then the restored cluster is encrypted using the KMS
            key that was used to encrypt the source cluster.
            </para>
             </li> <li> 
            <para>
            If the cluster is not encrypted, then the restored cluster is not encrypted.
            </para>
             </li> </ul> 
            <para>
            If <code>DBClusterIdentifier</code> refers to a cluster that is not encrypted, then
            the restore request is rejected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port number on which the new cluster accepts connections.
            </para>
             
            <para>
            Constraints: Must be a value from <code>1150</code> to <code>65535</code>. 
            </para>
             
            <para>
            Default: The default port for the engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.RestoreToTime">
            <summary>
            Gets and sets the property RestoreToTime. 
            <para>
            The date and time to restore the cluster to.
            </para>
             
            <para>
            Valid values: A time in Universal Coordinated Time (UTC) format.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be before the latest restorable time for the instance.
            </para>
             </li> <li> 
            <para>
            Must be specified if the <code>UseLatestRestorableTime</code> parameter is not provided.
            </para>
             </li> <li> 
            <para>
            Cannot be specified if the <code>UseLatestRestorableTime</code> parameter is <code>true</code>.
            </para>
             </li> <li> 
            <para>
            Cannot be specified if the <code>RestoreType</code> parameter is <code>copy-on-write</code>.
            </para>
             </li> </ul> 
            <para>
            Example: <code>2015-03-07T23:45:00Z</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.SourceDBClusterIdentifier">
            <summary>
            Gets and sets the property SourceDBClusterIdentifier. 
            <para>
            The identifier of the source cluster from which to restore.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing <code>DBCluster</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the restored cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.UseLatestRestorableTime">
            <summary>
            Gets and sets the property UseLatestRestorableTime. 
            <para>
            A value that is set to <code>true</code> to restore the cluster to the latest restorable
            backup time, and <code>false</code> otherwise. 
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
             
            <para>
            Constraints: Cannot be specified if the <code>RestoreToTime</code> parameter is provided.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest.VpcSecurityGroupIds">
            <summary>
            Gets and sets the property VpcSecurityGroupIds. 
            <para>
            A list of VPC security groups that the new cluster belongs to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeResponse">
            <summary>
            This is the response object from the RestoreDBClusterToPointInTime operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.RestoreDBClusterToPointInTimeResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException">
            <summary>
            You have exceeded the maximum number of accounts that you can share a manual DB snapshot
            with.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SharedSnapshotQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SharedSnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of SharedSnapshotQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SharedSnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SharedSnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SharedSnapshotQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            <summary>
            The request would cause you to exceed the allowed number of snapshots.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.SnapshotQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SnapshotQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.SnapshotQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SnapshotQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of SnapshotQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SnapshotQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SnapshotQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SnapshotQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SnapshotQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.SnapshotQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.SNSInvalidTopicException">
            <summary>
            Amazon SNS has responded that there is a problem with the specified topic.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSInvalidTopicException.#ctor(System.String)">
            <summary>
            Constructs a new SNSInvalidTopicException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSInvalidTopicException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SNSInvalidTopicException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSInvalidTopicException.#ctor(System.Exception)">
            <summary>
            Construct instance of SNSInvalidTopicException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSInvalidTopicException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSInvalidTopicException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSInvalidTopicException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSInvalidTopicException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSInvalidTopicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SNSInvalidTopicException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSInvalidTopicException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.SNSNoAuthorizationException">
            <summary>
            You do not have permission to publish to the SNS topic Amazon Resource Name (ARN).
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSNoAuthorizationException.#ctor(System.String)">
            <summary>
            Constructs a new SNSNoAuthorizationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSNoAuthorizationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SNSNoAuthorizationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSNoAuthorizationException.#ctor(System.Exception)">
            <summary>
            Construct instance of SNSNoAuthorizationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSNoAuthorizationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSNoAuthorizationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSNoAuthorizationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSNoAuthorizationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSNoAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SNSNoAuthorizationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSNoAuthorizationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.SNSTopicArnNotFoundException">
            <summary>
            The SNS topic Amazon Resource Name (ARN) does not exist.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSTopicArnNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SNSTopicArnNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSTopicArnNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SNSTopicArnNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSTopicArnNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SNSTopicArnNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSTopicArnNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSTopicArnNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSTopicArnNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSTopicArnNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSTopicArnNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SNSTopicArnNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.SNSTopicArnNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.SourceNotFoundException">
            <summary>
            The requested source could not be found.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.SourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.SourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.SourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.StartDBClusterRequest">
            <summary>
            Container for the parameters to the StartDBCluster operation.
            Restarts the stopped cluster that is specified by <code>DBClusterIdentifier</code>.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.StartDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The identifier of the cluster to restart. Example: <code>docdb-2019-05-28-15-24-52</code>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.StartDBClusterResponse">
            <summary>
            This is the response object from the StartDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.StartDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.StopDBClusterRequest">
            <summary>
            Container for the parameters to the StopDBCluster operation.
            Stops the running cluster that is specified by <code>DBClusterIdentifier</code>. The
            cluster must be in the <i>available</i> state. For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.StopDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The identifier of the cluster to stop. Example: <code>docdb-2019-05-28-15-24-52</code>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.StopDBClusterResponse">
            <summary>
            This is the response object from the StopDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.StopDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            <summary>
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new StorageQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of StorageQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of StorageQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StorageQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StorageQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the StorageQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.StorageTypeNotSupportedException">
            <summary>
            Storage of the specified <code>StorageType</code> can't be associated with the DB
            instance.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageTypeNotSupportedException.#ctor(System.String)">
            <summary>
            Constructs a new StorageTypeNotSupportedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageTypeNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of StorageTypeNotSupportedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageTypeNotSupportedException.#ctor(System.Exception)">
            <summary>
            Construct instance of StorageTypeNotSupportedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageTypeNotSupportedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StorageTypeNotSupportedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageTypeNotSupportedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StorageTypeNotSupportedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageTypeNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the StorageTypeNotSupportedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.StorageTypeNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.Subnet">
            <summary>
            Detailed information about a subnet.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Subnet.SubnetAvailabilityZone">
            <summary>
            Gets and sets the property SubnetAvailabilityZone. 
            <para>
            Specifies the Availability Zone for the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Subnet.SubnetIdentifier">
            <summary>
            Gets and sets the property SubnetIdentifier. 
            <para>
            Specifies the identifier of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Subnet.SubnetStatus">
            <summary>
            Gets and sets the property SubnetStatus. 
            <para>
            Specifies the status of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.SubnetAlreadyInUseException">
            <summary>
            The subnet is already in use in the Availability Zone.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.SubnetAlreadyInUseException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetAlreadyInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubnetAlreadyInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubnetAlreadyInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubnetAlreadyInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubnetAlreadyInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubnetAlreadyInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetAlreadyInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubnetAlreadyInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetAlreadyInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubnetAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubnetAlreadyInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.SubnetAlreadyInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.SubscriptionAlreadyExistException">
            <summary>
            The provided subscription name already exists.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionAlreadyExistException.#ctor(System.String)">
            <summary>
            Constructs a new SubscriptionAlreadyExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionAlreadyExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubscriptionAlreadyExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionAlreadyExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubscriptionAlreadyExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionAlreadyExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionAlreadyExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionAlreadyExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionAlreadyExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionAlreadyExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubscriptionAlreadyExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionAlreadyExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException">
            <summary>
            The provided category does not exist.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SubscriptionCategoryNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubscriptionCategoryNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubscriptionCategoryNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionCategoryNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionCategoryNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubscriptionCategoryNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            <summary>
            The subscription name does not exist.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SubscriptionNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubscriptionNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubscriptionNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubscriptionNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DocDB.Model.SubscriptionNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DocDB.Model.Tag">
            <summary>
            Metadata assigned to an Amazon DocumentDB resource consisting of a key-value pair.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The required name of the tag. The string value can be from 1 to 128 Unicode characters
            in length and can't be prefixed with "<code>aws:</code>" or "<code>rds:</code>". The
            string can contain only the set of Unicode letters, digits, white space, '_', '.',
            '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The optional value of the tag. The string value can be from 1 to 256 Unicode characters
            in length and can't be prefixed with "<code>aws:</code>" or "<code>rds:</code>". The
            string can contain only the set of Unicode letters, digits, white space, '_', '.',
            '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.UpgradeTarget">
            <summary>
            The version of the database engine that an instance can be upgraded to.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.UpgradeTarget.AutoUpgrade">
            <summary>
            Gets and sets the property AutoUpgrade. 
            <para>
            A value that indicates whether the target version is applied to any source DB instances
            that have <code>AutoMinorVersionUpgrade</code> set to <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.UpgradeTarget.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The version of the database engine that an instance can be upgraded to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.UpgradeTarget.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the upgrade target database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.UpgradeTarget.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version number of the upgrade target database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.UpgradeTarget.IsMajorVersionUpgrade">
            <summary>
            Gets and sets the property IsMajorVersionUpgrade. 
            <para>
            A value that indicates whether a database engine is upgraded to a major version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.VpcSecurityGroupMembership">
            <summary>
            Used as a response element for queries on virtual private cloud (VPC) security group
            membership.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.VpcSecurityGroupMembership.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the VPC security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.VpcSecurityGroupMembership.VpcSecurityGroupId">
            <summary>
            Gets and sets the property VpcSecurityGroupId. 
            <para>
            The name of the VPC security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeCertificatesPaginator">
            <summary>
            Base class for DescribeCertificates paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeCertificatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeCertificatesPaginator.Certificates">
            <summary>
            Enumerable containing all of the Certificates
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsPaginator">
            <summary>
            Base class for DescribeDBClusterParameterGroups paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParameterGroupsPaginator.DBClusterParameterGroups">
            <summary>
            Enumerable containing all of the DBClusterParameterGroups
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterParametersPaginator">
            <summary>
            Base class for DescribeDBClusterParameters paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParametersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterParametersPaginator.Parameters">
            <summary>
            Enumerable containing all of the Parameters
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClusterSnapshotsPaginator">
            <summary>
            Base class for DescribeDBClusterSnapshots paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClusterSnapshotsPaginator.DBClusterSnapshots">
            <summary>
            Enumerable containing all of the DBClusterSnapshots
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBClustersPaginator">
            <summary>
            Base class for DescribeDBClusters paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBClustersPaginator.DBClusters">
            <summary>
            Enumerable containing all of the DBClusters
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBEngineVersionsPaginator">
            <summary>
            Base class for DescribeDBEngineVersions paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBEngineVersionsPaginator.DBEngineVersions">
            <summary>
            Enumerable containing all of the DBEngineVersions
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBInstancesPaginator">
            <summary>
            Base class for DescribeDBInstances paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBInstancesPaginator.DBInstances">
            <summary>
            Enumerable containing all of the DBInstances
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeDBSubnetGroupsPaginator">
            <summary>
            Base class for DescribeDBSubnetGroups paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBSubnetGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeDBSubnetGroupsPaginator.DBSubnetGroups">
            <summary>
            Enumerable containing all of the DBSubnetGroups
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeEventsPaginator">
            <summary>
            Base class for DescribeEvents paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventsPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeEventSubscriptionsPaginator">
            <summary>
            Base class for DescribeEventSubscriptions paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventSubscriptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeEventSubscriptionsPaginator.EventSubscriptionsList">
            <summary>
            Enumerable containing all of the EventSubscriptionsList
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeGlobalClustersPaginator">
            <summary>
            Base class for DescribeGlobalClusters paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeGlobalClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeGlobalClustersPaginator.GlobalClusters">
            <summary>
            Enumerable containing all of the GlobalClusters
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsPaginator">
            <summary>
            Base class for DescribeOrderableDBInstanceOptions paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsPaginator.OrderableDBInstanceOptions">
            <summary>
            Enumerable containing all of the OrderableDBInstanceOptions
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DescribePendingMaintenanceActionsPaginator">
            <summary>
            Base class for DescribePendingMaintenanceActions paginators.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribePendingMaintenanceActionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.DescribePendingMaintenanceActionsPaginator.PendingMaintenanceActions">
            <summary>
            Enumerable containing all of the PendingMaintenanceActions
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.DocDBPaginatorFactory">
             <summary>
             Paginators for the DocDB service
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeCertificates(Amazon.DocDB.Model.DescribeCertificatesRequest)">
             <summary>
             Paginator for DescribeCertificates operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeDBClusterParameterGroups(Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest)">
             <summary>
             Paginator for DescribeDBClusterParameterGroups operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeDBClusterParameters(Amazon.DocDB.Model.DescribeDBClusterParametersRequest)">
             <summary>
             Paginator for DescribeDBClusterParameters operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeDBClusters(Amazon.DocDB.Model.DescribeDBClustersRequest)">
             <summary>
             Paginator for DescribeDBClusters operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeDBClusterSnapshots(Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest)">
             <summary>
             Paginator for DescribeDBClusterSnapshots operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeDBEngineVersions(Amazon.DocDB.Model.DescribeDBEngineVersionsRequest)">
             <summary>
             Paginator for DescribeDBEngineVersions operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeDBInstances(Amazon.DocDB.Model.DescribeDBInstancesRequest)">
             <summary>
             Paginator for DescribeDBInstances operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeDBSubnetGroups(Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest)">
             <summary>
             Paginator for DescribeDBSubnetGroups operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeEvents(Amazon.DocDB.Model.DescribeEventsRequest)">
             <summary>
             Paginator for DescribeEvents operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeEventSubscriptions(Amazon.DocDB.Model.DescribeEventSubscriptionsRequest)">
             <summary>
             Paginator for DescribeEventSubscriptions operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeGlobalClusters(Amazon.DocDB.Model.DescribeGlobalClustersRequest)">
             <summary>
             Paginator for DescribeGlobalClusters operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribeOrderableDBInstanceOptions(Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest)">
             <summary>
             Paginator for DescribeOrderableDBInstanceOptions operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.DocDBPaginatorFactory.DescribePendingMaintenanceActions(Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest)">
             <summary>
             Paginator for DescribePendingMaintenanceActions operation
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeCertificatesPaginator">
             <summary>
             Paginator for the DescribeCertificates operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeCertificatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeCertificatesPaginator.Certificates">
            <summary>
            Enumerable containing all of the Certificates
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeDBClusterParameterGroupsPaginator">
             <summary>
             Paginator for the DescribeDBClusterParameterGroups operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBClusterParameterGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBClusterParameterGroupsPaginator.DBClusterParameterGroups">
            <summary>
            Enumerable containing all of the DBClusterParameterGroups
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeDBClusterParametersPaginator">
             <summary>
             Paginator for the DescribeDBClusterParameters operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBClusterParametersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBClusterParametersPaginator.Parameters">
            <summary>
            Enumerable containing all of the Parameters
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeDBClusterSnapshotsPaginator">
             <summary>
             Paginator for the DescribeDBClusterSnapshots operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBClusterSnapshotsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBClusterSnapshotsPaginator.DBClusterSnapshots">
            <summary>
            Enumerable containing all of the DBClusterSnapshots
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeDBClustersPaginator">
             <summary>
             Paginator for the DescribeDBClusters operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBClustersPaginator.DBClusters">
            <summary>
            Enumerable containing all of the DBClusters
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeDBEngineVersionsPaginator">
             <summary>
             Paginator for the DescribeDBEngineVersions operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBEngineVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBEngineVersionsPaginator.DBEngineVersions">
            <summary>
            Enumerable containing all of the DBEngineVersions
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeDBInstancesPaginator">
             <summary>
             Paginator for the DescribeDBInstances operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBInstancesPaginator.DBInstances">
            <summary>
            Enumerable containing all of the DBInstances
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeDBSubnetGroupsPaginator">
             <summary>
             Paginator for the DescribeDBSubnetGroups operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBSubnetGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeDBSubnetGroupsPaginator.DBSubnetGroups">
            <summary>
            Enumerable containing all of the DBSubnetGroups
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeEventsPaginator">
             <summary>
             Paginator for the DescribeEvents operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeEventsPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeEventSubscriptionsPaginator">
             <summary>
             Paginator for the DescribeEventSubscriptions operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeEventSubscriptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeEventSubscriptionsPaginator.EventSubscriptionsList">
            <summary>
            Enumerable containing all of the EventSubscriptionsList
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeGlobalClustersPaginator">
             <summary>
             Paginator for the DescribeGlobalClusters operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeGlobalClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeGlobalClustersPaginator.GlobalClusters">
            <summary>
            Enumerable containing all of the GlobalClusters
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribeOrderableDBInstanceOptionsPaginator">
             <summary>
             Paginator for the DescribeOrderableDBInstanceOptions operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeOrderableDBInstanceOptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribeOrderableDBInstanceOptionsPaginator.OrderableDBInstanceOptions">
            <summary>
            Enumerable containing all of the OrderableDBInstanceOptions
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDescribePendingMaintenanceActionsPaginator">
             <summary>
             Paginator for the DescribePendingMaintenanceActions operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribePendingMaintenanceActionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.DocDB.Model.IDescribePendingMaintenanceActionsPaginator.PendingMaintenanceActions">
            <summary>
            Enumerable containing all of the PendingMaintenanceActions
            </summary>
        </member>
        <member name="T:Amazon.DocDB.Model.IDocDBPaginatorFactory">
             <summary>
             Paginators for the DocDB service
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeCertificates(Amazon.DocDB.Model.DescribeCertificatesRequest)">
             <summary>
             Paginator for DescribeCertificates operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeDBClusterParameterGroups(Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest)">
             <summary>
             Paginator for DescribeDBClusterParameterGroups operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeDBClusterParameters(Amazon.DocDB.Model.DescribeDBClusterParametersRequest)">
             <summary>
             Paginator for DescribeDBClusterParameters operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeDBClusters(Amazon.DocDB.Model.DescribeDBClustersRequest)">
             <summary>
             Paginator for DescribeDBClusters operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeDBClusterSnapshots(Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest)">
             <summary>
             Paginator for DescribeDBClusterSnapshots operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeDBEngineVersions(Amazon.DocDB.Model.DescribeDBEngineVersionsRequest)">
             <summary>
             Paginator for DescribeDBEngineVersions operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeDBInstances(Amazon.DocDB.Model.DescribeDBInstancesRequest)">
             <summary>
             Paginator for DescribeDBInstances operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeDBSubnetGroups(Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest)">
             <summary>
             Paginator for DescribeDBSubnetGroups operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeEvents(Amazon.DocDB.Model.DescribeEventsRequest)">
             <summary>
             Paginator for DescribeEvents operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeEventSubscriptions(Amazon.DocDB.Model.DescribeEventSubscriptionsRequest)">
             <summary>
             Paginator for DescribeEventSubscriptions operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeGlobalClusters(Amazon.DocDB.Model.DescribeGlobalClustersRequest)">
             <summary>
             Paginator for DescribeGlobalClusters operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribeOrderableDBInstanceOptions(Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest)">
             <summary>
             Paginator for DescribeOrderableDBInstanceOptions operation
            </summary>
        </member>
        <member name="M:Amazon.DocDB.Model.IDocDBPaginatorFactory.DescribePendingMaintenanceActions(Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest)">
             <summary>
             Paginator for DescribePendingMaintenanceActions operation
            </summary>
        </member>
        <member name="T:Amazon.DocDB.AmazonDocDBConfig">
            <summary>
            Configuration for accessing Amazon DocDB service
            </summary>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.DocDB.AmazonDocDBConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.AmazonDocDBConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.DocDB.AmazonDocDBConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.AmazonDocDBException">
            <summary>
             Common exception for the DocDB service.
             </summary>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonDocDBException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonDocDBException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonDocDBException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonDocDBException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonDocDBException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonDocDBException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.DocDB.AmazonDocDBRequest">
            <summary>
            Base class for DocDB operation requests.
            </summary>
        </member>
        <member name="T:Amazon.DocDB.ApplyMethod">
            <summary>
            Constants used for properties of type ApplyMethod.
            </summary>
        </member>
        <member name="F:Amazon.DocDB.ApplyMethod.Immediate">
            <summary>
            Constant Immediate for ApplyMethod
            </summary>
        </member>
        <member name="F:Amazon.DocDB.ApplyMethod.PendingReboot">
            <summary>
            Constant PendingReboot for ApplyMethod
            </summary>
        </member>
        <member name="M:Amazon.DocDB.ApplyMethod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.ApplyMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DocDB.ApplyMethod.op_Implicit(System.String)~Amazon.DocDB.ApplyMethod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DocDB.SourceType">
            <summary>
            Constants used for properties of type SourceType.
            </summary>
        </member>
        <member name="F:Amazon.DocDB.SourceType.DbCluster">
            <summary>
            Constant DbCluster for SourceType
            </summary>
        </member>
        <member name="F:Amazon.DocDB.SourceType.DbClusterSnapshot">
            <summary>
            Constant DbClusterSnapshot for SourceType
            </summary>
        </member>
        <member name="F:Amazon.DocDB.SourceType.DbInstance">
            <summary>
            Constant DbInstance for SourceType
            </summary>
        </member>
        <member name="F:Amazon.DocDB.SourceType.DbParameterGroup">
            <summary>
            Constant DbParameterGroup for SourceType
            </summary>
        </member>
        <member name="F:Amazon.DocDB.SourceType.DbSecurityGroup">
            <summary>
            Constant DbSecurityGroup for SourceType
            </summary>
        </member>
        <member name="F:Amazon.DocDB.SourceType.DbSnapshot">
            <summary>
            Constant DbSnapshot for SourceType
            </summary>
        </member>
        <member name="M:Amazon.DocDB.SourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.SourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DocDB.SourceType.op_Implicit(System.String)~Amazon.DocDB.SourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DocDB.AmazonDocDBClient">
             <summary>
             Implementation for accessing DocDB
            
             Amazon DocumentDB API documentation
             </summary>
        </member>
        <member name="P:Amazon.DocDB.AmazonDocDBClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor">
             <summary>
             Constructs AmazonDocDBClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonDocDBClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(Amazon.DocDB.AmazonDocDBConfig)">
             <summary>
             Constructs AmazonDocDBClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonDocDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonDocDBClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDocDBClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.DocDB.AmazonDocDBConfig)">
            <summary>
            Constructs AmazonDocDBClient with AWS Credentials and an
            AmazonDocDBClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonDocDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonDocDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDocDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(System.String,System.String,Amazon.DocDB.AmazonDocDBConfig)">
            <summary>
            Constructs AmazonDocDBClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDocDBClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonDocDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonDocDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDocDBClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.#ctor(System.String,System.String,System.String,Amazon.DocDB.AmazonDocDBConfig)">
            <summary>
            Constructs AmazonDocDBClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDocDBClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonDocDBClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customize the pipeline
            </summary>
            <param name="pipeline"></param>
        </member>
        <member name="P:Amazon.DocDB.AmazonDocDBClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.AddSourceIdentifierToSubscription(Amazon.DocDB.Model.AddSourceIdentifierToSubscriptionRequest)">
            <summary>
            Adds a source identifier to an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddSourceIdentifierToSubscription service method.</param>
            
            <returns>The response from the AddSourceIdentifierToSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/AddSourceIdentifierToSubscription">REST API Reference for AddSourceIdentifierToSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.AddSourceIdentifierToSubscriptionAsync(Amazon.DocDB.Model.AddSourceIdentifierToSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a source identifier to an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddSourceIdentifierToSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddSourceIdentifierToSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/AddSourceIdentifierToSubscription">REST API Reference for AddSourceIdentifierToSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.AddTagsToResource(Amazon.DocDB.Model.AddTagsToResourceRequest)">
            <summary>
            Adds metadata tags to an Amazon DocumentDB resource. You can use these tags with cost
            allocation reporting to track costs that are associated with Amazon DocumentDB resources
            or in a <code>Condition</code> statement in an Identity and Access Management (IAM)
            policy for Amazon DocumentDB.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToResource service method.</param>
            
            <returns>The response from the AddTagsToResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/AddTagsToResource">REST API Reference for AddTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.AddTagsToResourceAsync(Amazon.DocDB.Model.AddTagsToResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds metadata tags to an Amazon DocumentDB resource. You can use these tags with cost
            allocation reporting to track costs that are associated with Amazon DocumentDB resources
            or in a <code>Condition</code> statement in an Identity and Access Management (IAM)
            policy for Amazon DocumentDB.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddTagsToResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/AddTagsToResource">REST API Reference for AddTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ApplyPendingMaintenanceAction(Amazon.DocDB.Model.ApplyPendingMaintenanceActionRequest)">
            <summary>
            Applies a pending maintenance action to a resource (for example, to an Amazon DocumentDB
            instance).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ApplyPendingMaintenanceAction service method.</param>
            
            <returns>The response from the ApplyPendingMaintenanceAction service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ApplyPendingMaintenanceAction">REST API Reference for ApplyPendingMaintenanceAction Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ApplyPendingMaintenanceActionAsync(Amazon.DocDB.Model.ApplyPendingMaintenanceActionRequest,System.Threading.CancellationToken)">
            <summary>
            Applies a pending maintenance action to a resource (for example, to an Amazon DocumentDB
            instance).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ApplyPendingMaintenanceAction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ApplyPendingMaintenanceAction service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ApplyPendingMaintenanceAction">REST API Reference for ApplyPendingMaintenanceAction Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CopyDBClusterParameterGroup(Amazon.DocDB.Model.CopyDBClusterParameterGroupRequest)">
            <summary>
            Copies the specified cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterParameterGroup service method.</param>
            
            <returns>The response from the CopyDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException">
            A parameter group with the same name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException">
            This request would cause you to exceed the allowed number of parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CopyDBClusterParameterGroup">REST API Reference for CopyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CopyDBClusterParameterGroupAsync(Amazon.DocDB.Model.CopyDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Copies the specified cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException">
            A parameter group with the same name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException">
            This request would cause you to exceed the allowed number of parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CopyDBClusterParameterGroup">REST API Reference for CopyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CopyDBClusterSnapshot(Amazon.DocDB.Model.CopyDBClusterSnapshotRequest)">
            <summary>
            Copies a snapshot of a cluster.
            
             
            <para>
            To copy a cluster snapshot from a shared manual cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared cluster snapshot. You can only
            copy a shared DB cluster snapshot, whether encrypted or not, in the same Region.
            </para>
             
            <para>
            To cancel the copy operation after it is in progress, delete the target cluster snapshot
            identified by <code>TargetDBClusterSnapshotIdentifier</code> while that cluster snapshot
            is in the <i>copying</i> status.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterSnapshot service method.</param>
            
            <returns>The response from the CopyDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CopyDBClusterSnapshot">REST API Reference for CopyDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CopyDBClusterSnapshotAsync(Amazon.DocDB.Model.CopyDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Copies a snapshot of a cluster.
            
             
            <para>
            To copy a cluster snapshot from a shared manual cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared cluster snapshot. You can only
            copy a shared DB cluster snapshot, whether encrypted or not, in the same Region.
            </para>
             
            <para>
            To cancel the copy operation after it is in progress, delete the target cluster snapshot
            identified by <code>TargetDBClusterSnapshotIdentifier</code> while that cluster snapshot
            is in the <i>copying</i> status.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CopyDBClusterSnapshot">REST API Reference for CopyDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateDBCluster(Amazon.DocDB.Model.CreateDBClusterRequest)">
            <summary>
            Creates a new Amazon DocumentDB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBCluster service method.</param>
            
            <returns>The response from the CreateDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException">
            <code>DBClusterParameterGroupName</code> doesn't refer to an existing cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBCluster">REST API Reference for CreateDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateDBClusterAsync(Amazon.DocDB.Model.CreateDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon DocumentDB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException">
            <code>DBClusterParameterGroupName</code> doesn't refer to an existing cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBCluster">REST API Reference for CreateDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateDBClusterParameterGroup(Amazon.DocDB.Model.CreateDBClusterParameterGroupRequest)">
            <summary>
            Creates a new cluster parameter group.
            
             
            <para>
            Parameters in a cluster parameter group apply to all of the instances in a cluster.
            </para>
             
            <para>
            A cluster parameter group is initially created with the default parameters for the
            database engine used by instances in the cluster. In Amazon DocumentDB, you cannot
            make modifications directly to the <code>default.docdb3.6</code> cluster parameter
            group. If your Amazon DocumentDB cluster is using the default cluster parameter group
            and you want to modify a value in it, you must first <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-create.html">
            create a new parameter group</a> or <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-copy.html">
            copy an existing parameter group</a>, modify it, and then apply the modified parameter
            group to your cluster. For the new cluster parameter group and associated settings
            to take effect, you must then reboot the instances in the cluster without failover.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-modify.html">
            Modifying Amazon DocumentDB Cluster Parameter Groups</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterParameterGroup service method.</param>
            
            <returns>The response from the CreateDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException">
            A parameter group with the same name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException">
            This request would cause you to exceed the allowed number of parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBClusterParameterGroup">REST API Reference for CreateDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateDBClusterParameterGroupAsync(Amazon.DocDB.Model.CreateDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new cluster parameter group.
            
             
            <para>
            Parameters in a cluster parameter group apply to all of the instances in a cluster.
            </para>
             
            <para>
            A cluster parameter group is initially created with the default parameters for the
            database engine used by instances in the cluster. In Amazon DocumentDB, you cannot
            make modifications directly to the <code>default.docdb3.6</code> cluster parameter
            group. If your Amazon DocumentDB cluster is using the default cluster parameter group
            and you want to modify a value in it, you must first <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-create.html">
            create a new parameter group</a> or <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-copy.html">
            copy an existing parameter group</a>, modify it, and then apply the modified parameter
            group to your cluster. For the new cluster parameter group and associated settings
            to take effect, you must then reboot the instances in the cluster without failover.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-modify.html">
            Modifying Amazon DocumentDB Cluster Parameter Groups</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException">
            A parameter group with the same name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException">
            This request would cause you to exceed the allowed number of parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBClusterParameterGroup">REST API Reference for CreateDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateDBClusterSnapshot(Amazon.DocDB.Model.CreateDBClusterSnapshotRequest)">
            <summary>
            Creates a snapshot of a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterSnapshot service method.</param>
            
            <returns>The response from the CreateDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBClusterSnapshot">REST API Reference for CreateDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateDBClusterSnapshotAsync(Amazon.DocDB.Model.CreateDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a snapshot of a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBClusterSnapshot">REST API Reference for CreateDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateDBInstance(Amazon.DocDB.Model.CreateDBInstanceRequest)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBInstance service method.</param>
            
            <returns>The response from the CreateDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.AuthorizationNotFoundException">
            The specified CIDR IP or Amazon EC2 security group isn't authorized for the specified
            security group.
            
             
            <para>
            Amazon DocumentDB also might not be authorized to perform necessary actions on your
            behalf using IAM.
            </para>
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceAlreadyExistsException">
            You already have a instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSecurityGroupNotFoundException">
            <code>DBSecurityGroupName</code> doesn't refer to an existing security group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InstanceQuotaExceededException">
            The request would cause you to exceed the allowed number of instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException">
            The specified instance class isn't available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageTypeNotSupportedException">
            Storage of the specified <code>StorageType</code> can't be associated with the DB
            instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBInstance">REST API Reference for CreateDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateDBInstanceAsync(Amazon.DocDB.Model.CreateDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.AuthorizationNotFoundException">
            The specified CIDR IP or Amazon EC2 security group isn't authorized for the specified
            security group.
            
             
            <para>
            Amazon DocumentDB also might not be authorized to perform necessary actions on your
            behalf using IAM.
            </para>
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceAlreadyExistsException">
            You already have a instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSecurityGroupNotFoundException">
            <code>DBSecurityGroupName</code> doesn't refer to an existing security group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InstanceQuotaExceededException">
            The request would cause you to exceed the allowed number of instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException">
            The specified instance class isn't available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageTypeNotSupportedException">
            Storage of the specified <code>StorageType</code> can't be associated with the DB
            instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBInstance">REST API Reference for CreateDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateDBSubnetGroup(Amazon.DocDB.Model.CreateDBSubnetGroupRequest)">
            <summary>
            Creates a new subnet group. subnet groups must contain at least one subnet in at least
            two Availability Zones in the Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBSubnetGroup service method.</param>
            
            <returns>The response from the CreateDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException">
            <code>DBSubnetGroupName</code> is already being used by an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException">
            The request would cause you to exceed the allowed number of subnet groups.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetQuotaExceededException">
            The request would cause you to exceed the allowed number of subnets in a subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBSubnetGroup">REST API Reference for CreateDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateDBSubnetGroupAsync(Amazon.DocDB.Model.CreateDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new subnet group. subnet groups must contain at least one subnet in at least
            two Availability Zones in the Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException">
            <code>DBSubnetGroupName</code> is already being used by an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException">
            The request would cause you to exceed the allowed number of subnet groups.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetQuotaExceededException">
            The request would cause you to exceed the allowed number of subnets in a subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBSubnetGroup">REST API Reference for CreateDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateEventSubscription(Amazon.DocDB.Model.CreateEventSubscriptionRequest)">
            <summary>
            Creates an Amazon DocumentDB event notification subscription. This action requires
            a topic Amazon Resource Name (ARN) created by using the Amazon DocumentDB console,
            the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon SNS, you
            must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed
            in the Amazon SNS console.
            
             
            <para>
            You can specify the type of source (<code>SourceType</code>) that you want to be notified
            of. You can also provide a list of Amazon DocumentDB sources (<code>SourceIds</code>)
            that trigger the events, and you can provide a list of event categories (<code>EventCategories</code>)
            for events that you want to be notified of. For example, you can specify <code>SourceType
            = db-instance</code>, <code>SourceIds = mydbinstance1, mydbinstance2</code> and <code>EventCategories
            = Availability, Backup</code>.
            </para>
             
            <para>
            If you specify both the <code>SourceType</code> and <code>SourceIds</code> (such as
            <code>SourceType = db-instance</code> and <code>SourceIdentifier = myDBInstance1</code>),
            you are notified of all the <code>db-instance</code> events for the specified source.
            If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>,
            you receive notice of the events for that source type for all your Amazon DocumentDB
            sources. If you do not specify either the <code>SourceType</code> or the <code>SourceIdentifier</code>,
            you are notified of events generated from all Amazon DocumentDB sources belonging
            to your customer account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventSubscription service method.</param>
            
            <returns>The response from the CreateEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException">
            You have reached the maximum number of event subscriptions.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSInvalidTopicException">
            Amazon SNS has responded that there is a problem with the specified topic.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSNoAuthorizationException">
            You do not have permission to publish to the SNS topic Amazon Resource Name (ARN).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSTopicArnNotFoundException">
            The SNS topic Amazon Resource Name (ARN) does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionAlreadyExistException">
            The provided subscription name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException">
            The provided category does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateEventSubscription">REST API Reference for CreateEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateEventSubscriptionAsync(Amazon.DocDB.Model.CreateEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon DocumentDB event notification subscription. This action requires
            a topic Amazon Resource Name (ARN) created by using the Amazon DocumentDB console,
            the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon SNS, you
            must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed
            in the Amazon SNS console.
            
             
            <para>
            You can specify the type of source (<code>SourceType</code>) that you want to be notified
            of. You can also provide a list of Amazon DocumentDB sources (<code>SourceIds</code>)
            that trigger the events, and you can provide a list of event categories (<code>EventCategories</code>)
            for events that you want to be notified of. For example, you can specify <code>SourceType
            = db-instance</code>, <code>SourceIds = mydbinstance1, mydbinstance2</code> and <code>EventCategories
            = Availability, Backup</code>.
            </para>
             
            <para>
            If you specify both the <code>SourceType</code> and <code>SourceIds</code> (such as
            <code>SourceType = db-instance</code> and <code>SourceIdentifier = myDBInstance1</code>),
            you are notified of all the <code>db-instance</code> events for the specified source.
            If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>,
            you receive notice of the events for that source type for all your Amazon DocumentDB
            sources. If you do not specify either the <code>SourceType</code> or the <code>SourceIdentifier</code>,
            you are notified of events generated from all Amazon DocumentDB sources belonging
            to your customer account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException">
            You have reached the maximum number of event subscriptions.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSInvalidTopicException">
            Amazon SNS has responded that there is a problem with the specified topic.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSNoAuthorizationException">
            You do not have permission to publish to the SNS topic Amazon Resource Name (ARN).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSTopicArnNotFoundException">
            The SNS topic Amazon Resource Name (ARN) does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionAlreadyExistException">
            The provided subscription name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException">
            The provided category does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateEventSubscription">REST API Reference for CreateEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateGlobalCluster(Amazon.DocDB.Model.CreateGlobalClusterRequest)">
            <summary>
            Creates an Amazon DocumentDB global cluster that can span multiple multiple Regions.
            The global cluster contains one primary cluster with read-write capability, and up-to
            give read-only secondary clusters. Global clusters uses storage-based fast replication
            across regions with latencies less than one second, using dedicated infrastructure
            with no impact to your workload’s performance.
            
              
            <para>
            You can create a global cluster that is initially empty, and then add a primary and
            a secondary to it. Or you can specify an existing cluster during the create operation,
            and this cluster becomes the primary of the global cluster. 
            </para>
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGlobalCluster service method.</param>
            
            <returns>The response from the CreateGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException">
            The <code>GlobalClusterIdentifier</code> already exists. Choose a new global cluster
            identifier (unique name) to create a new global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterQuotaExceededException">
            The number of global clusters for this account is already at the maximum allowed.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateGlobalCluster">REST API Reference for CreateGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.CreateGlobalClusterAsync(Amazon.DocDB.Model.CreateGlobalClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon DocumentDB global cluster that can span multiple multiple Regions.
            The global cluster contains one primary cluster with read-write capability, and up-to
            give read-only secondary clusters. Global clusters uses storage-based fast replication
            across regions with latencies less than one second, using dedicated infrastructure
            with no impact to your workload’s performance.
            
              
            <para>
            You can create a global cluster that is initially empty, and then add a primary and
            a secondary to it. Or you can specify an existing cluster during the create operation,
            and this cluster becomes the primary of the global cluster. 
            </para>
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGlobalCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException">
            The <code>GlobalClusterIdentifier</code> already exists. Choose a new global cluster
            identifier (unique name) to create a new global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterQuotaExceededException">
            The number of global clusters for this account is already at the maximum allowed.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateGlobalCluster">REST API Reference for CreateGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteDBCluster(Amazon.DocDB.Model.DeleteDBClusterRequest)">
            <summary>
            Deletes a previously provisioned cluster. When you delete a cluster, all automated
            backups for that cluster are deleted and can't be recovered. Manual DB cluster snapshots
            of the specified cluster are not deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBCluster service method.</param>
            
            <returns>The response from the DeleteDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBCluster">REST API Reference for DeleteDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteDBClusterAsync(Amazon.DocDB.Model.DeleteDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a previously provisioned cluster. When you delete a cluster, all automated
            backups for that cluster are deleted and can't be recovered. Manual DB cluster snapshots
            of the specified cluster are not deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBCluster">REST API Reference for DeleteDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteDBClusterParameterGroup(Amazon.DocDB.Model.DeleteDBClusterParameterGroupRequest)">
            <summary>
            Deletes a specified cluster parameter group. The cluster parameter group to be deleted
            can't be associated with any clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterParameterGroup service method.</param>
            
            <returns>The response from the DeleteDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBClusterParameterGroup">REST API Reference for DeleteDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteDBClusterParameterGroupAsync(Amazon.DocDB.Model.DeleteDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified cluster parameter group. The cluster parameter group to be deleted
            can't be associated with any clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBClusterParameterGroup">REST API Reference for DeleteDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteDBClusterSnapshot(Amazon.DocDB.Model.DeleteDBClusterSnapshotRequest)">
            <summary>
            Deletes a cluster snapshot. If the snapshot is being copied, the copy operation is
            terminated.
            
             <note> 
            <para>
            The cluster snapshot must be in the <code>available</code> state to be deleted.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterSnapshot service method.</param>
            
            <returns>The response from the DeleteDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBClusterSnapshot">REST API Reference for DeleteDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteDBClusterSnapshotAsync(Amazon.DocDB.Model.DeleteDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a cluster snapshot. If the snapshot is being copied, the copy operation is
            terminated.
            
             <note> 
            <para>
            The cluster snapshot must be in the <code>available</code> state to be deleted.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBClusterSnapshot">REST API Reference for DeleteDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteDBInstance(Amazon.DocDB.Model.DeleteDBInstanceRequest)">
            <summary>
            Deletes a previously provisioned instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBInstance service method.</param>
            
            <returns>The response from the DeleteDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException">
            <code>DBSnapshotIdentifier</code> is already being used by an existing snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBInstance">REST API Reference for DeleteDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteDBInstanceAsync(Amazon.DocDB.Model.DeleteDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a previously provisioned instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException">
            <code>DBSnapshotIdentifier</code> is already being used by an existing snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBInstance">REST API Reference for DeleteDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteDBSubnetGroup(Amazon.DocDB.Model.DeleteDBSubnetGroupRequest)">
            <summary>
            Deletes a subnet group.
            
             <note> 
            <para>
            The specified database subnet group must not be associated with any DB instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBSubnetGroup service method.</param>
            
            <returns>The response from the DeleteDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetStateException">
            The subnet isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBSubnetGroup">REST API Reference for DeleteDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteDBSubnetGroupAsync(Amazon.DocDB.Model.DeleteDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a subnet group.
            
             <note> 
            <para>
            The specified database subnet group must not be associated with any DB instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetStateException">
            The subnet isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBSubnetGroup">REST API Reference for DeleteDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteEventSubscription(Amazon.DocDB.Model.DeleteEventSubscriptionRequest)">
            <summary>
            Deletes an Amazon DocumentDB event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventSubscription service method.</param>
            
            <returns>The response from the DeleteEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.InvalidEventSubscriptionStateException">
            Someone else might be modifying a subscription. Wait a few seconds, and try again.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteEventSubscription">REST API Reference for DeleteEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteEventSubscriptionAsync(Amazon.DocDB.Model.DeleteEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon DocumentDB event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.InvalidEventSubscriptionStateException">
            Someone else might be modifying a subscription. Wait a few seconds, and try again.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteEventSubscription">REST API Reference for DeleteEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteGlobalCluster(Amazon.DocDB.Model.DeleteGlobalClusterRequest)">
            <summary>
            Deletes a global cluster. The primary and secondary clusters must already be detached
            or deleted before attempting to delete a global cluster.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGlobalCluster service method.</param>
            
            <returns>The response from the DeleteGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteGlobalCluster">REST API Reference for DeleteGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DeleteGlobalClusterAsync(Amazon.DocDB.Model.DeleteGlobalClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a global cluster. The primary and secondary clusters must already be detached
            or deleted before attempting to delete a global cluster.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGlobalCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteGlobalCluster">REST API Reference for DeleteGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeCertificates(Amazon.DocDB.Model.DescribeCertificatesRequest)">
            <summary>
            Returns a list of certificate authority (CA) certificates provided by Amazon DocumentDB
            for this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificates service method.</param>
            
            <returns>The response from the DescribeCertificates service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.CertificateNotFoundException">
            <code>CertificateIdentifier</code> doesn't refer to an existing certificate.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeCertificates">REST API Reference for DescribeCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeCertificatesAsync(Amazon.DocDB.Model.DescribeCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of certificate authority (CA) certificates provided by Amazon DocumentDB
            for this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificates service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.CertificateNotFoundException">
            <code>CertificateIdentifier</code> doesn't refer to an existing certificate.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeCertificates">REST API Reference for DescribeCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBClusterParameterGroups(Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest)">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list contains only the description of the specified cluster
            parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameterGroups service method.</param>
            
            <returns>The response from the DescribeDBClusterParameterGroups service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameterGroups">REST API Reference for DescribeDBClusterParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBClusterParameterGroupsAsync(Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list contains only the description of the specified cluster
            parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameterGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterParameterGroups service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameterGroups">REST API Reference for DescribeDBClusterParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBClusterParameters(Amazon.DocDB.Model.DescribeDBClusterParametersRequest)">
            <summary>
            Returns the detailed parameter list for a particular cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameters service method.</param>
            
            <returns>The response from the DescribeDBClusterParameters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameters">REST API Reference for DescribeDBClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBClusterParametersAsync(Amazon.DocDB.Model.DescribeDBClusterParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the detailed parameter list for a particular cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterParameters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameters">REST API Reference for DescribeDBClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBClusters(Amazon.DocDB.Model.DescribeDBClustersRequest)">
            <summary>
            Returns information about provisioned Amazon DocumentDB clusters. This API operation
            supports pagination. For certain management features such as cluster and instance
            lifecycle management, Amazon DocumentDB leverages operational technology that is shared
            with Amazon RDS and Amazon Neptune. Use the <code>filterName=engine,Values=docdb</code>
            filter parameter to return only Amazon DocumentDB clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusters service method.</param>
            
            <returns>The response from the DescribeDBClusters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusters">REST API Reference for DescribeDBClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBClustersAsync(Amazon.DocDB.Model.DescribeDBClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about provisioned Amazon DocumentDB clusters. This API operation
            supports pagination. For certain management features such as cluster and instance
            lifecycle management, Amazon DocumentDB leverages operational technology that is shared
            with Amazon RDS and Amazon Neptune. Use the <code>filterName=engine,Values=docdb</code>
            filter parameter to return only Amazon DocumentDB clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusters">REST API Reference for DescribeDBClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBClusterSnapshotAttributes(Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesRequest)">
            <summary>
            Returns a list of cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When you share snapshots with other accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the accounts that
            are authorized to copy or restore the manual cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual cluster snapshot is public and can be copied or restored by all accounts.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshotAttributes service method.</param>
            
            <returns>The response from the DescribeDBClusterSnapshotAttributes service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshotAttributes">REST API Reference for DescribeDBClusterSnapshotAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBClusterSnapshotAttributesAsync(Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When you share snapshots with other accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the accounts that
            are authorized to copy or restore the manual cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual cluster snapshot is public and can be copied or restored by all accounts.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshotAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterSnapshotAttributes service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshotAttributes">REST API Reference for DescribeDBClusterSnapshotAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBClusterSnapshots(Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest)">
            <summary>
            Returns information about cluster snapshots. This API operation supports pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshots service method.</param>
            
            <returns>The response from the DescribeDBClusterSnapshots service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshots">REST API Reference for DescribeDBClusterSnapshots Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBClusterSnapshotsAsync(Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about cluster snapshots. This API operation supports pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshots service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterSnapshots service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshots">REST API Reference for DescribeDBClusterSnapshots Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBEngineVersions(Amazon.DocDB.Model.DescribeDBEngineVersionsRequest)">
            <summary>
            Returns a list of the available engines.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBEngineVersions service method.</param>
            
            <returns>The response from the DescribeDBEngineVersions service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBEngineVersions">REST API Reference for DescribeDBEngineVersions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBEngineVersionsAsync(Amazon.DocDB.Model.DescribeDBEngineVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the available engines.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBEngineVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBEngineVersions service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBEngineVersions">REST API Reference for DescribeDBEngineVersions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBInstances(Amazon.DocDB.Model.DescribeDBInstancesRequest)">
            <summary>
            Returns information about provisioned Amazon DocumentDB instances. This API supports
            pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBInstances service method.</param>
            
            <returns>The response from the DescribeDBInstances service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBInstances">REST API Reference for DescribeDBInstances Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBInstancesAsync(Amazon.DocDB.Model.DescribeDBInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about provisioned Amazon DocumentDB instances. This API supports
            pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBInstances service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBInstances">REST API Reference for DescribeDBInstances Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBSubnetGroups(Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest)">
            <summary>
            Returns a list of <code>DBSubnetGroup</code> descriptions. If a <code>DBSubnetGroupName</code>
            is specified, the list will contain only the descriptions of the specified <code>DBSubnetGroup</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBSubnetGroups service method.</param>
            
            <returns>The response from the DescribeDBSubnetGroups service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBSubnetGroups">REST API Reference for DescribeDBSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeDBSubnetGroupsAsync(Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <code>DBSubnetGroup</code> descriptions. If a <code>DBSubnetGroupName</code>
            is specified, the list will contain only the descriptions of the specified <code>DBSubnetGroup</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBSubnetGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBSubnetGroups service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBSubnetGroups">REST API Reference for DescribeDBSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeEngineDefaultClusterParameters(Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersRequest)">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultClusterParameters service method.</param>
            
            <returns>The response from the DescribeEngineDefaultClusterParameters service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEngineDefaultClusterParameters">REST API Reference for DescribeEngineDefaultClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeEngineDefaultClusterParametersAsync(Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultClusterParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEngineDefaultClusterParameters service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEngineDefaultClusterParameters">REST API Reference for DescribeEngineDefaultClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeEventCategories(Amazon.DocDB.Model.DescribeEventCategoriesRequest)">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventCategories service method.</param>
            
            <returns>The response from the DescribeEventCategories service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventCategories">REST API Reference for DescribeEventCategories Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeEventCategoriesAsync(Amazon.DocDB.Model.DescribeEventCategoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventCategories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventCategories service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventCategories">REST API Reference for DescribeEventCategories Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeEvents(Amazon.DocDB.Model.DescribeEventsRequest)">
            <summary>
            Returns events related to instances, security groups, snapshots, and DB parameter
            groups for the past 14 days. You can obtain events specific to a particular DB instance,
            security group, snapshot, or parameter group by providing the name as a parameter.
            By default, the events of the past hour are returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            
            <returns>The response from the DescribeEvents service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeEventsAsync(Amazon.DocDB.Model.DescribeEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns events related to instances, security groups, snapshots, and DB parameter
            groups for the past 14 days. You can obtain events specific to a particular DB instance,
            security group, snapshot, or parameter group by providing the name as a parameter.
            By default, the events of the past hour are returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEvents service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeEventSubscriptions(Amazon.DocDB.Model.DescribeEventSubscriptionsRequest)">
            <summary>
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>,
            <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.
            
             
            <para>
            If you specify a <code>SubscriptionName</code>, lists the description for that subscription.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSubscriptions service method.</param>
            
            <returns>The response from the DescribeEventSubscriptions service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventSubscriptions">REST API Reference for DescribeEventSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeEventSubscriptionsAsync(Amazon.DocDB.Model.DescribeEventSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>,
            <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.
            
             
            <para>
            If you specify a <code>SubscriptionName</code>, lists the description for that subscription.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSubscriptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventSubscriptions service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventSubscriptions">REST API Reference for DescribeEventSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeGlobalClusters(Amazon.DocDB.Model.DescribeGlobalClustersRequest)">
            <summary>
            Returns information about Amazon DocumentDB global clusters. This API supports pagination.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeGlobalClusters service method.</param>
            
            <returns>The response from the DescribeGlobalClusters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeGlobalClusters">REST API Reference for DescribeGlobalClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeGlobalClustersAsync(Amazon.DocDB.Model.DescribeGlobalClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about Amazon DocumentDB global clusters. This API supports pagination.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeGlobalClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeGlobalClusters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeGlobalClusters">REST API Reference for DescribeGlobalClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeOrderableDBInstanceOptions(Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest)">
            <summary>
            Returns a list of orderable instance options for the specified engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeOrderableDBInstanceOptions service method.</param>
            
            <returns>The response from the DescribeOrderableDBInstanceOptions service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeOrderableDBInstanceOptions">REST API Reference for DescribeOrderableDBInstanceOptions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribeOrderableDBInstanceOptionsAsync(Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of orderable instance options for the specified engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeOrderableDBInstanceOptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeOrderableDBInstanceOptions service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeOrderableDBInstanceOptions">REST API Reference for DescribeOrderableDBInstanceOptions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribePendingMaintenanceActions(Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest)">
            <summary>
            Returns a list of resources (for example, instances) that have at least one pending
            maintenance action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePendingMaintenanceActions service method.</param>
            
            <returns>The response from the DescribePendingMaintenanceActions service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribePendingMaintenanceActions">REST API Reference for DescribePendingMaintenanceActions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.DescribePendingMaintenanceActionsAsync(Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of resources (for example, instances) that have at least one pending
            maintenance action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePendingMaintenanceActions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePendingMaintenanceActions service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribePendingMaintenanceActions">REST API Reference for DescribePendingMaintenanceActions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.FailoverDBCluster(Amazon.DocDB.Model.FailoverDBClusterRequest)">
            <summary>
            Forces a failover for a cluster.
            
             
            <para>
            A failover for a cluster promotes one of the Amazon DocumentDB replicas (read-only
            instances) in the cluster to be the primary instance (the cluster writer).
            </para>
             
            <para>
            If the primary instance fails, Amazon DocumentDB automatically fails over to an Amazon
            DocumentDB replica, if one exists. You can force a failover when you want to simulate
            a failure of a primary instance for testing.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FailoverDBCluster service method.</param>
            
            <returns>The response from the FailoverDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/FailoverDBCluster">REST API Reference for FailoverDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.FailoverDBClusterAsync(Amazon.DocDB.Model.FailoverDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Forces a failover for a cluster.
            
             
            <para>
            A failover for a cluster promotes one of the Amazon DocumentDB replicas (read-only
            instances) in the cluster to be the primary instance (the cluster writer).
            </para>
             
            <para>
            If the primary instance fails, Amazon DocumentDB automatically fails over to an Amazon
            DocumentDB replica, if one exists. You can force a failover when you want to simulate
            a failure of a primary instance for testing.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FailoverDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the FailoverDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/FailoverDBCluster">REST API Reference for FailoverDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ListTagsForResource(Amazon.DocDB.Model.ListTagsForResourceRequest)">
            <summary>
            Lists all tags on an Amazon DocumentDB resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ListTagsForResourceAsync(Amazon.DocDB.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all tags on an Amazon DocumentDB resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyDBCluster(Amazon.DocDB.Model.ModifyDBClusterRequest)">
            <summary>
            Modifies a setting for an Amazon DocumentDB cluster. You can change one or more database
            configuration parameters by specifying these parameters and the new values in the
            request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBCluster service method.</param>
            
            <returns>The response from the ModifyDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException">
            <code>DBClusterParameterGroupName</code> doesn't refer to an existing cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException">
            The state of the security group doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBCluster">REST API Reference for ModifyDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyDBClusterAsync(Amazon.DocDB.Model.ModifyDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies a setting for an Amazon DocumentDB cluster. You can change one or more database
            configuration parameters by specifying these parameters and the new values in the
            request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException">
            <code>DBClusterParameterGroupName</code> doesn't refer to an existing cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException">
            The state of the security group doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBCluster">REST API Reference for ModifyDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyDBClusterParameterGroup(Amazon.DocDB.Model.ModifyDBClusterParameterGroupRequest)">
            <summary>
            Modifies the parameters of a cluster parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request. 
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot or maintenance window before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you create a cluster parameter group, you should wait at least 5 minutes before
            creating your first cluster that uses that cluster parameter group as the default
            parameter group. This allows Amazon DocumentDB to fully complete the create action
            before the parameter group is used as the default for a new cluster. This step is
            especially important for parameters that are critical when creating the default database
            for a cluster, such as the character set for the default database defined by the <code>character_set_database</code>
            parameter.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterParameterGroup service method.</param>
            
            <returns>The response from the ModifyDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBClusterParameterGroup">REST API Reference for ModifyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyDBClusterParameterGroupAsync(Amazon.DocDB.Model.ModifyDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a cluster parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request. 
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot or maintenance window before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you create a cluster parameter group, you should wait at least 5 minutes before
            creating your first cluster that uses that cluster parameter group as the default
            parameter group. This allows Amazon DocumentDB to fully complete the create action
            before the parameter group is used as the default for a new cluster. This step is
            especially important for parameters that are critical when creating the default database
            for a cluster, such as the character set for the default database defined by the <code>character_set_database</code>
            parameter.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBClusterParameterGroup">REST API Reference for ModifyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyDBClusterSnapshotAttribute(Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeRequest)">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            cluster snapshot.
            
             
            <para>
            To share a manual cluster snapshot with other accounts, specify <code>restore</code>
            as the <code>AttributeName</code>, and use the <code>ValuesToAdd</code> parameter
            to add a list of IDs of the accounts that are authorized to restore the manual cluster
            snapshot. Use the value <code>all</code> to make the manual cluster snapshot public,
            which means that it can be copied or restored by all accounts. Do not add the <code>all</code>
            value for any manual cluster snapshots that contain private information that you don't
            want available to all accounts. If a manual cluster snapshot is encrypted, it can
            be shared, but only by specifying a list of authorized account IDs for the <code>ValuesToAdd</code>
            parameter. You can't use <code>all</code> as a value for that parameter in this case.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterSnapshotAttribute service method.</param>
            
            <returns>The response from the ModifyDBClusterSnapshotAttribute service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException">
            You have exceeded the maximum number of accounts that you can share a manual DB snapshot
            with.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBClusterSnapshotAttribute">REST API Reference for ModifyDBClusterSnapshotAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyDBClusterSnapshotAttributeAsync(Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            cluster snapshot.
            
             
            <para>
            To share a manual cluster snapshot with other accounts, specify <code>restore</code>
            as the <code>AttributeName</code>, and use the <code>ValuesToAdd</code> parameter
            to add a list of IDs of the accounts that are authorized to restore the manual cluster
            snapshot. Use the value <code>all</code> to make the manual cluster snapshot public,
            which means that it can be copied or restored by all accounts. Do not add the <code>all</code>
            value for any manual cluster snapshots that contain private information that you don't
            want available to all accounts. If a manual cluster snapshot is encrypted, it can
            be shared, but only by specifying a list of authorized account IDs for the <code>ValuesToAdd</code>
            parameter. You can't use <code>all</code> as a value for that parameter in this case.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterSnapshotAttribute service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBClusterSnapshotAttribute service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException">
            You have exceeded the maximum number of accounts that you can share a manual DB snapshot
            with.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBClusterSnapshotAttribute">REST API Reference for ModifyDBClusterSnapshotAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyDBInstance(Amazon.DocDB.Model.ModifyDBInstanceRequest)">
            <summary>
            Modifies settings for an instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBInstance service method.</param>
            
            <returns>The response from the ModifyDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.AuthorizationNotFoundException">
            The specified CIDR IP or Amazon EC2 security group isn't authorized for the specified
            security group.
            
             
            <para>
            Amazon DocumentDB also might not be authorized to perform necessary actions on your
            behalf using IAM.
            </para>
            </exception>
            <exception cref="T:Amazon.DocDB.Model.CertificateNotFoundException">
            <code>CertificateIdentifier</code> doesn't refer to an existing certificate.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceAlreadyExistsException">
            You already have a instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSecurityGroupNotFoundException">
            <code>DBSecurityGroupName</code> doesn't refer to an existing security group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBUpgradeDependencyFailureException">
            The upgrade failed because a resource that the depends on can't be modified.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException">
            The specified instance class isn't available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException">
            The state of the security group doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageTypeNotSupportedException">
            Storage of the specified <code>StorageType</code> can't be associated with the DB
            instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBInstance">REST API Reference for ModifyDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyDBInstanceAsync(Amazon.DocDB.Model.ModifyDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies settings for an instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.AuthorizationNotFoundException">
            The specified CIDR IP or Amazon EC2 security group isn't authorized for the specified
            security group.
            
             
            <para>
            Amazon DocumentDB also might not be authorized to perform necessary actions on your
            behalf using IAM.
            </para>
            </exception>
            <exception cref="T:Amazon.DocDB.Model.CertificateNotFoundException">
            <code>CertificateIdentifier</code> doesn't refer to an existing certificate.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceAlreadyExistsException">
            You already have a instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSecurityGroupNotFoundException">
            <code>DBSecurityGroupName</code> doesn't refer to an existing security group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBUpgradeDependencyFailureException">
            The upgrade failed because a resource that the depends on can't be modified.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException">
            The specified instance class isn't available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException">
            The state of the security group doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageTypeNotSupportedException">
            Storage of the specified <code>StorageType</code> can't be associated with the DB
            instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBInstance">REST API Reference for ModifyDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyDBSubnetGroup(Amazon.DocDB.Model.ModifyDBSubnetGroupRequest)">
            <summary>
            Modifies an existing subnet group. subnet groups must contain at least one subnet
            in at least two Availability Zones in the Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBSubnetGroup service method.</param>
            
            <returns>The response from the ModifyDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetQuotaExceededException">
            The request would cause you to exceed the allowed number of subnets in a subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubnetAlreadyInUseException">
            The subnet is already in use in the Availability Zone.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBSubnetGroup">REST API Reference for ModifyDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyDBSubnetGroupAsync(Amazon.DocDB.Model.ModifyDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing subnet group. subnet groups must contain at least one subnet
            in at least two Availability Zones in the Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetQuotaExceededException">
            The request would cause you to exceed the allowed number of subnets in a subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubnetAlreadyInUseException">
            The subnet is already in use in the Availability Zone.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBSubnetGroup">REST API Reference for ModifyDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyEventSubscription(Amazon.DocDB.Model.ModifyEventSubscriptionRequest)">
            <summary>
            Modifies an existing Amazon DocumentDB event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyEventSubscription service method.</param>
            
            <returns>The response from the ModifyEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException">
            You have reached the maximum number of event subscriptions.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSInvalidTopicException">
            Amazon SNS has responded that there is a problem with the specified topic.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSNoAuthorizationException">
            You do not have permission to publish to the SNS topic Amazon Resource Name (ARN).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSTopicArnNotFoundException">
            The SNS topic Amazon Resource Name (ARN) does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException">
            The provided category does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyEventSubscription">REST API Reference for ModifyEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyEventSubscriptionAsync(Amazon.DocDB.Model.ModifyEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing Amazon DocumentDB event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException">
            You have reached the maximum number of event subscriptions.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSInvalidTopicException">
            Amazon SNS has responded that there is a problem with the specified topic.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSNoAuthorizationException">
            You do not have permission to publish to the SNS topic Amazon Resource Name (ARN).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSTopicArnNotFoundException">
            The SNS topic Amazon Resource Name (ARN) does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException">
            The provided category does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyEventSubscription">REST API Reference for ModifyEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyGlobalCluster(Amazon.DocDB.Model.ModifyGlobalClusterRequest)">
            <summary>
            Modify a setting for an Amazon DocumentDB global cluster. You can change one or more
            configuration parameters (for example: deletion protection), or the global cluster
            identifier by specifying these parameters and the new values in the request.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyGlobalCluster service method.</param>
            
            <returns>The response from the ModifyGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyGlobalCluster">REST API Reference for ModifyGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ModifyGlobalClusterAsync(Amazon.DocDB.Model.ModifyGlobalClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Modify a setting for an Amazon DocumentDB global cluster. You can change one or more
            configuration parameters (for example: deletion protection), or the global cluster
            identifier by specifying these parameters and the new values in the request.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyGlobalCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyGlobalCluster">REST API Reference for ModifyGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RebootDBInstance(Amazon.DocDB.Model.RebootDBInstanceRequest)">
            <summary>
            You might need to reboot your instance, usually for maintenance reasons. For example,
            if you make certain changes, or if you change the cluster parameter group that is
            associated with the instance, you must reboot the instance for the changes to take
            effect. 
            
             
            <para>
            Rebooting an instance restarts the database engine service. Rebooting an instance
            results in a momentary outage, during which the instance status is set to <i>rebooting</i>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootDBInstance service method.</param>
            
            <returns>The response from the RebootDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RebootDBInstance">REST API Reference for RebootDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RebootDBInstanceAsync(Amazon.DocDB.Model.RebootDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            You might need to reboot your instance, usually for maintenance reasons. For example,
            if you make certain changes, or if you change the cluster parameter group that is
            associated with the instance, you must reboot the instance for the changes to take
            effect. 
            
             
            <para>
            Rebooting an instance restarts the database engine service. Rebooting an instance
            results in a momentary outage, during which the instance status is set to <i>rebooting</i>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RebootDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RebootDBInstance">REST API Reference for RebootDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RemoveFromGlobalCluster(Amazon.DocDB.Model.RemoveFromGlobalClusterRequest)">
            <summary>
            Detaches an Amazon DocumentDB secondary cluster from a global cluster. The cluster
            becomes a standalone cluster with read-write capability instead of being read-only
            and receiving data from a primary in a different region. 
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveFromGlobalCluster service method.</param>
            
            <returns>The response from the RemoveFromGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveFromGlobalCluster">REST API Reference for RemoveFromGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RemoveFromGlobalClusterAsync(Amazon.DocDB.Model.RemoveFromGlobalClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Detaches an Amazon DocumentDB secondary cluster from a global cluster. The cluster
            becomes a standalone cluster with read-write capability instead of being read-only
            and receiving data from a primary in a different region. 
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveFromGlobalCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveFromGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveFromGlobalCluster">REST API Reference for RemoveFromGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RemoveSourceIdentifierFromSubscription(Amazon.DocDB.Model.RemoveSourceIdentifierFromSubscriptionRequest)">
            <summary>
            Removes a source identifier from an existing Amazon DocumentDB event notification
            subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveSourceIdentifierFromSubscription service method.</param>
            
            <returns>The response from the RemoveSourceIdentifierFromSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveSourceIdentifierFromSubscription">REST API Reference for RemoveSourceIdentifierFromSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RemoveSourceIdentifierFromSubscriptionAsync(Amazon.DocDB.Model.RemoveSourceIdentifierFromSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a source identifier from an existing Amazon DocumentDB event notification
            subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveSourceIdentifierFromSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveSourceIdentifierFromSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveSourceIdentifierFromSubscription">REST API Reference for RemoveSourceIdentifierFromSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RemoveTagsFromResource(Amazon.DocDB.Model.RemoveTagsFromResourceRequest)">
            <summary>
            Removes metadata tags from an Amazon DocumentDB resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromResource service method.</param>
            
            <returns>The response from the RemoveTagsFromResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveTagsFromResource">REST API Reference for RemoveTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RemoveTagsFromResourceAsync(Amazon.DocDB.Model.RemoveTagsFromResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes metadata tags from an Amazon DocumentDB resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveTagsFromResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveTagsFromResource">REST API Reference for RemoveTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ResetDBClusterParameterGroup(Amazon.DocDB.Model.ResetDBClusterParameterGroupRequest)">
            <summary>
            Modifies the parameters of a cluster parameter group to the default value. To reset
            specific parameters, submit a list of the following: <code>ParameterName</code> and
            <code>ApplyMethod</code>. To reset the entire cluster parameter group, specify the
            <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
            
             
            <para>
             When you reset the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            reboot.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBClusterParameterGroup service method.</param>
            
            <returns>The response from the ResetDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ResetDBClusterParameterGroup">REST API Reference for ResetDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.ResetDBClusterParameterGroupAsync(Amazon.DocDB.Model.ResetDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a cluster parameter group to the default value. To reset
            specific parameters, submit a list of the following: <code>ParameterName</code> and
            <code>ApplyMethod</code>. To reset the entire cluster parameter group, specify the
            <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
            
             
            <para>
             When you reset the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            reboot.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResetDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ResetDBClusterParameterGroup">REST API Reference for ResetDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RestoreDBClusterFromSnapshot(Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest)">
            <summary>
            Creates a new cluster from a snapshot or cluster snapshot.
            
             
            <para>
            If a snapshot is specified, the target cluster is created from the source DB snapshot
            with a default configuration and default security group.
            </para>
             
            <para>
            If a cluster snapshot is specified, the target cluster is created from the source
            cluster restore point with the same configuration as the original source DB cluster,
            except that the new cluster is created with the default security group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterFromSnapshot service method.</param>
            
            <returns>The response from the RestoreDBClusterFromSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBClusterCapacityException">
            The cluster doesn't have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSnapshotStateException">
            The state of the snapshot doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidRestoreException">
            You cannot restore from a virtual private cloud (VPC) backup to a non-VPC DB instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RestoreDBClusterFromSnapshot">REST API Reference for RestoreDBClusterFromSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RestoreDBClusterFromSnapshotAsync(Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new cluster from a snapshot or cluster snapshot.
            
             
            <para>
            If a snapshot is specified, the target cluster is created from the source DB snapshot
            with a default configuration and default security group.
            </para>
             
            <para>
            If a cluster snapshot is specified, the target cluster is created from the source
            cluster restore point with the same configuration as the original source DB cluster,
            except that the new cluster is created with the default security group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterFromSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreDBClusterFromSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBClusterCapacityException">
            The cluster doesn't have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSnapshotStateException">
            The state of the snapshot doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidRestoreException">
            You cannot restore from a virtual private cloud (VPC) backup to a non-VPC DB instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RestoreDBClusterFromSnapshot">REST API Reference for RestoreDBClusterFromSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RestoreDBClusterToPointInTime(Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest)">
            <summary>
            Restores a cluster to an arbitrary point in time. Users can restore to any point in
            time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target cluster is created from the source cluster with the same configuration
            as the original cluster, except that the new cluster is created with the default security
            group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterToPointInTime service method.</param>
            
            <returns>The response from the RestoreDBClusterToPointInTime service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBClusterCapacityException">
            The cluster doesn't have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSnapshotStateException">
            The state of the snapshot doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidRestoreException">
            You cannot restore from a virtual private cloud (VPC) backup to a non-VPC DB instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RestoreDBClusterToPointInTime">REST API Reference for RestoreDBClusterToPointInTime Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.RestoreDBClusterToPointInTimeAsync(Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest,System.Threading.CancellationToken)">
            <summary>
            Restores a cluster to an arbitrary point in time. Users can restore to any point in
            time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target cluster is created from the source cluster with the same configuration
            as the original cluster, except that the new cluster is created with the default security
            group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterToPointInTime service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreDBClusterToPointInTime service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBClusterCapacityException">
            The cluster doesn't have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSnapshotStateException">
            The state of the snapshot doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidRestoreException">
            You cannot restore from a virtual private cloud (VPC) backup to a non-VPC DB instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RestoreDBClusterToPointInTime">REST API Reference for RestoreDBClusterToPointInTime Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.StartDBCluster(Amazon.DocDB.Model.StartDBClusterRequest)">
            <summary>
            Restarts the stopped cluster that is specified by <code>DBClusterIdentifier</code>.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDBCluster service method.</param>
            
            <returns>The response from the StartDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/StartDBCluster">REST API Reference for StartDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.StartDBClusterAsync(Amazon.DocDB.Model.StartDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Restarts the stopped cluster that is specified by <code>DBClusterIdentifier</code>.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/StartDBCluster">REST API Reference for StartDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.StopDBCluster(Amazon.DocDB.Model.StopDBClusterRequest)">
            <summary>
            Stops the running cluster that is specified by <code>DBClusterIdentifier</code>. The
            cluster must be in the <i>available</i> state. For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDBCluster service method.</param>
            
            <returns>The response from the StopDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/StopDBCluster">REST API Reference for StopDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.AmazonDocDBClient.StopDBClusterAsync(Amazon.DocDB.Model.StopDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Stops the running cluster that is specified by <code>DBClusterIdentifier</code>. The
            cluster must be in the <i>available</i> state. For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/StopDBCluster">REST API Reference for StopDBCluster Operation</seealso>
        </member>
        <member name="T:Amazon.DocDB.IAmazonDocDB">
             <summary>
             Interface for accessing DocDB
            
             Amazon DocumentDB API documentation
             </summary>
        </member>
        <member name="P:Amazon.DocDB.IAmazonDocDB.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.AddSourceIdentifierToSubscription(Amazon.DocDB.Model.AddSourceIdentifierToSubscriptionRequest)">
            <summary>
            Adds a source identifier to an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddSourceIdentifierToSubscription service method.</param>
            
            <returns>The response from the AddSourceIdentifierToSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/AddSourceIdentifierToSubscription">REST API Reference for AddSourceIdentifierToSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.AddSourceIdentifierToSubscriptionAsync(Amazon.DocDB.Model.AddSourceIdentifierToSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a source identifier to an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddSourceIdentifierToSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddSourceIdentifierToSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/AddSourceIdentifierToSubscription">REST API Reference for AddSourceIdentifierToSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.AddTagsToResource(Amazon.DocDB.Model.AddTagsToResourceRequest)">
            <summary>
            Adds metadata tags to an Amazon DocumentDB resource. You can use these tags with cost
            allocation reporting to track costs that are associated with Amazon DocumentDB resources
            or in a <code>Condition</code> statement in an Identity and Access Management (IAM)
            policy for Amazon DocumentDB.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToResource service method.</param>
            
            <returns>The response from the AddTagsToResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/AddTagsToResource">REST API Reference for AddTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.AddTagsToResourceAsync(Amazon.DocDB.Model.AddTagsToResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds metadata tags to an Amazon DocumentDB resource. You can use these tags with cost
            allocation reporting to track costs that are associated with Amazon DocumentDB resources
            or in a <code>Condition</code> statement in an Identity and Access Management (IAM)
            policy for Amazon DocumentDB.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddTagsToResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/AddTagsToResource">REST API Reference for AddTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ApplyPendingMaintenanceAction(Amazon.DocDB.Model.ApplyPendingMaintenanceActionRequest)">
            <summary>
            Applies a pending maintenance action to a resource (for example, to an Amazon DocumentDB
            instance).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ApplyPendingMaintenanceAction service method.</param>
            
            <returns>The response from the ApplyPendingMaintenanceAction service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ApplyPendingMaintenanceAction">REST API Reference for ApplyPendingMaintenanceAction Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ApplyPendingMaintenanceActionAsync(Amazon.DocDB.Model.ApplyPendingMaintenanceActionRequest,System.Threading.CancellationToken)">
            <summary>
            Applies a pending maintenance action to a resource (for example, to an Amazon DocumentDB
            instance).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ApplyPendingMaintenanceAction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ApplyPendingMaintenanceAction service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ApplyPendingMaintenanceAction">REST API Reference for ApplyPendingMaintenanceAction Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CopyDBClusterParameterGroup(Amazon.DocDB.Model.CopyDBClusterParameterGroupRequest)">
            <summary>
            Copies the specified cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterParameterGroup service method.</param>
            
            <returns>The response from the CopyDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException">
            A parameter group with the same name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException">
            This request would cause you to exceed the allowed number of parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CopyDBClusterParameterGroup">REST API Reference for CopyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CopyDBClusterParameterGroupAsync(Amazon.DocDB.Model.CopyDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Copies the specified cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException">
            A parameter group with the same name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException">
            This request would cause you to exceed the allowed number of parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CopyDBClusterParameterGroup">REST API Reference for CopyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CopyDBClusterSnapshot(Amazon.DocDB.Model.CopyDBClusterSnapshotRequest)">
            <summary>
            Copies a snapshot of a cluster.
            
             
            <para>
            To copy a cluster snapshot from a shared manual cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared cluster snapshot. You can only
            copy a shared DB cluster snapshot, whether encrypted or not, in the same Region.
            </para>
             
            <para>
            To cancel the copy operation after it is in progress, delete the target cluster snapshot
            identified by <code>TargetDBClusterSnapshotIdentifier</code> while that cluster snapshot
            is in the <i>copying</i> status.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterSnapshot service method.</param>
            
            <returns>The response from the CopyDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CopyDBClusterSnapshot">REST API Reference for CopyDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CopyDBClusterSnapshotAsync(Amazon.DocDB.Model.CopyDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Copies a snapshot of a cluster.
            
             
            <para>
            To copy a cluster snapshot from a shared manual cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared cluster snapshot. You can only
            copy a shared DB cluster snapshot, whether encrypted or not, in the same Region.
            </para>
             
            <para>
            To cancel the copy operation after it is in progress, delete the target cluster snapshot
            identified by <code>TargetDBClusterSnapshotIdentifier</code> while that cluster snapshot
            is in the <i>copying</i> status.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CopyDBClusterSnapshot">REST API Reference for CopyDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateDBCluster(Amazon.DocDB.Model.CreateDBClusterRequest)">
            <summary>
            Creates a new Amazon DocumentDB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBCluster service method.</param>
            
            <returns>The response from the CreateDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException">
            <code>DBClusterParameterGroupName</code> doesn't refer to an existing cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBCluster">REST API Reference for CreateDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateDBClusterAsync(Amazon.DocDB.Model.CreateDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon DocumentDB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException">
            <code>DBClusterParameterGroupName</code> doesn't refer to an existing cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBCluster">REST API Reference for CreateDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateDBClusterParameterGroup(Amazon.DocDB.Model.CreateDBClusterParameterGroupRequest)">
            <summary>
            Creates a new cluster parameter group.
            
             
            <para>
            Parameters in a cluster parameter group apply to all of the instances in a cluster.
            </para>
             
            <para>
            A cluster parameter group is initially created with the default parameters for the
            database engine used by instances in the cluster. In Amazon DocumentDB, you cannot
            make modifications directly to the <code>default.docdb3.6</code> cluster parameter
            group. If your Amazon DocumentDB cluster is using the default cluster parameter group
            and you want to modify a value in it, you must first <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-create.html">
            create a new parameter group</a> or <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-copy.html">
            copy an existing parameter group</a>, modify it, and then apply the modified parameter
            group to your cluster. For the new cluster parameter group and associated settings
            to take effect, you must then reboot the instances in the cluster without failover.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-modify.html">
            Modifying Amazon DocumentDB Cluster Parameter Groups</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterParameterGroup service method.</param>
            
            <returns>The response from the CreateDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException">
            A parameter group with the same name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException">
            This request would cause you to exceed the allowed number of parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBClusterParameterGroup">REST API Reference for CreateDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateDBClusterParameterGroupAsync(Amazon.DocDB.Model.CreateDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new cluster parameter group.
            
             
            <para>
            Parameters in a cluster parameter group apply to all of the instances in a cluster.
            </para>
             
            <para>
            A cluster parameter group is initially created with the default parameters for the
            database engine used by instances in the cluster. In Amazon DocumentDB, you cannot
            make modifications directly to the <code>default.docdb3.6</code> cluster parameter
            group. If your Amazon DocumentDB cluster is using the default cluster parameter group
            and you want to modify a value in it, you must first <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-create.html">
            create a new parameter group</a> or <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-copy.html">
            copy an existing parameter group</a>, modify it, and then apply the modified parameter
            group to your cluster. For the new cluster parameter group and associated settings
            to take effect, you must then reboot the instances in the cluster without failover.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-modify.html">
            Modifying Amazon DocumentDB Cluster Parameter Groups</a>. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupAlreadyExistsException">
            A parameter group with the same name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupQuotaExceededException">
            This request would cause you to exceed the allowed number of parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBClusterParameterGroup">REST API Reference for CreateDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateDBClusterSnapshot(Amazon.DocDB.Model.CreateDBClusterSnapshotRequest)">
            <summary>
            Creates a snapshot of a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterSnapshot service method.</param>
            
            <returns>The response from the CreateDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBClusterSnapshot">REST API Reference for CreateDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateDBClusterSnapshotAsync(Amazon.DocDB.Model.CreateDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a snapshot of a cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBClusterSnapshot">REST API Reference for CreateDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateDBInstance(Amazon.DocDB.Model.CreateDBInstanceRequest)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBInstance service method.</param>
            
            <returns>The response from the CreateDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.AuthorizationNotFoundException">
            The specified CIDR IP or Amazon EC2 security group isn't authorized for the specified
            security group.
            
             
            <para>
            Amazon DocumentDB also might not be authorized to perform necessary actions on your
            behalf using IAM.
            </para>
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceAlreadyExistsException">
            You already have a instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSecurityGroupNotFoundException">
            <code>DBSecurityGroupName</code> doesn't refer to an existing security group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InstanceQuotaExceededException">
            The request would cause you to exceed the allowed number of instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException">
            The specified instance class isn't available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageTypeNotSupportedException">
            Storage of the specified <code>StorageType</code> can't be associated with the DB
            instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBInstance">REST API Reference for CreateDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateDBInstanceAsync(Amazon.DocDB.Model.CreateDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.AuthorizationNotFoundException">
            The specified CIDR IP or Amazon EC2 security group isn't authorized for the specified
            security group.
            
             
            <para>
            Amazon DocumentDB also might not be authorized to perform necessary actions on your
            behalf using IAM.
            </para>
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceAlreadyExistsException">
            You already have a instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSecurityGroupNotFoundException">
            <code>DBSecurityGroupName</code> doesn't refer to an existing security group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InstanceQuotaExceededException">
            The request would cause you to exceed the allowed number of instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException">
            The specified instance class isn't available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageTypeNotSupportedException">
            Storage of the specified <code>StorageType</code> can't be associated with the DB
            instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBInstance">REST API Reference for CreateDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateDBSubnetGroup(Amazon.DocDB.Model.CreateDBSubnetGroupRequest)">
            <summary>
            Creates a new subnet group. subnet groups must contain at least one subnet in at least
            two Availability Zones in the Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBSubnetGroup service method.</param>
            
            <returns>The response from the CreateDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException">
            <code>DBSubnetGroupName</code> is already being used by an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException">
            The request would cause you to exceed the allowed number of subnet groups.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetQuotaExceededException">
            The request would cause you to exceed the allowed number of subnets in a subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBSubnetGroup">REST API Reference for CreateDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateDBSubnetGroupAsync(Amazon.DocDB.Model.CreateDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new subnet group. subnet groups must contain at least one subnet in at least
            two Availability Zones in the Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupAlreadyExistsException">
            <code>DBSubnetGroupName</code> is already being used by an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupQuotaExceededException">
            The request would cause you to exceed the allowed number of subnet groups.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetQuotaExceededException">
            The request would cause you to exceed the allowed number of subnets in a subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateDBSubnetGroup">REST API Reference for CreateDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateEventSubscription(Amazon.DocDB.Model.CreateEventSubscriptionRequest)">
            <summary>
            Creates an Amazon DocumentDB event notification subscription. This action requires
            a topic Amazon Resource Name (ARN) created by using the Amazon DocumentDB console,
            the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon SNS, you
            must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed
            in the Amazon SNS console.
            
             
            <para>
            You can specify the type of source (<code>SourceType</code>) that you want to be notified
            of. You can also provide a list of Amazon DocumentDB sources (<code>SourceIds</code>)
            that trigger the events, and you can provide a list of event categories (<code>EventCategories</code>)
            for events that you want to be notified of. For example, you can specify <code>SourceType
            = db-instance</code>, <code>SourceIds = mydbinstance1, mydbinstance2</code> and <code>EventCategories
            = Availability, Backup</code>.
            </para>
             
            <para>
            If you specify both the <code>SourceType</code> and <code>SourceIds</code> (such as
            <code>SourceType = db-instance</code> and <code>SourceIdentifier = myDBInstance1</code>),
            you are notified of all the <code>db-instance</code> events for the specified source.
            If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>,
            you receive notice of the events for that source type for all your Amazon DocumentDB
            sources. If you do not specify either the <code>SourceType</code> or the <code>SourceIdentifier</code>,
            you are notified of events generated from all Amazon DocumentDB sources belonging
            to your customer account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventSubscription service method.</param>
            
            <returns>The response from the CreateEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException">
            You have reached the maximum number of event subscriptions.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSInvalidTopicException">
            Amazon SNS has responded that there is a problem with the specified topic.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSNoAuthorizationException">
            You do not have permission to publish to the SNS topic Amazon Resource Name (ARN).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSTopicArnNotFoundException">
            The SNS topic Amazon Resource Name (ARN) does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionAlreadyExistException">
            The provided subscription name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException">
            The provided category does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateEventSubscription">REST API Reference for CreateEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateEventSubscriptionAsync(Amazon.DocDB.Model.CreateEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon DocumentDB event notification subscription. This action requires
            a topic Amazon Resource Name (ARN) created by using the Amazon DocumentDB console,
            the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon SNS, you
            must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed
            in the Amazon SNS console.
            
             
            <para>
            You can specify the type of source (<code>SourceType</code>) that you want to be notified
            of. You can also provide a list of Amazon DocumentDB sources (<code>SourceIds</code>)
            that trigger the events, and you can provide a list of event categories (<code>EventCategories</code>)
            for events that you want to be notified of. For example, you can specify <code>SourceType
            = db-instance</code>, <code>SourceIds = mydbinstance1, mydbinstance2</code> and <code>EventCategories
            = Availability, Backup</code>.
            </para>
             
            <para>
            If you specify both the <code>SourceType</code> and <code>SourceIds</code> (such as
            <code>SourceType = db-instance</code> and <code>SourceIdentifier = myDBInstance1</code>),
            you are notified of all the <code>db-instance</code> events for the specified source.
            If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>,
            you receive notice of the events for that source type for all your Amazon DocumentDB
            sources. If you do not specify either the <code>SourceType</code> or the <code>SourceIdentifier</code>,
            you are notified of events generated from all Amazon DocumentDB sources belonging
            to your customer account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException">
            You have reached the maximum number of event subscriptions.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSInvalidTopicException">
            Amazon SNS has responded that there is a problem with the specified topic.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSNoAuthorizationException">
            You do not have permission to publish to the SNS topic Amazon Resource Name (ARN).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSTopicArnNotFoundException">
            The SNS topic Amazon Resource Name (ARN) does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionAlreadyExistException">
            The provided subscription name already exists.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException">
            The provided category does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateEventSubscription">REST API Reference for CreateEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateGlobalCluster(Amazon.DocDB.Model.CreateGlobalClusterRequest)">
            <summary>
            Creates an Amazon DocumentDB global cluster that can span multiple multiple Regions.
            The global cluster contains one primary cluster with read-write capability, and up-to
            give read-only secondary clusters. Global clusters uses storage-based fast replication
            across regions with latencies less than one second, using dedicated infrastructure
            with no impact to your workload’s performance.
            
              
            <para>
            You can create a global cluster that is initially empty, and then add a primary and
            a secondary to it. Or you can specify an existing cluster during the create operation,
            and this cluster becomes the primary of the global cluster. 
            </para>
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGlobalCluster service method.</param>
            
            <returns>The response from the CreateGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException">
            The <code>GlobalClusterIdentifier</code> already exists. Choose a new global cluster
            identifier (unique name) to create a new global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterQuotaExceededException">
            The number of global clusters for this account is already at the maximum allowed.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateGlobalCluster">REST API Reference for CreateGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.CreateGlobalClusterAsync(Amazon.DocDB.Model.CreateGlobalClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an Amazon DocumentDB global cluster that can span multiple multiple Regions.
            The global cluster contains one primary cluster with read-write capability, and up-to
            give read-only secondary clusters. Global clusters uses storage-based fast replication
            across regions with latencies less than one second, using dedicated infrastructure
            with no impact to your workload’s performance.
            
              
            <para>
            You can create a global cluster that is initially empty, and then add a primary and
            a secondary to it. Or you can specify an existing cluster during the create operation,
            and this cluster becomes the primary of the global cluster. 
            </para>
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateGlobalCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterAlreadyExistsException">
            The <code>GlobalClusterIdentifier</code> already exists. Choose a new global cluster
            identifier (unique name) to create a new global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterQuotaExceededException">
            The number of global clusters for this account is already at the maximum allowed.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/CreateGlobalCluster">REST API Reference for CreateGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteDBCluster(Amazon.DocDB.Model.DeleteDBClusterRequest)">
            <summary>
            Deletes a previously provisioned cluster. When you delete a cluster, all automated
            backups for that cluster are deleted and can't be recovered. Manual DB cluster snapshots
            of the specified cluster are not deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBCluster service method.</param>
            
            <returns>The response from the DeleteDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBCluster">REST API Reference for DeleteDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteDBClusterAsync(Amazon.DocDB.Model.DeleteDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a previously provisioned cluster. When you delete a cluster, all automated
            backups for that cluster are deleted and can't be recovered. Manual DB cluster snapshots
            of the specified cluster are not deleted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotAlreadyExistsException">
            You already have a cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBCluster">REST API Reference for DeleteDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteDBClusterParameterGroup(Amazon.DocDB.Model.DeleteDBClusterParameterGroupRequest)">
            <summary>
            Deletes a specified cluster parameter group. The cluster parameter group to be deleted
            can't be associated with any clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterParameterGroup service method.</param>
            
            <returns>The response from the DeleteDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBClusterParameterGroup">REST API Reference for DeleteDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteDBClusterParameterGroupAsync(Amazon.DocDB.Model.DeleteDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified cluster parameter group. The cluster parameter group to be deleted
            can't be associated with any clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBClusterParameterGroup">REST API Reference for DeleteDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteDBClusterSnapshot(Amazon.DocDB.Model.DeleteDBClusterSnapshotRequest)">
            <summary>
            Deletes a cluster snapshot. If the snapshot is being copied, the copy operation is
            terminated.
            
             <note> 
            <para>
            The cluster snapshot must be in the <code>available</code> state to be deleted.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterSnapshot service method.</param>
            
            <returns>The response from the DeleteDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBClusterSnapshot">REST API Reference for DeleteDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteDBClusterSnapshotAsync(Amazon.DocDB.Model.DeleteDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a cluster snapshot. If the snapshot is being copied, the copy operation is
            terminated.
            
             <note> 
            <para>
            The cluster snapshot must be in the <code>available</code> state to be deleted.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBClusterSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBClusterSnapshot">REST API Reference for DeleteDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteDBInstance(Amazon.DocDB.Model.DeleteDBInstanceRequest)">
            <summary>
            Deletes a previously provisioned instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBInstance service method.</param>
            
            <returns>The response from the DeleteDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException">
            <code>DBSnapshotIdentifier</code> is already being used by an existing snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBInstance">REST API Reference for DeleteDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteDBInstanceAsync(Amazon.DocDB.Model.DeleteDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a previously provisioned instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotAlreadyExistsException">
            <code>DBSnapshotIdentifier</code> is already being used by an existing snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SnapshotQuotaExceededException">
            The request would cause you to exceed the allowed number of snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBInstance">REST API Reference for DeleteDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteDBSubnetGroup(Amazon.DocDB.Model.DeleteDBSubnetGroupRequest)">
            <summary>
            Deletes a subnet group.
            
             <note> 
            <para>
            The specified database subnet group must not be associated with any DB instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBSubnetGroup service method.</param>
            
            <returns>The response from the DeleteDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetStateException">
            The subnet isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBSubnetGroup">REST API Reference for DeleteDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteDBSubnetGroupAsync(Amazon.DocDB.Model.DeleteDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a subnet group.
            
             <note> 
            <para>
            The specified database subnet group must not be associated with any DB instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetStateException">
            The subnet isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteDBSubnetGroup">REST API Reference for DeleteDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteEventSubscription(Amazon.DocDB.Model.DeleteEventSubscriptionRequest)">
            <summary>
            Deletes an Amazon DocumentDB event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventSubscription service method.</param>
            
            <returns>The response from the DeleteEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.InvalidEventSubscriptionStateException">
            Someone else might be modifying a subscription. Wait a few seconds, and try again.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteEventSubscription">REST API Reference for DeleteEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteEventSubscriptionAsync(Amazon.DocDB.Model.DeleteEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an Amazon DocumentDB event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.InvalidEventSubscriptionStateException">
            Someone else might be modifying a subscription. Wait a few seconds, and try again.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteEventSubscription">REST API Reference for DeleteEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteGlobalCluster(Amazon.DocDB.Model.DeleteGlobalClusterRequest)">
            <summary>
            Deletes a global cluster. The primary and secondary clusters must already be detached
            or deleted before attempting to delete a global cluster.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGlobalCluster service method.</param>
            
            <returns>The response from the DeleteGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteGlobalCluster">REST API Reference for DeleteGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DeleteGlobalClusterAsync(Amazon.DocDB.Model.DeleteGlobalClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a global cluster. The primary and secondary clusters must already be detached
            or deleted before attempting to delete a global cluster.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteGlobalCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DeleteGlobalCluster">REST API Reference for DeleteGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeCertificates(Amazon.DocDB.Model.DescribeCertificatesRequest)">
            <summary>
            Returns a list of certificate authority (CA) certificates provided by Amazon DocumentDB
            for this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificates service method.</param>
            
            <returns>The response from the DescribeCertificates service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.CertificateNotFoundException">
            <code>CertificateIdentifier</code> doesn't refer to an existing certificate.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeCertificates">REST API Reference for DescribeCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeCertificatesAsync(Amazon.DocDB.Model.DescribeCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of certificate authority (CA) certificates provided by Amazon DocumentDB
            for this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificates service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.CertificateNotFoundException">
            <code>CertificateIdentifier</code> doesn't refer to an existing certificate.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeCertificates">REST API Reference for DescribeCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBClusterParameterGroups(Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest)">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list contains only the description of the specified cluster
            parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameterGroups service method.</param>
            
            <returns>The response from the DescribeDBClusterParameterGroups service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameterGroups">REST API Reference for DescribeDBClusterParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBClusterParameterGroupsAsync(Amazon.DocDB.Model.DescribeDBClusterParameterGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list contains only the description of the specified cluster
            parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameterGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterParameterGroups service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameterGroups">REST API Reference for DescribeDBClusterParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBClusterParameters(Amazon.DocDB.Model.DescribeDBClusterParametersRequest)">
            <summary>
            Returns the detailed parameter list for a particular cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameters service method.</param>
            
            <returns>The response from the DescribeDBClusterParameters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameters">REST API Reference for DescribeDBClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBClusterParametersAsync(Amazon.DocDB.Model.DescribeDBClusterParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the detailed parameter list for a particular cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterParameters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterParameters">REST API Reference for DescribeDBClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBClusters(Amazon.DocDB.Model.DescribeDBClustersRequest)">
            <summary>
            Returns information about provisioned Amazon DocumentDB clusters. This API operation
            supports pagination. For certain management features such as cluster and instance
            lifecycle management, Amazon DocumentDB leverages operational technology that is shared
            with Amazon RDS and Amazon Neptune. Use the <code>filterName=engine,Values=docdb</code>
            filter parameter to return only Amazon DocumentDB clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusters service method.</param>
            
            <returns>The response from the DescribeDBClusters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusters">REST API Reference for DescribeDBClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBClustersAsync(Amazon.DocDB.Model.DescribeDBClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about provisioned Amazon DocumentDB clusters. This API operation
            supports pagination. For certain management features such as cluster and instance
            lifecycle management, Amazon DocumentDB leverages operational technology that is shared
            with Amazon RDS and Amazon Neptune. Use the <code>filterName=engine,Values=docdb</code>
            filter parameter to return only Amazon DocumentDB clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusters">REST API Reference for DescribeDBClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBClusterSnapshotAttributes(Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesRequest)">
            <summary>
            Returns a list of cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When you share snapshots with other accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the accounts that
            are authorized to copy or restore the manual cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual cluster snapshot is public and can be copied or restored by all accounts.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshotAttributes service method.</param>
            
            <returns>The response from the DescribeDBClusterSnapshotAttributes service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshotAttributes">REST API Reference for DescribeDBClusterSnapshotAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBClusterSnapshotAttributesAsync(Amazon.DocDB.Model.DescribeDBClusterSnapshotAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When you share snapshots with other accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the accounts that
            are authorized to copy or restore the manual cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual cluster snapshot is public and can be copied or restored by all accounts.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshotAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterSnapshotAttributes service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshotAttributes">REST API Reference for DescribeDBClusterSnapshotAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBClusterSnapshots(Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest)">
            <summary>
            Returns information about cluster snapshots. This API operation supports pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshots service method.</param>
            
            <returns>The response from the DescribeDBClusterSnapshots service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshots">REST API Reference for DescribeDBClusterSnapshots Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBClusterSnapshotsAsync(Amazon.DocDB.Model.DescribeDBClusterSnapshotsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about cluster snapshots. This API operation supports pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshots service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterSnapshots service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBClusterSnapshots">REST API Reference for DescribeDBClusterSnapshots Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBEngineVersions(Amazon.DocDB.Model.DescribeDBEngineVersionsRequest)">
            <summary>
            Returns a list of the available engines.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBEngineVersions service method.</param>
            
            <returns>The response from the DescribeDBEngineVersions service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBEngineVersions">REST API Reference for DescribeDBEngineVersions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBEngineVersionsAsync(Amazon.DocDB.Model.DescribeDBEngineVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the available engines.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBEngineVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBEngineVersions service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBEngineVersions">REST API Reference for DescribeDBEngineVersions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBInstances(Amazon.DocDB.Model.DescribeDBInstancesRequest)">
            <summary>
            Returns information about provisioned Amazon DocumentDB instances. This API supports
            pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBInstances service method.</param>
            
            <returns>The response from the DescribeDBInstances service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBInstances">REST API Reference for DescribeDBInstances Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBInstancesAsync(Amazon.DocDB.Model.DescribeDBInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about provisioned Amazon DocumentDB instances. This API supports
            pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBInstances service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBInstances">REST API Reference for DescribeDBInstances Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBSubnetGroups(Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest)">
            <summary>
            Returns a list of <code>DBSubnetGroup</code> descriptions. If a <code>DBSubnetGroupName</code>
            is specified, the list will contain only the descriptions of the specified <code>DBSubnetGroup</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBSubnetGroups service method.</param>
            
            <returns>The response from the DescribeDBSubnetGroups service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBSubnetGroups">REST API Reference for DescribeDBSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeDBSubnetGroupsAsync(Amazon.DocDB.Model.DescribeDBSubnetGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <code>DBSubnetGroup</code> descriptions. If a <code>DBSubnetGroupName</code>
            is specified, the list will contain only the descriptions of the specified <code>DBSubnetGroup</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBSubnetGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBSubnetGroups service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeDBSubnetGroups">REST API Reference for DescribeDBSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeEngineDefaultClusterParameters(Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersRequest)">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultClusterParameters service method.</param>
            
            <returns>The response from the DescribeEngineDefaultClusterParameters service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEngineDefaultClusterParameters">REST API Reference for DescribeEngineDefaultClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeEngineDefaultClusterParametersAsync(Amazon.DocDB.Model.DescribeEngineDefaultClusterParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultClusterParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEngineDefaultClusterParameters service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEngineDefaultClusterParameters">REST API Reference for DescribeEngineDefaultClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeEventCategories(Amazon.DocDB.Model.DescribeEventCategoriesRequest)">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventCategories service method.</param>
            
            <returns>The response from the DescribeEventCategories service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventCategories">REST API Reference for DescribeEventCategories Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeEventCategoriesAsync(Amazon.DocDB.Model.DescribeEventCategoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventCategories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventCategories service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventCategories">REST API Reference for DescribeEventCategories Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeEvents(Amazon.DocDB.Model.DescribeEventsRequest)">
            <summary>
            Returns events related to instances, security groups, snapshots, and DB parameter
            groups for the past 14 days. You can obtain events specific to a particular DB instance,
            security group, snapshot, or parameter group by providing the name as a parameter.
            By default, the events of the past hour are returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            
            <returns>The response from the DescribeEvents service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeEventsAsync(Amazon.DocDB.Model.DescribeEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns events related to instances, security groups, snapshots, and DB parameter
            groups for the past 14 days. You can obtain events specific to a particular DB instance,
            security group, snapshot, or parameter group by providing the name as a parameter.
            By default, the events of the past hour are returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEvents service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeEventSubscriptions(Amazon.DocDB.Model.DescribeEventSubscriptionsRequest)">
            <summary>
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>,
            <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.
            
             
            <para>
            If you specify a <code>SubscriptionName</code>, lists the description for that subscription.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSubscriptions service method.</param>
            
            <returns>The response from the DescribeEventSubscriptions service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventSubscriptions">REST API Reference for DescribeEventSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeEventSubscriptionsAsync(Amazon.DocDB.Model.DescribeEventSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>,
            <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.
            
             
            <para>
            If you specify a <code>SubscriptionName</code>, lists the description for that subscription.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSubscriptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventSubscriptions service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeEventSubscriptions">REST API Reference for DescribeEventSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeGlobalClusters(Amazon.DocDB.Model.DescribeGlobalClustersRequest)">
            <summary>
            Returns information about Amazon DocumentDB global clusters. This API supports pagination.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeGlobalClusters service method.</param>
            
            <returns>The response from the DescribeGlobalClusters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeGlobalClusters">REST API Reference for DescribeGlobalClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeGlobalClustersAsync(Amazon.DocDB.Model.DescribeGlobalClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about Amazon DocumentDB global clusters. This API supports pagination.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeGlobalClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeGlobalClusters service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeGlobalClusters">REST API Reference for DescribeGlobalClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeOrderableDBInstanceOptions(Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest)">
            <summary>
            Returns a list of orderable instance options for the specified engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeOrderableDBInstanceOptions service method.</param>
            
            <returns>The response from the DescribeOrderableDBInstanceOptions service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeOrderableDBInstanceOptions">REST API Reference for DescribeOrderableDBInstanceOptions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribeOrderableDBInstanceOptionsAsync(Amazon.DocDB.Model.DescribeOrderableDBInstanceOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of orderable instance options for the specified engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeOrderableDBInstanceOptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeOrderableDBInstanceOptions service method, as returned by DocDB.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribeOrderableDBInstanceOptions">REST API Reference for DescribeOrderableDBInstanceOptions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribePendingMaintenanceActions(Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest)">
            <summary>
            Returns a list of resources (for example, instances) that have at least one pending
            maintenance action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePendingMaintenanceActions service method.</param>
            
            <returns>The response from the DescribePendingMaintenanceActions service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribePendingMaintenanceActions">REST API Reference for DescribePendingMaintenanceActions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.DescribePendingMaintenanceActionsAsync(Amazon.DocDB.Model.DescribePendingMaintenanceActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of resources (for example, instances) that have at least one pending
            maintenance action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePendingMaintenanceActions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePendingMaintenanceActions service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/DescribePendingMaintenanceActions">REST API Reference for DescribePendingMaintenanceActions Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.FailoverDBCluster(Amazon.DocDB.Model.FailoverDBClusterRequest)">
            <summary>
            Forces a failover for a cluster.
            
             
            <para>
            A failover for a cluster promotes one of the Amazon DocumentDB replicas (read-only
            instances) in the cluster to be the primary instance (the cluster writer).
            </para>
             
            <para>
            If the primary instance fails, Amazon DocumentDB automatically fails over to an Amazon
            DocumentDB replica, if one exists. You can force a failover when you want to simulate
            a failure of a primary instance for testing.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FailoverDBCluster service method.</param>
            
            <returns>The response from the FailoverDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/FailoverDBCluster">REST API Reference for FailoverDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.FailoverDBClusterAsync(Amazon.DocDB.Model.FailoverDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Forces a failover for a cluster.
            
             
            <para>
            A failover for a cluster promotes one of the Amazon DocumentDB replicas (read-only
            instances) in the cluster to be the primary instance (the cluster writer).
            </para>
             
            <para>
            If the primary instance fails, Amazon DocumentDB automatically fails over to an Amazon
            DocumentDB replica, if one exists. You can force a failover when you want to simulate
            a failure of a primary instance for testing.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FailoverDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the FailoverDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/FailoverDBCluster">REST API Reference for FailoverDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ListTagsForResource(Amazon.DocDB.Model.ListTagsForResourceRequest)">
            <summary>
            Lists all tags on an Amazon DocumentDB resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ListTagsForResourceAsync(Amazon.DocDB.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all tags on an Amazon DocumentDB resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyDBCluster(Amazon.DocDB.Model.ModifyDBClusterRequest)">
            <summary>
            Modifies a setting for an Amazon DocumentDB cluster. You can change one or more database
            configuration parameters by specifying these parameters and the new values in the
            request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBCluster service method.</param>
            
            <returns>The response from the ModifyDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException">
            <code>DBClusterParameterGroupName</code> doesn't refer to an existing cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException">
            The state of the security group doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBCluster">REST API Reference for ModifyDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyDBClusterAsync(Amazon.DocDB.Model.ModifyDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies a setting for an Amazon DocumentDB cluster. You can change one or more database
            configuration parameters by specifying these parameters and the new values in the
            request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterParameterGroupNotFoundException">
            <code>DBClusterParameterGroupName</code> doesn't refer to an existing cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException">
            The state of the security group doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSubnetGroupStateException">
            The subnet group can't be deleted because it's in use.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBCluster">REST API Reference for ModifyDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyDBClusterParameterGroup(Amazon.DocDB.Model.ModifyDBClusterParameterGroupRequest)">
            <summary>
            Modifies the parameters of a cluster parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request. 
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot or maintenance window before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you create a cluster parameter group, you should wait at least 5 minutes before
            creating your first cluster that uses that cluster parameter group as the default
            parameter group. This allows Amazon DocumentDB to fully complete the create action
            before the parameter group is used as the default for a new cluster. This step is
            especially important for parameters that are critical when creating the default database
            for a cluster, such as the character set for the default database defined by the <code>character_set_database</code>
            parameter.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterParameterGroup service method.</param>
            
            <returns>The response from the ModifyDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBClusterParameterGroup">REST API Reference for ModifyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyDBClusterParameterGroupAsync(Amazon.DocDB.Model.ModifyDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a cluster parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request. 
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot or maintenance window before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you create a cluster parameter group, you should wait at least 5 minutes before
            creating your first cluster that uses that cluster parameter group as the default
            parameter group. This allows Amazon DocumentDB to fully complete the create action
            before the parameter group is used as the default for a new cluster. This step is
            especially important for parameters that are critical when creating the default database
            for a cluster, such as the character set for the default database defined by the <code>character_set_database</code>
            parameter.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBClusterParameterGroup">REST API Reference for ModifyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyDBClusterSnapshotAttribute(Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeRequest)">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            cluster snapshot.
            
             
            <para>
            To share a manual cluster snapshot with other accounts, specify <code>restore</code>
            as the <code>AttributeName</code>, and use the <code>ValuesToAdd</code> parameter
            to add a list of IDs of the accounts that are authorized to restore the manual cluster
            snapshot. Use the value <code>all</code> to make the manual cluster snapshot public,
            which means that it can be copied or restored by all accounts. Do not add the <code>all</code>
            value for any manual cluster snapshots that contain private information that you don't
            want available to all accounts. If a manual cluster snapshot is encrypted, it can
            be shared, but only by specifying a list of authorized account IDs for the <code>ValuesToAdd</code>
            parameter. You can't use <code>all</code> as a value for that parameter in this case.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterSnapshotAttribute service method.</param>
            
            <returns>The response from the ModifyDBClusterSnapshotAttribute service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException">
            You have exceeded the maximum number of accounts that you can share a manual DB snapshot
            with.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBClusterSnapshotAttribute">REST API Reference for ModifyDBClusterSnapshotAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyDBClusterSnapshotAttributeAsync(Amazon.DocDB.Model.ModifyDBClusterSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            cluster snapshot.
            
             
            <para>
            To share a manual cluster snapshot with other accounts, specify <code>restore</code>
            as the <code>AttributeName</code>, and use the <code>ValuesToAdd</code> parameter
            to add a list of IDs of the accounts that are authorized to restore the manual cluster
            snapshot. Use the value <code>all</code> to make the manual cluster snapshot public,
            which means that it can be copied or restored by all accounts. Do not add the <code>all</code>
            value for any manual cluster snapshots that contain private information that you don't
            want available to all accounts. If a manual cluster snapshot is encrypted, it can
            be shared, but only by specifying a list of authorized account IDs for the <code>ValuesToAdd</code>
            parameter. You can't use <code>all</code> as a value for that parameter in this case.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterSnapshotAttribute service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBClusterSnapshotAttribute service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SharedSnapshotQuotaExceededException">
            You have exceeded the maximum number of accounts that you can share a manual DB snapshot
            with.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBClusterSnapshotAttribute">REST API Reference for ModifyDBClusterSnapshotAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyDBInstance(Amazon.DocDB.Model.ModifyDBInstanceRequest)">
            <summary>
            Modifies settings for an instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBInstance service method.</param>
            
            <returns>The response from the ModifyDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.AuthorizationNotFoundException">
            The specified CIDR IP or Amazon EC2 security group isn't authorized for the specified
            security group.
            
             
            <para>
            Amazon DocumentDB also might not be authorized to perform necessary actions on your
            behalf using IAM.
            </para>
            </exception>
            <exception cref="T:Amazon.DocDB.Model.CertificateNotFoundException">
            <code>CertificateIdentifier</code> doesn't refer to an existing certificate.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceAlreadyExistsException">
            You already have a instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSecurityGroupNotFoundException">
            <code>DBSecurityGroupName</code> doesn't refer to an existing security group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBUpgradeDependencyFailureException">
            The upgrade failed because a resource that the depends on can't be modified.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException">
            The specified instance class isn't available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException">
            The state of the security group doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageTypeNotSupportedException">
            Storage of the specified <code>StorageType</code> can't be associated with the DB
            instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBInstance">REST API Reference for ModifyDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyDBInstanceAsync(Amazon.DocDB.Model.ModifyDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies settings for an instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.AuthorizationNotFoundException">
            The specified CIDR IP or Amazon EC2 security group isn't authorized for the specified
            security group.
            
             
            <para>
            Amazon DocumentDB also might not be authorized to perform necessary actions on your
            behalf using IAM.
            </para>
            </exception>
            <exception cref="T:Amazon.DocDB.Model.CertificateNotFoundException">
            <code>CertificateIdentifier</code> doesn't refer to an existing certificate.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceAlreadyExistsException">
            You already have a instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSecurityGroupNotFoundException">
            <code>DBSecurityGroupName</code> doesn't refer to an existing security group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBUpgradeDependencyFailureException">
            The upgrade failed because a resource that the depends on can't be modified.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBInstanceCapacityException">
            The specified instance class isn't available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSecurityGroupStateException">
            The state of the security group doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageTypeNotSupportedException">
            Storage of the specified <code>StorageType</code> can't be associated with the DB
            instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBInstance">REST API Reference for ModifyDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyDBSubnetGroup(Amazon.DocDB.Model.ModifyDBSubnetGroupRequest)">
            <summary>
            Modifies an existing subnet group. subnet groups must contain at least one subnet
            in at least two Availability Zones in the Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBSubnetGroup service method.</param>
            
            <returns>The response from the ModifyDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetQuotaExceededException">
            The request would cause you to exceed the allowed number of subnets in a subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubnetAlreadyInUseException">
            The subnet is already in use in the Availability Zone.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBSubnetGroup">REST API Reference for ModifyDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyDBSubnetGroupAsync(Amazon.DocDB.Model.ModifyDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing subnet group. subnet groups must contain at least one subnet
            in at least two Availability Zones in the Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBSubnetGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the subnet group should cover at least two Availability Zones unless there
            is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetQuotaExceededException">
            The request would cause you to exceed the allowed number of subnets in a subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubnetAlreadyInUseException">
            The subnet is already in use in the Availability Zone.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyDBSubnetGroup">REST API Reference for ModifyDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyEventSubscription(Amazon.DocDB.Model.ModifyEventSubscriptionRequest)">
            <summary>
            Modifies an existing Amazon DocumentDB event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyEventSubscription service method.</param>
            
            <returns>The response from the ModifyEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException">
            You have reached the maximum number of event subscriptions.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSInvalidTopicException">
            Amazon SNS has responded that there is a problem with the specified topic.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSNoAuthorizationException">
            You do not have permission to publish to the SNS topic Amazon Resource Name (ARN).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSTopicArnNotFoundException">
            The SNS topic Amazon Resource Name (ARN) does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException">
            The provided category does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyEventSubscription">REST API Reference for ModifyEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyEventSubscriptionAsync(Amazon.DocDB.Model.ModifyEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing Amazon DocumentDB event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyEventSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.EventSubscriptionQuotaExceededException">
            You have reached the maximum number of event subscriptions.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSInvalidTopicException">
            Amazon SNS has responded that there is a problem with the specified topic.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSNoAuthorizationException">
            You do not have permission to publish to the SNS topic Amazon Resource Name (ARN).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SNSTopicArnNotFoundException">
            The SNS topic Amazon Resource Name (ARN) does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionCategoryNotFoundException">
            The provided category does not exist.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyEventSubscription">REST API Reference for ModifyEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyGlobalCluster(Amazon.DocDB.Model.ModifyGlobalClusterRequest)">
            <summary>
            Modify a setting for an Amazon DocumentDB global cluster. You can change one or more
            configuration parameters (for example: deletion protection), or the global cluster
            identifier by specifying these parameters and the new values in the request.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyGlobalCluster service method.</param>
            
            <returns>The response from the ModifyGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyGlobalCluster">REST API Reference for ModifyGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ModifyGlobalClusterAsync(Amazon.DocDB.Model.ModifyGlobalClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Modify a setting for an Amazon DocumentDB global cluster. You can change one or more
            configuration parameters (for example: deletion protection), or the global cluster
            identifier by specifying these parameters and the new values in the request.
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyGlobalCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ModifyGlobalCluster">REST API Reference for ModifyGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RebootDBInstance(Amazon.DocDB.Model.RebootDBInstanceRequest)">
            <summary>
            You might need to reboot your instance, usually for maintenance reasons. For example,
            if you make certain changes, or if you change the cluster parameter group that is
            associated with the instance, you must reboot the instance for the changes to take
            effect. 
            
             
            <para>
            Rebooting an instance restarts the database engine service. Rebooting an instance
            results in a momentary outage, during which the instance status is set to <i>rebooting</i>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootDBInstance service method.</param>
            
            <returns>The response from the RebootDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RebootDBInstance">REST API Reference for RebootDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RebootDBInstanceAsync(Amazon.DocDB.Model.RebootDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            You might need to reboot your instance, usually for maintenance reasons. For example,
            if you make certain changes, or if you change the cluster parameter group that is
            associated with the instance, you must reboot the instance for the changes to take
            effect. 
            
             
            <para>
            Rebooting an instance restarts the database engine service. Rebooting an instance
            results in a momentary outage, during which the instance status is set to <i>rebooting</i>.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RebootDBInstance service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RebootDBInstance">REST API Reference for RebootDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RemoveFromGlobalCluster(Amazon.DocDB.Model.RemoveFromGlobalClusterRequest)">
            <summary>
            Detaches an Amazon DocumentDB secondary cluster from a global cluster. The cluster
            becomes a standalone cluster with read-write capability instead of being read-only
            and receiving data from a primary in a different region. 
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveFromGlobalCluster service method.</param>
            
            <returns>The response from the RemoveFromGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveFromGlobalCluster">REST API Reference for RemoveFromGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RemoveFromGlobalClusterAsync(Amazon.DocDB.Model.RemoveFromGlobalClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Detaches an Amazon DocumentDB secondary cluster from a global cluster. The cluster
            becomes a standalone cluster with read-write capability instead of being read-only
            and receiving data from a primary in a different region. 
            
             <note> 
            <para>
            This action only applies to Amazon DocumentDB clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveFromGlobalCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveFromGlobalCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.GlobalClusterNotFoundException">
            The <code>GlobalClusterIdentifier</code> doesn't refer to an existing global cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidGlobalClusterStateException">
            The requested operation can't be performed while the cluster is in this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveFromGlobalCluster">REST API Reference for RemoveFromGlobalCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RemoveSourceIdentifierFromSubscription(Amazon.DocDB.Model.RemoveSourceIdentifierFromSubscriptionRequest)">
            <summary>
            Removes a source identifier from an existing Amazon DocumentDB event notification
            subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveSourceIdentifierFromSubscription service method.</param>
            
            <returns>The response from the RemoveSourceIdentifierFromSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveSourceIdentifierFromSubscription">REST API Reference for RemoveSourceIdentifierFromSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RemoveSourceIdentifierFromSubscriptionAsync(Amazon.DocDB.Model.RemoveSourceIdentifierFromSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a source identifier from an existing Amazon DocumentDB event notification
            subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveSourceIdentifierFromSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveSourceIdentifierFromSubscription service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.SourceNotFoundException">
            The requested source could not be found.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.SubscriptionNotFoundException">
            The subscription name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveSourceIdentifierFromSubscription">REST API Reference for RemoveSourceIdentifierFromSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RemoveTagsFromResource(Amazon.DocDB.Model.RemoveTagsFromResourceRequest)">
            <summary>
            Removes metadata tags from an Amazon DocumentDB resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromResource service method.</param>
            
            <returns>The response from the RemoveTagsFromResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveTagsFromResource">REST API Reference for RemoveTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RemoveTagsFromResourceAsync(Amazon.DocDB.Model.RemoveTagsFromResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes metadata tags from an Amazon DocumentDB resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveTagsFromResource service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBInstanceNotFoundException">
            <code>DBInstanceIdentifier</code> doesn't refer to an existing instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RemoveTagsFromResource">REST API Reference for RemoveTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ResetDBClusterParameterGroup(Amazon.DocDB.Model.ResetDBClusterParameterGroupRequest)">
            <summary>
            Modifies the parameters of a cluster parameter group to the default value. To reset
            specific parameters, submit a list of the following: <code>ParameterName</code> and
            <code>ApplyMethod</code>. To reset the entire cluster parameter group, specify the
            <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
            
             
            <para>
             When you reset the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            reboot.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBClusterParameterGroup service method.</param>
            
            <returns>The response from the ResetDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ResetDBClusterParameterGroup">REST API Reference for ResetDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.ResetDBClusterParameterGroupAsync(Amazon.DocDB.Model.ResetDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a cluster parameter group to the default value. To reset
            specific parameters, submit a list of the following: <code>ParameterName</code> and
            <code>ApplyMethod</code>. To reset the entire cluster parameter group, specify the
            <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
            
             
            <para>
             When you reset the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            reboot.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResetDBClusterParameterGroup service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBParameterGroupNotFoundException">
            <code>DBParameterGroupName</code> doesn't refer to an existing parameter group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBParameterGroupStateException">
            The parameter group is in use, or it is in a state that is not valid. If you are trying
            to delete the parameter group, you can't delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/ResetDBClusterParameterGroup">REST API Reference for ResetDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RestoreDBClusterFromSnapshot(Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest)">
            <summary>
            Creates a new cluster from a snapshot or cluster snapshot.
            
             
            <para>
            If a snapshot is specified, the target cluster is created from the source DB snapshot
            with a default configuration and default security group.
            </para>
             
            <para>
            If a cluster snapshot is specified, the target cluster is created from the source
            cluster restore point with the same configuration as the original source DB cluster,
            except that the new cluster is created with the default security group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterFromSnapshot service method.</param>
            
            <returns>The response from the RestoreDBClusterFromSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBClusterCapacityException">
            The cluster doesn't have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSnapshotStateException">
            The state of the snapshot doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidRestoreException">
            You cannot restore from a virtual private cloud (VPC) backup to a non-VPC DB instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RestoreDBClusterFromSnapshot">REST API Reference for RestoreDBClusterFromSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RestoreDBClusterFromSnapshotAsync(Amazon.DocDB.Model.RestoreDBClusterFromSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new cluster from a snapshot or cluster snapshot.
            
             
            <para>
            If a snapshot is specified, the target cluster is created from the source DB snapshot
            with a default configuration and default security group.
            </para>
             
            <para>
            If a cluster snapshot is specified, the target cluster is created from the source
            cluster restore point with the same configuration as the original source DB cluster,
            except that the new cluster is created with the default security group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterFromSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreDBClusterFromSnapshot service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSnapshotNotFoundException">
            <code>DBSnapshotIdentifier</code> doesn't refer to an existing snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBClusterCapacityException">
            The cluster doesn't have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSnapshotStateException">
            The state of the snapshot doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidRestoreException">
            You cannot restore from a virtual private cloud (VPC) backup to a non-VPC DB instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RestoreDBClusterFromSnapshot">REST API Reference for RestoreDBClusterFromSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RestoreDBClusterToPointInTime(Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest)">
            <summary>
            Restores a cluster to an arbitrary point in time. Users can restore to any point in
            time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target cluster is created from the source cluster with the same configuration
            as the original cluster, except that the new cluster is created with the default security
            group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterToPointInTime service method.</param>
            
            <returns>The response from the RestoreDBClusterToPointInTime service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBClusterCapacityException">
            The cluster doesn't have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSnapshotStateException">
            The state of the snapshot doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidRestoreException">
            You cannot restore from a virtual private cloud (VPC) backup to a non-VPC DB instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RestoreDBClusterToPointInTime">REST API Reference for RestoreDBClusterToPointInTime Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.RestoreDBClusterToPointInTimeAsync(Amazon.DocDB.Model.RestoreDBClusterToPointInTimeRequest,System.Threading.CancellationToken)">
            <summary>
            Restores a cluster to an arbitrary point in time. Users can restore to any point in
            time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target cluster is created from the source cluster with the same configuration
            as the original cluster, except that the new cluster is created with the default security
            group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterToPointInTime service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreDBClusterToPointInTime service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterAlreadyExistsException">
            You already have a cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterQuotaExceededException">
            The cluster can't be created because you have reached the maximum allowed quota of
            clusters.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBClusterSnapshotNotFoundException">
            <code>DBClusterSnapshotIdentifier</code> doesn't refer to an existing cluster snapshot.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.DBSubnetGroupNotFoundException">
            <code>DBSubnetGroupName</code> doesn't refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientDBClusterCapacityException">
            The cluster doesn't have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InsufficientStorageClusterCapacityException">
            There is not enough storage available for the current action. You might be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterSnapshotStateException">
            The provided value isn't a valid cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBSnapshotStateException">
            The state of the snapshot doesn't allow deletion.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidRestoreException">
            You cannot restore from a virtual private cloud (VPC) backup to a non-VPC DB instance.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidSubnetException">
            The requested subnet is not valid, or multiple subnets were requested that are not
            all in a common virtual private cloud (VPC).
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidVPCNetworkStateException">
            The subnet group doesn't cover all Availability Zones after it is created because
            of changes that were made.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.KMSKeyNotAccessibleException">
            An error occurred when accessing an KMS key.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.StorageQuotaExceededException">
            The request would cause you to exceed the allowed amount of storage available across
            all instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/RestoreDBClusterToPointInTime">REST API Reference for RestoreDBClusterToPointInTime Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.StartDBCluster(Amazon.DocDB.Model.StartDBClusterRequest)">
            <summary>
            Restarts the stopped cluster that is specified by <code>DBClusterIdentifier</code>.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDBCluster service method.</param>
            
            <returns>The response from the StartDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/StartDBCluster">REST API Reference for StartDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.StartDBClusterAsync(Amazon.DocDB.Model.StartDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Restarts the stopped cluster that is specified by <code>DBClusterIdentifier</code>.
            For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/StartDBCluster">REST API Reference for StartDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.StopDBCluster(Amazon.DocDB.Model.StopDBClusterRequest)">
            <summary>
            Stops the running cluster that is specified by <code>DBClusterIdentifier</code>. The
            cluster must be in the <i>available</i> state. For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDBCluster service method.</param>
            
            <returns>The response from the StopDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/StopDBCluster">REST API Reference for StopDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DocDB.IAmazonDocDB.StopDBClusterAsync(Amazon.DocDB.Model.StopDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Stops the running cluster that is specified by <code>DBClusterIdentifier</code>. The
            cluster must be in the <i>available</i> state. For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html">Stopping
            and Starting an Amazon DocumentDB Cluster</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopDBCluster service method, as returned by DocDB.</returns>
            <exception cref="T:Amazon.DocDB.Model.DBClusterNotFoundException">
            <code>DBClusterIdentifier</code> doesn't refer to an existing cluster.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBClusterStateException">
            The cluster isn't in a valid state.
            </exception>
            <exception cref="T:Amazon.DocDB.Model.InvalidDBInstanceStateException">
            The specified instance isn't in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/docdb-2014-10-31/StopDBCluster">REST API Reference for StopDBCluster Operation</seealso>
        </member>
    </members>
</doc>
