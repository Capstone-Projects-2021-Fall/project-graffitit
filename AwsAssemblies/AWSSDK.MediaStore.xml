<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.MediaStore</name>
    </assembly>
    <members>
        <member name="T:Amazon.MediaStore.AmazonMediaStoreConfig">
            <summary>
            Configuration for accessing Amazon MediaStore service
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.AmazonMediaStoreConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.AmazonMediaStoreConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.AmazonMediaStoreConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.AmazonMediaStoreException">
            <summary>
             Common exception for the MediaStore service.
             </summary>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonMediaStoreException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonMediaStoreException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonMediaStoreException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonMediaStoreException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonMediaStoreException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonMediaStoreException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.MediaStore.Internal.AmazonMediaStoreMetadata">
            <summary>
            Service metadata for  Amazon MediaStore service
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Internal.AmazonMediaStoreMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Internal.AmazonMediaStoreMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.AmazonMediaStoreRequest">
            <summary>
            Base class for MediaStore operation requests.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.Container">
            <summary>
            This section describes operations that you can perform on an AWS Elemental MediaStore
            container.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.Container.AccessLoggingEnabled">
            <summary>
            Gets and sets the property AccessLoggingEnabled. 
            <para>
            The state of access logging on the container. This value is <code>false</code> by
            default, indicating that AWS Elemental MediaStore does not send access logs to Amazon
            CloudWatch Logs. When you enable access logging on the container, MediaStore changes
            this value to <code>true</code>, indicating that the service delivers access logs
            for objects stored in that container to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.Container.ARN">
            <summary>
            Gets and sets the property ARN. 
            <para>
            The Amazon Resource Name (ARN) of the container. The ARN has the following format:
            </para>
             
            <para>
            arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name
            of container&gt; 
            </para>
             
            <para>
            For example: arn:aws:mediastore:us-west-2:111122223333:container/movies 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.Container.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            Unix timestamp.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.Container.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The DNS endpoint of the container. Use the endpoint to identify the specific container
            when sending requests to the data plane. The service assigns this value when the container
            is created. Once the value has been assigned, it does not change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.Container.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.Container.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of container creation or deletion. The status is one of the following:
            <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service
            is creating the container, the status is <code>CREATING</code>. When the endpoint
            is available, the status changes to <code>ACTIVE</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.ContainerInUseException">
            <summary>
            The container that you specified in the request already exists or is being updated.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ContainerInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ContainerInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ContainerInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ContainerInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ContainerInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ContainerInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            <summary>
            The container that you specified in the request does not exist.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ContainerNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ContainerNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ContainerNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ContainerNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ContainerNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ContainerNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.MediaStore.Model.ContainerNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.MediaStore.Model.CorsPolicyNotFoundException">
            <summary>
            The CORS policy that you specified in the request does not exist.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.Model.CorsPolicyNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new CorsPolicyNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MediaStore.Model.CorsPolicyNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CorsPolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.CorsPolicyNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of CorsPolicyNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.CorsPolicyNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CorsPolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.CorsPolicyNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CorsPolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.CorsPolicyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CorsPolicyNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.MediaStore.Model.CorsPolicyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.MediaStore.Model.CorsRule">
            <summary>
            A rule for a CORS policy. You can add up to 100 rules to a CORS policy. If more than
            one rule applies, the service uses the first applicable rule listed.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.CorsRule.AllowedHeaders">
            <summary>
            Gets and sets the property AllowedHeaders. 
            <para>
            Specifies which headers are allowed in a preflight <code>OPTIONS</code> request through
            the <code>Access-Control-Request-Headers</code> header. Each header name that is specified
            in <code>Access-Control-Request-Headers</code> must have a corresponding entry in
            the rule. Only the headers that were requested are sent back. 
            </para>
             
            <para>
            This element can contain only one wildcard character (*).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.CorsRule.AllowedMethods">
            <summary>
            Gets and sets the property AllowedMethods. 
            <para>
            Identifies an HTTP method that the origin that is specified in the rule is allowed
            to execute.
            </para>
             
            <para>
            Each CORS rule must contain at least one <code>AllowedMethods</code> and one <code>AllowedOrigins</code>
            element.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.CorsRule.AllowedOrigins">
            <summary>
            Gets and sets the property AllowedOrigins. 
            <para>
            One or more response headers that you want users to be able to access from their applications
            (for example, from a JavaScript <code>XMLHttpRequest</code> object).
            </para>
             
            <para>
            Each CORS rule must have at least one <code>AllowedOrigins</code> element. The string
            value can include only one wildcard character (*), for example, http://*.example.com.
            Additionally, you can specify only one wildcard character to allow cross-origin access
            for all origins.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.CorsRule.ExposeHeaders">
            <summary>
            Gets and sets the property ExposeHeaders. 
            <para>
            One or more headers in the response that you want users to be able to access from
            their applications (for example, from a JavaScript <code>XMLHttpRequest</code> object).
            </para>
             
            <para>
            This element is optional for each rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.CorsRule.MaxAgeSeconds">
            <summary>
            Gets and sets the property MaxAgeSeconds. 
            <para>
            The time in seconds that your browser caches the preflight response for the specified
            resource.
            </para>
             
            <para>
            A CORS rule can have only one <code>MaxAgeSeconds</code> element.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.CreateContainerRequest">
            <summary>
            Container for the parameters to the CreateContainer operation.
            Creates a storage container to hold objects. A container is similar to a bucket in
            the Amazon S3 service.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.CreateContainerRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name for the container. The name must be from 1 to 255 characters. Container names
            must be unique to your AWS account within a specific region. As an example, you could
            create a container named <code>movies</code> in every region, as long as you don’t
            have an existing container with that name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.CreateContainerRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An array of key:value pairs that you define. These values can be anything that you
            want. Typically, the tag key represents a category (such as "environment") and the
            tag value represents a specific value within that category (such as "test," "development,"
            or "production"). You can add up to 50 tags to each container. For more information
            about tagging, including naming and usage conventions, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/tagging.html">Tagging
            Resources in MediaStore</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.CreateContainerResponse">
            <summary>
            This is the response object from the CreateContainer operation.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.CreateContainerResponse.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            ContainerARN: The Amazon Resource Name (ARN) of the newly created container. The ARN
            has the following format: arn:aws:&lt;region&gt;:&lt;account that owns this container&gt;:container/&lt;name
            of container&gt;. For example: arn:aws:mediastore:us-west-2:111122223333:container/movies
            
            </para>
             
            <para>
            ContainerName: The container name as specified in the request.
            </para>
             
            <para>
            CreationTime: Unix time stamp.
            </para>
             
            <para>
            Status: The status of container creation or deletion. The status is one of the following:
            <code>CREATING</code>, <code>ACTIVE</code>, or <code>DELETING</code>. While the service
            is creating the container, the status is <code>CREATING</code>. When an endpoint is
            available, the status changes to <code>ACTIVE</code>.
            </para>
             
            <para>
            The return value does not include the container's endpoint. To make downstream requests,
            you must obtain this value by using <a>DescribeContainer</a> or <a>ListContainers</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DeleteContainerPolicyRequest">
            <summary>
            Container for the parameters to the DeleteContainerPolicy operation.
            Deletes the access policy that is associated with the specified container.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.DeleteContainerPolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that holds the policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DeleteContainerPolicyResponse">
            <summary>
            This is the response object from the DeleteContainerPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DeleteContainerRequest">
            <summary>
            Container for the parameters to the DeleteContainer operation.
            Deletes the specified container. Before you make a <code>DeleteContainer</code> request,
            delete any objects in the container or in any folders in the container. You can delete
            only empty containers.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.DeleteContainerRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container to delete. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DeleteContainerResponse">
            <summary>
            This is the response object from the DeleteContainer operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DeleteCorsPolicyRequest">
            <summary>
            Container for the parameters to the DeleteCorsPolicy operation.
            Deletes the cross-origin resource sharing (CORS) configuration information that is
            set for the container.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>MediaStore:DeleteCorsPolicy</code>
            action. The container owner has this permission by default and can grant this permission
            to others.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.DeleteCorsPolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container to remove the policy from.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DeleteCorsPolicyResponse">
            <summary>
            This is the response object from the DeleteCorsPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DeleteLifecyclePolicyRequest">
            <summary>
            Container for the parameters to the DeleteLifecyclePolicy operation.
            Removes an object lifecycle policy from a container. It takes up to 20 minutes for
            the change to take effect.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.DeleteLifecyclePolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that holds the object lifecycle policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DeleteLifecyclePolicyResponse">
            <summary>
            This is the response object from the DeleteLifecyclePolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DeleteMetricPolicyRequest">
            <summary>
            Container for the parameters to the DeleteMetricPolicy operation.
            Deletes the metric policy that is associated with the specified container. If there
            is no metric policy associated with the container, MediaStore doesn't send metrics
            to CloudWatch.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.DeleteMetricPolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that is associated with the metric policy that you want
            to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DeleteMetricPolicyResponse">
            <summary>
            This is the response object from the DeleteMetricPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DescribeContainerRequest">
            <summary>
            Container for the parameters to the DescribeContainer operation.
            Retrieves the properties of the requested container. This request is commonly used
            to retrieve the endpoint of a container. An endpoint is a value assigned by the service
            when a new container is created. A container's endpoint does not change after it has
            been assigned. The <code>DescribeContainer</code> request returns a single <code>Container</code>
            object based on <code>ContainerName</code>. To return all <code>Container</code> objects
            that are associated with a specified AWS account, use <a>ListContainers</a>.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.DescribeContainerRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container to query.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.DescribeContainerResponse">
            <summary>
            This is the response object from the DescribeContainer operation.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.DescribeContainerResponse.Container">
            <summary>
            Gets and sets the property Container. 
            <para>
            The name of the queried container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.GetContainerPolicyRequest">
            <summary>
            Container for the parameters to the GetContainerPolicy operation.
            Retrieves the access policy for the specified container. For information about the
            data that is included in an access policy, see the <a href="https://aws.amazon.com/documentation/iam/">AWS
            Identity and Access Management User Guide</a>.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.GetContainerPolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.GetContainerPolicyResponse">
            <summary>
            This is the response object from the GetContainerPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.GetContainerPolicyResponse.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The contents of the access policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.GetCorsPolicyRequest">
            <summary>
            Container for the parameters to the GetCorsPolicy operation.
            Returns the cross-origin resource sharing (CORS) configuration information that is
            set for the container.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>MediaStore:GetCorsPolicy</code>
            action. By default, the container owner has this permission and can grant it to others.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.GetCorsPolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that the policy is assigned to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.GetCorsPolicyResponse">
            <summary>
            This is the response object from the GetCorsPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.GetCorsPolicyResponse.CorsPolicy">
            <summary>
            Gets and sets the property CorsPolicy. 
            <para>
            The CORS policy assigned to the container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.GetLifecyclePolicyRequest">
            <summary>
            Container for the parameters to the GetLifecyclePolicy operation.
            Retrieves the object lifecycle policy that is assigned to a container.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.GetLifecyclePolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that the object lifecycle policy is assigned to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.GetLifecyclePolicyResponse">
            <summary>
            This is the response object from the GetLifecyclePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.GetLifecyclePolicyResponse.LifecyclePolicy">
            <summary>
            Gets and sets the property LifecyclePolicy. 
            <para>
            The object lifecycle policy that is assigned to the container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.GetMetricPolicyRequest">
            <summary>
            Container for the parameters to the GetMetricPolicy operation.
            Returns the metric policy for the specified container.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.GetMetricPolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that is associated with the metric policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.GetMetricPolicyResponse">
            <summary>
            This is the response object from the GetMetricPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.GetMetricPolicyResponse.MetricPolicy">
            <summary>
            Gets and sets the property MetricPolicy. 
            <para>
            The metric policy that is associated with the specific container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.InternalServerErrorException">
            <summary>
            The service is temporarily unavailable.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MediaStore.Model.InternalServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.InternalServerErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.InternalServerErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.InternalServerErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.InternalServerErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalServerErrorException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.MediaStore.Model.InternalServerErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ContainerNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerUnmarshaller">
            <summary>
            Response Unmarshaller for Container Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MediaStore#Model#Container,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.ContainerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsPolicyNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CorsPolicyNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsPolicyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsPolicyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsPolicyNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsRuleMarshaller">
            <summary>
            CorsRule Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsRuleMarshaller.Marshall(Amazon.MediaStore.Model.CorsRule,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsRuleMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsRuleUnmarshaller">
            <summary>
            Response Unmarshaller for CorsRule Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsRuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MediaStore#Model#CorsRule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.CorsRuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.CreateContainerRequestMarshaller">
            <summary>
            CreateContainer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.CreateContainerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.CreateContainerRequestMarshaller.Marshall(Amazon.MediaStore.Model.CreateContainerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.CreateContainerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.CreateContainerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateContainer operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.CreateContainerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.CreateContainerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.CreateContainerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerPolicyRequestMarshaller">
            <summary>
            DeleteContainerPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerPolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.DeleteContainerPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteContainerPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerRequestMarshaller">
            <summary>
            DeleteContainer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerRequestMarshaller.Marshall(Amazon.MediaStore.Model.DeleteContainerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteContainer operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteContainerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteCorsPolicyRequestMarshaller">
            <summary>
            DeleteCorsPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteCorsPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteCorsPolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.DeleteCorsPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteCorsPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteCorsPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCorsPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteCorsPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteCorsPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteCorsPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyRequestMarshaller">
            <summary>
            DeleteLifecyclePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.DeleteLifecyclePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLifecyclePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteLifecyclePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteMetricPolicyRequestMarshaller">
            <summary>
            DeleteMetricPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteMetricPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteMetricPolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.DeleteMetricPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteMetricPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteMetricPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMetricPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteMetricPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteMetricPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DeleteMetricPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DescribeContainerRequestMarshaller">
            <summary>
            DescribeContainer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DescribeContainerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DescribeContainerRequestMarshaller.Marshall(Amazon.MediaStore.Model.DescribeContainerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DescribeContainerRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.DescribeContainerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeContainer operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DescribeContainerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.DescribeContainerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.DescribeContainerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetContainerPolicyRequestMarshaller">
            <summary>
            GetContainerPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetContainerPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetContainerPolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.GetContainerPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetContainerPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetContainerPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetContainerPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetContainerPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetContainerPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetContainerPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetCorsPolicyRequestMarshaller">
            <summary>
            GetCorsPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetCorsPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetCorsPolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.GetCorsPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetCorsPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetCorsPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCorsPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetCorsPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetCorsPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetCorsPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetLifecyclePolicyRequestMarshaller">
            <summary>
            GetLifecyclePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetLifecyclePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetLifecyclePolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.GetLifecyclePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetLifecyclePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetLifecyclePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLifecyclePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetLifecyclePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetLifecyclePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetLifecyclePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetMetricPolicyRequestMarshaller">
            <summary>
            GetMetricPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetMetricPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetMetricPolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.GetMetricPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetMetricPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetMetricPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMetricPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetMetricPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetMetricPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.GetMetricPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServerErrorException Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.InternalServerErrorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListContainersRequestMarshaller">
            <summary>
            ListContainers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListContainersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListContainersRequestMarshaller.Marshall(Amazon.MediaStore.Model.ListContainersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListContainersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListContainersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListContainers operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListContainersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListContainersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListContainersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.MediaStore.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyMarshaller">
            <summary>
            MetricPolicy Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyMarshaller.Marshall(Amazon.MediaStore.Model.MetricPolicy,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyRuleMarshaller">
            <summary>
            MetricPolicyRule Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyRuleMarshaller.Marshall(Amazon.MediaStore.Model.MetricPolicyRule,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyRuleMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyRuleUnmarshaller">
            <summary>
            Response Unmarshaller for MetricPolicyRule Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyRuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MediaStore#Model#MetricPolicyRule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyRuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyUnmarshaller">
            <summary>
            Response Unmarshaller for MetricPolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MediaStore#Model#MetricPolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.MetricPolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.PolicyNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PolicyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PolicyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.PolicyNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutContainerPolicyRequestMarshaller">
            <summary>
            PutContainerPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutContainerPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutContainerPolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.PutContainerPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutContainerPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutContainerPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutContainerPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutContainerPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutContainerPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutContainerPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutCorsPolicyRequestMarshaller">
            <summary>
            PutCorsPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutCorsPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutCorsPolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.PutCorsPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutCorsPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutCorsPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutCorsPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutCorsPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutCorsPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutCorsPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutLifecyclePolicyRequestMarshaller">
            <summary>
            PutLifecyclePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutLifecyclePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutLifecyclePolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.PutLifecyclePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutLifecyclePolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutLifecyclePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutLifecyclePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutLifecyclePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutLifecyclePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutLifecyclePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutMetricPolicyRequestMarshaller">
            <summary>
            PutMetricPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutMetricPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutMetricPolicyRequestMarshaller.Marshall(Amazon.MediaStore.Model.PutMetricPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutMetricPolicyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutMetricPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutMetricPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutMetricPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.PutMetricPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.StartAccessLoggingRequestMarshaller">
            <summary>
            StartAccessLogging Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.StartAccessLoggingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.StartAccessLoggingRequestMarshaller.Marshall(Amazon.MediaStore.Model.StartAccessLoggingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.StartAccessLoggingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.StartAccessLoggingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartAccessLogging operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.StartAccessLoggingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.StartAccessLoggingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.StartAccessLoggingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.StopAccessLoggingRequestMarshaller">
            <summary>
            StopAccessLogging Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.StopAccessLoggingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.StopAccessLoggingRequestMarshaller.Marshall(Amazon.MediaStore.Model.StopAccessLoggingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.StopAccessLoggingRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.StopAccessLoggingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopAccessLogging operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.StopAccessLoggingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.StopAccessLoggingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.StopAccessLoggingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.MediaStore.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.MediaStore.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MediaStore#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.MediaStore.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MediaStore.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MediaStore.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MediaStore.Model.LimitExceededException">
            <summary>
            A service limit has been exceeded.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MediaStore.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.MediaStore.Model.LimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.MediaStore.Model.ListContainersRequest">
            <summary>
            Container for the parameters to the ListContainers operation.
            Lists the properties of all containers in AWS Elemental MediaStore. 
            
             
            <para>
            You can query to receive all the containers in one response. Or you can include the
            <code>MaxResults</code> parameter to receive a limited number of containers in each
            response. In this case, the response includes a token. To get the next set of containers,
            send the command again, this time with the <code>NextToken</code> parameter (with
            the returned token as its value). The next set of responses appears, with a token
            if there are still more containers to receive. 
            </para>
             
            <para>
            See also <a>DescribeContainer</a>, which gets the properties of one container. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.ListContainersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            Enter the maximum number of containers in the response. Use from 1 to 255 characters.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.ListContainersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Only if you used <code>MaxResults</code> in the first command, enter the token (which
            was included in the previous response) to obtain the next set of containers. This
            token is included in a response only if there actually are more containers to list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.ListContainersResponse">
            <summary>
            This is the response object from the ListContainers operation.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.ListContainersResponse.Containers">
            <summary>
            Gets and sets the property Containers. 
            <para>
            The names of the containers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.ListContainersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
             <code>NextToken</code> is the token to use in the next call to <code>ListContainers</code>.
            This token is returned only if you included the <code>MaxResults</code> tag in the
            original command, and only if there are still containers to return. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Returns a list of the tags assigned to the specified container.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.ListTagsForResourceRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The Amazon Resource Name (ARN) for the container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An array of key:value pairs that are assigned to the container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.MetricPolicy">
            <summary>
            The metric policy that is associated with the container. A metric policy allows AWS
            Elemental MediaStore to send metrics to Amazon CloudWatch. In the policy, you must
            indicate whether you want MediaStore to send container-level metrics. You can also
            include rules to define groups of objects that you want MediaStore to send object-level
            metrics for.
            
             
            <para>
            To view examples of how to construct a metric policy for your use case, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/policies-metric-examples.html">Example
            Metric Policies</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.MetricPolicy.ContainerLevelMetrics">
            <summary>
            Gets and sets the property ContainerLevelMetrics. 
            <para>
            A setting to enable or disable metrics at the container level.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.MetricPolicy.MetricPolicyRules">
            <summary>
            Gets and sets the property MetricPolicyRules. 
            <para>
            A parameter that holds an array of rules that enable metrics at the object level.
            This parameter is optional, but if you choose to include it, you must also include
            at least one rule. By default, you can include up to five rules. You can also <a href="https://console.aws.amazon.com/servicequotas/home?region=us-east-1#!/services/mediastore/quotas">request
            a quota increase</a> to allow up to 300 rules per policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.MetricPolicyRule">
            <summary>
            A setting that enables metrics at the object level. Each rule contains an object group
            and an object group name. If the policy includes the MetricPolicyRules parameter,
            you must include at least one rule. Each metric policy can include up to five rules
            by default. You can also <a href="https://console.aws.amazon.com/servicequotas/home?region=us-east-1#!/services/mediastore/quotas">request
            a quota increase</a> to allow up to 300 rules per policy.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.MetricPolicyRule.ObjectGroup">
            <summary>
            Gets and sets the property ObjectGroup. 
            <para>
            A path or file name that defines which objects to include in the group. Wildcards
            (*) are acceptable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.MetricPolicyRule.ObjectGroupName">
            <summary>
            Gets and sets the property ObjectGroupName. 
            <para>
            A name that allows you to refer to the object group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            <summary>
            The policy that you specified in the request does not exist.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.Model.PolicyNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new PolicyNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MediaStore.Model.PolicyNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.PolicyNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of PolicyNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.PolicyNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.PolicyNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PolicyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MediaStore.Model.PolicyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PolicyNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.MediaStore.Model.PolicyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.MediaStore.Model.PutContainerPolicyRequest">
            <summary>
            Container for the parameters to the PutContainerPolicy operation.
            Creates an access policy for the specified container to restrict the users and clients
            that can access it. For information about the data that is included in an access policy,
            see the <a href="https://aws.amazon.com/documentation/iam/">AWS Identity and Access
            Management User Guide</a>.
            
             
            <para>
            For this release of the REST API, you can create only one policy for a container.
            If you enter <code>PutContainerPolicy</code> twice, the second command modifies the
            existing policy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.PutContainerPolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.PutContainerPolicyRequest.Policy">
            <summary>
            Gets and sets the property Policy. 
            <para>
            The contents of the policy, which includes the following: 
            </para>
             <ul> <li> 
            <para>
            One <code>Version</code> tag
            </para>
             </li> <li> 
            <para>
            One <code>Statement</code> tag that contains the standard tags for the policy.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.PutContainerPolicyResponse">
            <summary>
            This is the response object from the PutContainerPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.PutCorsPolicyRequest">
            <summary>
            Container for the parameters to the PutCorsPolicy operation.
            Sets the cross-origin resource sharing (CORS) configuration on a container so that
            the container can service cross-origin requests. For example, you might want to enable
            a request whose origin is http://www.example.com to access your AWS Elemental MediaStore
            container at my.example.container.com by using the browser's XMLHttpRequest capability.
            
             
            <para>
            To enable CORS on a container, you attach a CORS policy to the container. In the CORS
            policy, you configure rules that identify origins and the HTTP methods that can be
            executed on your container. The policy can contain up to 398,000 characters. You can
            add up to 100 rules to a CORS policy. If more than one rule applies, the service uses
            the first applicable rule listed.
            </para>
             
            <para>
            To learn more about CORS, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/cors-policy.html">Cross-Origin
            Resource Sharing (CORS) in AWS Elemental MediaStore</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.PutCorsPolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that you want to assign the CORS policy to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.PutCorsPolicyRequest.CorsPolicy">
            <summary>
            Gets and sets the property CorsPolicy. 
            <para>
            The CORS policy to apply to the container. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.PutCorsPolicyResponse">
            <summary>
            This is the response object from the PutCorsPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.PutLifecyclePolicyRequest">
            <summary>
            Container for the parameters to the PutLifecyclePolicy operation.
            Writes an object lifecycle policy to a container. If the container already has an
            object lifecycle policy, the service replaces the existing policy with the new policy.
            It takes up to 20 minutes for the change to take effect.
            
             
            <para>
            For information about how to construct an object lifecycle policy, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/policies-object-lifecycle-components.html">Components
            of an Object Lifecycle Policy</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.PutLifecyclePolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that you want to assign the object lifecycle policy to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.PutLifecyclePolicyRequest.LifecyclePolicy">
            <summary>
            Gets and sets the property LifecyclePolicy. 
            <para>
            The object lifecycle policy to apply to the container.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.PutLifecyclePolicyResponse">
            <summary>
            This is the response object from the PutLifecyclePolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.PutMetricPolicyRequest">
            <summary>
            Container for the parameters to the PutMetricPolicy operation.
            The metric policy that you want to add to the container. A metric policy allows AWS
            Elemental MediaStore to send metrics to Amazon CloudWatch. It takes up to 20 minutes
            for the new policy to take effect.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.PutMetricPolicyRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that you want to add the metric policy to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.PutMetricPolicyRequest.MetricPolicy">
            <summary>
            Gets and sets the property MetricPolicy. 
            <para>
            The metric policy that you want to associate with the container. In the policy, you
            must indicate whether you want MediaStore to send container-level metrics. You can
            also include up to five rules to define groups of objects that you want MediaStore
            to send object-level metrics for. If you include rules in the policy, construct each
            rule with both of the following:
            </para>
             <ul> <li> 
            <para>
            An object group that defines which objects to include in the group. The definition
            can be a path or a file name, but it can't have more than 900 characters. Valid characters
            are: a-z, A-Z, 0-9, _ (underscore), = (equal), : (colon), . (period), - (hyphen),
            ~ (tilde), / (forward slash), and * (asterisk). Wildcards (*) are acceptable.
            </para>
             </li> <li> 
            <para>
            An object group name that allows you to refer to the object group. The name can't
            have more than 30 characters. Valid characters are: a-z, A-Z, 0-9, and _ (underscore).
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.PutMetricPolicyResponse">
            <summary>
            This is the response object from the PutMetricPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.StartAccessLoggingRequest">
            <summary>
            Container for the parameters to the StartAccessLogging operation.
            Starts access logging on the specified container. When you enable access logging on
            a container, MediaStore delivers access logs for objects stored in that container
            to Amazon CloudWatch Logs.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.StartAccessLoggingRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that you want to start access logging on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.StartAccessLoggingResponse">
            <summary>
            This is the response object from the StartAccessLogging operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.StopAccessLoggingRequest">
            <summary>
            Container for the parameters to the StopAccessLogging operation.
            Stops access logging on the specified container. When you stop access logging on a
            container, MediaStore stops sending access logs to Amazon CloudWatch Logs. These access
            logs are not saved and are not retrievable.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.StopAccessLoggingRequest.ContainerName">
            <summary>
            Gets and sets the property ContainerName. 
            <para>
            The name of the container that you want to stop access logging on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.StopAccessLoggingResponse">
            <summary>
            This is the response object from the StopAccessLogging operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.Tag">
            <summary>
            A collection of tags associated with a container. Each tag consists of a key:value
            pair, which can be anything you define. Typically, the tag key represents a category
            (such as "environment") and the tag value represents a specific value within that
            category (such as "test," "development," or "production"). You can add up to 50 tags
            to each container. For more information about tagging, including naming and usage
            conventions, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/tagging.html">Tagging
            Resources in MediaStore</a>.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Part of the key:value pair that defines a tag. You can use a tag key to describe a
            category of information, such as "customer." Tag keys are case-sensitive.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Part of the key:value pair that defines a tag. You can use a tag value to describe
            a specific value within a category, such as "companyA" or "companyB." Tag values are
            case-sensitive.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds tags to the specified AWS Elemental MediaStore container. Tags are key:value
            pairs that you can associate with AWS resources. For example, the tag key might be
            "customer" and the tag value might be "companyA." You can specify one or more tags
            to add to each container. You can add up to 50 tags to each container. For more information
            about tagging, including naming and usage conventions, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/tagging.html">Tagging
            Resources in MediaStore</a>.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.TagResourceRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The Amazon Resource Name (ARN) for the container. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An array of key:value pairs that you want to add to the container. You need to specify
            only the tags that you want to add or update. For example, suppose a container already
            has two tags (customer:CompanyA and priority:High). You want to change the priority
            tag and also add a third tag (type:Contract). For TagResource, you specify the following
            tags: priority:Medium, type:Contract. The result is that your container has three
            tags: customer:CompanyA, priority:Medium, and type:Contract.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes tags from the specified container. You can specify one or more tags to remove.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.UntagResourceRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The Amazon Resource Name (ARN) for the container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A comma-separated list of keys for tags that you want to remove from the container.
            For example, if your container has two tags (customer:CompanyA and priority:High)
            and you want to remove one of the tags (priority:High), you specify the key for the
            tag that you want to remove (priority).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.IListContainersPaginator">
             <summary>
             Paginator for the ListContainers operation
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.IListContainersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.IMediaStorePaginatorFactory">
             <summary>
             Paginators for the MediaStore service
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.Model.IMediaStorePaginatorFactory.ListContainers(Amazon.MediaStore.Model.ListContainersRequest)">
             <summary>
             Paginator for ListContainers operation
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.ListContainersPaginator">
            <summary>
            Base class for ListContainers paginators.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.Model.ListContainersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.Model.MediaStorePaginatorFactory">
             <summary>
             Paginators for the MediaStore service
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.Model.MediaStorePaginatorFactory.ListContainers(Amazon.MediaStore.Model.ListContainersRequest)">
             <summary>
             Paginator for ListContainers operation
            </summary>
        </member>
        <member name="T:Amazon.MediaStore.ContainerLevelMetrics">
            <summary>
            Constants used for properties of type ContainerLevelMetrics.
            </summary>
        </member>
        <member name="F:Amazon.MediaStore.ContainerLevelMetrics.DISABLED">
            <summary>
            Constant DISABLED for ContainerLevelMetrics
            </summary>
        </member>
        <member name="F:Amazon.MediaStore.ContainerLevelMetrics.ENABLED">
            <summary>
            Constant ENABLED for ContainerLevelMetrics
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.ContainerLevelMetrics.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.ContainerLevelMetrics.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MediaStore.ContainerLevelMetrics.op_Implicit(System.String)~Amazon.MediaStore.ContainerLevelMetrics">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MediaStore.ContainerStatus">
            <summary>
            Constants used for properties of type ContainerStatus.
            </summary>
        </member>
        <member name="F:Amazon.MediaStore.ContainerStatus.ACTIVE">
            <summary>
            Constant ACTIVE for ContainerStatus
            </summary>
        </member>
        <member name="F:Amazon.MediaStore.ContainerStatus.CREATING">
            <summary>
            Constant CREATING for ContainerStatus
            </summary>
        </member>
        <member name="F:Amazon.MediaStore.ContainerStatus.DELETING">
            <summary>
            Constant DELETING for ContainerStatus
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.ContainerStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.ContainerStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MediaStore.ContainerStatus.op_Implicit(System.String)~Amazon.MediaStore.ContainerStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MediaStore.MethodName">
            <summary>
            Constants used for properties of type MethodName.
            </summary>
        </member>
        <member name="F:Amazon.MediaStore.MethodName.DELETE">
            <summary>
            Constant DELETE for MethodName
            </summary>
        </member>
        <member name="F:Amazon.MediaStore.MethodName.GET">
            <summary>
            Constant GET for MethodName
            </summary>
        </member>
        <member name="F:Amazon.MediaStore.MethodName.HEAD">
            <summary>
            Constant HEAD for MethodName
            </summary>
        </member>
        <member name="F:Amazon.MediaStore.MethodName.PUT">
            <summary>
            Constant PUT for MethodName
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.MethodName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.MethodName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MediaStore.MethodName.op_Implicit(System.String)~Amazon.MediaStore.MethodName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MediaStore.AmazonMediaStoreClient">
             <summary>
             Implementation for accessing MediaStore
            
             An AWS Elemental MediaStore container is a namespace that holds folders and objects.
             You use a container endpoint to create, read, and delete objects.
             </summary>
        </member>
        <member name="P:Amazon.MediaStore.AmazonMediaStoreClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor">
             <summary>
             Constructs AmazonMediaStoreClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonMediaStoreClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(Amazon.MediaStore.AmazonMediaStoreConfig)">
             <summary>
             Constructs AmazonMediaStoreClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonMediaStoreClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonMediaStoreClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonMediaStoreClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.MediaStore.AmazonMediaStoreConfig)">
            <summary>
            Constructs AmazonMediaStoreClient with AWS Credentials and an
            AmazonMediaStoreClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonMediaStoreClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonMediaStoreClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonMediaStoreClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(System.String,System.String,Amazon.MediaStore.AmazonMediaStoreConfig)">
            <summary>
            Constructs AmazonMediaStoreClient with AWS Access Key ID, AWS Secret Key and an
            AmazonMediaStoreClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonMediaStoreClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonMediaStoreClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonMediaStoreClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.#ctor(System.String,System.String,System.String,Amazon.MediaStore.AmazonMediaStoreConfig)">
            <summary>
            Constructs AmazonMediaStoreClient with AWS Access Key ID, AWS Secret Key and an
            AmazonMediaStoreClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonMediaStoreClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.MediaStore.AmazonMediaStoreClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.CreateContainer(Amazon.MediaStore.Model.CreateContainerRequest)">
            <summary>
            Creates a storage container to hold objects. A container is similar to a bucket in
            the Amazon S3 service.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateContainer service method.</param>
            
            <returns>The response from the CreateContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.LimitExceededException">
            A service limit has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/CreateContainer">REST API Reference for CreateContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.CreateContainerAsync(Amazon.MediaStore.Model.CreateContainerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a storage container to hold objects. A container is similar to a bucket in
            the Amazon S3 service.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateContainer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.LimitExceededException">
            A service limit has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/CreateContainer">REST API Reference for CreateContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DeleteContainer(Amazon.MediaStore.Model.DeleteContainerRequest)">
            <summary>
            Deletes the specified container. Before you make a <code>DeleteContainer</code> request,
            delete any objects in the container or in any folders in the container. You can delete
            only empty containers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteContainer service method.</param>
            
            <returns>The response from the DeleteContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteContainer">REST API Reference for DeleteContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DeleteContainerAsync(Amazon.MediaStore.Model.DeleteContainerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified container. Before you make a <code>DeleteContainer</code> request,
            delete any objects in the container or in any folders in the container. You can delete
            only empty containers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteContainer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteContainer">REST API Reference for DeleteContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DeleteContainerPolicy(Amazon.MediaStore.Model.DeleteContainerPolicyRequest)">
            <summary>
            Deletes the access policy that is associated with the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteContainerPolicy service method.</param>
            
            <returns>The response from the DeleteContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteContainerPolicy">REST API Reference for DeleteContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DeleteContainerPolicyAsync(Amazon.MediaStore.Model.DeleteContainerPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the access policy that is associated with the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteContainerPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteContainerPolicy">REST API Reference for DeleteContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DeleteCorsPolicy(Amazon.MediaStore.Model.DeleteCorsPolicyRequest)">
            <summary>
            Deletes the cross-origin resource sharing (CORS) configuration information that is
            set for the container.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>MediaStore:DeleteCorsPolicy</code>
            action. The container owner has this permission by default and can grant this permission
            to others.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCorsPolicy service method.</param>
            
            <returns>The response from the DeleteCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.CorsPolicyNotFoundException">
            The CORS policy that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteCorsPolicy">REST API Reference for DeleteCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DeleteCorsPolicyAsync(Amazon.MediaStore.Model.DeleteCorsPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the cross-origin resource sharing (CORS) configuration information that is
            set for the container.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>MediaStore:DeleteCorsPolicy</code>
            action. The container owner has this permission by default and can grant this permission
            to others.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCorsPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.CorsPolicyNotFoundException">
            The CORS policy that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteCorsPolicy">REST API Reference for DeleteCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DeleteLifecyclePolicy(Amazon.MediaStore.Model.DeleteLifecyclePolicyRequest)">
            <summary>
            Removes an object lifecycle policy from a container. It takes up to 20 minutes for
            the change to take effect.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLifecyclePolicy service method.</param>
            
            <returns>The response from the DeleteLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteLifecyclePolicy">REST API Reference for DeleteLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DeleteLifecyclePolicyAsync(Amazon.MediaStore.Model.DeleteLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Removes an object lifecycle policy from a container. It takes up to 20 minutes for
            the change to take effect.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteLifecyclePolicy">REST API Reference for DeleteLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DeleteMetricPolicy(Amazon.MediaStore.Model.DeleteMetricPolicyRequest)">
            <summary>
            Deletes the metric policy that is associated with the specified container. If there
            is no metric policy associated with the container, MediaStore doesn't send metrics
            to CloudWatch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMetricPolicy service method.</param>
            
            <returns>The response from the DeleteMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteMetricPolicy">REST API Reference for DeleteMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DeleteMetricPolicyAsync(Amazon.MediaStore.Model.DeleteMetricPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the metric policy that is associated with the specified container. If there
            is no metric policy associated with the container, MediaStore doesn't send metrics
            to CloudWatch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMetricPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteMetricPolicy">REST API Reference for DeleteMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DescribeContainer(Amazon.MediaStore.Model.DescribeContainerRequest)">
            <summary>
            Retrieves the properties of the requested container. This request is commonly used
            to retrieve the endpoint of a container. An endpoint is a value assigned by the service
            when a new container is created. A container's endpoint does not change after it has
            been assigned. The <code>DescribeContainer</code> request returns a single <code>Container</code>
            object based on <code>ContainerName</code>. To return all <code>Container</code> objects
            that are associated with a specified AWS account, use <a>ListContainers</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainer service method.</param>
            
            <returns>The response from the DescribeContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DescribeContainer">REST API Reference for DescribeContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.DescribeContainerAsync(Amazon.MediaStore.Model.DescribeContainerRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the properties of the requested container. This request is commonly used
            to retrieve the endpoint of a container. An endpoint is a value assigned by the service
            when a new container is created. A container's endpoint does not change after it has
            been assigned. The <code>DescribeContainer</code> request returns a single <code>Container</code>
            object based on <code>ContainerName</code>. To return all <code>Container</code> objects
            that are associated with a specified AWS account, use <a>ListContainers</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DescribeContainer">REST API Reference for DescribeContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.GetContainerPolicy(Amazon.MediaStore.Model.GetContainerPolicyRequest)">
            <summary>
            Retrieves the access policy for the specified container. For information about the
            data that is included in an access policy, see the <a href="https://aws.amazon.com/documentation/iam/">AWS
            Identity and Access Management User Guide</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetContainerPolicy service method.</param>
            
            <returns>The response from the GetContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetContainerPolicy">REST API Reference for GetContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.GetContainerPolicyAsync(Amazon.MediaStore.Model.GetContainerPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the access policy for the specified container. For information about the
            data that is included in an access policy, see the <a href="https://aws.amazon.com/documentation/iam/">AWS
            Identity and Access Management User Guide</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetContainerPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetContainerPolicy">REST API Reference for GetContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.GetCorsPolicy(Amazon.MediaStore.Model.GetCorsPolicyRequest)">
            <summary>
            Returns the cross-origin resource sharing (CORS) configuration information that is
            set for the container.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>MediaStore:GetCorsPolicy</code>
            action. By default, the container owner has this permission and can grant it to others.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCorsPolicy service method.</param>
            
            <returns>The response from the GetCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.CorsPolicyNotFoundException">
            The CORS policy that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetCorsPolicy">REST API Reference for GetCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.GetCorsPolicyAsync(Amazon.MediaStore.Model.GetCorsPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the cross-origin resource sharing (CORS) configuration information that is
            set for the container.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>MediaStore:GetCorsPolicy</code>
            action. By default, the container owner has this permission and can grant it to others.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCorsPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.CorsPolicyNotFoundException">
            The CORS policy that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetCorsPolicy">REST API Reference for GetCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.GetLifecyclePolicy(Amazon.MediaStore.Model.GetLifecyclePolicyRequest)">
            <summary>
            Retrieves the object lifecycle policy that is assigned to a container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLifecyclePolicy service method.</param>
            
            <returns>The response from the GetLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetLifecyclePolicy">REST API Reference for GetLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.GetLifecyclePolicyAsync(Amazon.MediaStore.Model.GetLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the object lifecycle policy that is assigned to a container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetLifecyclePolicy">REST API Reference for GetLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.GetMetricPolicy(Amazon.MediaStore.Model.GetMetricPolicyRequest)">
            <summary>
            Returns the metric policy for the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricPolicy service method.</param>
            
            <returns>The response from the GetMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetMetricPolicy">REST API Reference for GetMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.GetMetricPolicyAsync(Amazon.MediaStore.Model.GetMetricPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the metric policy for the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetMetricPolicy">REST API Reference for GetMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.ListContainers(Amazon.MediaStore.Model.ListContainersRequest)">
            <summary>
            Lists the properties of all containers in AWS Elemental MediaStore. 
            
             
            <para>
            You can query to receive all the containers in one response. Or you can include the
            <code>MaxResults</code> parameter to receive a limited number of containers in each
            response. In this case, the response includes a token. To get the next set of containers,
            send the command again, this time with the <code>NextToken</code> parameter (with
            the returned token as its value). The next set of responses appears, with a token
            if there are still more containers to receive. 
            </para>
             
            <para>
            See also <a>DescribeContainer</a>, which gets the properties of one container. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainers service method.</param>
            
            <returns>The response from the ListContainers service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/ListContainers">REST API Reference for ListContainers Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.ListContainersAsync(Amazon.MediaStore.Model.ListContainersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the properties of all containers in AWS Elemental MediaStore. 
            
             
            <para>
            You can query to receive all the containers in one response. Or you can include the
            <code>MaxResults</code> parameter to receive a limited number of containers in each
            response. In this case, the response includes a token. To get the next set of containers,
            send the command again, this time with the <code>NextToken</code> parameter (with
            the returned token as its value). The next set of responses appears, with a token
            if there are still more containers to receive. 
            </para>
             
            <para>
            See also <a>DescribeContainer</a>, which gets the properties of one container. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListContainers service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/ListContainers">REST API Reference for ListContainers Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.ListTagsForResource(Amazon.MediaStore.Model.ListTagsForResourceRequest)">
            <summary>
            Returns a list of the tags assigned to the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.ListTagsForResourceAsync(Amazon.MediaStore.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the tags assigned to the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.PutContainerPolicy(Amazon.MediaStore.Model.PutContainerPolicyRequest)">
            <summary>
            Creates an access policy for the specified container to restrict the users and clients
            that can access it. For information about the data that is included in an access policy,
            see the <a href="https://aws.amazon.com/documentation/iam/">AWS Identity and Access
            Management User Guide</a>.
            
             
            <para>
            For this release of the REST API, you can create only one policy for a container.
            If you enter <code>PutContainerPolicy</code> twice, the second command modifies the
            existing policy. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutContainerPolicy service method.</param>
            
            <returns>The response from the PutContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutContainerPolicy">REST API Reference for PutContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.PutContainerPolicyAsync(Amazon.MediaStore.Model.PutContainerPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an access policy for the specified container to restrict the users and clients
            that can access it. For information about the data that is included in an access policy,
            see the <a href="https://aws.amazon.com/documentation/iam/">AWS Identity and Access
            Management User Guide</a>.
            
             
            <para>
            For this release of the REST API, you can create only one policy for a container.
            If you enter <code>PutContainerPolicy</code> twice, the second command modifies the
            existing policy. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutContainerPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutContainerPolicy">REST API Reference for PutContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.PutCorsPolicy(Amazon.MediaStore.Model.PutCorsPolicyRequest)">
            <summary>
            Sets the cross-origin resource sharing (CORS) configuration on a container so that
            the container can service cross-origin requests. For example, you might want to enable
            a request whose origin is http://www.example.com to access your AWS Elemental MediaStore
            container at my.example.container.com by using the browser's XMLHttpRequest capability.
            
             
            <para>
            To enable CORS on a container, you attach a CORS policy to the container. In the CORS
            policy, you configure rules that identify origins and the HTTP methods that can be
            executed on your container. The policy can contain up to 398,000 characters. You can
            add up to 100 rules to a CORS policy. If more than one rule applies, the service uses
            the first applicable rule listed.
            </para>
             
            <para>
            To learn more about CORS, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/cors-policy.html">Cross-Origin
            Resource Sharing (CORS) in AWS Elemental MediaStore</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutCorsPolicy service method.</param>
            
            <returns>The response from the PutCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutCorsPolicy">REST API Reference for PutCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.PutCorsPolicyAsync(Amazon.MediaStore.Model.PutCorsPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the cross-origin resource sharing (CORS) configuration on a container so that
            the container can service cross-origin requests. For example, you might want to enable
            a request whose origin is http://www.example.com to access your AWS Elemental MediaStore
            container at my.example.container.com by using the browser's XMLHttpRequest capability.
            
             
            <para>
            To enable CORS on a container, you attach a CORS policy to the container. In the CORS
            policy, you configure rules that identify origins and the HTTP methods that can be
            executed on your container. The policy can contain up to 398,000 characters. You can
            add up to 100 rules to a CORS policy. If more than one rule applies, the service uses
            the first applicable rule listed.
            </para>
             
            <para>
            To learn more about CORS, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/cors-policy.html">Cross-Origin
            Resource Sharing (CORS) in AWS Elemental MediaStore</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutCorsPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutCorsPolicy">REST API Reference for PutCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.PutLifecyclePolicy(Amazon.MediaStore.Model.PutLifecyclePolicyRequest)">
            <summary>
            Writes an object lifecycle policy to a container. If the container already has an
            object lifecycle policy, the service replaces the existing policy with the new policy.
            It takes up to 20 minutes for the change to take effect.
            
             
            <para>
            For information about how to construct an object lifecycle policy, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/policies-object-lifecycle-components.html">Components
            of an Object Lifecycle Policy</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLifecyclePolicy service method.</param>
            
            <returns>The response from the PutLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutLifecyclePolicy">REST API Reference for PutLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.PutLifecyclePolicyAsync(Amazon.MediaStore.Model.PutLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Writes an object lifecycle policy to a container. If the container already has an
            object lifecycle policy, the service replaces the existing policy with the new policy.
            It takes up to 20 minutes for the change to take effect.
            
             
            <para>
            For information about how to construct an object lifecycle policy, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/policies-object-lifecycle-components.html">Components
            of an Object Lifecycle Policy</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutLifecyclePolicy">REST API Reference for PutLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.PutMetricPolicy(Amazon.MediaStore.Model.PutMetricPolicyRequest)">
            <summary>
            The metric policy that you want to add to the container. A metric policy allows AWS
            Elemental MediaStore to send metrics to Amazon CloudWatch. It takes up to 20 minutes
            for the new policy to take effect.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricPolicy service method.</param>
            
            <returns>The response from the PutMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutMetricPolicy">REST API Reference for PutMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.PutMetricPolicyAsync(Amazon.MediaStore.Model.PutMetricPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            The metric policy that you want to add to the container. A metric policy allows AWS
            Elemental MediaStore to send metrics to Amazon CloudWatch. It takes up to 20 minutes
            for the new policy to take effect.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutMetricPolicy">REST API Reference for PutMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.StartAccessLogging(Amazon.MediaStore.Model.StartAccessLoggingRequest)">
            <summary>
            Starts access logging on the specified container. When you enable access logging on
            a container, MediaStore delivers access logs for objects stored in that container
            to Amazon CloudWatch Logs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartAccessLogging service method.</param>
            
            <returns>The response from the StartAccessLogging service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/StartAccessLogging">REST API Reference for StartAccessLogging Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.StartAccessLoggingAsync(Amazon.MediaStore.Model.StartAccessLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Starts access logging on the specified container. When you enable access logging on
            a container, MediaStore delivers access logs for objects stored in that container
            to Amazon CloudWatch Logs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartAccessLogging service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartAccessLogging service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/StartAccessLogging">REST API Reference for StartAccessLogging Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.StopAccessLogging(Amazon.MediaStore.Model.StopAccessLoggingRequest)">
            <summary>
            Stops access logging on the specified container. When you stop access logging on a
            container, MediaStore stops sending access logs to Amazon CloudWatch Logs. These access
            logs are not saved and are not retrievable.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopAccessLogging service method.</param>
            
            <returns>The response from the StopAccessLogging service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/StopAccessLogging">REST API Reference for StopAccessLogging Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.StopAccessLoggingAsync(Amazon.MediaStore.Model.StopAccessLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Stops access logging on the specified container. When you stop access logging on a
            container, MediaStore stops sending access logs to Amazon CloudWatch Logs. These access
            logs are not saved and are not retrievable.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopAccessLogging service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopAccessLogging service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/StopAccessLogging">REST API Reference for StopAccessLogging Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.TagResource(Amazon.MediaStore.Model.TagResourceRequest)">
            <summary>
            Adds tags to the specified AWS Elemental MediaStore container. Tags are key:value
            pairs that you can associate with AWS resources. For example, the tag key might be
            "customer" and the tag value might be "companyA." You can specify one or more tags
            to add to each container. You can add up to 50 tags to each container. For more information
            about tagging, including naming and usage conventions, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/tagging.html">Tagging
            Resources in MediaStore</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.TagResourceAsync(Amazon.MediaStore.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds tags to the specified AWS Elemental MediaStore container. Tags are key:value
            pairs that you can associate with AWS resources. For example, the tag key might be
            "customer" and the tag value might be "companyA." You can specify one or more tags
            to add to each container. You can add up to 50 tags to each container. For more information
            about tagging, including naming and usage conventions, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/tagging.html">Tagging
            Resources in MediaStore</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.UntagResource(Amazon.MediaStore.Model.UntagResourceRequest)">
            <summary>
            Removes tags from the specified container. You can specify one or more tags to remove.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.AmazonMediaStoreClient.UntagResourceAsync(Amazon.MediaStore.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags from the specified container. You can specify one or more tags to remove.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="T:Amazon.MediaStore.IAmazonMediaStore">
             <summary>
             Interface for accessing MediaStore
            
             An AWS Elemental MediaStore container is a namespace that holds folders and objects.
             You use a container endpoint to create, read, and delete objects.
             </summary>
        </member>
        <member name="P:Amazon.MediaStore.IAmazonMediaStore.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.CreateContainer(Amazon.MediaStore.Model.CreateContainerRequest)">
            <summary>
            Creates a storage container to hold objects. A container is similar to a bucket in
            the Amazon S3 service.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateContainer service method.</param>
            
            <returns>The response from the CreateContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.LimitExceededException">
            A service limit has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/CreateContainer">REST API Reference for CreateContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.CreateContainerAsync(Amazon.MediaStore.Model.CreateContainerRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a storage container to hold objects. A container is similar to a bucket in
            the Amazon S3 service.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateContainer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.LimitExceededException">
            A service limit has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/CreateContainer">REST API Reference for CreateContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DeleteContainer(Amazon.MediaStore.Model.DeleteContainerRequest)">
            <summary>
            Deletes the specified container. Before you make a <code>DeleteContainer</code> request,
            delete any objects in the container or in any folders in the container. You can delete
            only empty containers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteContainer service method.</param>
            
            <returns>The response from the DeleteContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteContainer">REST API Reference for DeleteContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DeleteContainerAsync(Amazon.MediaStore.Model.DeleteContainerRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified container. Before you make a <code>DeleteContainer</code> request,
            delete any objects in the container or in any folders in the container. You can delete
            only empty containers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteContainer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteContainer">REST API Reference for DeleteContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DeleteContainerPolicy(Amazon.MediaStore.Model.DeleteContainerPolicyRequest)">
            <summary>
            Deletes the access policy that is associated with the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteContainerPolicy service method.</param>
            
            <returns>The response from the DeleteContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteContainerPolicy">REST API Reference for DeleteContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DeleteContainerPolicyAsync(Amazon.MediaStore.Model.DeleteContainerPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the access policy that is associated with the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteContainerPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteContainerPolicy">REST API Reference for DeleteContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DeleteCorsPolicy(Amazon.MediaStore.Model.DeleteCorsPolicyRequest)">
            <summary>
            Deletes the cross-origin resource sharing (CORS) configuration information that is
            set for the container.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>MediaStore:DeleteCorsPolicy</code>
            action. The container owner has this permission by default and can grant this permission
            to others.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCorsPolicy service method.</param>
            
            <returns>The response from the DeleteCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.CorsPolicyNotFoundException">
            The CORS policy that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteCorsPolicy">REST API Reference for DeleteCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DeleteCorsPolicyAsync(Amazon.MediaStore.Model.DeleteCorsPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the cross-origin resource sharing (CORS) configuration information that is
            set for the container.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>MediaStore:DeleteCorsPolicy</code>
            action. The container owner has this permission by default and can grant this permission
            to others.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCorsPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.CorsPolicyNotFoundException">
            The CORS policy that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteCorsPolicy">REST API Reference for DeleteCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DeleteLifecyclePolicy(Amazon.MediaStore.Model.DeleteLifecyclePolicyRequest)">
            <summary>
            Removes an object lifecycle policy from a container. It takes up to 20 minutes for
            the change to take effect.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLifecyclePolicy service method.</param>
            
            <returns>The response from the DeleteLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteLifecyclePolicy">REST API Reference for DeleteLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DeleteLifecyclePolicyAsync(Amazon.MediaStore.Model.DeleteLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Removes an object lifecycle policy from a container. It takes up to 20 minutes for
            the change to take effect.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteLifecyclePolicy">REST API Reference for DeleteLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DeleteMetricPolicy(Amazon.MediaStore.Model.DeleteMetricPolicyRequest)">
            <summary>
            Deletes the metric policy that is associated with the specified container. If there
            is no metric policy associated with the container, MediaStore doesn't send metrics
            to CloudWatch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMetricPolicy service method.</param>
            
            <returns>The response from the DeleteMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteMetricPolicy">REST API Reference for DeleteMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DeleteMetricPolicyAsync(Amazon.MediaStore.Model.DeleteMetricPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the metric policy that is associated with the specified container. If there
            is no metric policy associated with the container, MediaStore doesn't send metrics
            to CloudWatch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMetricPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DeleteMetricPolicy">REST API Reference for DeleteMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DescribeContainer(Amazon.MediaStore.Model.DescribeContainerRequest)">
            <summary>
            Retrieves the properties of the requested container. This request is commonly used
            to retrieve the endpoint of a container. An endpoint is a value assigned by the service
            when a new container is created. A container's endpoint does not change after it has
            been assigned. The <code>DescribeContainer</code> request returns a single <code>Container</code>
            object based on <code>ContainerName</code>. To return all <code>Container</code> objects
            that are associated with a specified AWS account, use <a>ListContainers</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainer service method.</param>
            
            <returns>The response from the DescribeContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DescribeContainer">REST API Reference for DescribeContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.DescribeContainerAsync(Amazon.MediaStore.Model.DescribeContainerRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the properties of the requested container. This request is commonly used
            to retrieve the endpoint of a container. An endpoint is a value assigned by the service
            when a new container is created. A container's endpoint does not change after it has
            been assigned. The <code>DescribeContainer</code> request returns a single <code>Container</code>
            object based on <code>ContainerName</code>. To return all <code>Container</code> objects
            that are associated with a specified AWS account, use <a>ListContainers</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeContainer service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeContainer service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/DescribeContainer">REST API Reference for DescribeContainer Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.GetContainerPolicy(Amazon.MediaStore.Model.GetContainerPolicyRequest)">
            <summary>
            Retrieves the access policy for the specified container. For information about the
            data that is included in an access policy, see the <a href="https://aws.amazon.com/documentation/iam/">AWS
            Identity and Access Management User Guide</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetContainerPolicy service method.</param>
            
            <returns>The response from the GetContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetContainerPolicy">REST API Reference for GetContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.GetContainerPolicyAsync(Amazon.MediaStore.Model.GetContainerPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the access policy for the specified container. For information about the
            data that is included in an access policy, see the <a href="https://aws.amazon.com/documentation/iam/">AWS
            Identity and Access Management User Guide</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetContainerPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetContainerPolicy">REST API Reference for GetContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.GetCorsPolicy(Amazon.MediaStore.Model.GetCorsPolicyRequest)">
            <summary>
            Returns the cross-origin resource sharing (CORS) configuration information that is
            set for the container.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>MediaStore:GetCorsPolicy</code>
            action. By default, the container owner has this permission and can grant it to others.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCorsPolicy service method.</param>
            
            <returns>The response from the GetCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.CorsPolicyNotFoundException">
            The CORS policy that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetCorsPolicy">REST API Reference for GetCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.GetCorsPolicyAsync(Amazon.MediaStore.Model.GetCorsPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the cross-origin resource sharing (CORS) configuration information that is
            set for the container.
            
             
            <para>
            To use this operation, you must have permission to perform the <code>MediaStore:GetCorsPolicy</code>
            action. By default, the container owner has this permission and can grant it to others.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCorsPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.CorsPolicyNotFoundException">
            The CORS policy that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetCorsPolicy">REST API Reference for GetCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.GetLifecyclePolicy(Amazon.MediaStore.Model.GetLifecyclePolicyRequest)">
            <summary>
            Retrieves the object lifecycle policy that is assigned to a container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLifecyclePolicy service method.</param>
            
            <returns>The response from the GetLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetLifecyclePolicy">REST API Reference for GetLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.GetLifecyclePolicyAsync(Amazon.MediaStore.Model.GetLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the object lifecycle policy that is assigned to a container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetLifecyclePolicy">REST API Reference for GetLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.GetMetricPolicy(Amazon.MediaStore.Model.GetMetricPolicyRequest)">
            <summary>
            Returns the metric policy for the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricPolicy service method.</param>
            
            <returns>The response from the GetMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetMetricPolicy">REST API Reference for GetMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.GetMetricPolicyAsync(Amazon.MediaStore.Model.GetMetricPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the metric policy for the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMetricPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.PolicyNotFoundException">
            The policy that you specified in the request does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetMetricPolicy">REST API Reference for GetMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.ListContainers(Amazon.MediaStore.Model.ListContainersRequest)">
            <summary>
            Lists the properties of all containers in AWS Elemental MediaStore. 
            
             
            <para>
            You can query to receive all the containers in one response. Or you can include the
            <code>MaxResults</code> parameter to receive a limited number of containers in each
            response. In this case, the response includes a token. To get the next set of containers,
            send the command again, this time with the <code>NextToken</code> parameter (with
            the returned token as its value). The next set of responses appears, with a token
            if there are still more containers to receive. 
            </para>
             
            <para>
            See also <a>DescribeContainer</a>, which gets the properties of one container. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainers service method.</param>
            
            <returns>The response from the ListContainers service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/ListContainers">REST API Reference for ListContainers Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.ListContainersAsync(Amazon.MediaStore.Model.ListContainersRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the properties of all containers in AWS Elemental MediaStore. 
            
             
            <para>
            You can query to receive all the containers in one response. Or you can include the
            <code>MaxResults</code> parameter to receive a limited number of containers in each
            response. In this case, the response includes a token. To get the next set of containers,
            send the command again, this time with the <code>NextToken</code> parameter (with
            the returned token as its value). The next set of responses appears, with a token
            if there are still more containers to receive. 
            </para>
             
            <para>
            See also <a>DescribeContainer</a>, which gets the properties of one container. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListContainers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListContainers service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/ListContainers">REST API Reference for ListContainers Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.ListTagsForResource(Amazon.MediaStore.Model.ListTagsForResourceRequest)">
            <summary>
            Returns a list of the tags assigned to the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.ListTagsForResourceAsync(Amazon.MediaStore.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the tags assigned to the specified container.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.PutContainerPolicy(Amazon.MediaStore.Model.PutContainerPolicyRequest)">
            <summary>
            Creates an access policy for the specified container to restrict the users and clients
            that can access it. For information about the data that is included in an access policy,
            see the <a href="https://aws.amazon.com/documentation/iam/">AWS Identity and Access
            Management User Guide</a>.
            
             
            <para>
            For this release of the REST API, you can create only one policy for a container.
            If you enter <code>PutContainerPolicy</code> twice, the second command modifies the
            existing policy. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutContainerPolicy service method.</param>
            
            <returns>The response from the PutContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutContainerPolicy">REST API Reference for PutContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.PutContainerPolicyAsync(Amazon.MediaStore.Model.PutContainerPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an access policy for the specified container to restrict the users and clients
            that can access it. For information about the data that is included in an access policy,
            see the <a href="https://aws.amazon.com/documentation/iam/">AWS Identity and Access
            Management User Guide</a>.
            
             
            <para>
            For this release of the REST API, you can create only one policy for a container.
            If you enter <code>PutContainerPolicy</code> twice, the second command modifies the
            existing policy. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutContainerPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutContainerPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutContainerPolicy">REST API Reference for PutContainerPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.PutCorsPolicy(Amazon.MediaStore.Model.PutCorsPolicyRequest)">
            <summary>
            Sets the cross-origin resource sharing (CORS) configuration on a container so that
            the container can service cross-origin requests. For example, you might want to enable
            a request whose origin is http://www.example.com to access your AWS Elemental MediaStore
            container at my.example.container.com by using the browser's XMLHttpRequest capability.
            
             
            <para>
            To enable CORS on a container, you attach a CORS policy to the container. In the CORS
            policy, you configure rules that identify origins and the HTTP methods that can be
            executed on your container. The policy can contain up to 398,000 characters. You can
            add up to 100 rules to a CORS policy. If more than one rule applies, the service uses
            the first applicable rule listed.
            </para>
             
            <para>
            To learn more about CORS, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/cors-policy.html">Cross-Origin
            Resource Sharing (CORS) in AWS Elemental MediaStore</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutCorsPolicy service method.</param>
            
            <returns>The response from the PutCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutCorsPolicy">REST API Reference for PutCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.PutCorsPolicyAsync(Amazon.MediaStore.Model.PutCorsPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the cross-origin resource sharing (CORS) configuration on a container so that
            the container can service cross-origin requests. For example, you might want to enable
            a request whose origin is http://www.example.com to access your AWS Elemental MediaStore
            container at my.example.container.com by using the browser's XMLHttpRequest capability.
            
             
            <para>
            To enable CORS on a container, you attach a CORS policy to the container. In the CORS
            policy, you configure rules that identify origins and the HTTP methods that can be
            executed on your container. The policy can contain up to 398,000 characters. You can
            add up to 100 rules to a CORS policy. If more than one rule applies, the service uses
            the first applicable rule listed.
            </para>
             
            <para>
            To learn more about CORS, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/cors-policy.html">Cross-Origin
            Resource Sharing (CORS) in AWS Elemental MediaStore</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutCorsPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutCorsPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutCorsPolicy">REST API Reference for PutCorsPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.PutLifecyclePolicy(Amazon.MediaStore.Model.PutLifecyclePolicyRequest)">
            <summary>
            Writes an object lifecycle policy to a container. If the container already has an
            object lifecycle policy, the service replaces the existing policy with the new policy.
            It takes up to 20 minutes for the change to take effect.
            
             
            <para>
            For information about how to construct an object lifecycle policy, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/policies-object-lifecycle-components.html">Components
            of an Object Lifecycle Policy</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLifecyclePolicy service method.</param>
            
            <returns>The response from the PutLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutLifecyclePolicy">REST API Reference for PutLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.PutLifecyclePolicyAsync(Amazon.MediaStore.Model.PutLifecyclePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Writes an object lifecycle policy to a container. If the container already has an
            object lifecycle policy, the service replaces the existing policy with the new policy.
            It takes up to 20 minutes for the change to take effect.
            
             
            <para>
            For information about how to construct an object lifecycle policy, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/policies-object-lifecycle-components.html">Components
            of an Object Lifecycle Policy</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLifecyclePolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutLifecyclePolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutLifecyclePolicy">REST API Reference for PutLifecyclePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.PutMetricPolicy(Amazon.MediaStore.Model.PutMetricPolicyRequest)">
            <summary>
            The metric policy that you want to add to the container. A metric policy allows AWS
            Elemental MediaStore to send metrics to Amazon CloudWatch. It takes up to 20 minutes
            for the new policy to take effect.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricPolicy service method.</param>
            
            <returns>The response from the PutMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutMetricPolicy">REST API Reference for PutMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.PutMetricPolicyAsync(Amazon.MediaStore.Model.PutMetricPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            The metric policy that you want to add to the container. A metric policy allows AWS
            Elemental MediaStore to send metrics to Amazon CloudWatch. It takes up to 20 minutes
            for the new policy to take effect.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricPolicy service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutMetricPolicy service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/PutMetricPolicy">REST API Reference for PutMetricPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.StartAccessLogging(Amazon.MediaStore.Model.StartAccessLoggingRequest)">
            <summary>
            Starts access logging on the specified container. When you enable access logging on
            a container, MediaStore delivers access logs for objects stored in that container
            to Amazon CloudWatch Logs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartAccessLogging service method.</param>
            
            <returns>The response from the StartAccessLogging service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/StartAccessLogging">REST API Reference for StartAccessLogging Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.StartAccessLoggingAsync(Amazon.MediaStore.Model.StartAccessLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Starts access logging on the specified container. When you enable access logging on
            a container, MediaStore delivers access logs for objects stored in that container
            to Amazon CloudWatch Logs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartAccessLogging service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartAccessLogging service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/StartAccessLogging">REST API Reference for StartAccessLogging Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.StopAccessLogging(Amazon.MediaStore.Model.StopAccessLoggingRequest)">
            <summary>
            Stops access logging on the specified container. When you stop access logging on a
            container, MediaStore stops sending access logs to Amazon CloudWatch Logs. These access
            logs are not saved and are not retrievable.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopAccessLogging service method.</param>
            
            <returns>The response from the StopAccessLogging service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/StopAccessLogging">REST API Reference for StopAccessLogging Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.StopAccessLoggingAsync(Amazon.MediaStore.Model.StopAccessLoggingRequest,System.Threading.CancellationToken)">
            <summary>
            Stops access logging on the specified container. When you stop access logging on a
            container, MediaStore stops sending access logs to Amazon CloudWatch Logs. These access
            logs are not saved and are not retrievable.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopAccessLogging service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopAccessLogging service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/StopAccessLogging">REST API Reference for StopAccessLogging Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.TagResource(Amazon.MediaStore.Model.TagResourceRequest)">
            <summary>
            Adds tags to the specified AWS Elemental MediaStore container. Tags are key:value
            pairs that you can associate with AWS resources. For example, the tag key might be
            "customer" and the tag value might be "companyA." You can specify one or more tags
            to add to each container. You can add up to 50 tags to each container. For more information
            about tagging, including naming and usage conventions, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/tagging.html">Tagging
            Resources in MediaStore</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.TagResourceAsync(Amazon.MediaStore.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds tags to the specified AWS Elemental MediaStore container. Tags are key:value
            pairs that you can associate with AWS resources. For example, the tag key might be
            "customer" and the tag value might be "companyA." You can specify one or more tags
            to add to each container. You can add up to 50 tags to each container. For more information
            about tagging, including naming and usage conventions, see <a href="https://docs.aws.amazon.com/mediastore/latest/ug/tagging.html">Tagging
            Resources in MediaStore</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.UntagResource(Amazon.MediaStore.Model.UntagResourceRequest)">
            <summary>
            Removes tags from the specified container. You can specify one or more tags to remove.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.MediaStore.IAmazonMediaStore.UntagResourceAsync(Amazon.MediaStore.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags from the specified container. You can specify one or more tags to remove.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by MediaStore.</returns>
            <exception cref="T:Amazon.MediaStore.Model.ContainerInUseException">
            The container that you specified in the request already exists or is being updated.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.ContainerNotFoundException">
            The container that you specified in the request does not exist.
            </exception>
            <exception cref="T:Amazon.MediaStore.Model.InternalServerErrorException">
            The service is temporarily unavailable.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
    </members>
</doc>
