<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.DAX</name>
    </assembly>
    <members>
        <member name="T:Amazon.DAX.AmazonDAXConfig">
            <summary>
            Configuration for accessing Amazon DAX service
            </summary>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.DAX.AmazonDAXConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.DAX.AmazonDAXConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.DAX.AmazonDAXConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.DAX.AmazonDAXException">
            <summary>
             Common exception for the DAX service.
             </summary>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonDAXException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonDAXException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonDAXException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonDAXException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonDAXException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonDAXException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.DAX.Internal.AmazonDAXMetadata">
            <summary>
            Service metadata for  Amazon DAX service
            </summary>
        </member>
        <member name="P:Amazon.DAX.Internal.AmazonDAXMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Internal.AmazonDAXMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.DAX.AmazonDAXRequest">
            <summary>
            Base class for DAX operation requests.
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.Cluster">
            <summary>
            Contains all of the attributes of a specific DAX cluster.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.ActiveNodes">
            <summary>
            Gets and sets the property ActiveNodes. 
            <para>
            The number of nodes in the cluster that are active (i.e., capable of serving requests).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.ClusterArn">
            <summary>
            Gets and sets the property ClusterArn. 
            <para>
            The Amazon Resource Name (ARN) that uniquely identifies the cluster. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.ClusterDiscoveryEndpoint">
            <summary>
            Gets and sets the property ClusterDiscoveryEndpoint. 
            <para>
            The endpoint for this DAX cluster, consisting of a DNS name, a port number, and a
            URL. Applications should use the URL to configure the DAX client to find their cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.ClusterEndpointEncryptionType">
            <summary>
            Gets and sets the property ClusterEndpointEncryptionType. 
            <para>
            The type of encryption supported by the cluster's endpoint. Values are:
            </para>
             <ul> <li> 
            <para>
             <code>NONE</code> for no encryption
            </para>
             
            <para>
             <code>TLS</code> for Transport Layer Security
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the DAX cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.IamRoleArn">
            <summary>
            Gets and sets the property IamRoleArn. 
            <para>
            A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will
            assume this role and use the role's permissions to access DynamoDB on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.NodeIdsToRemove">
            <summary>
            Gets and sets the property NodeIdsToRemove. 
            <para>
            A list of nodes to be removed from the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.Nodes">
            <summary>
            Gets and sets the property Nodes. 
            <para>
            A list of nodes that are currently in the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.NodeType">
            <summary>
            Gets and sets the property NodeType. 
            <para>
            The node type for the nodes in the cluster. (All nodes in a DAX cluster are of the
            same type.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.NotificationConfiguration">
            <summary>
            Gets and sets the property NotificationConfiguration. 
            <para>
            Describes a notification topic and its status. Notification topics are used for publishing
            DAX events to subscribers using Amazon Simple Notification Service (SNS).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.ParameterGroup">
            <summary>
            Gets and sets the property ParameterGroup. 
            <para>
            The parameter group being used by nodes in the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            A range of time when maintenance of DAX cluster software will be performed. For example:
            <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than 30
            minutes, and is performed automatically within the maintenance window.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            A list of security groups, and the status of each, for the nodes in the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.SSEDescription">
            <summary>
            Gets and sets the property SSEDescription. 
            <para>
            The description of the server-side encryption status on the specified DAX cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.SubnetGroup">
            <summary>
            Gets and sets the property SubnetGroup. 
            <para>
            The subnet group where the DAX cluster is running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Cluster.TotalNodes">
            <summary>
            Gets and sets the property TotalNodes. 
            <para>
            The total number of nodes in the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.ClusterAlreadyExistsException">
            <summary>
            You already have a DAX cluster with the given identifier.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClusterAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.ClusterNotFoundException">
            <summary>
            The requested cluster ID does not refer to an existing DAX cluster.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClusterNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException">
            <summary>
            You have attempted to exceed the maximum number of DAX clusters for your AWS account.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ClusterQuotaForCustomerExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClusterQuotaForCustomerExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClusterQuotaForCustomerExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterQuotaForCustomerExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClusterQuotaForCustomerExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClusterQuotaForCustomerExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.CreateClusterRequest">
            <summary>
            Container for the parameters to the CreateCluster operation.
            Creates a DAX cluster. All nodes in the cluster run the same DAX caching software.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            The Availability Zones (AZs) in which the cluster nodes will reside after the cluster
            has been created or updated. If provided, the length of this list must equal the <code>ReplicationFactor</code>
            parameter. If you omit this parameter, DAX will spread the nodes across Availability
            Zones for the highest availability.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.ClusterEndpointEncryptionType">
            <summary>
            Gets and sets the property ClusterEndpointEncryptionType. 
            <para>
            The type of encryption the cluster's endpoint should support. Values are:
            </para>
             <ul> <li> 
            <para>
             <code>NONE</code> for no encryption
            </para>
             </li> <li> 
            <para>
             <code>TLS</code> for Transport Layer Security
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The cluster identifier. This parameter is stored as a lowercase string.
            </para>
             
            <para>
             <b>Constraints:</b> 
            </para>
             <ul> <li> 
            <para>
            A name must contain from 1 to 20 alphanumeric characters or hyphens.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            A name cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.IamRoleArn">
            <summary>
            Gets and sets the property IamRoleArn. 
            <para>
            A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX will
            assume this role and use the role's permissions to access DynamoDB on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.NodeType">
            <summary>
            Gets and sets the property NodeType. 
            <para>
            The compute and memory capacity of the nodes in the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.NotificationTopicArn">
            <summary>
            Gets and sets the property NotificationTopicArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will
            be sent.
            </para>
             <note> 
            <para>
            The Amazon SNS topic owner must be same as the DAX cluster owner.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.ParameterGroupName">
            <summary>
            Gets and sets the property ParameterGroupName. 
            <para>
            The parameter group to be associated with the DAX cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            Specifies the weekly time range during which maintenance on the DAX cluster is performed.
            It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC).
            The minimum maintenance window is a 60 minute period. Valid values for <code>ddd</code>
            are:
            </para>
             <ul> <li> 
            <para>
             <code>sun</code> 
            </para>
             </li> <li> 
            <para>
             <code>mon</code> 
            </para>
             </li> <li> 
            <para>
             <code>tue</code> 
            </para>
             </li> <li> 
            <para>
             <code>wed</code> 
            </para>
             </li> <li> 
            <para>
             <code>thu</code> 
            </para>
             </li> <li> 
            <para>
             <code>fri</code> 
            </para>
             </li> <li> 
            <para>
             <code>sat</code> 
            </para>
             </li> </ul> 
            <para>
            Example: <code>sun:05:00-sun:09:00</code> 
            </para>
             <note> 
            <para>
            If you don't specify a preferred maintenance window when you create or modify a cache
            cluster, DAX assigns a 60-minute maintenance window on a randomly selected day of
            the week.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.ReplicationFactor">
            <summary>
            Gets and sets the property ReplicationFactor. 
            <para>
            The number of nodes in the DAX cluster. A replication factor of 1 will create a single-node
            cluster, without any read replicas. For additional fault tolerance, you can create
            a multiple node cluster with one or more read replicas. To do this, set <code>ReplicationFactor</code>
            to a number between 3 (one primary and two read replicas) and 10 (one primary and
            nine read replicas). <code>If the AvailabilityZones</code> parameter is provided,
            its length must equal the <code>ReplicationFactor</code>.
            </para>
             <note> 
            <para>
            AWS recommends that you have at least two read replicas per cluster.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            A list of security group IDs to be assigned to each node in the DAX cluster. (Each
            of the security group ID is system-generated.)
            </para>
             
            <para>
            If this parameter is not specified, DAX assigns the default VPC security group to
            each node.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.SSESpecification">
            <summary>
            Gets and sets the property SSESpecification. 
            <para>
            Represents the settings used to enable server-side encryption on the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.SubnetGroupName">
            <summary>
            Gets and sets the property SubnetGroupName. 
            <para>
            The name of the subnet group to be used for the replication group.
            </para>
             <important> 
            <para>
            DAX clusters can only run in an Amazon VPC environment. All of the subnets that you
            specify in a subnet group must exist in the same VPC.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A set of tags to associate with the DAX cluster. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.CreateClusterResponse">
            <summary>
            This is the response object from the CreateCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            A description of the DAX cluster that you have created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.CreateParameterGroupRequest">
            <summary>
            Container for the parameters to the CreateParameterGroup operation.
            Creates a new parameter group. A parameter group is a collection of parameters that
            you apply to all of the nodes in a DAX cluster.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateParameterGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateParameterGroupRequest.ParameterGroupName">
            <summary>
            Gets and sets the property ParameterGroupName. 
            <para>
            The name of the parameter group to apply to all of the clusters in this replication
            group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.CreateParameterGroupResponse">
            <summary>
            This is the response object from the CreateParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateParameterGroupResponse.ParameterGroup">
            <summary>
            Gets and sets the property ParameterGroup. 
            <para>
            Represents the output of a <i>CreateParameterGroup</i> action.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.CreateSubnetGroupRequest">
            <summary>
            Container for the parameters to the CreateSubnetGroup operation.
            Creates a new subnet group.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateSubnetGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description for the subnet group
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateSubnetGroupRequest.SubnetGroupName">
            <summary>
            Gets and sets the property SubnetGroupName. 
            <para>
            A name for the subnet group. This value is stored as a lowercase string. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateSubnetGroupRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            A list of VPC subnet IDs for the subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.CreateSubnetGroupResponse">
            <summary>
            This is the response object from the CreateSubnetGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.CreateSubnetGroupResponse.SubnetGroup">
            <summary>
            Gets and sets the property SubnetGroup. 
            <para>
            Represents the output of a <i>CreateSubnetGroup</i> operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DecreaseReplicationFactorRequest">
            <summary>
            Container for the parameters to the DecreaseReplicationFactor operation.
            Removes one or more nodes from a DAX cluster.
            
             <note> 
            <para>
            You cannot use <code>DecreaseReplicationFactor</code> to remove the last node in a
            DAX cluster. If you need to do this, use <code>DeleteCluster</code> instead.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DecreaseReplicationFactorRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            The Availability Zone(s) from which to remove nodes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DecreaseReplicationFactorRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the DAX cluster from which you want to remove nodes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DecreaseReplicationFactorRequest.NewReplicationFactor">
            <summary>
            Gets and sets the property NewReplicationFactor. 
            <para>
            The new number of nodes for the DAX cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DecreaseReplicationFactorRequest.NodeIdsToRemove">
            <summary>
            Gets and sets the property NodeIdsToRemove. 
            <para>
            The unique identifiers of the nodes to be removed from the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DecreaseReplicationFactorResponse">
            <summary>
            This is the response object from the DecreaseReplicationFactor operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DecreaseReplicationFactorResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            A description of the DAX cluster, after you have decreased its replication factor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DeleteClusterRequest">
            <summary>
            Container for the parameters to the DeleteCluster operation.
            Deletes a previously provisioned DAX cluster. <i>DeleteCluster</i> deletes all associated
            nodes, node endpoints and the DAX cluster itself. When you receive a successful response
            from this action, DAX immediately begins deleting the cluster; you cannot cancel or
            revert this action.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DeleteClusterRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the cluster to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DeleteClusterResponse">
            <summary>
            This is the response object from the DeleteCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DeleteClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            A description of the DAX cluster that is being deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DeleteParameterGroupRequest">
            <summary>
            Container for the parameters to the DeleteParameterGroup operation.
            Deletes the specified parameter group. You cannot delete a parameter group if it is
            associated with any DAX clusters.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DeleteParameterGroupRequest.ParameterGroupName">
            <summary>
            Gets and sets the property ParameterGroupName. 
            <para>
            The name of the parameter group to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DeleteParameterGroupResponse">
            <summary>
            This is the response object from the DeleteParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DeleteParameterGroupResponse.DeletionMessage">
            <summary>
            Gets and sets the property DeletionMessage. 
            <para>
            A user-specified message for this action (i.e., a reason for deleting the parameter
            group).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DeleteSubnetGroupRequest">
            <summary>
            Container for the parameters to the DeleteSubnetGroup operation.
            Deletes a subnet group.
            
             <note> 
            <para>
            You cannot delete a subnet group if it is associated with any DAX clusters.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DeleteSubnetGroupRequest.SubnetGroupName">
            <summary>
            Gets and sets the property SubnetGroupName. 
            <para>
            The name of the subnet group to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DeleteSubnetGroupResponse">
            <summary>
            This is the response object from the DeleteSubnetGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DeleteSubnetGroupResponse.DeletionMessage">
            <summary>
            Gets and sets the property DeletionMessage. 
            <para>
            A user-specified message for this action (i.e., a reason for deleting the subnet group).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeClustersRequest">
            <summary>
            Container for the parameters to the DescribeClusters operation.
            Returns information about all provisioned DAX clusters if no cluster identifier is
            specified, or about a specific DAX cluster if a cluster identifier is supplied.
            
             
            <para>
            If the cluster is in the CREATING state, only cluster level information will be displayed
            until all of the nodes are successfully provisioned.
            </para>
             
            <para>
            If the cluster is in the DELETING state, only cluster level information will be displayed.
            </para>
             
            <para>
            If nodes are currently being added to the DAX cluster, node endpoint information and
            creation time for the additional nodes will not be displayed until they are completely
            provisioned. When the DAX cluster state is <i>available</i>, the cluster is ready
            for use.
            </para>
             
            <para>
            If nodes are currently being removed from the DAX cluster, no endpoint information
            for the removed nodes is displayed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeClustersRequest.ClusterNames">
            <summary>
            Gets and sets the property ClusterNames. 
            <para>
            The names of the DAX clusters being described.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeClustersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response. If more results exist than
            the specified <code>MaxResults</code> value, a token is included in the response so
            that the remaining results can be retrieved.
            </para>
             
            <para>
            The value for <code>MaxResults</code> must be between 20 and 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeClustersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An optional token returned from a prior request. Use this token for pagination of
            results from this action. If this parameter is specified, the response includes only
            results beyond the token, up to the value specified by <code>MaxResults</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeClustersResponse">
            <summary>
            This is the response object from the DescribeClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeClustersResponse.Clusters">
            <summary>
            Gets and sets the property Clusters. 
            <para>
            The descriptions of your DAX clusters, in response to a <i>DescribeClusters</i> request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeClustersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Provides an identifier to allow retrieval of paginated results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeDefaultParametersRequest">
            <summary>
            Container for the parameters to the DescribeDefaultParameters operation.
            Returns the default system parameter information for the DAX caching software.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeDefaultParametersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response. If more results exist than
            the specified <code>MaxResults</code> value, a token is included in the response so
            that the remaining results can be retrieved.
            </para>
             
            <para>
            The value for <code>MaxResults</code> must be between 20 and 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeDefaultParametersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An optional token returned from a prior request. Use this token for pagination of
            results from this action. If this parameter is specified, the response includes only
            results beyond the token, up to the value specified by <code>MaxResults</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeDefaultParametersResponse">
            <summary>
            This is the response object from the DescribeDefaultParameters operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeDefaultParametersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Provides an identifier to allow retrieval of paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeDefaultParametersResponse.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            A list of parameters. Each element in the list represents one parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeEventsRequest">
            <summary>
            Container for the parameters to the DescribeEvents operation.
            Returns events related to DAX clusters and parameter groups. You can obtain events
            specific to a particular DAX cluster or parameter group by providing the name as a
            parameter.
            
             
            <para>
            By default, only the events occurring within the last 24 hours are returned; however,
            you can retrieve up to 14 days' worth of events if necessary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeEventsRequest.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The number of minutes' worth of events to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeEventsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The end of the time interval for which to retrieve events, specified in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeEventsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response. If more results exist than
            the specified <code>MaxResults</code> value, a token is included in the response so
            that the remaining results can be retrieved.
            </para>
             
            <para>
            The value for <code>MaxResults</code> must be between 20 and 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeEventsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An optional token returned from a prior request. Use this token for pagination of
            results from this action. If this parameter is specified, the response includes only
            results beyond the token, up to the value specified by <code>MaxResults</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeEventsRequest.SourceName">
            <summary>
            Gets and sets the property SourceName. 
            <para>
            The identifier of the event source for which events will be returned. If not specified,
            then all sources are included in the response.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeEventsRequest.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The event source to retrieve events for. If no value is specified, all events are
            returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeEventsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The beginning of the time interval to retrieve events for, specified in ISO 8601 format.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeEventsResponse">
            <summary>
            This is the response object from the DescribeEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeEventsResponse.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            An array of events. Each element in the array represents one event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeEventsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Provides an identifier to allow retrieval of paginated results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeParameterGroupsRequest">
            <summary>
            Container for the parameters to the DescribeParameterGroups operation.
            Returns a list of parameter group descriptions. If a parameter group name is specified,
            the list will contain only the descriptions for that group.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParameterGroupsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response. If more results exist than
            the specified <code>MaxResults</code> value, a token is included in the response so
            that the remaining results can be retrieved.
            </para>
             
            <para>
            The value for <code>MaxResults</code> must be between 20 and 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParameterGroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An optional token returned from a prior request. Use this token for pagination of
            results from this action. If this parameter is specified, the response includes only
            results beyond the token, up to the value specified by <code>MaxResults</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParameterGroupsRequest.ParameterGroupNames">
            <summary>
            Gets and sets the property ParameterGroupNames. 
            <para>
            The names of the parameter groups.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeParameterGroupsResponse">
            <summary>
            This is the response object from the DescribeParameterGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParameterGroupsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Provides an identifier to allow retrieval of paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParameterGroupsResponse.ParameterGroups">
            <summary>
            Gets and sets the property ParameterGroups. 
            <para>
            An array of parameter groups. Each element in the array represents one parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeParametersRequest">
            <summary>
            Container for the parameters to the DescribeParameters operation.
            Returns the detailed parameter list for a particular parameter group.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParametersRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response. If more results exist than
            the specified <code>MaxResults</code> value, a token is included in the response so
            that the remaining results can be retrieved.
            </para>
             
            <para>
            The value for <code>MaxResults</code> must be between 20 and 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParametersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An optional token returned from a prior request. Use this token for pagination of
            results from this action. If this parameter is specified, the response includes only
            results beyond the token, up to the value specified by <code>MaxResults</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParametersRequest.ParameterGroupName">
            <summary>
            Gets and sets the property ParameterGroupName. 
            <para>
            The name of the parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParametersRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            How the parameter is defined. For example, <code>system</code> denotes a system-defined
            parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeParametersResponse">
            <summary>
            This is the response object from the DescribeParameters operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParametersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Provides an identifier to allow retrieval of paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeParametersResponse.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            A list of parameters within a parameter group. Each element in the list represents
            one parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeSubnetGroupsRequest">
            <summary>
            Container for the parameters to the DescribeSubnetGroups operation.
            Returns a list of subnet group descriptions. If a subnet group name is specified,
            the list will contain only the description of that group.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeSubnetGroupsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to include in the response. If more results exist than
            the specified <code>MaxResults</code> value, a token is included in the response so
            that the remaining results can be retrieved.
            </para>
             
            <para>
            The value for <code>MaxResults</code> must be between 20 and 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeSubnetGroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An optional token returned from a prior request. Use this token for pagination of
            results from this action. If this parameter is specified, the response includes only
            results beyond the token, up to the value specified by <code>MaxResults</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeSubnetGroupsRequest.SubnetGroupNames">
            <summary>
            Gets and sets the property SubnetGroupNames. 
            <para>
            The name of the subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.DescribeSubnetGroupsResponse">
            <summary>
            This is the response object from the DescribeSubnetGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeSubnetGroupsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Provides an identifier to allow retrieval of paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.DescribeSubnetGroupsResponse.SubnetGroups">
            <summary>
            Gets and sets the property SubnetGroups. 
            <para>
            An array of subnet groups. Each element in the array represents a single subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.Endpoint">
            <summary>
            Represents the information required for client programs to connect to the endpoint
            for a DAX cluster.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Endpoint.Address">
            <summary>
            Gets and sets the property Address. 
            <para>
            The DNS hostname of the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Endpoint.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port number that applications should use to connect to the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Endpoint.URL">
            <summary>
            Gets and sets the property URL. 
            <para>
            The URL that applications should use to connect to the endpoint. The default ports
            are 8111 for the "dax" protocol and 9111 for the "daxs" protocol.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.Event">
            <summary>
            Represents a single occurrence of something interesting within the system. Some examples
            of events are creating a DAX cluster, adding or removing a node, or rebooting a node.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Event.Date">
            <summary>
            Gets and sets the property Date. 
            <para>
            The date and time when the event occurred.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Event.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A user-defined message associated with the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Event.SourceName">
            <summary>
            Gets and sets the property SourceName. 
            <para>
            The source of the event. For example, if the event occurred at the node level, the
            source would be the node ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Event.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            Specifies the origin of this event - a cluster, a parameter group, a node ID, etc.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.IncreaseReplicationFactorRequest">
            <summary>
            Container for the parameters to the IncreaseReplicationFactor operation.
            Adds one or more nodes to a DAX cluster.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.IncreaseReplicationFactorRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            The Availability Zones (AZs) in which the cluster nodes will be created. All nodes
            belonging to the cluster are placed in these Availability Zones. Use this parameter
            if you want to distribute the nodes across multiple AZs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.IncreaseReplicationFactorRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the DAX cluster that will receive additional nodes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.IncreaseReplicationFactorRequest.NewReplicationFactor">
            <summary>
            Gets and sets the property NewReplicationFactor. 
            <para>
            The new number of nodes for the DAX cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.IncreaseReplicationFactorResponse">
            <summary>
            This is the response object from the IncreaseReplicationFactor operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.IncreaseReplicationFactorResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            A description of the DAX cluster. with its new replication factor.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.InsufficientClusterCapacityException">
            <summary>
            There are not enough system resources to create the cluster you requested (or to resize
            an already-existing cluster).
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.InsufficientClusterCapacityException.#ctor(System.String)">
            <summary>
            Constructs a new InsufficientClusterCapacityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.InsufficientClusterCapacityException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InsufficientClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InsufficientClusterCapacityException.#ctor(System.Exception)">
            <summary>
            Construct instance of InsufficientClusterCapacityException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InsufficientClusterCapacityException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InsufficientClusterCapacityException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InsufficientClusterCapacityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InsufficientClusterCapacityException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.InsufficientClusterCapacityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterQuotaForCustomerExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClusterQuotaForCustomerExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterQuotaForCustomerExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterQuotaForCustomerExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterQuotaForCustomerExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterUnmarshaller">
            <summary>
            Response Unmarshaller for Cluster Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#Cluster,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ClusterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller">
            <summary>
            CreateCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Marshall(Amazon.DAX.Model.CreateClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.CreateClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.CreateClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.CreateParameterGroupRequestMarshaller">
            <summary>
            CreateParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateParameterGroupRequestMarshaller.Marshall(Amazon.DAX.Model.CreateParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.CreateParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.CreateParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.CreateParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.CreateSubnetGroupRequestMarshaller">
            <summary>
            CreateSubnetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateSubnetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateSubnetGroupRequestMarshaller.Marshall(Amazon.DAX.Model.CreateSubnetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.CreateSubnetGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.CreateSubnetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSubnetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateSubnetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.CreateSubnetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.CreateSubnetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DecreaseReplicationFactorRequestMarshaller">
            <summary>
            DecreaseReplicationFactor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DecreaseReplicationFactorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DecreaseReplicationFactorRequestMarshaller.Marshall(Amazon.DAX.Model.DecreaseReplicationFactorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DecreaseReplicationFactorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DecreaseReplicationFactorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DecreaseReplicationFactor operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DecreaseReplicationFactorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DecreaseReplicationFactorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DecreaseReplicationFactorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller">
            <summary>
            DeleteCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Marshall(Amazon.DAX.Model.DeleteClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteParameterGroupRequestMarshaller">
            <summary>
            DeleteParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteParameterGroupRequestMarshaller.Marshall(Amazon.DAX.Model.DeleteParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteSubnetGroupRequestMarshaller">
            <summary>
            DeleteSubnetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteSubnetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteSubnetGroupRequestMarshaller.Marshall(Amazon.DAX.Model.DeleteSubnetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteSubnetGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteSubnetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSubnetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteSubnetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteSubnetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DeleteSubnetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller">
            <summary>
            DescribeClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Marshall(Amazon.DAX.Model.DescribeClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeClustersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeDefaultParametersRequestMarshaller">
            <summary>
            DescribeDefaultParameters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeDefaultParametersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeDefaultParametersRequestMarshaller.Marshall(Amazon.DAX.Model.DescribeDefaultParametersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeDefaultParametersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeDefaultParametersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDefaultParameters operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeDefaultParametersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeDefaultParametersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeDefaultParametersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller">
            <summary>
            DescribeEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller.Marshall(Amazon.DAX.Model.DescribeEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParameterGroupsRequestMarshaller">
            <summary>
            DescribeParameterGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParameterGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParameterGroupsRequestMarshaller.Marshall(Amazon.DAX.Model.DescribeParameterGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParameterGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParameterGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeParameterGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParameterGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParameterGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParameterGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParametersRequestMarshaller">
            <summary>
            DescribeParameters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParametersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParametersRequestMarshaller.Marshall(Amazon.DAX.Model.DescribeParametersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParametersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParametersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeParameters operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParametersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParametersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeParametersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeSubnetGroupsRequestMarshaller">
            <summary>
            DescribeSubnetGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeSubnetGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeSubnetGroupsRequestMarshaller.Marshall(Amazon.DAX.Model.DescribeSubnetGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeSubnetGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeSubnetGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSubnetGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeSubnetGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeSubnetGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.DescribeSubnetGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.EndpointUnmarshaller">
            <summary>
            Response Unmarshaller for Endpoint Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.EndpointUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#Endpoint,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.EndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.EndpointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.EventUnmarshaller">
            <summary>
            Response Unmarshaller for Event Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.EventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#Event,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.EventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.EventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.IncreaseReplicationFactorRequestMarshaller">
            <summary>
            IncreaseReplicationFactor Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.IncreaseReplicationFactorRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.IncreaseReplicationFactorRequestMarshaller.Marshall(Amazon.DAX.Model.IncreaseReplicationFactorRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.IncreaseReplicationFactorRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.IncreaseReplicationFactorResponseUnmarshaller">
            <summary>
            Response Unmarshaller for IncreaseReplicationFactor operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.IncreaseReplicationFactorResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.IncreaseReplicationFactorResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.IncreaseReplicationFactorResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.InsufficientClusterCapacityExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InsufficientClusterCapacityException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InsufficientClusterCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InsufficientClusterCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.InsufficientClusterCapacityExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidARNExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidARNException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidARNExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidARNExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidARNExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidClusterStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidClusterStateException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidClusterStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidClusterStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidClusterStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterCombinationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterCombinationException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterCombinationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterCombinationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterCombinationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterGroupStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterGroupStateException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterGroupStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterValueException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidParameterValueExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidSubnetException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidVPCNetworkStateException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller">
            <summary>
            ListTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller.Marshall(Amazon.DAX.Model.ListTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ListTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTags operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ListTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.NodeNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NodeNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NodeNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NodeNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.NodeNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.NodeQuotaForClusterExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NodeQuotaForClusterExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NodeQuotaForClusterExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NodeQuotaForClusterExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.NodeQuotaForClusterExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.NodeQuotaForCustomerExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NodeQuotaForCustomerExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NodeQuotaForCustomerExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NodeQuotaForCustomerExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.NodeQuotaForCustomerExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.NodeTypeSpecificValueUnmarshaller">
            <summary>
            Response Unmarshaller for NodeTypeSpecificValue Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NodeTypeSpecificValueUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#NodeTypeSpecificValue,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NodeTypeSpecificValueUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.NodeTypeSpecificValueUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.NodeUnmarshaller">
            <summary>
            Response Unmarshaller for Node Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NodeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#Node,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NodeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.NodeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.NotificationConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for NotificationConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NotificationConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#NotificationConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.NotificationConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.NotificationConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ParameterGroupAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ParameterGroupNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ParameterGroupQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupStatusUnmarshaller">
            <summary>
            Response Unmarshaller for ParameterGroupStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#ParameterGroupStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupUnmarshaller">
            <summary>
            Response Unmarshaller for ParameterGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#ParameterGroup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterNameValueMarshaller">
            <summary>
            ParameterNameValue Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterNameValueMarshaller.Marshall(Amazon.DAX.Model.ParameterNameValue,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterNameValueMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterUnmarshaller">
            <summary>
            Response Unmarshaller for Parameter Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#Parameter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ParameterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.RebootNodeRequestMarshaller">
            <summary>
            RebootNode Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.RebootNodeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.RebootNodeRequestMarshaller.Marshall(Amazon.DAX.Model.RebootNodeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.RebootNodeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.RebootNodeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RebootNode operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.RebootNodeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.RebootNodeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.RebootNodeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SecurityGroupMembershipUnmarshaller">
            <summary>
            Response Unmarshaller for SecurityGroupMembership Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SecurityGroupMembershipUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#SecurityGroupMembership,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SecurityGroupMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.SecurityGroupMembershipUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ServiceLinkedRoleNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceLinkedRoleNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ServiceLinkedRoleNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ServiceLinkedRoleNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ServiceLinkedRoleNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ServiceQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.ServiceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SSEDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for SSEDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SSEDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#SSEDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SSEDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.SSEDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SSESpecificationMarshaller">
            <summary>
            SSESpecification Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SSESpecificationMarshaller.Marshall(Amazon.DAX.Model.SSESpecification,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DAX.Model.Internal.MarshallTransformations.SSESpecificationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubnetGroupAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubnetGroupInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubnetGroupNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubnetGroupQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupUnmarshaller">
            <summary>
            Response Unmarshaller for SubnetGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#SubnetGroup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubnetInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubnetQuotaExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetUnmarshaller">
            <summary>
            Response Unmarshaller for Subnet Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#Subnet,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.DAX.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DAX.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.TagNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.TagNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.TagQuotaPerResourceExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagQuotaPerResourceExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagQuotaPerResourceExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagQuotaPerResourceExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.TagQuotaPerResourceExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.DAX.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DAX#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.DAX.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller">
            <summary>
            UpdateCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller.Marshall(Amazon.DAX.Model.UpdateClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateParameterGroupRequestMarshaller">
            <summary>
            UpdateParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateParameterGroupRequestMarshaller.Marshall(Amazon.DAX.Model.UpdateParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateSubnetGroupRequestMarshaller">
            <summary>
            UpdateSubnetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateSubnetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateSubnetGroupRequestMarshaller.Marshall(Amazon.DAX.Model.UpdateSubnetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateSubnetGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateSubnetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateSubnetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateSubnetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateSubnetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DAX.Model.Internal.MarshallTransformations.UpdateSubnetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DAX.Model.InvalidARNException">
            <summary>
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidARNException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidARNException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidARNException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidARNException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidARNException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidARNException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidARNException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidARNException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidARNException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidARNException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidARNException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidARNException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidARNException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.InvalidClusterStateException">
            <summary>
            The requested DAX cluster is not in the <i>available</i> state.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidClusterStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidClusterStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidClusterStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidClusterStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidClusterStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidClusterStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidClusterStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidClusterStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidClusterStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidClusterStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidClusterStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidClusterStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidClusterStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            <summary>
            Two or more incompatible parameters were specified.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterCombinationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterCombinationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterCombinationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterCombinationException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterCombinationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterCombinationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterCombinationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterCombinationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterCombinationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterCombinationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            <summary>
            One or more parameters in a parameter group are in an invalid state.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterGroupStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterGroupStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterGroupStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterGroupStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterGroupStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterGroupStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterGroupStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterGroupStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterGroupStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterGroupStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterGroupStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.InvalidParameterValueException">
            <summary>
            The value for a parameter is invalid.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterValueException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterValueException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterValueException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterValueException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterValueException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidParameterValueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.InvalidSubnetException">
            <summary>
            An invalid subnet identifier was specified.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidSubnetException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSubnetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidSubnetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidSubnetException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidSubnetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidSubnetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidSubnetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSubnetException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidSubnetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.InvalidVPCNetworkStateException">
            <summary>
            The VPC network is in an invalid state.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidVPCNetworkStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidVPCNetworkStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidVPCNetworkStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidVPCNetworkStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidVPCNetworkStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidVPCNetworkStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidVPCNetworkStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidVPCNetworkStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.InvalidVPCNetworkStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.ListTagsRequest">
            <summary>
            Container for the parameters to the ListTags operation.
            List all of the tags for a DAX cluster. You can call <code>ListTags</code> up to 10
            times per second, per account.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ListTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An optional token returned from a prior request. Use this token for pagination of
            results from this action. If this parameter is specified, the response includes only
            results beyond the token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ListTagsRequest.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The name of the DAX resource to which the tags belong.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.ListTagsResponse">
            <summary>
            This is the response object from the ListTags operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ListTagsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If this value is present, there are additional results to be displayed. To retrieve
            them, call <code>ListTags</code> again, with <code>NextToken</code> set to this value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ListTagsResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tags currently associated with the DAX cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.Node">
            <summary>
            Represents an individual node within a DAX cluster.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Node.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            The Availability Zone (AZ) in which the node has been deployed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Node.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The endpoint for the node, consisting of a DNS name and a port number. Client applications
            can connect directly to a node endpoint, if desired (as an alternative to allowing
            DAX client software to intelligently route requests and responses to nodes in the
            DAX cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Node.NodeCreateTime">
            <summary>
            Gets and sets the property NodeCreateTime. 
            <para>
            The date and time (in UNIX epoch format) when the node was launched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Node.NodeId">
            <summary>
            Gets and sets the property NodeId. 
            <para>
            A system-generated identifier for the node.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Node.NodeStatus">
            <summary>
            Gets and sets the property NodeStatus. 
            <para>
            The current status of the node. For example: <code>available</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Node.ParameterGroupStatus">
            <summary>
            Gets and sets the property ParameterGroupStatus. 
            <para>
            The status of the parameter group associated with this node. For example, <code>in-sync</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.NodeNotFoundException">
            <summary>
            None of the nodes in the cluster have the given node ID.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.NodeNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NodeNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NodeNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of NodeNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NodeNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NodeNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NodeNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.NodeNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.NodeQuotaForClusterExceededException">
            <summary>
            You have attempted to exceed the maximum number of nodes for a DAX cluster.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForClusterExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NodeQuotaForClusterExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForClusterExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NodeQuotaForClusterExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForClusterExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of NodeQuotaForClusterExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForClusterExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NodeQuotaForClusterExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForClusterExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NodeQuotaForClusterExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForClusterExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NodeQuotaForClusterExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForClusterExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.NodeQuotaForCustomerExceededException">
            <summary>
            You have attempted to exceed the maximum number of nodes for your AWS account.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForCustomerExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NodeQuotaForCustomerExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForCustomerExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NodeQuotaForCustomerExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForCustomerExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of NodeQuotaForCustomerExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForCustomerExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NodeQuotaForCustomerExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForCustomerExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NodeQuotaForCustomerExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForCustomerExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NodeQuotaForCustomerExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.NodeQuotaForCustomerExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.NodeTypeSpecificValue">
            <summary>
            Represents a parameter value that is applicable to a particular node type.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.NodeTypeSpecificValue.NodeType">
            <summary>
            Gets and sets the property NodeType. 
            <para>
            A node type to which the parameter value applies.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.NodeTypeSpecificValue.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The parameter value for this node type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.NotificationConfiguration">
            <summary>
            Describes a notification topic and its status. Notification topics are used for publishing
            DAX events to subscribers using Amazon Simple Notification Service (SNS).
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.NotificationConfiguration.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the topic. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.NotificationConfiguration.TopicStatus">
            <summary>
            Gets and sets the property TopicStatus. 
            <para>
            The current state of the topic. A value of “active” means that notifications will
            be sent to the topic. A value of “inactive” means that notifications will not be sent
            to the topic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.Parameter">
            <summary>
            Describes an individual setting that controls some aspect of DAX behavior.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Parameter.AllowedValues">
            <summary>
            Gets and sets the property AllowedValues. 
            <para>
            A range of values within which the parameter can be set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Parameter.ChangeType">
            <summary>
            Gets and sets the property ChangeType. 
            <para>
            The conditions under which changes to this parameter can be applied. For example,
            <code>requires-reboot</code> indicates that a new value for this parameter will only
            take effect if a node is rebooted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Parameter.DataType">
            <summary>
            Gets and sets the property DataType. 
            <para>
            The data type of the parameter. For example, <code>integer</code>:
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Parameter.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the parameter
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Parameter.IsModifiable">
            <summary>
            Gets and sets the property IsModifiable. 
            <para>
            Whether the customer is allowed to modify the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Parameter.NodeTypeSpecificValues">
            <summary>
            Gets and sets the property NodeTypeSpecificValues. 
            <para>
            A list of node types, and specific parameter values for each node.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Parameter.ParameterName">
            <summary>
            Gets and sets the property ParameterName. 
            <para>
            The name of the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Parameter.ParameterType">
            <summary>
            Gets and sets the property ParameterType. 
            <para>
            Determines whether the parameter can be applied to any nodes, or only nodes of a particular
            type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Parameter.ParameterValue">
            <summary>
            Gets and sets the property ParameterValue. 
            <para>
            The value for the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Parameter.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            How the parameter is defined. For example, <code>system</code> denotes a system-defined
            parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.ParameterGroup">
            <summary>
            A named set of parameters that are applied to all of the nodes in a DAX cluster.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ParameterGroup.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ParameterGroup.ParameterGroupName">
            <summary>
            Gets and sets the property ParameterGroupName. 
            <para>
            The name of the parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.ParameterGroupAlreadyExistsException">
            <summary>
            The specified parameter group already exists.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ParameterGroupAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ParameterGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ParameterGroupAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParameterGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParameterGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ParameterGroupAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            <summary>
            The specified parameter group does not exist.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ParameterGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ParameterGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ParameterGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.ParameterGroupQuotaExceededException">
            <summary>
            You have attempted to exceed the maximum number of parameter groups.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ParameterGroupQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ParameterGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ParameterGroupQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParameterGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParameterGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ParameterGroupQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.ParameterGroupQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.ParameterGroupStatus">
            <summary>
            The status of a parameter group.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ParameterGroupStatus.NodeIdsToReboot">
            <summary>
            Gets and sets the property NodeIdsToReboot. 
            <para>
            The node IDs of one or more nodes to be rebooted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ParameterGroupStatus.ParameterApplyStatus">
            <summary>
            Gets and sets the property ParameterApplyStatus. 
            <para>
            The status of parameter updates. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ParameterGroupStatus.ParameterGroupName">
            <summary>
            Gets and sets the property ParameterGroupName. 
            <para>
            The name of the parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.ParameterNameValue">
            <summary>
            An individual DAX parameter.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ParameterNameValue.ParameterName">
            <summary>
            Gets and sets the property ParameterName. 
            <para>
            The name of the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.ParameterNameValue.ParameterValue">
            <summary>
            Gets and sets the property ParameterValue. 
            <para>
            The value of the parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.RebootNodeRequest">
            <summary>
            Container for the parameters to the RebootNode operation.
            Reboots a single node of a DAX cluster. The reboot action takes place as soon as possible.
            During the reboot, the node status is set to REBOOTING.
            
             <note> 
            <para>
             <code>RebootNode</code> restarts the DAX engine process and does not remove the contents
            of the cache. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.RebootNodeRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the DAX cluster containing the node to be rebooted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.RebootNodeRequest.NodeId">
            <summary>
            Gets and sets the property NodeId. 
            <para>
            The system-assigned ID of the node to be rebooted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.RebootNodeResponse">
            <summary>
            This is the response object from the RebootNode operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.RebootNodeResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            A description of the DAX cluster after a node has been rebooted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.SecurityGroupMembership">
            <summary>
            An individual VPC security group and its status.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.SecurityGroupMembership.SecurityGroupIdentifier">
            <summary>
            Gets and sets the property SecurityGroupIdentifier. 
            <para>
            The unique ID for this security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.SecurityGroupMembership.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of this security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            <summary>
            The specified service linked role (SLR) was not found.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceLinkedRoleNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceLinkedRoleNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceLinkedRoleNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceLinkedRoleNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceLinkedRoleNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceLinkedRoleNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.ServiceQuotaExceededException">
            <summary>
            You have reached the maximum number of x509 certificates that can be created for encrypted
            clusters in a 30 day period. Contact AWS customer support to discuss options for continuing
            to create encrypted clusters.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.ServiceQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.SSEDescription">
            <summary>
            The description of the server-side encryption status on the specified DAX cluster.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.SSEDescription.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current state of server-side encryption:
            </para>
             <ul> <li> 
            <para>
             <code>ENABLING</code> - Server-side encryption is being enabled.
            </para>
             </li> <li> 
            <para>
             <code>ENABLED</code> - Server-side encryption is enabled.
            </para>
             </li> <li> 
            <para>
             <code>DISABLING</code> - Server-side encryption is being disabled.
            </para>
             </li> <li> 
            <para>
             <code>DISABLED</code> - Server-side encryption is disabled.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.SSESpecification">
            <summary>
            Represents the settings used to enable server-side encryption.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.SSESpecification.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            Indicates whether server-side encryption is enabled (true) or disabled (false) on
            the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.Subnet">
            <summary>
            Represents the subnet associated with a DAX cluster. This parameter refers to subnets
            defined in Amazon Virtual Private Cloud (Amazon VPC) and used with DAX.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Subnet.SubnetAvailabilityZone">
            <summary>
            Gets and sets the property SubnetAvailabilityZone. 
            <para>
            The Availability Zone (AZ) for the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Subnet.SubnetIdentifier">
            <summary>
            Gets and sets the property SubnetIdentifier. 
            <para>
            The system-assigned identifier for the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.SubnetGroup">
            <summary>
            Represents the output of one of the following actions:
            
             <ul> <li> 
            <para>
             <i>CreateSubnetGroup</i> 
            </para>
             </li> <li> 
            <para>
             <i>ModifySubnetGroup</i> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.SubnetGroup.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.SubnetGroup.SubnetGroupName">
            <summary>
            Gets and sets the property SubnetGroupName. 
            <para>
            The name of the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.SubnetGroup.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
            A list of subnets associated with the subnet group. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.SubnetGroup.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.SubnetGroupAlreadyExistsException">
            <summary>
            The specified subnet group already exists.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetGroupAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubnetGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubnetGroupAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubnetGroupAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.SubnetGroupInUseException">
            <summary>
            The specified subnet group is currently in use.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupInUseException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetGroupInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubnetGroupInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubnetGroupInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetGroupInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetGroupInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubnetGroupInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            <summary>
            The requested subnet group name does not refer to an existing subnet group.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubnetGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubnetGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubnetGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.SubnetGroupQuotaExceededException">
            <summary>
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetGroupQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubnetGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubnetGroupQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubnetGroupQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetGroupQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.SubnetInUseException">
            <summary>
            The requested subnet is being used by another subnet group.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetInUseException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubnetInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubnetInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubnetInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.SubnetQuotaExceededException">
            <summary>
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubnetQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubnetQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubnetQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.SubnetQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.Tag">
            <summary>
            A description of a tag. Every tag is a key-value pair. You can add up to 50 tags to
            a single DAX cluster.
            
             
            <para>
            AWS-assigned tag names and values are automatically assigned the <code>aws:</code>
            prefix, which the user cannot assign. AWS-assigned tag names do not count towards
            the tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.
            </para>
             
            <para>
            You cannot backdate the application of a tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key for the tag. Tag keys are case sensitive. Every DAX cluster can only have
            one tag with the same key. If you try to add an existing tag (same key), the existing
            tag value will be updated to the new value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the tag. Tag values are case-sensitive and can be null. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.TagNotFoundException">
            <summary>
            The tag does not exist.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.TagNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new TagNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.TagNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TagNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.TagNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of TagNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.TagNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.TagNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.TagNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TagNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.TagNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.TagQuotaPerResourceExceededException">
            <summary>
            You have exceeded the maximum number of tags for this DAX cluster.
            </summary>
        </member>
        <member name="M:Amazon.DAX.Model.TagQuotaPerResourceExceededException.#ctor(System.String)">
            <summary>
            Constructs a new TagQuotaPerResourceExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DAX.Model.TagQuotaPerResourceExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TagQuotaPerResourceExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.TagQuotaPerResourceExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of TagQuotaPerResourceExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DAX.Model.TagQuotaPerResourceExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagQuotaPerResourceExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.TagQuotaPerResourceExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagQuotaPerResourceExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DAX.Model.TagQuotaPerResourceExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TagQuotaPerResourceExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.DAX.Model.TagQuotaPerResourceExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.DAX.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Associates a set of tags with a DAX resource. You can call <code>TagResource</code>
            up to 5 times per second, per account.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.TagResourceRequest.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The name of the DAX resource to which tags should be added.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the DAX resource. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.TagResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of tags that are associated with the DAX resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes the association of tags from a DAX resource. You can call <code>UntagResource</code>
            up to 5 times per second, per account.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UntagResourceRequest.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The name of the DAX resource from which the tags should be removed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of tag keys. If the DAX cluster has any tags with these keys, then the tags
            are removed from the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UntagResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tag keys that have been removed from the cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.UpdateClusterRequest">
            <summary>
            Container for the parameters to the UpdateCluster operation.
            Modifies the settings for a DAX cluster. You can use this action to change one or
            more cluster configuration parameters by specifying the parameters and the new values.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateClusterRequest.ClusterName">
            <summary>
            Gets and sets the property ClusterName. 
            <para>
            The name of the DAX cluster to be modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateClusterRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the changes being made to the cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateClusterRequest.NotificationTopicArn">
            <summary>
            Gets and sets the property NotificationTopicArn. 
            <para>
            The Amazon Resource Name (ARN) that identifies the topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateClusterRequest.NotificationTopicStatus">
            <summary>
            Gets and sets the property NotificationTopicStatus. 
            <para>
            The current state of the topic. A value of “active” means that notifications will
            be sent to the topic. A value of “inactive” means that notifications will not be sent
            to the topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateClusterRequest.ParameterGroupName">
            <summary>
            Gets and sets the property ParameterGroupName. 
            <para>
            The name of a parameter group for this cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateClusterRequest.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            A range of time when maintenance of DAX cluster software will be performed. For example:
            <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than 30
            minutes, and is performed automatically within the maintenance window.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateClusterRequest.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            A list of user-specified security group IDs to be assigned to each node in the DAX
            cluster. If this parameter is not specified, DAX assigns the default VPC security
            group to each node.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.UpdateClusterResponse">
            <summary>
            This is the response object from the UpdateCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateClusterResponse.Cluster">
            <summary>
            Gets and sets the property Cluster. 
            <para>
            A description of the DAX cluster, after it has been modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.UpdateParameterGroupRequest">
            <summary>
            Container for the parameters to the UpdateParameterGroup operation.
            Modifies the parameters of a parameter group. You can modify up to 20 parameters in
            a single request by submitting a list parameter name and value pairs.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateParameterGroupRequest.ParameterGroupName">
            <summary>
            Gets and sets the property ParameterGroupName. 
            <para>
            The name of the parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateParameterGroupRequest.ParameterNameValues">
            <summary>
            Gets and sets the property ParameterNameValues. 
            <para>
            An array of name-value pairs for the parameters in the group. Each element in the
            array represents a single parameter.
            </para>
             <note> 
            <para>
             <code>record-ttl-millis</code> and <code>query-ttl-millis</code> are the only supported
            parameter names. For more details, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.cluster-management.html#DAX.cluster-management.custom-settings.ttl">Configuring
            TTL Settings</a>.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.UpdateParameterGroupResponse">
            <summary>
            This is the response object from the UpdateParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateParameterGroupResponse.ParameterGroup">
            <summary>
            Gets and sets the property ParameterGroup. 
            <para>
            The parameter group that has been modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.UpdateSubnetGroupRequest">
            <summary>
            Container for the parameters to the UpdateSubnetGroup operation.
            Modifies an existing subnet group.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateSubnetGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateSubnetGroupRequest.SubnetGroupName">
            <summary>
            Gets and sets the property SubnetGroupName. 
            <para>
            The name of the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateSubnetGroupRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            A list of subnet IDs in the subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.Model.UpdateSubnetGroupResponse">
            <summary>
            This is the response object from the UpdateSubnetGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.DAX.Model.UpdateSubnetGroupResponse.SubnetGroup">
            <summary>
            Gets and sets the property SubnetGroup. 
            <para>
            The subnet group that has been modified.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DAX.ChangeType">
            <summary>
            Constants used for properties of type ChangeType.
            </summary>
        </member>
        <member name="F:Amazon.DAX.ChangeType.IMMEDIATE">
            <summary>
            Constant IMMEDIATE for ChangeType
            </summary>
        </member>
        <member name="F:Amazon.DAX.ChangeType.REQUIRES_REBOOT">
            <summary>
            Constant REQUIRES_REBOOT for ChangeType
            </summary>
        </member>
        <member name="M:Amazon.DAX.ChangeType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DAX.ChangeType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DAX.ChangeType.op_Implicit(System.String)~Amazon.DAX.ChangeType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DAX.ClusterEndpointEncryptionType">
            <summary>
            Constants used for properties of type ClusterEndpointEncryptionType.
            </summary>
        </member>
        <member name="F:Amazon.DAX.ClusterEndpointEncryptionType.NONE">
            <summary>
            Constant NONE for ClusterEndpointEncryptionType
            </summary>
        </member>
        <member name="F:Amazon.DAX.ClusterEndpointEncryptionType.TLS">
            <summary>
            Constant TLS for ClusterEndpointEncryptionType
            </summary>
        </member>
        <member name="M:Amazon.DAX.ClusterEndpointEncryptionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DAX.ClusterEndpointEncryptionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DAX.ClusterEndpointEncryptionType.op_Implicit(System.String)~Amazon.DAX.ClusterEndpointEncryptionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DAX.IsModifiable">
            <summary>
            Constants used for properties of type IsModifiable.
            </summary>
        </member>
        <member name="F:Amazon.DAX.IsModifiable.CONDITIONAL">
            <summary>
            Constant CONDITIONAL for IsModifiable
            </summary>
        </member>
        <member name="F:Amazon.DAX.IsModifiable.FALSE">
            <summary>
            Constant FALSE for IsModifiable
            </summary>
        </member>
        <member name="F:Amazon.DAX.IsModifiable.TRUE">
            <summary>
            Constant TRUE for IsModifiable
            </summary>
        </member>
        <member name="M:Amazon.DAX.IsModifiable.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DAX.IsModifiable.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DAX.IsModifiable.op_Implicit(System.String)~Amazon.DAX.IsModifiable">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DAX.ParameterType">
            <summary>
            Constants used for properties of type ParameterType.
            </summary>
        </member>
        <member name="F:Amazon.DAX.ParameterType.DEFAULT">
            <summary>
            Constant DEFAULT for ParameterType
            </summary>
        </member>
        <member name="F:Amazon.DAX.ParameterType.NODE_TYPE_SPECIFIC">
            <summary>
            Constant NODE_TYPE_SPECIFIC for ParameterType
            </summary>
        </member>
        <member name="M:Amazon.DAX.ParameterType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DAX.ParameterType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DAX.ParameterType.op_Implicit(System.String)~Amazon.DAX.ParameterType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DAX.SourceType">
            <summary>
            Constants used for properties of type SourceType.
            </summary>
        </member>
        <member name="F:Amazon.DAX.SourceType.CLUSTER">
            <summary>
            Constant CLUSTER for SourceType
            </summary>
        </member>
        <member name="F:Amazon.DAX.SourceType.PARAMETER_GROUP">
            <summary>
            Constant PARAMETER_GROUP for SourceType
            </summary>
        </member>
        <member name="F:Amazon.DAX.SourceType.SUBNET_GROUP">
            <summary>
            Constant SUBNET_GROUP for SourceType
            </summary>
        </member>
        <member name="M:Amazon.DAX.SourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DAX.SourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DAX.SourceType.op_Implicit(System.String)~Amazon.DAX.SourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DAX.SSEStatus">
            <summary>
            Constants used for properties of type SSEStatus.
            </summary>
        </member>
        <member name="F:Amazon.DAX.SSEStatus.DISABLED">
            <summary>
            Constant DISABLED for SSEStatus
            </summary>
        </member>
        <member name="F:Amazon.DAX.SSEStatus.DISABLING">
            <summary>
            Constant DISABLING for SSEStatus
            </summary>
        </member>
        <member name="F:Amazon.DAX.SSEStatus.ENABLED">
            <summary>
            Constant ENABLED for SSEStatus
            </summary>
        </member>
        <member name="F:Amazon.DAX.SSEStatus.ENABLING">
            <summary>
            Constant ENABLING for SSEStatus
            </summary>
        </member>
        <member name="M:Amazon.DAX.SSEStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DAX.SSEStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DAX.SSEStatus.op_Implicit(System.String)~Amazon.DAX.SSEStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DAX.AmazonDAXClient">
             <summary>
             Implementation for accessing DAX
            
             DAX is a managed caching service engineered for Amazon DynamoDB. DAX dramatically
             speeds up database reads by caching frequently-accessed data from DynamoDB, so applications
             can access that data with sub-millisecond latency. You can create a DAX cluster easily,
             using the AWS Management Console. With a few simple modifications to your code, your
             application can begin taking advantage of the DAX cluster and realize significant
             improvements in read performance.
             </summary>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor">
             <summary>
             Constructs AmazonDAXClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonDAXClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(Amazon.DAX.AmazonDAXConfig)">
             <summary>
             Constructs AmazonDAXClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonDAXClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonDAXClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDAXClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.DAX.AmazonDAXConfig)">
            <summary>
            Constructs AmazonDAXClient with AWS Credentials and an
            AmazonDAXClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonDAXClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonDAXClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDAXClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(System.String,System.String,Amazon.DAX.AmazonDAXConfig)">
            <summary>
            Constructs AmazonDAXClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDAXClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonDAXClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonDAXClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDAXClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.#ctor(System.String,System.String,System.String,Amazon.DAX.AmazonDAXConfig)">
            <summary>
            Constructs AmazonDAXClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDAXClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonDAXClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.DAX.AmazonDAXClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.CreateCluster(Amazon.DAX.Model.CreateClusterRequest)">
            <summary>
            Creates a DAX cluster. All nodes in the cluster run the same DAX caching software.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            
            <returns>The response from the CreateCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterAlreadyExistsException">
            You already have a DAX cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of DAX clusters for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InsufficientClusterCapacityException">
            There are not enough system resources to create the cluster you requested (or to resize
            an already-existing cluster).
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidVPCNetworkStateException">
            The VPC network is in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForClusterExceededException">
            You have attempted to exceed the maximum number of nodes for a DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of nodes for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceQuotaExceededException">
            You have reached the maximum number of x509 certificates that can be created for encrypted
            clusters in a 30 day period. Contact AWS customer support to discuss options for continuing
            to create encrypted clusters.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagQuotaPerResourceExceededException">
            You have exceeded the maximum number of tags for this DAX cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.CreateClusterAsync(Amazon.DAX.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a DAX cluster. All nodes in the cluster run the same DAX caching software.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterAlreadyExistsException">
            You already have a DAX cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of DAX clusters for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InsufficientClusterCapacityException">
            There are not enough system resources to create the cluster you requested (or to resize
            an already-existing cluster).
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidVPCNetworkStateException">
            The VPC network is in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForClusterExceededException">
            You have attempted to exceed the maximum number of nodes for a DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of nodes for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceQuotaExceededException">
            You have reached the maximum number of x509 certificates that can be created for encrypted
            clusters in a 30 day period. Contact AWS customer support to discuss options for continuing
            to create encrypted clusters.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagQuotaPerResourceExceededException">
            You have exceeded the maximum number of tags for this DAX cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.CreateParameterGroup(Amazon.DAX.Model.CreateParameterGroupRequest)">
            <summary>
            Creates a new parameter group. A parameter group is a collection of parameters that
            you apply to all of the nodes in a DAX cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateParameterGroup service method.</param>
            
            <returns>The response from the CreateParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupAlreadyExistsException">
            The specified parameter group already exists.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupQuotaExceededException">
            You have attempted to exceed the maximum number of parameter groups.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateParameterGroup">REST API Reference for CreateParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.CreateParameterGroupAsync(Amazon.DAX.Model.CreateParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new parameter group. A parameter group is a collection of parameters that
            you apply to all of the nodes in a DAX cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupAlreadyExistsException">
            The specified parameter group already exists.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupQuotaExceededException">
            You have attempted to exceed the maximum number of parameter groups.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateParameterGroup">REST API Reference for CreateParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.CreateSubnetGroup(Amazon.DAX.Model.CreateSubnetGroupRequest)">
            <summary>
            Creates a new subnet group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSubnetGroup service method.</param>
            
            <returns>The response from the CreateSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidSubnetException">
            An invalid subnet identifier was specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupAlreadyExistsException">
            The specified subnet group already exists.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateSubnetGroup">REST API Reference for CreateSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.CreateSubnetGroupAsync(Amazon.DAX.Model.CreateSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new subnet group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidSubnetException">
            An invalid subnet identifier was specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupAlreadyExistsException">
            The specified subnet group already exists.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateSubnetGroup">REST API Reference for CreateSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DecreaseReplicationFactor(Amazon.DAX.Model.DecreaseReplicationFactorRequest)">
            <summary>
            Removes one or more nodes from a DAX cluster.
            
             <note> 
            <para>
            You cannot use <code>DecreaseReplicationFactor</code> to remove the last node in a
            DAX cluster. If you need to do this, use <code>DeleteCluster</code> instead.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DecreaseReplicationFactor service method.</param>
            
            <returns>The response from the DecreaseReplicationFactor service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeNotFoundException">
            None of the nodes in the cluster have the given node ID.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DecreaseReplicationFactor">REST API Reference for DecreaseReplicationFactor Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DecreaseReplicationFactorAsync(Amazon.DAX.Model.DecreaseReplicationFactorRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more nodes from a DAX cluster.
            
             <note> 
            <para>
            You cannot use <code>DecreaseReplicationFactor</code> to remove the last node in a
            DAX cluster. If you need to do this, use <code>DeleteCluster</code> instead.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DecreaseReplicationFactor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DecreaseReplicationFactor service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeNotFoundException">
            None of the nodes in the cluster have the given node ID.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DecreaseReplicationFactor">REST API Reference for DecreaseReplicationFactor Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DeleteCluster(Amazon.DAX.Model.DeleteClusterRequest)">
            <summary>
            Deletes a previously provisioned DAX cluster. <i>DeleteCluster</i> deletes all associated
            nodes, node endpoints and the DAX cluster itself. When you receive a successful response
            from this action, DAX immediately begins deleting the cluster; you cannot cancel or
            revert this action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            
            <returns>The response from the DeleteCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DeleteClusterAsync(Amazon.DAX.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a previously provisioned DAX cluster. <i>DeleteCluster</i> deletes all associated
            nodes, node endpoints and the DAX cluster itself. When you receive a successful response
            from this action, DAX immediately begins deleting the cluster; you cannot cancel or
            revert this action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DeleteParameterGroup(Amazon.DAX.Model.DeleteParameterGroupRequest)">
            <summary>
            Deletes the specified parameter group. You cannot delete a parameter group if it is
            associated with any DAX clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteParameterGroup service method.</param>
            
            <returns>The response from the DeleteParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteParameterGroup">REST API Reference for DeleteParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DeleteParameterGroupAsync(Amazon.DAX.Model.DeleteParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified parameter group. You cannot delete a parameter group if it is
            associated with any DAX clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteParameterGroup">REST API Reference for DeleteParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DeleteSubnetGroup(Amazon.DAX.Model.DeleteSubnetGroupRequest)">
            <summary>
            Deletes a subnet group.
            
             <note> 
            <para>
            You cannot delete a subnet group if it is associated with any DAX clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubnetGroup service method.</param>
            
            <returns>The response from the DeleteSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupInUseException">
            The specified subnet group is currently in use.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteSubnetGroup">REST API Reference for DeleteSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DeleteSubnetGroupAsync(Amazon.DAX.Model.DeleteSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a subnet group.
            
             <note> 
            <para>
            You cannot delete a subnet group if it is associated with any DAX clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupInUseException">
            The specified subnet group is currently in use.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteSubnetGroup">REST API Reference for DeleteSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeClusters(Amazon.DAX.Model.DescribeClustersRequest)">
            <summary>
            Returns information about all provisioned DAX clusters if no cluster identifier is
            specified, or about a specific DAX cluster if a cluster identifier is supplied.
            
             
            <para>
            If the cluster is in the CREATING state, only cluster level information will be displayed
            until all of the nodes are successfully provisioned.
            </para>
             
            <para>
            If the cluster is in the DELETING state, only cluster level information will be displayed.
            </para>
             
            <para>
            If nodes are currently being added to the DAX cluster, node endpoint information and
            creation time for the additional nodes will not be displayed until they are completely
            provisioned. When the DAX cluster state is <i>available</i>, the cluster is ready
            for use.
            </para>
             
            <para>
            If nodes are currently being removed from the DAX cluster, no endpoint information
            for the removed nodes is displayed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            
            <returns>The response from the DescribeClusters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeClustersAsync(Amazon.DAX.Model.DescribeClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about all provisioned DAX clusters if no cluster identifier is
            specified, or about a specific DAX cluster if a cluster identifier is supplied.
            
             
            <para>
            If the cluster is in the CREATING state, only cluster level information will be displayed
            until all of the nodes are successfully provisioned.
            </para>
             
            <para>
            If the cluster is in the DELETING state, only cluster level information will be displayed.
            </para>
             
            <para>
            If nodes are currently being added to the DAX cluster, node endpoint information and
            creation time for the additional nodes will not be displayed until they are completely
            provisioned. When the DAX cluster state is <i>available</i>, the cluster is ready
            for use.
            </para>
             
            <para>
            If nodes are currently being removed from the DAX cluster, no endpoint information
            for the removed nodes is displayed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeClusters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeDefaultParameters(Amazon.DAX.Model.DescribeDefaultParametersRequest)">
            <summary>
            Returns the default system parameter information for the DAX caching software.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDefaultParameters service method.</param>
            
            <returns>The response from the DescribeDefaultParameters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeDefaultParameters">REST API Reference for DescribeDefaultParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeDefaultParametersAsync(Amazon.DAX.Model.DescribeDefaultParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the default system parameter information for the DAX caching software.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDefaultParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDefaultParameters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeDefaultParameters">REST API Reference for DescribeDefaultParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeEvents(Amazon.DAX.Model.DescribeEventsRequest)">
            <summary>
            Returns events related to DAX clusters and parameter groups. You can obtain events
            specific to a particular DAX cluster or parameter group by providing the name as a
            parameter.
            
             
            <para>
            By default, only the events occurring within the last 24 hours are returned; however,
            you can retrieve up to 14 days' worth of events if necessary.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            
            <returns>The response from the DescribeEvents service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeEventsAsync(Amazon.DAX.Model.DescribeEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns events related to DAX clusters and parameter groups. You can obtain events
            specific to a particular DAX cluster or parameter group by providing the name as a
            parameter.
            
             
            <para>
            By default, only the events occurring within the last 24 hours are returned; however,
            you can retrieve up to 14 days' worth of events if necessary.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEvents service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeParameterGroups(Amazon.DAX.Model.DescribeParameterGroupsRequest)">
            <summary>
            Returns a list of parameter group descriptions. If a parameter group name is specified,
            the list will contain only the descriptions for that group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeParameterGroups service method.</param>
            
            <returns>The response from the DescribeParameterGroups service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeParameterGroups">REST API Reference for DescribeParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeParameterGroupsAsync(Amazon.DAX.Model.DescribeParameterGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of parameter group descriptions. If a parameter group name is specified,
            the list will contain only the descriptions for that group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeParameterGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeParameterGroups service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeParameterGroups">REST API Reference for DescribeParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeParameters(Amazon.DAX.Model.DescribeParametersRequest)">
            <summary>
            Returns the detailed parameter list for a particular parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeParameters service method.</param>
            
            <returns>The response from the DescribeParameters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeParameters">REST API Reference for DescribeParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeParametersAsync(Amazon.DAX.Model.DescribeParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the detailed parameter list for a particular parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeParameters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeParameters">REST API Reference for DescribeParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeSubnetGroups(Amazon.DAX.Model.DescribeSubnetGroupsRequest)">
            <summary>
            Returns a list of subnet group descriptions. If a subnet group name is specified,
            the list will contain only the description of that group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSubnetGroups service method.</param>
            
            <returns>The response from the DescribeSubnetGroups service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeSubnetGroups">REST API Reference for DescribeSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.DescribeSubnetGroupsAsync(Amazon.DAX.Model.DescribeSubnetGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of subnet group descriptions. If a subnet group name is specified,
            the list will contain only the description of that group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSubnetGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSubnetGroups service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeSubnetGroups">REST API Reference for DescribeSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.IncreaseReplicationFactor(Amazon.DAX.Model.IncreaseReplicationFactorRequest)">
            <summary>
            Adds one or more nodes to a DAX cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the IncreaseReplicationFactor service method.</param>
            
            <returns>The response from the IncreaseReplicationFactor service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InsufficientClusterCapacityException">
            There are not enough system resources to create the cluster you requested (or to resize
            an already-existing cluster).
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidVPCNetworkStateException">
            The VPC network is in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForClusterExceededException">
            You have attempted to exceed the maximum number of nodes for a DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of nodes for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/IncreaseReplicationFactor">REST API Reference for IncreaseReplicationFactor Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.IncreaseReplicationFactorAsync(Amazon.DAX.Model.IncreaseReplicationFactorRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more nodes to a DAX cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the IncreaseReplicationFactor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IncreaseReplicationFactor service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InsufficientClusterCapacityException">
            There are not enough system resources to create the cluster you requested (or to resize
            an already-existing cluster).
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidVPCNetworkStateException">
            The VPC network is in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForClusterExceededException">
            You have attempted to exceed the maximum number of nodes for a DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of nodes for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/IncreaseReplicationFactor">REST API Reference for IncreaseReplicationFactor Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.ListTags(Amazon.DAX.Model.ListTagsRequest)">
            <summary>
            List all of the tags for a DAX cluster. You can call <code>ListTags</code> up to 10
            times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTags service method.</param>
            
            <returns>The response from the ListTags service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/ListTags">REST API Reference for ListTags Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.ListTagsAsync(Amazon.DAX.Model.ListTagsRequest,System.Threading.CancellationToken)">
            <summary>
            List all of the tags for a DAX cluster. You can call <code>ListTags</code> up to 10
            times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTags service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/ListTags">REST API Reference for ListTags Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.RebootNode(Amazon.DAX.Model.RebootNodeRequest)">
            <summary>
            Reboots a single node of a DAX cluster. The reboot action takes place as soon as possible.
            During the reboot, the node status is set to REBOOTING.
            
             <note> 
            <para>
             <code>RebootNode</code> restarts the DAX engine process and does not remove the contents
            of the cache. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootNode service method.</param>
            
            <returns>The response from the RebootNode service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeNotFoundException">
            None of the nodes in the cluster have the given node ID.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/RebootNode">REST API Reference for RebootNode Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.RebootNodeAsync(Amazon.DAX.Model.RebootNodeRequest,System.Threading.CancellationToken)">
            <summary>
            Reboots a single node of a DAX cluster. The reboot action takes place as soon as possible.
            During the reboot, the node status is set to REBOOTING.
            
             <note> 
            <para>
             <code>RebootNode</code> restarts the DAX engine process and does not remove the contents
            of the cache. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootNode service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RebootNode service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeNotFoundException">
            None of the nodes in the cluster have the given node ID.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/RebootNode">REST API Reference for RebootNode Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.TagResource(Amazon.DAX.Model.TagResourceRequest)">
            <summary>
            Associates a set of tags with a DAX resource. You can call <code>TagResource</code>
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagQuotaPerResourceExceededException">
            You have exceeded the maximum number of tags for this DAX cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.TagResourceAsync(Amazon.DAX.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates a set of tags with a DAX resource. You can call <code>TagResource</code>
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagQuotaPerResourceExceededException">
            You have exceeded the maximum number of tags for this DAX cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.UntagResource(Amazon.DAX.Model.UntagResourceRequest)">
            <summary>
            Removes the association of tags from a DAX resource. You can call <code>UntagResource</code>
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagNotFoundException">
            The tag does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.UntagResourceAsync(Amazon.DAX.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the association of tags from a DAX resource. You can call <code>UntagResource</code>
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagNotFoundException">
            The tag does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.UpdateCluster(Amazon.DAX.Model.UpdateClusterRequest)">
            <summary>
            Modifies the settings for a DAX cluster. You can use this action to change one or
            more cluster configuration parameters by specifying the parameters and the new values.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCluster service method.</param>
            
            <returns>The response from the UpdateCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateCluster">REST API Reference for UpdateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.UpdateClusterAsync(Amazon.DAX.Model.UpdateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the settings for a DAX cluster. You can use this action to change one or
            more cluster configuration parameters by specifying the parameters and the new values.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateCluster">REST API Reference for UpdateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.UpdateParameterGroup(Amazon.DAX.Model.UpdateParameterGroupRequest)">
            <summary>
            Modifies the parameters of a parameter group. You can modify up to 20 parameters in
            a single request by submitting a list parameter name and value pairs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateParameterGroup service method.</param>
            
            <returns>The response from the UpdateParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateParameterGroup">REST API Reference for UpdateParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.UpdateParameterGroupAsync(Amazon.DAX.Model.UpdateParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a parameter group. You can modify up to 20 parameters in
            a single request by submitting a list parameter name and value pairs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateParameterGroup">REST API Reference for UpdateParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.UpdateSubnetGroup(Amazon.DAX.Model.UpdateSubnetGroupRequest)">
            <summary>
            Modifies an existing subnet group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSubnetGroup service method.</param>
            
            <returns>The response from the UpdateSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidSubnetException">
            An invalid subnet identifier was specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetInUseException">
            The requested subnet is being used by another subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateSubnetGroup">REST API Reference for UpdateSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.AmazonDAXClient.UpdateSubnetGroupAsync(Amazon.DAX.Model.UpdateSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing subnet group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidSubnetException">
            An invalid subnet identifier was specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetInUseException">
            The requested subnet is being used by another subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateSubnetGroup">REST API Reference for UpdateSubnetGroup Operation</seealso>
        </member>
        <member name="T:Amazon.DAX.IAmazonDAX">
             <summary>
             Interface for accessing DAX
            
             DAX is a managed caching service engineered for Amazon DynamoDB. DAX dramatically
             speeds up database reads by caching frequently-accessed data from DynamoDB, so applications
             can access that data with sub-millisecond latency. You can create a DAX cluster easily,
             using the AWS Management Console. With a few simple modifications to your code, your
             application can begin taking advantage of the DAX cluster and realize significant
             improvements in read performance.
             </summary>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.CreateCluster(Amazon.DAX.Model.CreateClusterRequest)">
            <summary>
            Creates a DAX cluster. All nodes in the cluster run the same DAX caching software.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            
            <returns>The response from the CreateCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterAlreadyExistsException">
            You already have a DAX cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of DAX clusters for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InsufficientClusterCapacityException">
            There are not enough system resources to create the cluster you requested (or to resize
            an already-existing cluster).
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidVPCNetworkStateException">
            The VPC network is in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForClusterExceededException">
            You have attempted to exceed the maximum number of nodes for a DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of nodes for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceQuotaExceededException">
            You have reached the maximum number of x509 certificates that can be created for encrypted
            clusters in a 30 day period. Contact AWS customer support to discuss options for continuing
            to create encrypted clusters.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagQuotaPerResourceExceededException">
            You have exceeded the maximum number of tags for this DAX cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.CreateClusterAsync(Amazon.DAX.Model.CreateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a DAX cluster. All nodes in the cluster run the same DAX caching software.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterAlreadyExistsException">
            You already have a DAX cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ClusterQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of DAX clusters for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InsufficientClusterCapacityException">
            There are not enough system resources to create the cluster you requested (or to resize
            an already-existing cluster).
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidVPCNetworkStateException">
            The VPC network is in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForClusterExceededException">
            You have attempted to exceed the maximum number of nodes for a DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of nodes for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceQuotaExceededException">
            You have reached the maximum number of x509 certificates that can be created for encrypted
            clusters in a 30 day period. Contact AWS customer support to discuss options for continuing
            to create encrypted clusters.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagQuotaPerResourceExceededException">
            You have exceeded the maximum number of tags for this DAX cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateCluster">REST API Reference for CreateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.CreateParameterGroup(Amazon.DAX.Model.CreateParameterGroupRequest)">
            <summary>
            Creates a new parameter group. A parameter group is a collection of parameters that
            you apply to all of the nodes in a DAX cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateParameterGroup service method.</param>
            
            <returns>The response from the CreateParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupAlreadyExistsException">
            The specified parameter group already exists.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupQuotaExceededException">
            You have attempted to exceed the maximum number of parameter groups.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateParameterGroup">REST API Reference for CreateParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.CreateParameterGroupAsync(Amazon.DAX.Model.CreateParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new parameter group. A parameter group is a collection of parameters that
            you apply to all of the nodes in a DAX cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupAlreadyExistsException">
            The specified parameter group already exists.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupQuotaExceededException">
            You have attempted to exceed the maximum number of parameter groups.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateParameterGroup">REST API Reference for CreateParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.CreateSubnetGroup(Amazon.DAX.Model.CreateSubnetGroupRequest)">
            <summary>
            Creates a new subnet group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSubnetGroup service method.</param>
            
            <returns>The response from the CreateSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidSubnetException">
            An invalid subnet identifier was specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupAlreadyExistsException">
            The specified subnet group already exists.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateSubnetGroup">REST API Reference for CreateSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.CreateSubnetGroupAsync(Amazon.DAX.Model.CreateSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new subnet group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidSubnetException">
            An invalid subnet identifier was specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupAlreadyExistsException">
            The specified subnet group already exists.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/CreateSubnetGroup">REST API Reference for CreateSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DecreaseReplicationFactor(Amazon.DAX.Model.DecreaseReplicationFactorRequest)">
            <summary>
            Removes one or more nodes from a DAX cluster.
            
             <note> 
            <para>
            You cannot use <code>DecreaseReplicationFactor</code> to remove the last node in a
            DAX cluster. If you need to do this, use <code>DeleteCluster</code> instead.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DecreaseReplicationFactor service method.</param>
            
            <returns>The response from the DecreaseReplicationFactor service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeNotFoundException">
            None of the nodes in the cluster have the given node ID.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DecreaseReplicationFactor">REST API Reference for DecreaseReplicationFactor Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DecreaseReplicationFactorAsync(Amazon.DAX.Model.DecreaseReplicationFactorRequest,System.Threading.CancellationToken)">
            <summary>
            Removes one or more nodes from a DAX cluster.
            
             <note> 
            <para>
            You cannot use <code>DecreaseReplicationFactor</code> to remove the last node in a
            DAX cluster. If you need to do this, use <code>DeleteCluster</code> instead.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DecreaseReplicationFactor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DecreaseReplicationFactor service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeNotFoundException">
            None of the nodes in the cluster have the given node ID.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DecreaseReplicationFactor">REST API Reference for DecreaseReplicationFactor Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DeleteCluster(Amazon.DAX.Model.DeleteClusterRequest)">
            <summary>
            Deletes a previously provisioned DAX cluster. <i>DeleteCluster</i> deletes all associated
            nodes, node endpoints and the DAX cluster itself. When you receive a successful response
            from this action, DAX immediately begins deleting the cluster; you cannot cancel or
            revert this action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            
            <returns>The response from the DeleteCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DeleteClusterAsync(Amazon.DAX.Model.DeleteClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a previously provisioned DAX cluster. <i>DeleteCluster</i> deletes all associated
            nodes, node endpoints and the DAX cluster itself. When you receive a successful response
            from this action, DAX immediately begins deleting the cluster; you cannot cancel or
            revert this action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteCluster">REST API Reference for DeleteCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DeleteParameterGroup(Amazon.DAX.Model.DeleteParameterGroupRequest)">
            <summary>
            Deletes the specified parameter group. You cannot delete a parameter group if it is
            associated with any DAX clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteParameterGroup service method.</param>
            
            <returns>The response from the DeleteParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteParameterGroup">REST API Reference for DeleteParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DeleteParameterGroupAsync(Amazon.DAX.Model.DeleteParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified parameter group. You cannot delete a parameter group if it is
            associated with any DAX clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteParameterGroup">REST API Reference for DeleteParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DeleteSubnetGroup(Amazon.DAX.Model.DeleteSubnetGroupRequest)">
            <summary>
            Deletes a subnet group.
            
             <note> 
            <para>
            You cannot delete a subnet group if it is associated with any DAX clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubnetGroup service method.</param>
            
            <returns>The response from the DeleteSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupInUseException">
            The specified subnet group is currently in use.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteSubnetGroup">REST API Reference for DeleteSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DeleteSubnetGroupAsync(Amazon.DAX.Model.DeleteSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a subnet group.
            
             <note> 
            <para>
            You cannot delete a subnet group if it is associated with any DAX clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupInUseException">
            The specified subnet group is currently in use.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DeleteSubnetGroup">REST API Reference for DeleteSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeClusters(Amazon.DAX.Model.DescribeClustersRequest)">
            <summary>
            Returns information about all provisioned DAX clusters if no cluster identifier is
            specified, or about a specific DAX cluster if a cluster identifier is supplied.
            
             
            <para>
            If the cluster is in the CREATING state, only cluster level information will be displayed
            until all of the nodes are successfully provisioned.
            </para>
             
            <para>
            If the cluster is in the DELETING state, only cluster level information will be displayed.
            </para>
             
            <para>
            If nodes are currently being added to the DAX cluster, node endpoint information and
            creation time for the additional nodes will not be displayed until they are completely
            provisioned. When the DAX cluster state is <i>available</i>, the cluster is ready
            for use.
            </para>
             
            <para>
            If nodes are currently being removed from the DAX cluster, no endpoint information
            for the removed nodes is displayed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            
            <returns>The response from the DescribeClusters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeClustersAsync(Amazon.DAX.Model.DescribeClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about all provisioned DAX clusters if no cluster identifier is
            specified, or about a specific DAX cluster if a cluster identifier is supplied.
            
             
            <para>
            If the cluster is in the CREATING state, only cluster level information will be displayed
            until all of the nodes are successfully provisioned.
            </para>
             
            <para>
            If the cluster is in the DELETING state, only cluster level information will be displayed.
            </para>
             
            <para>
            If nodes are currently being added to the DAX cluster, node endpoint information and
            creation time for the additional nodes will not be displayed until they are completely
            provisioned. When the DAX cluster state is <i>available</i>, the cluster is ready
            for use.
            </para>
             
            <para>
            If nodes are currently being removed from the DAX cluster, no endpoint information
            for the removed nodes is displayed.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeClusters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeClusters">REST API Reference for DescribeClusters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeDefaultParameters(Amazon.DAX.Model.DescribeDefaultParametersRequest)">
            <summary>
            Returns the default system parameter information for the DAX caching software.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDefaultParameters service method.</param>
            
            <returns>The response from the DescribeDefaultParameters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeDefaultParameters">REST API Reference for DescribeDefaultParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeDefaultParametersAsync(Amazon.DAX.Model.DescribeDefaultParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the default system parameter information for the DAX caching software.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDefaultParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDefaultParameters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeDefaultParameters">REST API Reference for DescribeDefaultParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeEvents(Amazon.DAX.Model.DescribeEventsRequest)">
            <summary>
            Returns events related to DAX clusters and parameter groups. You can obtain events
            specific to a particular DAX cluster or parameter group by providing the name as a
            parameter.
            
             
            <para>
            By default, only the events occurring within the last 24 hours are returned; however,
            you can retrieve up to 14 days' worth of events if necessary.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            
            <returns>The response from the DescribeEvents service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeEventsAsync(Amazon.DAX.Model.DescribeEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns events related to DAX clusters and parameter groups. You can obtain events
            specific to a particular DAX cluster or parameter group by providing the name as a
            parameter.
            
             
            <para>
            By default, only the events occurring within the last 24 hours are returned; however,
            you can retrieve up to 14 days' worth of events if necessary.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEvents service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeParameterGroups(Amazon.DAX.Model.DescribeParameterGroupsRequest)">
            <summary>
            Returns a list of parameter group descriptions. If a parameter group name is specified,
            the list will contain only the descriptions for that group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeParameterGroups service method.</param>
            
            <returns>The response from the DescribeParameterGroups service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeParameterGroups">REST API Reference for DescribeParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeParameterGroupsAsync(Amazon.DAX.Model.DescribeParameterGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of parameter group descriptions. If a parameter group name is specified,
            the list will contain only the descriptions for that group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeParameterGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeParameterGroups service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeParameterGroups">REST API Reference for DescribeParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeParameters(Amazon.DAX.Model.DescribeParametersRequest)">
            <summary>
            Returns the detailed parameter list for a particular parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeParameters service method.</param>
            
            <returns>The response from the DescribeParameters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeParameters">REST API Reference for DescribeParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeParametersAsync(Amazon.DAX.Model.DescribeParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the detailed parameter list for a particular parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeParameters service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeParameters">REST API Reference for DescribeParameters Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeSubnetGroups(Amazon.DAX.Model.DescribeSubnetGroupsRequest)">
            <summary>
            Returns a list of subnet group descriptions. If a subnet group name is specified,
            the list will contain only the description of that group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSubnetGroups service method.</param>
            
            <returns>The response from the DescribeSubnetGroups service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeSubnetGroups">REST API Reference for DescribeSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.DescribeSubnetGroupsAsync(Amazon.DAX.Model.DescribeSubnetGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of subnet group descriptions. If a subnet group name is specified,
            the list will contain only the description of that group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSubnetGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeSubnetGroups service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/DescribeSubnetGroups">REST API Reference for DescribeSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.IncreaseReplicationFactor(Amazon.DAX.Model.IncreaseReplicationFactorRequest)">
            <summary>
            Adds one or more nodes to a DAX cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the IncreaseReplicationFactor service method.</param>
            
            <returns>The response from the IncreaseReplicationFactor service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InsufficientClusterCapacityException">
            There are not enough system resources to create the cluster you requested (or to resize
            an already-existing cluster).
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidVPCNetworkStateException">
            The VPC network is in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForClusterExceededException">
            You have attempted to exceed the maximum number of nodes for a DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of nodes for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/IncreaseReplicationFactor">REST API Reference for IncreaseReplicationFactor Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.IncreaseReplicationFactorAsync(Amazon.DAX.Model.IncreaseReplicationFactorRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more nodes to a DAX cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the IncreaseReplicationFactor service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the IncreaseReplicationFactor service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InsufficientClusterCapacityException">
            There are not enough system resources to create the cluster you requested (or to resize
            an already-existing cluster).
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidVPCNetworkStateException">
            The VPC network is in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForClusterExceededException">
            You have attempted to exceed the maximum number of nodes for a DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeQuotaForCustomerExceededException">
            You have attempted to exceed the maximum number of nodes for your AWS account.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/IncreaseReplicationFactor">REST API Reference for IncreaseReplicationFactor Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.ListTags(Amazon.DAX.Model.ListTagsRequest)">
            <summary>
            List all of the tags for a DAX cluster. You can call <code>ListTags</code> up to 10
            times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTags service method.</param>
            
            <returns>The response from the ListTags service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/ListTags">REST API Reference for ListTags Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.ListTagsAsync(Amazon.DAX.Model.ListTagsRequest,System.Threading.CancellationToken)">
            <summary>
            List all of the tags for a DAX cluster. You can call <code>ListTags</code> up to 10
            times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTags service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/ListTags">REST API Reference for ListTags Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.RebootNode(Amazon.DAX.Model.RebootNodeRequest)">
            <summary>
            Reboots a single node of a DAX cluster. The reboot action takes place as soon as possible.
            During the reboot, the node status is set to REBOOTING.
            
             <note> 
            <para>
             <code>RebootNode</code> restarts the DAX engine process and does not remove the contents
            of the cache. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootNode service method.</param>
            
            <returns>The response from the RebootNode service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeNotFoundException">
            None of the nodes in the cluster have the given node ID.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/RebootNode">REST API Reference for RebootNode Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.RebootNodeAsync(Amazon.DAX.Model.RebootNodeRequest,System.Threading.CancellationToken)">
            <summary>
            Reboots a single node of a DAX cluster. The reboot action takes place as soon as possible.
            During the reboot, the node status is set to REBOOTING.
            
             <note> 
            <para>
             <code>RebootNode</code> restarts the DAX engine process and does not remove the contents
            of the cache. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootNode service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RebootNode service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.NodeNotFoundException">
            None of the nodes in the cluster have the given node ID.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/RebootNode">REST API Reference for RebootNode Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.TagResource(Amazon.DAX.Model.TagResourceRequest)">
            <summary>
            Associates a set of tags with a DAX resource. You can call <code>TagResource</code>
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagQuotaPerResourceExceededException">
            You have exceeded the maximum number of tags for this DAX cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.TagResourceAsync(Amazon.DAX.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Associates a set of tags with a DAX resource. You can call <code>TagResource</code>
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagQuotaPerResourceExceededException">
            You have exceeded the maximum number of tags for this DAX cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.UntagResource(Amazon.DAX.Model.UntagResourceRequest)">
            <summary>
            Removes the association of tags from a DAX resource. You can call <code>UntagResource</code>
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagNotFoundException">
            The tag does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.UntagResourceAsync(Amazon.DAX.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the association of tags from a DAX resource. You can call <code>UntagResource</code>
            up to 5 times per second, per account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidARNException">
            The Amazon Resource Name (ARN) supplied in the request is not valid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.TagNotFoundException">
            The tag does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.UpdateCluster(Amazon.DAX.Model.UpdateClusterRequest)">
            <summary>
            Modifies the settings for a DAX cluster. You can use this action to change one or
            more cluster configuration parameters by specifying the parameters and the new values.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCluster service method.</param>
            
            <returns>The response from the UpdateCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateCluster">REST API Reference for UpdateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.UpdateClusterAsync(Amazon.DAX.Model.UpdateClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the settings for a DAX cluster. You can use this action to change one or
            more cluster configuration parameters by specifying the parameters and the new values.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCluster service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.ClusterNotFoundException">
            The requested cluster ID does not refer to an existing DAX cluster.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidClusterStateException">
            The requested DAX cluster is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateCluster">REST API Reference for UpdateCluster Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.UpdateParameterGroup(Amazon.DAX.Model.UpdateParameterGroupRequest)">
            <summary>
            Modifies the parameters of a parameter group. You can modify up to 20 parameters in
            a single request by submitting a list parameter name and value pairs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateParameterGroup service method.</param>
            
            <returns>The response from the UpdateParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateParameterGroup">REST API Reference for UpdateParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.UpdateParameterGroupAsync(Amazon.DAX.Model.UpdateParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a parameter group. You can modify up to 20 parameters in
            a single request by submitting a list parameter name and value pairs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateParameterGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterCombinationException">
            Two or more incompatible parameters were specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterGroupStateException">
            One or more parameters in a parameter group are in an invalid state.
            </exception>
            <exception cref="T:Amazon.DAX.Model.InvalidParameterValueException">
            The value for a parameter is invalid.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ParameterGroupNotFoundException">
            The specified parameter group does not exist.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateParameterGroup">REST API Reference for UpdateParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.UpdateSubnetGroup(Amazon.DAX.Model.UpdateSubnetGroupRequest)">
            <summary>
            Modifies an existing subnet group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSubnetGroup service method.</param>
            
            <returns>The response from the UpdateSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidSubnetException">
            An invalid subnet identifier was specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetInUseException">
            The requested subnet is being used by another subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateSubnetGroup">REST API Reference for UpdateSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.DAX.IAmazonDAX.UpdateSubnetGroupAsync(Amazon.DAX.Model.UpdateSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing subnet group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateSubnetGroup service method, as returned by DAX.</returns>
            <exception cref="T:Amazon.DAX.Model.InvalidSubnetException">
            An invalid subnet identifier was specified.
            </exception>
            <exception cref="T:Amazon.DAX.Model.ServiceLinkedRoleNotFoundException">
            The specified service linked role (SLR) was not found.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetGroupNotFoundException">
            The requested subnet group name does not refer to an existing subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetInUseException">
            The requested subnet is being used by another subnet group.
            </exception>
            <exception cref="T:Amazon.DAX.Model.SubnetQuotaExceededException">
            The request cannot be processed because it would exceed the allowed number of subnets
            in a subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/dax-2017-04-19/UpdateSubnetGroup">REST API Reference for UpdateSubnetGroup Operation</seealso>
        </member>
    </members>
</doc>
