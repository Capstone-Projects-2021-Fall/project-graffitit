<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.LakeFormation</name>
    </assembly>
    <members>
        <member name="T:Amazon.LakeFormation.AmazonLakeFormationConfig">
            <summary>
            Configuration for accessing Amazon LakeFormation service
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.AmazonLakeFormationException">
            <summary>
             Common exception for the LakeFormation service.
             </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonLakeFormationException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonLakeFormationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonLakeFormationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLakeFormationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonLakeFormationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonLakeFormationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.LakeFormation.Internal.AmazonLakeFormationMetadata">
            <summary>
            Service metadata for  Amazon LakeFormation service
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Internal.AmazonLakeFormationMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Internal.AmazonLakeFormationMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AccessDeniedException">
            <summary>
            Access to a resource was denied.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AddLFTagsToResourceRequest">
            <summary>
            Container for the parameters to the AddLFTagsToResource operation.
            Attaches one or more tags to an existing resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddLFTagsToResourceRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddLFTagsToResourceRequest.LFTags">
            <summary>
            Gets and sets the property LFTags. 
            <para>
            The tags to attach to the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddLFTagsToResourceRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource to which to attach a tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AddLFTagsToResourceResponse">
            <summary>
            This is the response object from the AddLFTagsToResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.AddLFTagsToResourceResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            A list of failures to tag the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            <summary>
            A resource to be created or added already exists.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new AlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LakeFormation.Model.AlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchGrantPermissionsRequest">
            <summary>
            Container for the parameters to the BatchGrantPermissions operation.
            Batch operation to grant permissions to the principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchGrantPermissionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchGrantPermissionsRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            A list of up to 20 entries for resource permissions to be granted by batch operation
            to the principal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchGrantPermissionsResponse">
            <summary>
            This is the response object from the BatchGrantPermissions operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchGrantPermissionsResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            A list of failures to grant permissions to the resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchPermissionsFailureEntry">
            <summary>
            A list of failures when performing a batch grant or batch revoke operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsFailureEntry.Error">
            <summary>
            Gets and sets the property Error. 
            <para>
            An error message that applies to the failure of the entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsFailureEntry.RequestEntry">
            <summary>
            Gets and sets the property RequestEntry. 
            <para>
            An identifier for an entry of the batch request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry">
            <summary>
            A permission to a resource granted by batch operation to the principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            A unique identifier for the batch permissions request entry.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The permissions to be granted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry.PermissionsWithGrantOption">
            <summary>
            Gets and sets the property PermissionsWithGrantOption. 
            <para>
            Indicates if the option to pass permissions is granted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal to be granted a permission.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchPermissionsRequestEntry.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource to which the principal is to be granted a permission.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchRevokePermissionsRequest">
            <summary>
            Container for the parameters to the BatchRevokePermissions operation.
            Batch operation to revoke permissions from the principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchRevokePermissionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchRevokePermissionsRequest.Entries">
            <summary>
            Gets and sets the property Entries. 
            <para>
            A list of up to 20 entries for resource permissions to be revoked by batch operation
            to the principal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.BatchRevokePermissionsResponse">
            <summary>
            This is the response object from the BatchRevokePermissions operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.BatchRevokePermissionsResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            A list of failures to revoke permissions to the resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CatalogResource">
            <summary>
            A structure for the catalog object.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ColumnLFTag">
            <summary>
            A structure containing the name of a column resource and the tags attached to it.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ColumnLFTag.LFTags">
            <summary>
            Gets and sets the property LFTags. 
            <para>
            The tags attached to a column resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ColumnLFTag.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of a column resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ColumnWildcard">
            <summary>
            A wildcard object, consisting of an optional list of excluded column names or indexes.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ColumnWildcard.ExcludedColumnNames">
            <summary>
            Gets and sets the property ExcludedColumnNames. 
            <para>
            Excludes column names. Any column with this name will be excluded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            <summary>
            Two processes are trying to modify a resource simultaneously.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentModificationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentModificationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConcurrentModificationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ConcurrentModificationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CreateLFTagRequest">
            <summary>
            Container for the parameters to the CreateLFTag operation.
            Creates a tag with the specified name and values.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLFTagRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLFTagRequest.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.CreateLFTagRequest.TagValues">
            <summary>
            Gets and sets the property TagValues. 
            <para>
            A list of possible values an attribute can take.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.CreateLFTagResponse">
            <summary>
            This is the response object from the CreateLFTag operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DatabaseResource">
            <summary>
            A structure for the database object.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DatabaseResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, it is the account ID of the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DatabaseResource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the database resource. Unique to the Data Catalog.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DataLakePrincipal">
            <summary>
            The AWS Lake Formation principal. Supported principals are IAM users or IAM roles.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakePrincipal.DataLakePrincipalIdentifier">
            <summary>
            Gets and sets the property DataLakePrincipalIdentifier. 
            <para>
            An identifier for the AWS Lake Formation principal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DataLakeSettings">
            <summary>
            A structure representing a list of AWS Lake Formation principals designated as data
            lake administrators and lists of principal permission entries for default create database
            and default create table permissions.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.CreateDatabaseDefaultPermissions">
            <summary>
            Gets and sets the property CreateDatabaseDefaultPermissions. 
            <para>
            A structure representing a list of up to three principal permissions entries for default
            create database permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.CreateTableDefaultPermissions">
            <summary>
            Gets and sets the property CreateTableDefaultPermissions. 
            <para>
            A structure representing a list of up to three principal permissions entries for default
            create table permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.DataLakeAdmins">
            <summary>
            Gets and sets the property DataLakeAdmins. 
            <para>
            A list of AWS Lake Formation principals. Supported principals are IAM users or IAM
            roles.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLakeSettings.TrustedResourceOwners">
            <summary>
            Gets and sets the property TrustedResourceOwners. 
            <para>
            A list of the resource-owning account IDs that the caller's account can use to share
            their user access details (user ARNs). The user ARNs can be logged in the resource
            owner's AWS CloudTrail log.
            </para>
             
            <para>
            You may want to specify this property when you are in a high-trust boundary, such
            as the same team or company. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DataLocationResource">
            <summary>
            A structure for a data location object where permissions are granted or revoked.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLocationResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog where the location is registered with AWS Lake
            Formation. By default, it is the account ID of the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DataLocationResource.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) that uniquely identifies the data location resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteLFTagRequest">
            <summary>
            Container for the parameters to the DeleteLFTag operation.
            Deletes the specified tag key name. If the attribute key does not exist or the tag
            does not exist, then the operation will not do anything. If the attribute key exists,
            then the operation checks if any resources are tagged with this attribute key, if
            yes, the API throws a 400 Exception with the message "Delete not allowed" as the tag
            key is still attached with resources. You can consider untagging resources with this
            tag key.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteLFTagRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeleteLFTagRequest.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the tag to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeleteLFTagResponse">
            <summary>
            This is the response object from the DeleteLFTag operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeregisterResourceRequest">
            <summary>
            Container for the parameters to the DeregisterResource operation.
            Deregisters the resource as managed by the Data Catalog.
            
             
            <para>
            When you deregister a path, Lake Formation removes the path from the inline policy
            attached to your service-linked role.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DeregisterResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource that you want to deregister.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DeregisterResourceResponse">
            <summary>
            This is the response object from the DeregisterResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DescribeResourceRequest">
            <summary>
            Container for the parameters to the DescribeResource operation.
            Retrieves the current data access role for the given resource registered in AWS Lake
            Formation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The resource ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DescribeResourceResponse">
            <summary>
            This is the response object from the DescribeResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DescribeResourceResponse.ResourceInfo">
            <summary>
            Gets and sets the property ResourceInfo. 
            <para>
            A structure containing information about an AWS Lake Formation resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.DetailsMap">
            <summary>
            A structure containing the additional details to be returned in the <code>AdditionalDetails</code>
            attribute of <code>PrincipalResourcePermissions</code>.
            
             
            <para>
            If a catalog resource is shared through AWS Resource Access Manager (AWS RAM), then
            there will exist a corresponding RAM resource share ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.DetailsMap.ResourceShare">
            <summary>
            Gets and sets the property ResourceShare. 
            <para>
            A resource share ARN for a catalog resource shared through AWS Resource Access Manager
            (AWS RAM).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            <summary>
            A specified entity does not exist
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new EntityNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EntityNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of EntityNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EntityNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LakeFormation.Model.EntityNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ErrorDetail">
            <summary>
            Contains details about an error.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ErrorDetail.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            The code associated with this error.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ErrorDetail.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            A message describing the error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.FilterCondition">
            <summary>
            This structure describes the filtering of columns in a table based on a filter condition.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.FilterCondition.ComparisonOperator">
            <summary>
            Gets and sets the property ComparisonOperator. 
            <para>
            The comparison operator used in the filter condition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.FilterCondition.Field">
            <summary>
            Gets and sets the property Field. 
            <para>
            The field to filter in the filter condition.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.FilterCondition.StringValueList">
            <summary>
            Gets and sets the property StringValueList. 
            <para>
            A string with values used in evaluating the filter condition.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetDataLakeSettingsRequest">
            <summary>
            Container for the parameters to the GetDataLakeSettings operation.
            Retrieves the list of the data lake administrators of a Lake Formation-managed data
            lake.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetDataLakeSettingsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetDataLakeSettingsResponse">
            <summary>
            This is the response object from the GetDataLakeSettings operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetDataLakeSettingsResponse.DataLakeSettings">
            <summary>
            Gets and sets the property DataLakeSettings. 
            <para>
            A structure representing a list of AWS Lake Formation principals designated as data
            lake administrators.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest">
            <summary>
            Container for the parameters to the GetEffectivePermissionsForPath operation.
            Returns the Lake Formation permissions for a specified table or database resource
            located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not
            return databases and tables if the catalog is encrypted.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource for which you want to get permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathResponse">
            <summary>
            This is the response object from the GetEffectivePermissionsForPath operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathResponse.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            A list of the permissions for the specified table or database resource located at
            the path in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetLFTagRequest">
            <summary>
            Container for the parameters to the GetLFTag operation.
            Returns a tag definition.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetLFTagRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetLFTagRequest.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetLFTagResponse">
            <summary>
            This is the response object from the GetLFTag operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetLFTagResponse.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetLFTagResponse.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetLFTagResponse.TagValues">
            <summary>
            Gets and sets the property TagValues. 
            <para>
            A list of possible values an attribute can take.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetResourceLFTagsRequest">
            <summary>
            Container for the parameters to the GetResourceLFTags operation.
            Returns the tags applied to a resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource for which you want to return tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsRequest.ShowAssignedLFTags">
            <summary>
            Gets and sets the property ShowAssignedLFTags. 
            <para>
            Indicates whether to show the assigned tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetResourceLFTagsResponse">
            <summary>
            This is the response object from the GetResourceLFTags operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsResponse.LFTagOnDatabase">
            <summary>
            Gets and sets the property LFTagOnDatabase. 
            <para>
            A list of tags applied to a database resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsResponse.LFTagsOnColumns">
            <summary>
            Gets and sets the property LFTagsOnColumns. 
            <para>
            A list of tags applied to a column resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetResourceLFTagsResponse.LFTagsOnTable">
            <summary>
            Gets and sets the property LFTagsOnTable. 
            <para>
            A list of tags applied to a table resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            <summary>
            An encryption operation failed.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.String)">
            <summary>
            Constructs a new GlueEncryptionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of GlueEncryptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.Exception)">
            <summary>
            Construct instance of GlueEncryptionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GlueEncryptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of GlueEncryptionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the GlueEncryptionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LakeFormation.Model.GlueEncryptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GrantPermissionsRequest">
            <summary>
            Container for the parameters to the GrantPermissions operation.
            Grants permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            
             
            <para>
            For information about permissions, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GrantPermissionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GrantPermissionsRequest.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The permissions granted to the principal on the resource. AWS Lake Formation defines
            privileges to grant and revoke access to metadata in the Data Catalog and data organized
            in underlying data storage such as Amazon S3. AWS Lake Formation requires that each
            principal be authorized to perform a specific task on AWS Lake Formation resources.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GrantPermissionsRequest.PermissionsWithGrantOption">
            <summary>
            Gets and sets the property PermissionsWithGrantOption. 
            <para>
            Indicates a list of the granted permissions that the principal may pass to other users.
            These permissions may only be a subset of the permissions granted in the <code>Privileges</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GrantPermissionsRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal to be granted the permissions on the resource. Supported principals
            are IAM users or IAM roles, and they are defined by their principal type and their
            ARN.
            </para>
             
            <para>
            Note that if you define a resource with a particular ARN, then later delete, and recreate
            a resource with that same ARN, the resource maintains the permissions already granted.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GrantPermissionsRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource to which permissions are to be granted. Resources in AWS Lake Formation
            are the Data Catalog, databases, and tables.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GrantPermissionsResponse">
            <summary>
            This is the response object from the GrantPermissions operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.InternalServiceException">
            <summary>
            An internal service error occurred.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServiceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InternalServiceException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InternalServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceRequestMarshaller">
            <summary>
            AddLFTagsToResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.AddLFTagsToResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddLFTagsToResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AddLFTagsToResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.AlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsRequestMarshaller">
            <summary>
            BatchGrantPermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.BatchGrantPermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchGrantPermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchGrantPermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsFailureEntryUnmarshaller">
            <summary>
            Response Unmarshaller for BatchPermissionsFailureEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsFailureEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#BatchPermissionsFailureEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsFailureEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsFailureEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryMarshaller">
            <summary>
            BatchPermissionsRequestEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryMarshaller.Marshall(Amazon.LakeFormation.Model.BatchPermissionsRequestEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryUnmarshaller">
            <summary>
            Response Unmarshaller for BatchPermissionsRequestEntry Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#BatchPermissionsRequestEntry,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchPermissionsRequestEntryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsRequestMarshaller">
            <summary>
            BatchRevokePermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.BatchRevokePermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchRevokePermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.BatchRevokePermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceMarshaller">
            <summary>
            CatalogResource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceMarshaller.Marshall(Amazon.LakeFormation.Model.CatalogResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceUnmarshaller">
            <summary>
            Response Unmarshaller for CatalogResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#CatalogResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CatalogResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnLFTagUnmarshaller">
            <summary>
            Response Unmarshaller for ColumnLFTag Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnLFTagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#ColumnLFTag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnLFTagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnLFTagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardMarshaller">
            <summary>
            ColumnWildcard Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardMarshaller.Marshall(Amazon.LakeFormation.Model.ColumnWildcard,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardUnmarshaller">
            <summary>
            Response Unmarshaller for ColumnWildcard Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#ColumnWildcard,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ColumnWildcardUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConcurrentModificationException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ConcurrentModificationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagRequestMarshaller">
            <summary>
            CreateLFTag Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagRequestMarshaller.Marshall(Amazon.LakeFormation.Model.CreateLFTagRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLFTag operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.CreateLFTagResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceMarshaller">
            <summary>
            DatabaseResource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceMarshaller.Marshall(Amazon.LakeFormation.Model.DatabaseResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceUnmarshaller">
            <summary>
            Response Unmarshaller for DatabaseResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DatabaseResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DatabaseResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalMarshaller">
            <summary>
            DataLakePrincipal Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalMarshaller.Marshall(Amazon.LakeFormation.Model.DataLakePrincipal,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakePrincipal Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DataLakePrincipal,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakePrincipalUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsMarshaller">
            <summary>
            DataLakeSettings Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsMarshaller.Marshall(Amazon.LakeFormation.Model.DataLakeSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for DataLakeSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DataLakeSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLakeSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceMarshaller">
            <summary>
            DataLocationResource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceMarshaller.Marshall(Amazon.LakeFormation.Model.DataLocationResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceUnmarshaller">
            <summary>
            Response Unmarshaller for DataLocationResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DataLocationResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DataLocationResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagRequestMarshaller">
            <summary>
            DeleteLFTag Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DeleteLFTagRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLFTag operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeleteLFTagResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceRequestMarshaller">
            <summary>
            DeregisterResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DeregisterResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DeregisterResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceRequestMarshaller">
            <summary>
            DescribeResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.DescribeResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DescribeResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DetailsMapUnmarshaller">
            <summary>
            Response Unmarshaller for DetailsMap Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DetailsMapUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#DetailsMap,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DetailsMapUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.DetailsMapUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.EntityNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EntityNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.EntityNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.EntityNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.EntityNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ErrorDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#ErrorDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ErrorDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.FilterConditionMarshaller">
            <summary>
            FilterCondition Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.FilterConditionMarshaller.Marshall(Amazon.LakeFormation.Model.FilterCondition,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.FilterConditionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsRequestMarshaller">
            <summary>
            GetDataLakeSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetDataLakeSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDataLakeSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetDataLakeSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathRequestMarshaller">
            <summary>
            GetEffectivePermissionsForPath Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetEffectivePermissionsForPath operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetEffectivePermissionsForPathResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagRequestMarshaller">
            <summary>
            GetLFTag Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetLFTagRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLFTag operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetLFTagResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsRequestMarshaller">
            <summary>
            GetResourceLFTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GetResourceLFTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetResourceLFTags operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GetResourceLFTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GlueEncryptionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for GlueEncryptionException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GlueEncryptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GlueEncryptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GlueEncryptionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsRequestMarshaller">
            <summary>
            GrantPermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.GrantPermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GrantPermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.GrantPermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InternalServiceException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InternalServiceExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InvalidInputExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidInputException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InvalidInputExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InvalidInputExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.InvalidInputExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagErrorUnmarshaller">
            <summary>
            Response Unmarshaller for LFTagError Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagErrorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LFTagError,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceMarshaller">
            <summary>
            LFTagKeyResource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceMarshaller.Marshall(Amazon.LakeFormation.Model.LFTagKeyResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceUnmarshaller">
            <summary>
            Response Unmarshaller for LFTagKeyResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LFTagKeyResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagKeyResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagMarshaller">
            <summary>
            LFTag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagMarshaller.Marshall(Amazon.LakeFormation.Model.LFTag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairMarshaller">
            <summary>
            LFTagPair Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairMarshaller.Marshall(Amazon.LakeFormation.Model.LFTagPair,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairUnmarshaller">
            <summary>
            Response Unmarshaller for LFTagPair Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LFTagPair,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceMarshaller">
            <summary>
            LFTagPolicyResource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceMarshaller.Marshall(Amazon.LakeFormation.Model.LFTagPolicyResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceUnmarshaller">
            <summary>
            Response Unmarshaller for LFTagPolicyResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LFTagPolicyResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagPolicyResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagUnmarshaller">
            <summary>
            Response Unmarshaller for LFTag Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#LFTag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.LFTagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsRequestMarshaller">
            <summary>
            ListLFTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ListLFTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListLFTags operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListLFTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller">
            <summary>
            ListPermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ListPermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListPermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesRequestMarshaller">
            <summary>
            ListResources Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesRequestMarshaller.Marshall(Amazon.LakeFormation.Model.ListResourcesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListResources operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ListResourcesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.OperationTimeoutExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for OperationTimeoutException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.OperationTimeoutExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.OperationTimeoutExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.OperationTimeoutExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsMarshaller">
            <summary>
            PrincipalPermissions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsMarshaller.Marshall(Amazon.LakeFormation.Model.PrincipalPermissions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsUnmarshaller">
            <summary>
            Response Unmarshaller for PrincipalPermissions Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#PrincipalPermissions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalPermissionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalResourcePermissionsUnmarshaller">
            <summary>
            Response Unmarshaller for PrincipalResourcePermissions Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalResourcePermissionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#PrincipalResourcePermissions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalResourcePermissionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PrincipalResourcePermissionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsRequestMarshaller">
            <summary>
            PutDataLakeSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.PutDataLakeSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDataLakeSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.PutDataLakeSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceRequestMarshaller">
            <summary>
            RegisterResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.RegisterResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RegisterResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceRequestMarshaller">
            <summary>
            RemoveLFTagsFromResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveLFTagsFromResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RemoveLFTagsFromResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#ResourceInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceMarshaller">
            <summary>
            Resource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceMarshaller.Marshall(Amazon.LakeFormation.Model.Resource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNumberLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNumberLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNumberLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNumberLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceNumberLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceUnmarshaller">
            <summary>
            Response Unmarshaller for Resource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#Resource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.ResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsRequestMarshaller">
            <summary>
            RevokePermissions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.RevokePermissionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RevokePermissions operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.RevokePermissionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsRequestMarshaller">
            <summary>
            SearchDatabasesByLFTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SearchDatabasesByLFTags operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchDatabasesByLFTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsRequestMarshaller">
            <summary>
            SearchTablesByLFTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsRequestMarshaller.Marshall(Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SearchTablesByLFTags operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.SearchTablesByLFTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceMarshaller">
            <summary>
            TableResource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceMarshaller.Marshall(Amazon.LakeFormation.Model.TableResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceUnmarshaller">
            <summary>
            Response Unmarshaller for TableResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TableResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardMarshaller">
            <summary>
            TableWildcard Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardMarshaller.Marshall(Amazon.LakeFormation.Model.TableWildcard,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardUnmarshaller">
            <summary>
            Response Unmarshaller for TableWildcard Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TableWildcard,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWildcardUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceMarshaller">
            <summary>
            TableWithColumnsResource Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceMarshaller.Marshall(Amazon.LakeFormation.Model.TableWithColumnsResource,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceUnmarshaller">
            <summary>
            Response Unmarshaller for TableWithColumnsResource Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TableWithColumnsResource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TableWithColumnsResourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedDatabaseUnmarshaller">
            <summary>
            Response Unmarshaller for TaggedDatabase Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedDatabaseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TaggedDatabase,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedDatabaseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedDatabaseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedTableUnmarshaller">
            <summary>
            Response Unmarshaller for TaggedTable Object
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedTableUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#LakeFormation#Model#TaggedTable,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedTableUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.TaggedTableUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagRequestMarshaller">
            <summary>
            UpdateLFTag Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagRequestMarshaller.Marshall(Amazon.LakeFormation.Model.UpdateLFTagRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateLFTag operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateLFTagResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceRequestMarshaller">
            <summary>
            UpdateResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceRequestMarshaller.Marshall(Amazon.LakeFormation.Model.UpdateResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateResource operation
            </summary>  
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Internal.MarshallTransformations.UpdateResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.LakeFormation.Model.InvalidInputException">
            <summary>
            The input provided was not valid.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidInputException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidInputException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LakeFormation.Model.InvalidInputException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LFTag">
            <summary>
            A structure that allows an admin to grant user permissions on certain conditions.
            For example, granting a role access to all columns not tagged 'PII' of tables tagged
            'Prod'.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTag.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTag.TagValues">
            <summary>
            Gets and sets the property TagValues. 
            <para>
            A list of possible values an attribute can take.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LFTagError">
            <summary>
            A structure containing an error related to a <code>TagResource</code> or <code>UnTagResource</code>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagError.Error">
            <summary>
            Gets and sets the property Error. 
            <para>
            An error that occurred with the attachment or detachment of the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagError.LFTag">
            <summary>
            Gets and sets the property LFTag. 
            <para>
            The key-name of the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LFTagKeyResource">
            <summary>
            A structure containing a tag key and values for a resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagKeyResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagKeyResource.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagKeyResource.TagValues">
            <summary>
            Gets and sets the property TagValues. 
            <para>
            A list of possible values an attribute can take.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LFTagPair">
            <summary>
            A structure containing a tag key-value pair.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPair.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPair.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPair.TagValues">
            <summary>
            Gets and sets the property TagValues. 
            <para>
            A list of possible values an attribute can take.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LFTagPolicyResource">
            <summary>
            A structure containing a list of tag conditions that apply to a resource's tag policy.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPolicyResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPolicyResource.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A list of tag conditions that apply to the resource's tag policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.LFTagPolicyResource.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            The resource type for which the tag policy applies.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListLFTagsRequest">
            <summary>
            Container for the parameters to the ListLFTags operation.
            Lists tags that the requester has permission to view.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsRequest.ResourceShareType">
            <summary>
            Gets and sets the property ResourceShareType. 
            <para>
            If resource share type is <code>ALL</code>, returns both in-account tags and shared
            tags that the requester has permission to view. If resource share type is <code>FOREIGN</code>,
            returns all share tags that the requester can view. If no resource share type is passed,
            lists tags in the given catalog ID that the requester has permission to view.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListLFTagsResponse">
            <summary>
            This is the response object from the ListLFTags operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsResponse.LFTags">
            <summary>
            Gets and sets the property LFTags. 
            <para>
            A list of tags that the requested has permission to view.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListLFTagsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, present if the current list segment is not the last.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListPermissionsRequest">
            <summary>
            Container for the parameters to the ListPermissions operation.
            Returns a list of the principal permissions on the resource, filtered by the permissions
            of the caller. For example, if you are granted an ALTER permission, you are able to
            see only the principal permissions for ALTER.
            
             
            <para>
            This operation returns only those permissions that have been explicitly granted.
            </para>
             
            <para>
            For information about permissions, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            Specifies a principal to filter the permissions returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            A resource where you will get a list of the principal permissions.
            </para>
             
            <para>
            This operation does not support getting privileges on a table with columns. Instead,
            call this operation on the table, and the operation returns the table and the table
            w columns.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsRequest.ResourceType">
            <summary>
            Gets and sets the property ResourceType. 
            <para>
            Specifies a resource type to filter the permissions returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListPermissionsResponse">
            <summary>
            This is the response object from the ListPermissions operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsResponse.PrincipalResourcePermissions">
            <summary>
            Gets and sets the property PrincipalResourcePermissions. 
            <para>
            A list of principals and their permissions on the resource for the specified principal
            and resource types.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListResourcesRequest">
            <summary>
            Container for the parameters to the ListResources operation.
            Lists the resources registered to be managed by the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesRequest.FilterConditionList">
            <summary>
            Gets and sets the property FilterConditionList. 
            <para>
            Any applicable row-level and/or column-level filtering conditions for the resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of resource results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve these resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListResourcesResponse">
            <summary>
            This is the response object from the ListResources operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve these resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesResponse.ResourceInfoList">
            <summary>
            Gets and sets the property ResourceInfoList. 
            <para>
            A summary of the data lake resources.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            <summary>
            The operation timed out.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.String)">
            <summary>
            Constructs a new OperationTimeoutException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of OperationTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.Exception)">
            <summary>
            Construct instance of OperationTimeoutException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationTimeoutException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the OperationTimeoutException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LakeFormation.Model.OperationTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PrincipalPermissions">
            <summary>
            Permissions granted to a principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalPermissions.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The permissions that are granted to the principal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalPermissions.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal who is granted permissions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PrincipalResourcePermissions">
            <summary>
            The permissions granted or revoked on a resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.AdditionalDetails">
            <summary>
            Gets and sets the property AdditionalDetails. 
            <para>
            This attribute can be used to return any additional details of <code>PrincipalResourcePermissions</code>.
            Currently returns only as a RAM resource share ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The permissions to be granted or revoked on the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.PermissionsWithGrantOption">
            <summary>
            Gets and sets the property PermissionsWithGrantOption. 
            <para>
            Indicates whether to grant the ability to grant permissions (as a subset of permissions
            granted).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The Data Lake principal to be granted or revoked permissions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PrincipalResourcePermissions.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource where permissions are to be granted or revoked.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PutDataLakeSettingsRequest">
            <summary>
            Container for the parameters to the PutDataLakeSettings operation.
            Sets the list of data lake administrators who have admin privileges on all resources
            managed by Lake Formation. For more information on admin privileges, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html">Granting
            Lake Formation Permissions</a>.
            
             
            <para>
            This API replaces the current list of data lake admins with the new list being passed.
            To add an admin, fetch the current list and add the new admin to that list and pass
            that list in this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PutDataLakeSettingsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.PutDataLakeSettingsRequest.DataLakeSettings">
            <summary>
            Gets and sets the property DataLakeSettings. 
            <para>
            A structure representing a list of AWS Lake Formation principals designated as data
            lake administrators.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.PutDataLakeSettingsResponse">
            <summary>
            This is the response object from the PutDataLakeSettings operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RegisterResourceRequest">
            <summary>
            Container for the parameters to the RegisterResource operation.
            Registers the resource as managed by the Data Catalog.
            
             
            <para>
            To add or update data, Lake Formation needs read/write access to the chosen Amazon
            S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess
            service-linked role. When you register the first Amazon S3 path, the service-linked
            role and a new inline policy are created on your behalf. Lake Formation adds the first
            path to the inline policy and attaches it to the service-linked role. When you register
            subsequent paths, Lake Formation adds the path to the existing policy.
            </para>
             
            <para>
            The following request registers a new location and gives AWS Lake Formation permission
            to use the service-linked role to access that location.
            </para>
             
            <para>
             <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> 
            </para>
             
            <para>
            If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the
            <code>RoleArn</code>:
            </para>
             
            <para>
             <code>arn:aws:iam::12345:role/my-data-access-role</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RegisterResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource that you want to register.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RegisterResourceRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The identifier for the role that registers the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RegisterResourceRequest.UseServiceLinkedRole">
            <summary>
            Gets and sets the property UseServiceLinkedRole. 
            <para>
            Designates an AWS Identity and Access Management (IAM) service-linked role by registering
            this role with the Data Catalog. A service-linked role is a unique type of IAM role
            that is linked directly to Lake Formation.
            </para>
             
            <para>
            For more information, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/service-linked-roles.html">Using
            Service-Linked Roles for Lake Formation</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RegisterResourceResponse">
            <summary>
            This is the response object from the RegisterResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest">
            <summary>
            Container for the parameters to the RemoveLFTagsFromResource operation.
            Removes a tag from the resource. Only database, table, or tableWithColumns resource
            are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code>
            to specify column input.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest.LFTags">
            <summary>
            Gets and sets the property LFTags. 
            <para>
            The tags to be removed from the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource where you want to remove a tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceResponse">
            <summary>
            This is the response object from the RemoveLFTagsFromResource operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RemoveLFTagsFromResourceResponse.Failures">
            <summary>
            Gets and sets the property Failures. 
            <para>
            A list of failures to untag a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.Resource">
            <summary>
            A structure for the resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.Catalog">
            <summary>
            Gets and sets the property Catalog. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.Database">
            <summary>
            Gets and sets the property Database. 
            <para>
            The database for the resource. Unique to the Data Catalog. A database is a set of
            associated table definitions organized into a logical group. You can Grant and Revoke
            database permissions to a principal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.DataLocation">
            <summary>
            Gets and sets the property DataLocation. 
            <para>
            The location of an Amazon S3 path where permissions are granted or revoked. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.LFTag">
            <summary>
            Gets and sets the property LFTag. 
            <para>
            The tag key and values attached to a resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.LFTagPolicy">
            <summary>
            Gets and sets the property LFTagPolicy. 
            <para>
            A list of tag conditions that define a resource's tag policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.Table">
            <summary>
            Gets and sets the property Table. 
            <para>
            The table for the resource. A table is a metadata definition that represents your
            data. You can Grant and Revoke table privileges to a principal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.Resource.TableWithColumns">
            <summary>
            Gets and sets the property TableWithColumns. 
            <para>
            The table with columns for the resource. A principal with permissions to this resource
            can select metadata from the columns of a table in the Data Catalog and the underlying
            data in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ResourceInfo">
            <summary>
            A structure containing information about an AWS Lake Formation resource.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ResourceInfo.LastModified">
            <summary>
            Gets and sets the property LastModified. 
            <para>
            The date and time the resource was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ResourceInfo.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ResourceInfo.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The IAM role that registered a resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            <summary>
            A resource numerical limit was exceeded.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNumberLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNumberLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNumberLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNumberLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNumberLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNumberLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RevokePermissionsRequest">
            <summary>
            Container for the parameters to the RevokePermissions operation.
            Revokes permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RevokePermissionsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RevokePermissionsRequest.Permissions">
            <summary>
            Gets and sets the property Permissions. 
            <para>
            The permissions revoked to the principal on the resource. For information about permissions,
            see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RevokePermissionsRequest.PermissionsWithGrantOption">
            <summary>
            Gets and sets the property PermissionsWithGrantOption. 
            <para>
            Indicates a list of permissions for which to revoke the grant option allowing the
            principal to pass permissions to other principals.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RevokePermissionsRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal to be revoked permissions on the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.RevokePermissionsRequest.Resource">
            <summary>
            Gets and sets the property Resource. 
            <para>
            The resource to which permissions are to be revoked.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.RevokePermissionsResponse">
            <summary>
            This is the response object from the RevokePermissions operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest">
            <summary>
            Container for the parameters to the SearchDatabasesByLFTags operation.
            This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>.
            This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>.
            Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find
            all resources where the given <code>TagConditions</code> are valid to verify whether
            the returned resources can be shared.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A list of conditions (<code>LFTag</code> structures) to search for in database resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsResponse">
            <summary>
            This is the response object from the SearchDatabasesByLFTags operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsResponse.DatabaseList">
            <summary>
            Gets and sets the property DatabaseList. 
            <para>
            A list of databases that meet the tag conditions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchDatabasesByLFTagsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, present if the current list segment is not the last.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest">
            <summary>
            Container for the parameters to the SearchTablesByLFTags operation.
            This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s.
            This will be used by admins who want to grant user permissions on certain LFTags.
            Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find
            all resources where the given <code>LFTag</code>s are valid to verify whether the
            returned resources can be shared.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest.Expression">
            <summary>
            Gets and sets the property Expression. 
            <para>
            A list of conditions (<code>LFTag</code> structures) to search for in table resources.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, if this is not the first call to retrieve this list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.SearchTablesByLFTagsResponse">
            <summary>
            This is the response object from the SearchTablesByLFTags operation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A continuation token, present if the current list segment is not the last.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.SearchTablesByLFTagsResponse.TableList">
            <summary>
            Gets and sets the property TableList. 
            <para>
            A list of tables that meet the tag conditions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TableResource">
            <summary>
            A structure for the table object. A table is a metadata definition that represents
            your data. You can Grant and Revoke table privileges to a principal.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, it is the account ID of the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableResource.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The name of the database for the table. Unique to a Data Catalog. A database is a
            set of associated table definitions organized into a logical group. You can Grant
            and Revoke database privileges to a principal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableResource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableResource.TableWildcard">
            <summary>
            Gets and sets the property TableWildcard. 
            <para>
            A wildcard object representing every table under a database.
            </para>
             
            <para>
            At least one of <code>TableResource$Name</code> or <code>TableResource$TableWildcard</code>
            is required.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TableWildcard">
            <summary>
            A wildcard object representing every table under a database.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TableWithColumnsResource">
            <summary>
            A structure for a table with columns object. This object is only used when granting
            a SELECT permission.
            
             
            <para>
            This object must take a value for at least one of <code>ColumnsNames</code>, <code>ColumnsIndexes</code>,
            or <code>ColumnsWildcard</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableWithColumnsResource.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, it is the account ID of the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableWithColumnsResource.ColumnNames">
            <summary>
            Gets and sets the property ColumnNames. 
            <para>
            The list of column names for the table. At least one of <code>ColumnNames</code> or
            <code>ColumnWildcard</code> is required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableWithColumnsResource.ColumnWildcard">
            <summary>
            Gets and sets the property ColumnWildcard. 
            <para>
            A wildcard specified by a <code>ColumnWildcard</code> object. At least one of <code>ColumnNames</code>
            or <code>ColumnWildcard</code> is required.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableWithColumnsResource.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The name of the database for the table with columns resource. Unique to the Data Catalog.
            A database is a set of associated table definitions organized into a logical group.
            You can Grant and Revoke database privileges to a principal. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TableWithColumnsResource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the table resource. A table is a metadata definition that represents your
            data. You can Grant and Revoke table privileges to a principal. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TaggedDatabase">
            <summary>
            A structure describing a database resource with tags.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedDatabase.Database">
            <summary>
            Gets and sets the property Database. 
            <para>
            A database that has tags attached to it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedDatabase.LFTags">
            <summary>
            Gets and sets the property LFTags. 
            <para>
            A list of tags attached to the database.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.TaggedTable">
            <summary>
            A structure describing a table resource with tags.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedTable.LFTagOnDatabase">
            <summary>
            Gets and sets the property LFTagOnDatabase. 
            <para>
            A list of tags attached to the database where the table resides.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedTable.LFTagsOnColumns">
            <summary>
            Gets and sets the property LFTagsOnColumns. 
            <para>
            A list of tags attached to columns in the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedTable.LFTagsOnTable">
            <summary>
            Gets and sets the property LFTagsOnTable. 
            <para>
            A list of tags attached to the table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.TaggedTable.Table">
            <summary>
            Gets and sets the property Table. 
            <para>
            A table that has tags attached to it.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateLFTagRequest">
            <summary>
            Container for the parameters to the UpdateLFTag operation.
            Updates the list of possible values for the specified tag key. If the tag does not
            exist, the operation throws an EntityNotFoundException. The values in the delete key
            values will be deleted from list of possible values. If any value in the delete key
            values is attached to a resource, then API errors out with a 400 Exception - "Update
            not allowed". Untag the attribute before deleting the tag key's value.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLFTagRequest.CatalogId">
            <summary>
            Gets and sets the property CatalogId. 
            <para>
            The identifier for the Data Catalog. By default, the account ID. The Data Catalog
            is the persistent metadata store. It contains database definitions, table definitions,
            and other control information to manage your AWS Lake Formation environment. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLFTagRequest.TagKey">
            <summary>
            Gets and sets the property TagKey. 
            <para>
            The key-name for the tag for which to add or delete values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLFTagRequest.TagValuesToAdd">
            <summary>
            Gets and sets the property TagValuesToAdd. 
            <para>
            A list of tag values to add from the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateLFTagRequest.TagValuesToDelete">
            <summary>
            Gets and sets the property TagValuesToDelete. 
            <para>
            A list of tag values to delete from the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateLFTagResponse">
            <summary>
            This is the response object from the UpdateLFTag operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateResourceRequest">
            <summary>
            Container for the parameters to the UpdateResource operation.
            Updates the data access role used for vending access to the given (registered) resource
            in AWS Lake Formation.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The resource ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.UpdateResourceRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The new role to use for the given resource registered in AWS Lake Formation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.UpdateResourceResponse">
            <summary>
            This is the response object from the UpdateResource operation.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathPaginator">
            <summary>
            Base class for GetEffectivePermissionsForPath paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.GetEffectivePermissionsForPathPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IGetEffectivePermissionsForPathPaginator">
             <summary>
             Paginator for the GetEffectivePermissionsForPath operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IGetEffectivePermissionsForPathPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory">
             <summary>
             Paginators for the LakeFormation service
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.GetEffectivePermissionsForPath(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest)">
             <summary>
             Paginator for GetEffectivePermissionsForPath operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.ListPermissions(Amazon.LakeFormation.Model.ListPermissionsRequest)">
             <summary>
             Paginator for ListPermissions operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.ILakeFormationPaginatorFactory.ListResources(Amazon.LakeFormation.Model.ListResourcesRequest)">
             <summary>
             Paginator for ListResources operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IListPermissionsPaginator">
             <summary>
             Paginator for the ListPermissions operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListPermissionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.IListResourcesPaginator">
             <summary>
             Paginator for the ListResources operation
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.IListResourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory">
             <summary>
             Paginators for the LakeFormation service
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.GetEffectivePermissionsForPath(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest)">
             <summary>
             Paginator for GetEffectivePermissionsForPath operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.ListPermissions(Amazon.LakeFormation.Model.ListPermissionsRequest)">
             <summary>
             Paginator for ListPermissions operation
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Model.LakeFormationPaginatorFactory.ListResources(Amazon.LakeFormation.Model.ListResourcesRequest)">
             <summary>
             Paginator for ListResources operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListPermissionsPaginator">
            <summary>
            Base class for ListPermissions paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListPermissionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.Model.ListResourcesPaginator">
            <summary>
            Base class for ListResources paginators.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.Model.ListResourcesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.AmazonLakeFormationRequest">
            <summary>
            Base class for LakeFormation operation requests.
            </summary>
        </member>
        <member name="T:Amazon.LakeFormation.ComparisonOperator">
            <summary>
            Constants used for properties of type ComparisonOperator.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.BEGINS_WITH">
            <summary>
            Constant BEGINS_WITH for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.BETWEEN">
            <summary>
            Constant BETWEEN for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.CONTAINS">
            <summary>
            Constant CONTAINS for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.EQ">
            <summary>
            Constant EQ for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.GE">
            <summary>
            Constant GE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.GT">
            <summary>
            Constant GT for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.IN">
            <summary>
            Constant IN for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.LE">
            <summary>
            Constant LE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.LT">
            <summary>
            Constant LT for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.NE">
            <summary>
            Constant NE for ComparisonOperator
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ComparisonOperator.NOT_CONTAINS">
            <summary>
            Constant NOT_CONTAINS for ComparisonOperator
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ComparisonOperator.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ComparisonOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.ComparisonOperator.op_Implicit(System.String)~Amazon.LakeFormation.ComparisonOperator">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.DataLakeResourceType">
            <summary>
            Constants used for properties of type DataLakeResourceType.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.CATALOG">
            <summary>
            Constant CATALOG for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.DATA_LOCATION">
            <summary>
            Constant DATA_LOCATION for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.DATABASE">
            <summary>
            Constant DATABASE for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.LF_TAG">
            <summary>
            Constant LF_TAG for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.LF_TAG_POLICY">
            <summary>
            Constant LF_TAG_POLICY for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.LF_TAG_POLICY_DATABASE">
            <summary>
            Constant LF_TAG_POLICY_DATABASE for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.LF_TAG_POLICY_TABLE">
            <summary>
            Constant LF_TAG_POLICY_TABLE for DataLakeResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.DataLakeResourceType.TABLE">
            <summary>
            Constant TABLE for DataLakeResourceType
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.DataLakeResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.DataLakeResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.DataLakeResourceType.op_Implicit(System.String)~Amazon.LakeFormation.DataLakeResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.FieldNameString">
            <summary>
            Constants used for properties of type FieldNameString.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.FieldNameString.LAST_MODIFIED">
            <summary>
            Constant LAST_MODIFIED for FieldNameString
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.FieldNameString.RESOURCE_ARN">
            <summary>
            Constant RESOURCE_ARN for FieldNameString
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.FieldNameString.ROLE_ARN">
            <summary>
            Constant ROLE_ARN for FieldNameString
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.FieldNameString.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.FieldNameString.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.FieldNameString.op_Implicit(System.String)~Amazon.LakeFormation.FieldNameString">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.Permission">
            <summary>
            Constants used for properties of type Permission.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.ALL">
            <summary>
            Constant ALL for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.ALTER">
            <summary>
            Constant ALTER for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.ALTER_TAG">
            <summary>
            Constant ALTER_TAG for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.ASSOCIATE_TAG">
            <summary>
            Constant ASSOCIATE_TAG for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.CREATE_DATABASE">
            <summary>
            Constant CREATE_DATABASE for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.CREATE_TABLE">
            <summary>
            Constant CREATE_TABLE for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.CREATE_TAG">
            <summary>
            Constant CREATE_TAG for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.DATA_LOCATION_ACCESS">
            <summary>
            Constant DATA_LOCATION_ACCESS for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.DELETE">
            <summary>
            Constant DELETE for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.DELETE_TAG">
            <summary>
            Constant DELETE_TAG for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.DESCRIBE">
            <summary>
            Constant DESCRIBE for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.DESCRIBE_TAG">
            <summary>
            Constant DESCRIBE_TAG for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.DROP">
            <summary>
            Constant DROP for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.INSERT">
            <summary>
            Constant INSERT for Permission
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.Permission.SELECT">
            <summary>
            Constant SELECT for Permission
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Permission.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.Permission.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.Permission.op_Implicit(System.String)~Amazon.LakeFormation.Permission">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.ResourceShareType">
            <summary>
            Constants used for properties of type ResourceShareType.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ResourceShareType.ALL">
            <summary>
            Constant ALL for ResourceShareType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ResourceShareType.FOREIGN">
            <summary>
            Constant FOREIGN for ResourceShareType
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceShareType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceShareType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceShareType.op_Implicit(System.String)~Amazon.LakeFormation.ResourceShareType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.ResourceType">
            <summary>
            Constants used for properties of type ResourceType.
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ResourceType.DATABASE">
            <summary>
            Constant DATABASE for ResourceType
            </summary>
        </member>
        <member name="F:Amazon.LakeFormation.ResourceType.TABLE">
            <summary>
            Constant TABLE for ResourceType
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.LakeFormation.ResourceType.op_Implicit(System.String)~Amazon.LakeFormation.ResourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.LakeFormation.AmazonLakeFormationClient">
             <summary>
             Implementation for accessing LakeFormation
            
             AWS Lake Formation 
             <para>
             Defines the public endpoint for the AWS Lake Formation service.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor">
             <summary>
             Constructs AmazonLakeFormationClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonLakeFormationClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(Amazon.LakeFormation.AmazonLakeFormationConfig)">
             <summary>
             Constructs AmazonLakeFormationClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonLakeFormationClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.LakeFormation.AmazonLakeFormationConfig)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Credentials and an
            AmazonLakeFormationClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonLakeFormationClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String,Amazon.LakeFormation.AmazonLakeFormationConfig)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLakeFormationClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonLakeFormationClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.#ctor(System.String,System.String,System.String,Amazon.LakeFormation.AmazonLakeFormationConfig)">
            <summary>
            Constructs AmazonLakeFormationClient with AWS Access Key ID, AWS Secret Key and an
            AmazonLakeFormationClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonLakeFormationClient Configuration Object</param>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.LakeFormation.AmazonLakeFormationClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.AddLFTagsToResource(Amazon.LakeFormation.Model.AddLFTagsToResourceRequest)">
            <summary>
            Attaches one or more tags to an existing resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddLFTagsToResource service method.</param>
            
            <returns>The response from the AddLFTagsToResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/AddLFTagsToResource">REST API Reference for AddLFTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.AddLFTagsToResourceAsync(Amazon.LakeFormation.Model.AddLFTagsToResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches one or more tags to an existing resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddLFTagsToResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddLFTagsToResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/AddLFTagsToResource">REST API Reference for AddLFTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.BatchGrantPermissions(Amazon.LakeFormation.Model.BatchGrantPermissionsRequest)">
            <summary>
            Batch operation to grant permissions to the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGrantPermissions service method.</param>
            
            <returns>The response from the BatchGrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchGrantPermissions">REST API Reference for BatchGrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.BatchGrantPermissionsAsync(Amazon.LakeFormation.Model.BatchGrantPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Batch operation to grant permissions to the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGrantPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchGrantPermissions">REST API Reference for BatchGrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.BatchRevokePermissions(Amazon.LakeFormation.Model.BatchRevokePermissionsRequest)">
            <summary>
            Batch operation to revoke permissions from the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchRevokePermissions service method.</param>
            
            <returns>The response from the BatchRevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchRevokePermissions">REST API Reference for BatchRevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.BatchRevokePermissionsAsync(Amazon.LakeFormation.Model.BatchRevokePermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Batch operation to revoke permissions from the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchRevokePermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchRevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchRevokePermissions">REST API Reference for BatchRevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CreateLFTag(Amazon.LakeFormation.Model.CreateLFTagRequest)">
            <summary>
            Creates a tag with the specified name and values.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLFTag service method.</param>
            
            <returns>The response from the CreateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            A resource numerical limit was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateLFTag">REST API Reference for CreateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.CreateLFTagAsync(Amazon.LakeFormation.Model.CreateLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a tag with the specified name and values.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            A resource numerical limit was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateLFTag">REST API Reference for CreateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DeleteLFTag(Amazon.LakeFormation.Model.DeleteLFTagRequest)">
            <summary>
            Deletes the specified tag key name. If the attribute key does not exist or the tag
            does not exist, then the operation will not do anything. If the attribute key exists,
            then the operation checks if any resources are tagged with this attribute key, if
            yes, the API throws a 400 Exception with the message "Delete not allowed" as the tag
            key is still attached with resources. You can consider untagging resources with this
            tag key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLFTag service method.</param>
            
            <returns>The response from the DeleteLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteLFTag">REST API Reference for DeleteLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DeleteLFTagAsync(Amazon.LakeFormation.Model.DeleteLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified tag key name. If the attribute key does not exist or the tag
            does not exist, then the operation will not do anything. If the attribute key exists,
            then the operation checks if any resources are tagged with this attribute key, if
            yes, the API throws a 400 Exception with the message "Delete not allowed" as the tag
            key is still attached with resources. You can consider untagging resources with this
            tag key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteLFTag">REST API Reference for DeleteLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DeregisterResource(Amazon.LakeFormation.Model.DeregisterResourceRequest)">
            <summary>
            Deregisters the resource as managed by the Data Catalog.
            
             
            <para>
            When you deregister a path, Lake Formation removes the path from the inline policy
            attached to your service-linked role.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterResource service method.</param>
            
            <returns>The response from the DeregisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeregisterResource">REST API Reference for DeregisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DeregisterResourceAsync(Amazon.LakeFormation.Model.DeregisterResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the resource as managed by the Data Catalog.
            
             
            <para>
            When you deregister a path, Lake Formation removes the path from the inline policy
            attached to your service-linked role.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeregisterResource">REST API Reference for DeregisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DescribeResource(Amazon.LakeFormation.Model.DescribeResourceRequest)">
            <summary>
            Retrieves the current data access role for the given resource registered in AWS Lake
            Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResource service method.</param>
            
            <returns>The response from the DescribeResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DescribeResource">REST API Reference for DescribeResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.DescribeResourceAsync(Amazon.LakeFormation.Model.DescribeResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the current data access role for the given resource registered in AWS Lake
            Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DescribeResource">REST API Reference for DescribeResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetDataLakeSettings(Amazon.LakeFormation.Model.GetDataLakeSettingsRequest)">
            <summary>
            Retrieves the list of the data lake administrators of a Lake Formation-managed data
            lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeSettings service method.</param>
            
            <returns>The response from the GetDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetDataLakeSettings">REST API Reference for GetDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetDataLakeSettingsAsync(Amazon.LakeFormation.Model.GetDataLakeSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of the data lake administrators of a Lake Formation-managed data
            lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetDataLakeSettings">REST API Reference for GetDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetEffectivePermissionsForPath(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest)">
            <summary>
            Returns the Lake Formation permissions for a specified table or database resource
            located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not
            return databases and tables if the catalog is encrypted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetEffectivePermissionsForPath service method.</param>
            
            <returns>The response from the GetEffectivePermissionsForPath service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetEffectivePermissionsForPath">REST API Reference for GetEffectivePermissionsForPath Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetEffectivePermissionsForPathAsync(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the Lake Formation permissions for a specified table or database resource
            located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not
            return databases and tables if the catalog is encrypted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetEffectivePermissionsForPath service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetEffectivePermissionsForPath service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetEffectivePermissionsForPath">REST API Reference for GetEffectivePermissionsForPath Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetLFTag(Amazon.LakeFormation.Model.GetLFTagRequest)">
            <summary>
            Returns a tag definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLFTag service method.</param>
            
            <returns>The response from the GetLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetLFTag">REST API Reference for GetLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetLFTagAsync(Amazon.LakeFormation.Model.GetLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a tag definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetLFTag">REST API Reference for GetLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetResourceLFTags(Amazon.LakeFormation.Model.GetResourceLFTagsRequest)">
            <summary>
            Returns the tags applied to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourceLFTags service method.</param>
            
            <returns>The response from the GetResourceLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetResourceLFTags">REST API Reference for GetResourceLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GetResourceLFTagsAsync(Amazon.LakeFormation.Model.GetResourceLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the tags applied to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourceLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetResourceLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetResourceLFTags">REST API Reference for GetResourceLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GrantPermissions(Amazon.LakeFormation.Model.GrantPermissionsRequest)">
            <summary>
            Grants permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            
             
            <para>
            For information about permissions, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GrantPermissions service method.</param>
            
            <returns>The response from the GrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GrantPermissions">REST API Reference for GrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.GrantPermissionsAsync(Amazon.LakeFormation.Model.GrantPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Grants permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            
             
            <para>
            For information about permissions, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GrantPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GrantPermissions">REST API Reference for GrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListLFTags(Amazon.LakeFormation.Model.ListLFTagsRequest)">
            <summary>
            Lists tags that the requester has permission to view.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLFTags service method.</param>
            
            <returns>The response from the ListLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListLFTags">REST API Reference for ListLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListLFTagsAsync(Amazon.LakeFormation.Model.ListLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists tags that the requester has permission to view.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListLFTags">REST API Reference for ListLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListPermissions(Amazon.LakeFormation.Model.ListPermissionsRequest)">
            <summary>
            Returns a list of the principal permissions on the resource, filtered by the permissions
            of the caller. For example, if you are granted an ALTER permission, you are able to
            see only the principal permissions for ALTER.
            
             
            <para>
            This operation returns only those permissions that have been explicitly granted.
            </para>
             
            <para>
            For information about permissions, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPermissions service method.</param>
            
            <returns>The response from the ListPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListPermissions">REST API Reference for ListPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListPermissionsAsync(Amazon.LakeFormation.Model.ListPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the principal permissions on the resource, filtered by the permissions
            of the caller. For example, if you are granted an ALTER permission, you are able to
            see only the principal permissions for ALTER.
            
             
            <para>
            This operation returns only those permissions that have been explicitly granted.
            </para>
             
            <para>
            For information about permissions, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListPermissions">REST API Reference for ListPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListResources(Amazon.LakeFormation.Model.ListResourcesRequest)">
            <summary>
            Lists the resources registered to be managed by the Data Catalog.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResources service method.</param>
            
            <returns>The response from the ListResources service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListResources">REST API Reference for ListResources Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.ListResourcesAsync(Amazon.LakeFormation.Model.ListResourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resources registered to be managed by the Data Catalog.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListResources service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListResources">REST API Reference for ListResources Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.PutDataLakeSettings(Amazon.LakeFormation.Model.PutDataLakeSettingsRequest)">
            <summary>
            Sets the list of data lake administrators who have admin privileges on all resources
            managed by Lake Formation. For more information on admin privileges, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html">Granting
            Lake Formation Permissions</a>.
            
             
            <para>
            This API replaces the current list of data lake admins with the new list being passed.
            To add an admin, fetch the current list and add the new admin to that list and pass
            that list in this API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDataLakeSettings service method.</param>
            
            <returns>The response from the PutDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/PutDataLakeSettings">REST API Reference for PutDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.PutDataLakeSettingsAsync(Amazon.LakeFormation.Model.PutDataLakeSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the list of data lake administrators who have admin privileges on all resources
            managed by Lake Formation. For more information on admin privileges, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html">Granting
            Lake Formation Permissions</a>.
            
             
            <para>
            This API replaces the current list of data lake admins with the new list being passed.
            To add an admin, fetch the current list and add the new admin to that list and pass
            that list in this API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDataLakeSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/PutDataLakeSettings">REST API Reference for PutDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.RegisterResource(Amazon.LakeFormation.Model.RegisterResourceRequest)">
            <summary>
            Registers the resource as managed by the Data Catalog.
            
             
            <para>
            To add or update data, Lake Formation needs read/write access to the chosen Amazon
            S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess
            service-linked role. When you register the first Amazon S3 path, the service-linked
            role and a new inline policy are created on your behalf. Lake Formation adds the first
            path to the inline policy and attaches it to the service-linked role. When you register
            subsequent paths, Lake Formation adds the path to the existing policy.
            </para>
             
            <para>
            The following request registers a new location and gives AWS Lake Formation permission
            to use the service-linked role to access that location.
            </para>
             
            <para>
             <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> 
            </para>
             
            <para>
            If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the
            <code>RoleArn</code>:
            </para>
             
            <para>
             <code>arn:aws:iam::12345:role/my-data-access-role</code> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterResource service method.</param>
            
            <returns>The response from the RegisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            A resource to be created or added already exists.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RegisterResource">REST API Reference for RegisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.RegisterResourceAsync(Amazon.LakeFormation.Model.RegisterResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Registers the resource as managed by the Data Catalog.
            
             
            <para>
            To add or update data, Lake Formation needs read/write access to the chosen Amazon
            S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess
            service-linked role. When you register the first Amazon S3 path, the service-linked
            role and a new inline policy are created on your behalf. Lake Formation adds the first
            path to the inline policy and attaches it to the service-linked role. When you register
            subsequent paths, Lake Formation adds the path to the existing policy.
            </para>
             
            <para>
            The following request registers a new location and gives AWS Lake Formation permission
            to use the service-linked role to access that location.
            </para>
             
            <para>
             <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> 
            </para>
             
            <para>
            If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the
            <code>RoleArn</code>:
            </para>
             
            <para>
             <code>arn:aws:iam::12345:role/my-data-access-role</code> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            A resource to be created or added already exists.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RegisterResource">REST API Reference for RegisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.RemoveLFTagsFromResource(Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest)">
            <summary>
            Removes a tag from the resource. Only database, table, or tableWithColumns resource
            are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code>
            to specify column input.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveLFTagsFromResource service method.</param>
            
            <returns>The response from the RemoveLFTagsFromResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RemoveLFTagsFromResource">REST API Reference for RemoveLFTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.RemoveLFTagsFromResourceAsync(Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a tag from the resource. Only database, table, or tableWithColumns resource
            are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code>
            to specify column input.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveLFTagsFromResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveLFTagsFromResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RemoveLFTagsFromResource">REST API Reference for RemoveLFTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.RevokePermissions(Amazon.LakeFormation.Model.RevokePermissionsRequest)">
            <summary>
            Revokes permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokePermissions service method.</param>
            
            <returns>The response from the RevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RevokePermissions">REST API Reference for RevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.RevokePermissionsAsync(Amazon.LakeFormation.Model.RevokePermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokePermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RevokePermissions">REST API Reference for RevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.SearchDatabasesByLFTags(Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest)">
            <summary>
            This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>.
            This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>.
            Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find
            all resources where the given <code>TagConditions</code> are valid to verify whether
            the returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchDatabasesByLFTags service method.</param>
            
            <returns>The response from the SearchDatabasesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchDatabasesByLFTags">REST API Reference for SearchDatabasesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.SearchDatabasesByLFTagsAsync(Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>.
            This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>.
            Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find
            all resources where the given <code>TagConditions</code> are valid to verify whether
            the returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchDatabasesByLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchDatabasesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchDatabasesByLFTags">REST API Reference for SearchDatabasesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.SearchTablesByLFTags(Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest)">
            <summary>
            This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s.
            This will be used by admins who want to grant user permissions on certain LFTags.
            Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find
            all resources where the given <code>LFTag</code>s are valid to verify whether the
            returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchTablesByLFTags service method.</param>
            
            <returns>The response from the SearchTablesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchTablesByLFTags">REST API Reference for SearchTablesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.SearchTablesByLFTagsAsync(Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s.
            This will be used by admins who want to grant user permissions on certain LFTags.
            Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find
            all resources where the given <code>LFTag</code>s are valid to verify whether the
            returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchTablesByLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchTablesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchTablesByLFTags">REST API Reference for SearchTablesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.UpdateLFTag(Amazon.LakeFormation.Model.UpdateLFTagRequest)">
            <summary>
            Updates the list of possible values for the specified tag key. If the tag does not
            exist, the operation throws an EntityNotFoundException. The values in the delete key
            values will be deleted from list of possible values. If any value in the delete key
            values is attached to a resource, then API errors out with a 400 Exception - "Update
            not allowed". Untag the attribute before deleting the tag key's value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLFTag service method.</param>
            
            <returns>The response from the UpdateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateLFTag">REST API Reference for UpdateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.UpdateLFTagAsync(Amazon.LakeFormation.Model.UpdateLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the list of possible values for the specified tag key. If the tag does not
            exist, the operation throws an EntityNotFoundException. The values in the delete key
            values will be deleted from list of possible values. If any value in the delete key
            values is attached to a resource, then API errors out with a 400 Exception - "Update
            not allowed". Untag the attribute before deleting the tag key's value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateLFTag">REST API Reference for UpdateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.UpdateResource(Amazon.LakeFormation.Model.UpdateResourceRequest)">
            <summary>
            Updates the data access role used for vending access to the given (registered) resource
            in AWS Lake Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateResource service method.</param>
            
            <returns>The response from the UpdateResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateResource">REST API Reference for UpdateResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.AmazonLakeFormationClient.UpdateResourceAsync(Amazon.LakeFormation.Model.UpdateResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the data access role used for vending access to the given (registered) resource
            in AWS Lake Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateResource">REST API Reference for UpdateResource Operation</seealso>
        </member>
        <member name="T:Amazon.LakeFormation.IAmazonLakeFormation">
             <summary>
             Interface for accessing LakeFormation
            
             AWS Lake Formation 
             <para>
             Defines the public endpoint for the AWS Lake Formation service.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.LakeFormation.IAmazonLakeFormation.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.AddLFTagsToResource(Amazon.LakeFormation.Model.AddLFTagsToResourceRequest)">
            <summary>
            Attaches one or more tags to an existing resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddLFTagsToResource service method.</param>
            
            <returns>The response from the AddLFTagsToResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/AddLFTagsToResource">REST API Reference for AddLFTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.AddLFTagsToResourceAsync(Amazon.LakeFormation.Model.AddLFTagsToResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Attaches one or more tags to an existing resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddLFTagsToResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddLFTagsToResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/AddLFTagsToResource">REST API Reference for AddLFTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.BatchGrantPermissions(Amazon.LakeFormation.Model.BatchGrantPermissionsRequest)">
            <summary>
            Batch operation to grant permissions to the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGrantPermissions service method.</param>
            
            <returns>The response from the BatchGrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchGrantPermissions">REST API Reference for BatchGrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.BatchGrantPermissionsAsync(Amazon.LakeFormation.Model.BatchGrantPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Batch operation to grant permissions to the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGrantPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchGrantPermissions">REST API Reference for BatchGrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.BatchRevokePermissions(Amazon.LakeFormation.Model.BatchRevokePermissionsRequest)">
            <summary>
            Batch operation to revoke permissions from the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchRevokePermissions service method.</param>
            
            <returns>The response from the BatchRevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchRevokePermissions">REST API Reference for BatchRevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.BatchRevokePermissionsAsync(Amazon.LakeFormation.Model.BatchRevokePermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Batch operation to revoke permissions from the principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchRevokePermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchRevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/BatchRevokePermissions">REST API Reference for BatchRevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.CreateLFTag(Amazon.LakeFormation.Model.CreateLFTagRequest)">
            <summary>
            Creates a tag with the specified name and values.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLFTag service method.</param>
            
            <returns>The response from the CreateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            A resource numerical limit was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateLFTag">REST API Reference for CreateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.CreateLFTagAsync(Amazon.LakeFormation.Model.CreateLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a tag with the specified name and values.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ResourceNumberLimitExceededException">
            A resource numerical limit was exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/CreateLFTag">REST API Reference for CreateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DeleteLFTag(Amazon.LakeFormation.Model.DeleteLFTagRequest)">
            <summary>
            Deletes the specified tag key name. If the attribute key does not exist or the tag
            does not exist, then the operation will not do anything. If the attribute key exists,
            then the operation checks if any resources are tagged with this attribute key, if
            yes, the API throws a 400 Exception with the message "Delete not allowed" as the tag
            key is still attached with resources. You can consider untagging resources with this
            tag key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLFTag service method.</param>
            
            <returns>The response from the DeleteLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteLFTag">REST API Reference for DeleteLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DeleteLFTagAsync(Amazon.LakeFormation.Model.DeleteLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified tag key name. If the attribute key does not exist or the tag
            does not exist, then the operation will not do anything. If the attribute key exists,
            then the operation checks if any resources are tagged with this attribute key, if
            yes, the API throws a 400 Exception with the message "Delete not allowed" as the tag
            key is still attached with resources. You can consider untagging resources with this
            tag key.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeleteLFTag">REST API Reference for DeleteLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DeregisterResource(Amazon.LakeFormation.Model.DeregisterResourceRequest)">
            <summary>
            Deregisters the resource as managed by the Data Catalog.
            
             
            <para>
            When you deregister a path, Lake Formation removes the path from the inline policy
            attached to your service-linked role.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterResource service method.</param>
            
            <returns>The response from the DeregisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeregisterResource">REST API Reference for DeregisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DeregisterResourceAsync(Amazon.LakeFormation.Model.DeregisterResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Deregisters the resource as managed by the Data Catalog.
            
             
            <para>
            When you deregister a path, Lake Formation removes the path from the inline policy
            attached to your service-linked role.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeregisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DeregisterResource">REST API Reference for DeregisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DescribeResource(Amazon.LakeFormation.Model.DescribeResourceRequest)">
            <summary>
            Retrieves the current data access role for the given resource registered in AWS Lake
            Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResource service method.</param>
            
            <returns>The response from the DescribeResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DescribeResource">REST API Reference for DescribeResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.DescribeResourceAsync(Amazon.LakeFormation.Model.DescribeResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the current data access role for the given resource registered in AWS Lake
            Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/DescribeResource">REST API Reference for DescribeResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetDataLakeSettings(Amazon.LakeFormation.Model.GetDataLakeSettingsRequest)">
            <summary>
            Retrieves the list of the data lake administrators of a Lake Formation-managed data
            lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeSettings service method.</param>
            
            <returns>The response from the GetDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetDataLakeSettings">REST API Reference for GetDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetDataLakeSettingsAsync(Amazon.LakeFormation.Model.GetDataLakeSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves the list of the data lake administrators of a Lake Formation-managed data
            lake.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataLakeSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetDataLakeSettings">REST API Reference for GetDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetEffectivePermissionsForPath(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest)">
            <summary>
            Returns the Lake Formation permissions for a specified table or database resource
            located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not
            return databases and tables if the catalog is encrypted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetEffectivePermissionsForPath service method.</param>
            
            <returns>The response from the GetEffectivePermissionsForPath service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetEffectivePermissionsForPath">REST API Reference for GetEffectivePermissionsForPath Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetEffectivePermissionsForPathAsync(Amazon.LakeFormation.Model.GetEffectivePermissionsForPathRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the Lake Formation permissions for a specified table or database resource
            located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not
            return databases and tables if the catalog is encrypted.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetEffectivePermissionsForPath service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetEffectivePermissionsForPath service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetEffectivePermissionsForPath">REST API Reference for GetEffectivePermissionsForPath Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetLFTag(Amazon.LakeFormation.Model.GetLFTagRequest)">
            <summary>
            Returns a tag definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLFTag service method.</param>
            
            <returns>The response from the GetLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetLFTag">REST API Reference for GetLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetLFTagAsync(Amazon.LakeFormation.Model.GetLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a tag definition.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetLFTag">REST API Reference for GetLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetResourceLFTags(Amazon.LakeFormation.Model.GetResourceLFTagsRequest)">
            <summary>
            Returns the tags applied to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourceLFTags service method.</param>
            
            <returns>The response from the GetResourceLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetResourceLFTags">REST API Reference for GetResourceLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GetResourceLFTagsAsync(Amazon.LakeFormation.Model.GetResourceLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the tags applied to a resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetResourceLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetResourceLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GetResourceLFTags">REST API Reference for GetResourceLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GrantPermissions(Amazon.LakeFormation.Model.GrantPermissionsRequest)">
            <summary>
            Grants permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            
             
            <para>
            For information about permissions, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GrantPermissions service method.</param>
            
            <returns>The response from the GrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GrantPermissions">REST API Reference for GrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.GrantPermissionsAsync(Amazon.LakeFormation.Model.GrantPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Grants permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            
             
            <para>
            For information about permissions, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GrantPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GrantPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/GrantPermissions">REST API Reference for GrantPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListLFTags(Amazon.LakeFormation.Model.ListLFTagsRequest)">
            <summary>
            Lists tags that the requester has permission to view.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLFTags service method.</param>
            
            <returns>The response from the ListLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListLFTags">REST API Reference for ListLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListLFTagsAsync(Amazon.LakeFormation.Model.ListLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists tags that the requester has permission to view.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListLFTags">REST API Reference for ListLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListPermissions(Amazon.LakeFormation.Model.ListPermissionsRequest)">
            <summary>
            Returns a list of the principal permissions on the resource, filtered by the permissions
            of the caller. For example, if you are granted an ALTER permission, you are able to
            see only the principal permissions for ALTER.
            
             
            <para>
            This operation returns only those permissions that have been explicitly granted.
            </para>
             
            <para>
            For information about permissions, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPermissions service method.</param>
            
            <returns>The response from the ListPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListPermissions">REST API Reference for ListPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListPermissionsAsync(Amazon.LakeFormation.Model.ListPermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the principal permissions on the resource, filtered by the permissions
            of the caller. For example, if you are granted an ALTER permission, you are able to
            see only the principal permissions for ALTER.
            
             
            <para>
            This operation returns only those permissions that have been explicitly granted.
            </para>
             
            <para>
            For information about permissions, see <a href="https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html">Security
            and Access Control to Metadata and Data</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListPermissions">REST API Reference for ListPermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListResources(Amazon.LakeFormation.Model.ListResourcesRequest)">
            <summary>
            Lists the resources registered to be managed by the Data Catalog.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResources service method.</param>
            
            <returns>The response from the ListResources service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListResources">REST API Reference for ListResources Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.ListResourcesAsync(Amazon.LakeFormation.Model.ListResourcesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the resources registered to be managed by the Data Catalog.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListResources service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListResources service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/ListResources">REST API Reference for ListResources Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.PutDataLakeSettings(Amazon.LakeFormation.Model.PutDataLakeSettingsRequest)">
            <summary>
            Sets the list of data lake administrators who have admin privileges on all resources
            managed by Lake Formation. For more information on admin privileges, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html">Granting
            Lake Formation Permissions</a>.
            
             
            <para>
            This API replaces the current list of data lake admins with the new list being passed.
            To add an admin, fetch the current list and add the new admin to that list and pass
            that list in this API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDataLakeSettings service method.</param>
            
            <returns>The response from the PutDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/PutDataLakeSettings">REST API Reference for PutDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.PutDataLakeSettingsAsync(Amazon.LakeFormation.Model.PutDataLakeSettingsRequest,System.Threading.CancellationToken)">
            <summary>
            Sets the list of data lake administrators who have admin privileges on all resources
            managed by Lake Formation. For more information on admin privileges, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html">Granting
            Lake Formation Permissions</a>.
            
             
            <para>
            This API replaces the current list of data lake admins with the new list being passed.
            To add an admin, fetch the current list and add the new admin to that list and pass
            that list in this API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDataLakeSettings service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutDataLakeSettings service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/PutDataLakeSettings">REST API Reference for PutDataLakeSettings Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.RegisterResource(Amazon.LakeFormation.Model.RegisterResourceRequest)">
            <summary>
            Registers the resource as managed by the Data Catalog.
            
             
            <para>
            To add or update data, Lake Formation needs read/write access to the chosen Amazon
            S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess
            service-linked role. When you register the first Amazon S3 path, the service-linked
            role and a new inline policy are created on your behalf. Lake Formation adds the first
            path to the inline policy and attaches it to the service-linked role. When you register
            subsequent paths, Lake Formation adds the path to the existing policy.
            </para>
             
            <para>
            The following request registers a new location and gives AWS Lake Formation permission
            to use the service-linked role to access that location.
            </para>
             
            <para>
             <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> 
            </para>
             
            <para>
            If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the
            <code>RoleArn</code>:
            </para>
             
            <para>
             <code>arn:aws:iam::12345:role/my-data-access-role</code> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterResource service method.</param>
            
            <returns>The response from the RegisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            A resource to be created or added already exists.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RegisterResource">REST API Reference for RegisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.RegisterResourceAsync(Amazon.LakeFormation.Model.RegisterResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Registers the resource as managed by the Data Catalog.
            
             
            <para>
            To add or update data, Lake Formation needs read/write access to the chosen Amazon
            S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess
            service-linked role. When you register the first Amazon S3 path, the service-linked
            role and a new inline policy are created on your behalf. Lake Formation adds the first
            path to the inline policy and attaches it to the service-linked role. When you register
            subsequent paths, Lake Formation adds the path to the existing policy.
            </para>
             
            <para>
            The following request registers a new location and gives AWS Lake Formation permission
            to use the service-linked role to access that location.
            </para>
             
            <para>
             <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> 
            </para>
             
            <para>
            If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the
            <code>RoleArn</code>:
            </para>
             
            <para>
             <code>arn:aws:iam::12345:role/my-data-access-role</code> 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AlreadyExistsException">
            A resource to be created or added already exists.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RegisterResource">REST API Reference for RegisterResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.RemoveLFTagsFromResource(Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest)">
            <summary>
            Removes a tag from the resource. Only database, table, or tableWithColumns resource
            are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code>
            to specify column input.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveLFTagsFromResource service method.</param>
            
            <returns>The response from the RemoveLFTagsFromResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RemoveLFTagsFromResource">REST API Reference for RemoveLFTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.RemoveLFTagsFromResourceAsync(Amazon.LakeFormation.Model.RemoveLFTagsFromResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a tag from the resource. Only database, table, or tableWithColumns resource
            are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code>
            to specify column input.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveLFTagsFromResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveLFTagsFromResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RemoveLFTagsFromResource">REST API Reference for RemoveLFTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.RevokePermissions(Amazon.LakeFormation.Model.RevokePermissionsRequest)">
            <summary>
            Revokes permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokePermissions service method.</param>
            
            <returns>The response from the RevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RevokePermissions">REST API Reference for RevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.RevokePermissionsAsync(Amazon.LakeFormation.Model.RevokePermissionsRequest,System.Threading.CancellationToken)">
            <summary>
            Revokes permissions to the principal to access metadata in the Data Catalog and data
            organized in underlying data storage such as Amazon S3.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RevokePermissions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RevokePermissions service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/RevokePermissions">REST API Reference for RevokePermissions Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.SearchDatabasesByLFTags(Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest)">
            <summary>
            This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>.
            This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>.
            Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find
            all resources where the given <code>TagConditions</code> are valid to verify whether
            the returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchDatabasesByLFTags service method.</param>
            
            <returns>The response from the SearchDatabasesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchDatabasesByLFTags">REST API Reference for SearchDatabasesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.SearchDatabasesByLFTagsAsync(Amazon.LakeFormation.Model.SearchDatabasesByLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>.
            This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>.
            Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find
            all resources where the given <code>TagConditions</code> are valid to verify whether
            the returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchDatabasesByLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchDatabasesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchDatabasesByLFTags">REST API Reference for SearchDatabasesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.SearchTablesByLFTags(Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest)">
            <summary>
            This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s.
            This will be used by admins who want to grant user permissions on certain LFTags.
            Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find
            all resources where the given <code>LFTag</code>s are valid to verify whether the
            returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchTablesByLFTags service method.</param>
            
            <returns>The response from the SearchTablesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchTablesByLFTags">REST API Reference for SearchTablesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.SearchTablesByLFTagsAsync(Amazon.LakeFormation.Model.SearchTablesByLFTagsRequest,System.Threading.CancellationToken)">
            <summary>
            This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s.
            This will be used by admins who want to grant user permissions on certain LFTags.
            Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find
            all resources where the given <code>LFTag</code>s are valid to verify whether the
            returned resources can be shared.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SearchTablesByLFTags service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SearchTablesByLFTags service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.GlueEncryptionException">
            An encryption operation failed.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/SearchTablesByLFTags">REST API Reference for SearchTablesByLFTags Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.UpdateLFTag(Amazon.LakeFormation.Model.UpdateLFTagRequest)">
            <summary>
            Updates the list of possible values for the specified tag key. If the tag does not
            exist, the operation throws an EntityNotFoundException. The values in the delete key
            values will be deleted from list of possible values. If any value in the delete key
            values is attached to a resource, then API errors out with a 400 Exception - "Update
            not allowed". Untag the attribute before deleting the tag key's value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLFTag service method.</param>
            
            <returns>The response from the UpdateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateLFTag">REST API Reference for UpdateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.UpdateLFTagAsync(Amazon.LakeFormation.Model.UpdateLFTagRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the list of possible values for the specified tag key. If the tag does not
            exist, the operation throws an EntityNotFoundException. The values in the delete key
            values will be deleted from list of possible values. If any value in the delete key
            values is attached to a resource, then API errors out with a 400 Exception - "Update
            not allowed". Untag the attribute before deleting the tag key's value.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateLFTag service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateLFTag service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.AccessDeniedException">
            Access to a resource was denied.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.ConcurrentModificationException">
            Two processes are trying to modify a resource simultaneously.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateLFTag">REST API Reference for UpdateLFTag Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.UpdateResource(Amazon.LakeFormation.Model.UpdateResourceRequest)">
            <summary>
            Updates the data access role used for vending access to the given (registered) resource
            in AWS Lake Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateResource service method.</param>
            
            <returns>The response from the UpdateResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateResource">REST API Reference for UpdateResource Operation</seealso>
        </member>
        <member name="M:Amazon.LakeFormation.IAmazonLakeFormation.UpdateResourceAsync(Amazon.LakeFormation.Model.UpdateResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the data access role used for vending access to the given (registered) resource
            in AWS Lake Formation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateResource service method, as returned by LakeFormation.</returns>
            <exception cref="T:Amazon.LakeFormation.Model.EntityNotFoundException">
            A specified entity does not exist
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InternalServiceException">
            An internal service error occurred.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.InvalidInputException">
            The input provided was not valid.
            </exception>
            <exception cref="T:Amazon.LakeFormation.Model.OperationTimeoutException">
            The operation timed out.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/lakeformation-2017-03-31/UpdateResource">REST API Reference for UpdateResource Operation</seealso>
        </member>
    </members>
</doc>
