<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CertificateManager</name>
    </assembly>
    <members>
        <member name="T:Amazon.CertificateManager.AmazonCertificateManagerConfig">
            <summary>
            Configuration for accessing Amazon CertificateManager service
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.AmazonCertificateManagerConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.AmazonCertificateManagerConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.AmazonCertificateManagerConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.AmazonCertificateManagerException">
            <summary>
             Common exception for the CertificateManager service.
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCertificateManagerException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCertificateManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCertificateManagerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCertificateManagerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCertificateManagerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonCertificateManagerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Internal.AmazonCertificateManagerMetadata">
            <summary>
            Service metadata for  Amazon CertificateManager service
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Internal.AmazonCertificateManagerMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Internal.AmazonCertificateManagerMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.AccessDeniedException">
            <summary>
            You do not have access required to perform this action.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.AccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new AccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.AccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.AccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.AccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.AccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.AccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.AddTagsToCertificateRequest">
            <summary>
            Container for the parameters to the AddTagsToCertificate operation.
            Adds one or more tags to an ACM certificate. Tags are labels that you can use to identify
            and organize your Amazon Web Services resources. Each tag consists of a <code>key</code>
            and an optional <code>value</code>. You specify the certificate on input by its Amazon
            Resource Name (ARN). You specify the tag by using a key-value pair. 
            
             
            <para>
            You can apply a tag to just one certificate if you want to identify a specific characteristic
            of that certificate, or you can apply the same tag to multiple certificates if you
            want to filter for a common relationship among those certificates. Similarly, you
            can apply the same tag to multiple resources if you want to specify a relationship
            among those resources. For example, you can add the same tag to an ACM certificate
            and an Elastic Load Balancing load balancer to indicate that they are both used by
            the same website. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging
            ACM certificates</a>. 
            </para>
             
            <para>
            To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view
            all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.AddTagsToCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the ACM certificate to which the tag is to be applied.
            This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.AddTagsToCertificateRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pair that defines the tag. The tag value is optional.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.AddTagsToCertificateResponse">
            <summary>
            This is the response object from the AddTagsToCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.CertificateDetail">
            <summary>
            Contains metadata about an ACM certificate. This structure is returned in the response
            to a <a>DescribeCertificate</a> request.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The Amazon Resource Name (ARN) of the certificate. For more information about ARNs,
            see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) of the ACM PCA private certificate authority (CA) that
            issued the certificate. This has the following format: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time at which the certificate was requested.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
            The fully qualified domain name for the certificate, such as www.example.com or example.com.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.DomainValidationOptions">
            <summary>
            Gets and sets the property DomainValidationOptions. 
            <para>
            Contains information about the initial validation of each domain name that occurs
            as a result of the <a>RequestCertificate</a> request. This field exists only when
            the certificate type is <code>AMAZON_ISSUED</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.ExtendedKeyUsages">
            <summary>
            Gets and sets the property ExtendedKeyUsages. 
            <para>
            Contains a list of Extended Key Usage X.509 v3 extension objects. Each object specifies
            a purpose for which the certificate public key can be used and consists of a name
            and an object identifier (OID). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.FailureReason">
            <summary>
            Gets and sets the property FailureReason. 
            <para>
            The reason the certificate request failed. This value exists only when the certificate
            status is <code>FAILED</code>. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed">Certificate
            Request Failed</a> in the <i>Amazon Web Services Certificate Manager User Guide</i>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.ImportedAt">
            <summary>
            Gets and sets the property ImportedAt. 
            <para>
            The date and time at which the certificate was imported. This value exists only when
            the certificate type is <code>IMPORTED</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.InUseBy">
            <summary>
            Gets and sets the property InUseBy. 
            <para>
            A list of ARNs for the Amazon Web Services resources that are using the certificate.
            A certificate can be used by multiple Amazon Web Services resources. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.IssuedAt">
            <summary>
            Gets and sets the property IssuedAt. 
            <para>
            The time at which the certificate was issued. This value exists only when the certificate
            type is <code>AMAZON_ISSUED</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Issuer">
            <summary>
            Gets and sets the property Issuer. 
            <para>
            The name of the certificate authority that issued and signed the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.KeyAlgorithm">
            <summary>
            Gets and sets the property KeyAlgorithm. 
            <para>
            The algorithm that was used to generate the public-private key pair.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.KeyUsages">
            <summary>
            Gets and sets the property KeyUsages. 
            <para>
            A list of Key Usage X.509 v3 extension objects. Each object is a string value that
            identifies the purpose of the public key contained in the certificate. Possible extension
            values include DIGITAL_SIGNATURE, KEY_ENCHIPHERMENT, NON_REPUDIATION, and more.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.NotAfter">
            <summary>
            Gets and sets the property NotAfter. 
            <para>
            The time after which the certificate is not valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.NotBefore">
            <summary>
            Gets and sets the property NotBefore. 
            <para>
            The time before which the certificate is not valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            Value that specifies whether to add the certificate to a transparency log. Certificate
            transparency makes it possible to detect SSL certificates that have been mistakenly
            or maliciously issued. A browser might respond to certificate that has not been logged
            by showing an error message. The logs are cryptographically secure. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.RenewalEligibility">
            <summary>
            Gets and sets the property RenewalEligibility. 
            <para>
            Specifies whether the certificate is eligible for renewal. At this time, only exported
            private certificates can be renewed with the <a>RenewCertificate</a> command.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.RenewalSummary">
            <summary>
            Gets and sets the property RenewalSummary. 
            <para>
            Contains information about the status of ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for the certificate. This field exists only when the certificate type
            is <code>AMAZON_ISSUED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.RevocationReason">
            <summary>
            Gets and sets the property RevocationReason. 
            <para>
            The reason the certificate was revoked. This value exists only when the certificate
            status is <code>REVOKED</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.RevokedAt">
            <summary>
            Gets and sets the property RevokedAt. 
            <para>
            The time at which the certificate was revoked. This value exists only when the certificate
            status is <code>REVOKED</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Serial">
            <summary>
            Gets and sets the property Serial. 
            <para>
            The serial number of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.SignatureAlgorithm">
            <summary>
            Gets and sets the property SignatureAlgorithm. 
            <para>
            The algorithm that was used to sign the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Subject">
            <summary>
            Gets and sets the property Subject. 
            <para>
            The name of the entity that is associated with the public key contained in the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.SubjectAlternativeNames">
            <summary>
            Gets and sets the property SubjectAlternativeNames. 
            <para>
            One or more domain names (subject alternative names) included in the certificate.
            This list contains the domain names that are bound to the public key that is contained
            in the certificate. The subject alternative names include the canonical domain name
            (CN) of the certificate and additional domain names that can be used to connect to
            the website. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateDetail.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The source of the certificate. For certificates provided by ACM, this value is <code>AMAZON_ISSUED</code>.
            For certificates that you imported with <a>ImportCertificate</a>, this value is <code>IMPORTED</code>.
            ACM does not provide <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for imported certificates. For more information about the differences
            between certificates that you import and those that ACM provides, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>Amazon Web Services Certificate Manager User Guide</i>.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.CertificateOptions">
            <summary>
            Structure that contains options for your certificate. Currently, you can use this
            only to specify whether to opt in to or out of certificate transparency logging. Some
            browsers require that public certificates issued for your domain be recorded in a
            log. Certificates that are not logged typically generate a browser error. Transparency
            makes it possible for you to detect SSL/TLS certificates that have been mistakenly
            or maliciously issued for your domain. For general information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency">Certificate
            Transparency Logging</a>.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateOptions.CertificateTransparencyLoggingPreference">
            <summary>
            Gets and sets the property CertificateTransparencyLoggingPreference. 
            <para>
            You can opt out of certificate transparency logging by specifying the <code>DISABLED</code>
            option. Opt in by specifying <code>ENABLED</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.CertificateSummary">
            <summary>
            This structure is returned in the response object of <a>ListCertificates</a> action.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateSummary.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            Amazon Resource Name (ARN) of the certificate. This is of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.CertificateSummary.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
            Fully qualified domain name (FQDN), such as www.example.com or example.com, for the
            certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ConflictException">
            <summary>
            You are trying to update a resource or configuration that is already being created
            or updated. Wait for the previous operation to finish and try again.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ConflictException.#ctor(System.String)">
            <summary>
            Constructs a new ConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConflictException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DeleteCertificateRequest">
            <summary>
            Container for the parameters to the DeleteCertificate operation.
            Deletes a certificate and its associated private key. If this action succeeds, the
            certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a>
            action or be retrieved by calling the <a>GetCertificate</a> action. The certificate
            will not be available for use by Amazon Web Services services integrated with ACM.
            
            
             <note> 
            <para>
            You cannot delete an ACM certificate that is being used by another Amazon Web Services
            service. To delete a certificate that is in use, the certificate association must
            first be removed.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.DeleteCertificateRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.DeleteCertificateRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteCertificateRequest with the parameterized properties
            </summary>
            <param name="certificateArn">String that contains the ARN of the ACM certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DeleteCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the ACM certificate to be deleted. This must be of
            the form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DeleteCertificateResponse">
            <summary>
            This is the response object from the DeleteCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DescribeCertificateRequest">
            <summary>
            Container for the parameters to the DescribeCertificate operation.
            Returns detailed metadata about the specified ACM certificate.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.DescribeCertificateRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.DescribeCertificateRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeCertificateRequest with the parameterized properties
            </summary>
            <param name="certificateArn">The Amazon Resource Name (ARN) of the ACM certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DescribeCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The Amazon Resource Name (ARN) of the ACM certificate. The ARN must have the following
            form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DescribeCertificateResponse">
            <summary>
            This is the response object from the DescribeCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DescribeCertificateResponse.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            Metadata about an ACM certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DomainValidation">
            <summary>
            Contains information about the validation of each domain name in the certificate.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidation.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
            A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code>
            or <code>example.com</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidation.ResourceRecord">
            <summary>
            Gets and sets the property ResourceRecord. 
            <para>
            Contains the CNAME record that you add to your DNS database for domain validation.
            For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">Use
            DNS to Validate Domain Ownership</a>.
            </para>
             
            <para>
            Note: The CNAME information that you need does not include the name of your domain.
            If you include&#x2028; your domain name in the DNS database CNAME record, validation
            fails.&#x2028; For example, if the name is "_a79865eb4cd1a6ab990a45779b4e0b96.yourdomain.com",
            only "_a79865eb4cd1a6ab990a45779b4e0b96" must be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidation.ValidationDomain">
            <summary>
            Gets and sets the property ValidationDomain. 
            <para>
            The domain name that ACM used to send domain validation emails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidation.ValidationEmails">
            <summary>
            Gets and sets the property ValidationEmails. 
            <para>
            A list of email addresses that ACM used to send domain validation emails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidation.ValidationMethod">
            <summary>
            Gets and sets the property ValidationMethod. 
            <para>
            Specifies the domain validation method.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidation.ValidationStatus">
            <summary>
            Gets and sets the property ValidationStatus. 
            <para>
            The validation status of the domain name. This can be one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>PENDING_VALIDATION</code> 
            </para>
             </li> <li> 
            <para>
             <code/>SUCCESS
            </para>
             </li> <li> 
            <para>
             <code/>FAILED
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.DomainValidationOption">
            <summary>
            Contains information about the domain names that you want ACM to use to send you emails
            that enable you to validate domain ownership.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidationOption.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
            A fully qualified domain name (FQDN) in the certificate request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.DomainValidationOption.ValidationDomain">
            <summary>
            Gets and sets the property ValidationDomain. 
            <para>
            The domain name that you want ACM to use to send you validation emails. This domain
            name is the suffix of the email addresses that you want ACM to use. This must be the
            same as the <code>DomainName</code> value or a superdomain of the <code>DomainName</code>
            value. For example, if you request a certificate for <code>testing.example.com</code>,
            you can specify <code>example.com</code> for this value. In that case, ACM sends domain
            validation emails to the following five addresses:
            </para>
             <ul> <li> 
            <para>
            admin@example.com
            </para>
             </li> <li> 
            <para>
            administrator@example.com
            </para>
             </li> <li> 
            <para>
            hostmaster@example.com
            </para>
             </li> <li> 
            <para>
            postmaster@example.com
            </para>
             </li> <li> 
            <para>
            webmaster@example.com
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ExpiryEventsConfiguration">
            <summary>
            Object containing expiration events options associated with an Amazon Web Services
            account.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ExpiryEventsConfiguration.DaysBeforeExpiry">
            <summary>
            Gets and sets the property DaysBeforeExpiry. 
            <para>
            Specifies the number of days prior to certificate expiration when ACM starts generating
            <code>EventBridge</code> events. ACM sends one event per day per certificate until
            the certificate expires. By default, accounts receive events starting 45 days before
            certificate expiration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ExportCertificateRequest">
            <summary>
            Container for the parameters to the ExportCertificate operation.
            Exports a private certificate issued by a private certificate authority (CA) for use
            anywhere. The exported file contains the certificate, the certificate chain, and the
            encrypted private 2048-bit RSA key associated with the public key that is embedded
            in the certificate. For security, you must assign a passphrase for the private key
            when exporting it. 
            
             
            <para>
            For information about exporting and formatting a certificate using the ACM console
            or CLI, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-export-private.html">Export
            a Private Certificate</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ExportCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            An Amazon Resource Name (ARN) of the issued certificate. This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:account:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ExportCertificateRequest.Passphrase">
            <summary>
            Gets and sets the property Passphrase. 
            <para>
            Passphrase to associate with the encrypted exported private key. If you want to later
            decrypt the private key, you must have the passphrase. You can use the following OpenSSL
            command to decrypt a private key: 
            </para>
             
            <para>
             <code>openssl rsa -in encrypted_key.pem -out decrypted_key.pem</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ExportCertificateResponse">
            <summary>
            This is the response object from the ExportCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ExportCertificateResponse.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The base64 PEM-encoded certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ExportCertificateResponse.CertificateChain">
            <summary>
            Gets and sets the property CertificateChain. 
            <para>
            The base64 PEM-encoded certificate chain. This does not include the certificate that
            you are exporting.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ExportCertificateResponse.PrivateKey">
            <summary>
            Gets and sets the property PrivateKey. 
            <para>
            The encrypted private key associated with the public key in the certificate. The key
            is output in PKCS #8 format and is base64 PEM-encoded. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ExtendedKeyUsage">
            <summary>
            The Extended Key Usage X.509 v3 extension defines one or more purposes for which the
            public key can be used. This is in addition to or in place of the basic purposes specified
            by the Key Usage extension.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ExtendedKeyUsage.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of an Extended Key Usage value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ExtendedKeyUsage.OID">
            <summary>
            Gets and sets the property OID. 
            <para>
            An object identifier (OID) for the extension value. OIDs are strings of numbers separated
            by periods. The following OIDs are defined in RFC 3280 and RFC 5280. 
            </para>
             <ul> <li> 
            <para>
             <code>1.3.6.1.5.5.7.3.1 (TLS_WEB_SERVER_AUTHENTICATION)</code> 
            </para>
             </li> <li> 
            <para>
             <code>1.3.6.1.5.5.7.3.2 (TLS_WEB_CLIENT_AUTHENTICATION)</code> 
            </para>
             </li> <li> 
            <para>
             <code>1.3.6.1.5.5.7.3.3 (CODE_SIGNING)</code> 
            </para>
             </li> <li> 
            <para>
             <code>1.3.6.1.5.5.7.3.4 (EMAIL_PROTECTION)</code> 
            </para>
             </li> <li> 
            <para>
             <code>1.3.6.1.5.5.7.3.8 (TIME_STAMPING)</code> 
            </para>
             </li> <li> 
            <para>
             <code>1.3.6.1.5.5.7.3.9 (OCSP_SIGNING)</code> 
            </para>
             </li> <li> 
            <para>
             <code>1.3.6.1.5.5.7.3.5 (IPSEC_END_SYSTEM)</code> 
            </para>
             </li> <li> 
            <para>
             <code>1.3.6.1.5.5.7.3.6 (IPSEC_TUNNEL)</code> 
            </para>
             </li> <li> 
            <para>
             <code>1.3.6.1.5.5.7.3.7 (IPSEC_USER)</code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Filters">
            <summary>
            This structure can be used in the <a>ListCertificates</a> action to filter the output
            of the certificate list.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Filters.ExtendedKeyUsage">
            <summary>
            Gets and sets the property ExtendedKeyUsage. 
            <para>
            Specify one or more <a>ExtendedKeyUsage</a> extension values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Filters.KeyTypes">
            <summary>
            Gets and sets the property KeyTypes. 
            <para>
            Specify one or more algorithms that can be used to generate key pairs.
            </para>
             
            <para>
            Default filtering returns only <code>RSA_1024</code> and <code>RSA_2048</code> certificates
            that have at least one domain. To return other certificate types, provide the desired
            type signatures in a comma-separated list. For example, <code>"keyTypes": ["RSA_2048,RSA_4096"]</code>
            returns both <code>RSA_2048</code> and <code>RSA_4096</code> certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Filters.KeyUsage">
            <summary>
            Gets and sets the property KeyUsage. 
            <para>
            Specify one or more <a>KeyUsage</a> extension values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.GetAccountConfigurationRequest">
            <summary>
            Container for the parameters to the GetAccountConfiguration operation.
            Returns the account configuration options associated with an Amazon Web Services account.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.GetAccountConfigurationResponse">
            <summary>
            This is the response object from the GetAccountConfiguration operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.GetAccountConfigurationResponse.ExpiryEvents">
            <summary>
            Gets and sets the property ExpiryEvents. 
            <para>
            Expiration events configuration options associated with the Amazon Web Services account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.GetCertificateRequest">
            <summary>
            Container for the parameters to the GetCertificate operation.
            Retrieves an Amazon-issued certificate and its certificate chain. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a>
            to decode the certificates and inspect individual fields.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.GetCertificateRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.GetCertificateRequest.#ctor(System.String)">
            <summary>
            Instantiates GetCertificateRequest with the parameterized properties
            </summary>
            <param name="certificateArn">String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
        </member>
        <member name="P:Amazon.CertificateManager.Model.GetCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains a certificate ARN in the following format:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.GetCertificateResponse">
            <summary>
            This is the response object from the GetCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.GetCertificateResponse.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The ACM-issued certificate corresponding to the ARN specified as input.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.GetCertificateResponse.CertificateChain">
            <summary>
            Gets and sets the property CertificateChain. 
            <para>
            Certificates forming the requested certificate's chain of trust. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ImportCertificateRequest">
            <summary>
            Container for the parameters to the ImportCertificate operation.
            Imports a certificate into Amazon Web Services Certificate Manager (ACM) to use with
            services that are integrated with ACM. Note that <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">integrated
            services</a> allow only certificate types and keys they support to be associated with
            their resources. Further, their support differs depending on whether the certificate
            is imported into IAM or into ACM. For more information, see the documentation for
            each service. For more information about importing certificates into ACM, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>Amazon Web Services Certificate Manager User Guide</i>.
            
            
             <note> 
            <para>
            ACM does not provide <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for certificates that you import.
            </para>
             </note> 
            <para>
            Note the following guidelines when importing third party certificates:
            </para>
             <ul> <li> 
            <para>
            You must enter the private key that matches the certificate you are importing.
            </para>
             </li> <li> 
            <para>
            The private key must be unencrypted. You cannot import a private key that is protected
            by a password or a passphrase.
            </para>
             </li> <li> 
            <para>
            The private key must be no larger than 5 KB (5,120 bytes).
            </para>
             </li> <li> 
            <para>
            If the certificate you are importing is not self-signed, you must enter its certificate
            chain.
            </para>
             </li> <li> 
            <para>
            If a certificate chain is included, the issuer must be the subject of one of the certificates
            in the chain.
            </para>
             </li> <li> 
            <para>
            The certificate, private key, and certificate chain must be PEM-encoded.
            </para>
             </li> <li> 
            <para>
            The current time must be between the <code>Not Before</code> and <code>Not After</code>
            certificate fields.
            </para>
             </li> <li> 
            <para>
            The <code>Issuer</code> field must not be empty.
            </para>
             </li> <li> 
            <para>
            The OCSP authority URL, if present, must not exceed 1000 characters.
            </para>
             </li> <li> 
            <para>
            To import a new certificate, omit the <code>CertificateArn</code> argument. Include
            this argument only when you want to replace a previously imported certificate.
            </para>
             </li> <li> 
            <para>
            When you import a certificate by using the CLI, you must specify the certificate,
            the certificate chain, and the private key by their file names preceded by <code>fileb://</code>.
            For example, you can specify a certificate saved in the <code>C:\temp</code> folder
            as <code>fileb://C:\temp\certificate_to_import.pem</code>. If you are making an HTTP
            or HTTPS Query request, include these arguments as BLOBs. 
            </para>
             </li> <li> 
            <para>
            When you import a certificate by using an SDK, you must specify the certificate, the
            certificate chain, and the private key files in the manner required by the programming
            language you're using. 
            </para>
             </li> <li> 
            <para>
            The cryptographic algorithm of an imported certificate must match the algorithm of
            the signing CA. For example, if the signing CA key type is RSA, then the certificate
            key type must also be RSA.
            </para>
             </li> </ul> 
            <para>
            This operation returns the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateRequest.Certificate">
            <summary>
            Gets and sets the property Certificate. 
            <para>
            The certificate to import.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of an imported certificate to replace. To import a new certificate,
            omit this field. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateRequest.CertificateChain">
            <summary>
            Gets and sets the property CertificateChain. 
            <para>
            The PEM encoded certificate chain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateRequest.PrivateKey">
            <summary>
            Gets and sets the property PrivateKey. 
            <para>
            The private key that matches the public key in the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more resource tags to associate with the imported certificate. 
            </para>
             
            <para>
            Note: You cannot apply tags when reimporting a certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ImportCertificateResponse">
            <summary>
            This is the response object from the ImportCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ImportCertificateResponse.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateRequestMarshaller">
            <summary>
            AddTagsToCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.AddTagsToCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddTagsToCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.AddTagsToCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateDetailUnmarshaller">
            <summary>
            Response Unmarshaller for CertificateDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#CertificateDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateOptionsMarshaller">
            <summary>
            CertificateOptions Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateOptionsMarshaller.Marshall(Amazon.CertificateManager.Model.CertificateOptions,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateOptionsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for CertificateOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateOptionsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#CertificateOptions,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for CertificateSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#CertificateSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.CertificateSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller">
            <summary>
            DeleteCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.DeleteCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller">
            <summary>
            DescribeCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.DescribeCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationOptionMarshaller">
            <summary>
            DomainValidationOption Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationOptionMarshaller.Marshall(Amazon.CertificateManager.Model.DomainValidationOption,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationOptionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationUnmarshaller">
            <summary>
            Response Unmarshaller for DomainValidation Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#DomainValidation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.DomainValidationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExpiryEventsConfigurationMarshaller">
            <summary>
            ExpiryEventsConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExpiryEventsConfigurationMarshaller.Marshall(Amazon.CertificateManager.Model.ExpiryEventsConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExpiryEventsConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExpiryEventsConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ExpiryEventsConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExpiryEventsConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#ExpiryEventsConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExpiryEventsConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExpiryEventsConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExportCertificateRequestMarshaller">
            <summary>
            ExportCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExportCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExportCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.ExportCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExportCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExportCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ExportCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExportCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExportCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExportCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExtendedKeyUsageUnmarshaller">
            <summary>
            Response Unmarshaller for ExtendedKeyUsage Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExtendedKeyUsageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#ExtendedKeyUsage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExtendedKeyUsageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ExtendedKeyUsageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.FiltersMarshaller">
            <summary>
            Filters Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.FiltersMarshaller.Marshall(Amazon.CertificateManager.Model.Filters,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CertificateManager.Model.Internal.MarshallTransformations.FiltersMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetAccountConfigurationRequestMarshaller">
            <summary>
            GetAccountConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetAccountConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetAccountConfigurationRequestMarshaller.Marshall(Amazon.CertificateManager.Model.GetAccountConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetAccountConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetAccountConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetAccountConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetAccountConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetAccountConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetAccountConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller">
            <summary>
            GetCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.GetCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.GetCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller">
            <summary>
            ImportCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.ImportCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ImportCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ImportCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidArgsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidArgsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidArgsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidArgsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidArgsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidArnExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidArnException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidArnExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidDomainValidationOptionsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDomainValidationOptionsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidDomainValidationOptionsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidDomainValidationOptionsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidDomainValidationOptionsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidStateException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidTagExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidTagException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidTagExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidTagExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.InvalidTagExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.KeyUsageUnmarshaller">
            <summary>
            Response Unmarshaller for KeyUsage Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.KeyUsageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#KeyUsage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.KeyUsageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.KeyUsageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller">
            <summary>
            ListCertificates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller.Marshall(Amazon.CertificateManager.Model.ListCertificatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListCertificates operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateRequestMarshaller">
            <summary>
            ListTagsForCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.ListTagsForCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ListTagsForCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.PutAccountConfigurationRequestMarshaller">
            <summary>
            PutAccountConfiguration Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.PutAccountConfigurationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.PutAccountConfigurationRequestMarshaller.Marshall(Amazon.CertificateManager.Model.PutAccountConfigurationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.PutAccountConfigurationRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.PutAccountConfigurationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutAccountConfiguration operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.PutAccountConfigurationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.PutAccountConfigurationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.PutAccountConfigurationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateRequestMarshaller">
            <summary>
            RemoveTagsFromCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTagsFromCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RemoveTagsFromCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewalSummaryUnmarshaller">
            <summary>
            Response Unmarshaller for RenewalSummary Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewalSummaryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#RenewalSummary,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewalSummaryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewalSummaryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewCertificateRequestMarshaller">
            <summary>
            RenewCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.RenewCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RenewCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RenewCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateRequestMarshaller">
            <summary>
            RequestCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateRequestMarshaller.Marshall(Amazon.CertificateManager.Model.RequestCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RequestCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestInProgressExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RequestInProgressException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestInProgressExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.RequestInProgressExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailRequestMarshaller">
            <summary>
            ResendValidationEmail Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailRequestMarshaller.Marshall(Amazon.CertificateManager.Model.ResendValidationEmailRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResendValidationEmail operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResendValidationEmailResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceRecordUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceRecord Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceRecordUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#ResourceRecord,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceRecordUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ResourceRecordUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.CertificateManager.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagPolicyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagPolicyException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagPolicyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CertificateManager#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ThrottlingException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ThrottlingExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TooManyTagsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.UpdateCertificateOptionsRequestMarshaller">
            <summary>
            UpdateCertificateOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.UpdateCertificateOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.UpdateCertificateOptionsRequestMarshaller.Marshall(Amazon.CertificateManager.Model.UpdateCertificateOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.UpdateCertificateOptionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.UpdateCertificateOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateCertificateOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.UpdateCertificateOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.UpdateCertificateOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.UpdateCertificateOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ValidationException Object
            </summary>  
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Internal.MarshallTransformations.ValidationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CertificateManager.Model.InvalidArgsException">
            <summary>
            One or more of of request parameters specified is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArgsException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArgsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArgsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidArgsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArgsException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidArgsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArgsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArgsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArgsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidArgsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArgsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.InvalidArnException">
            <summary>
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArnException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArnException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidArnException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidArnException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            <summary>
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDomainValidationOptionsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDomainValidationOptionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDomainValidationOptionsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDomainValidationOptionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDomainValidationOptionsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDomainValidationOptionsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.InvalidParameterException">
            <summary>
            An input parameter was invalid.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidParameterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.InvalidStateException">
            <summary>
            Processing has reached an invalid state.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.InvalidTagException">
            <summary>
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidTagException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidTagException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.InvalidTagException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.KeyUsage">
            <summary>
            The Key Usage X.509 v3 extension defines the purpose of the public key contained in
            the certificate.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.KeyUsage.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A string value that contains a Key Usage extension name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.LimitExceededException">
            <summary>
            An ACM quota has been exceeded.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.LimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ListCertificatesRequest">
            <summary>
            Container for the parameters to the ListCertificates operation.
            Retrieves a list of certificate ARNs and domain names. You can request that only certificates
            that match a specific status be listed. You can also filter by specific attributes
            of the certificate. Default filtering returns only <code>RSA_2048</code> certificates.
            For more information, see <a>Filters</a>.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesRequest.CertificateStatuses">
            <summary>
            Gets and sets the property CertificateStatuses. 
            <para>
            Filter the certificate list by status value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesRequest.Includes">
            <summary>
            Gets and sets the property Includes. 
            <para>
            Filter the certificate list. For more information, see the <a>Filters</a> structure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesRequest.MaxItems">
            <summary>
            Gets and sets the property MaxItems. 
            <para>
            Use this parameter when paginating results to specify the maximum number of items
            to return in the response. If additional items exist beyond the number you specify,
            the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code>
            value in a subsequent request to retrieve additional items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            Use this parameter only when paginating results and only in a subsequent request after
            you receive a response with truncated results. Set it to the value of <code>NextToken</code>
            from the response you just received.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ListCertificatesResponse">
            <summary>
            This is the response object from the ListCertificates operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesResponse.CertificateSummaryList">
            <summary>
            Gets and sets the property CertificateSummaryList. 
            <para>
            A list of ACM certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            When the list is truncated, this value is present and contains the value to use for
            the <code>NextToken</code> parameter in a subsequent pagination request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ListTagsForCertificateRequest">
            <summary>
            Container for the parameters to the ListTagsForCertificate operation.
            Lists the tags that have been applied to the ACM certificate. Use the certificate's
            Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM certificate,
            use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListTagsForCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the ACM certificate for which you want to list the
            tags. This must have the following form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ListTagsForCertificateResponse">
            <summary>
            This is the response object from the ListTagsForCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListTagsForCertificateResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pairs that define the applied tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.PutAccountConfigurationRequest">
            <summary>
            Container for the parameters to the PutAccountConfiguration operation.
            Adds or modifies account-level configurations in ACM. 
            
             
            <para>
            The supported configuration option is <code>DaysBeforeExpiry</code>. This option specifies
            the number of days prior to certificate expiration when ACM starts generating <code>EventBridge</code>
            events. ACM sends one event per day per certificate until the certificate expires.
            By default, accounts receive events starting 45 days before certificate expiration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.PutAccountConfigurationRequest.ExpiryEvents">
            <summary>
            Gets and sets the property ExpiryEvents. 
            <para>
            Specifies expiration events associated with an account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.PutAccountConfigurationRequest.IdempotencyToken">
            <summary>
            Gets and sets the property IdempotencyToken. 
            <para>
            Customer-chosen string used to distinguish between calls to <code>PutAccountConfiguration</code>.
            Idempotency tokens time out after one hour. If you call <code>PutAccountConfiguration</code>
            multiple times with the same unexpired idempotency token, ACM treats it as the same
            request and returns the original result. If you change the idempotency token for each
            call, ACM treats each call as a new request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.PutAccountConfigurationResponse">
            <summary>
            This is the response object from the PutAccountConfiguration operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest">
            <summary>
            Container for the parameters to the RemoveTagsFromCertificate operation.
            Remove one or more tags from an ACM certificate. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this function, the
            tag will be removed regardless of value. If you specify a value, the tag is removed
            only if it is associated with the specified value. 
            
             
            <para>
            To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view
            all of the tags that have been applied to a specific ACM certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the ACM Certificate with one or more tags that you
            want to remove. This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pair that defines the tag to remove.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RemoveTagsFromCertificateResponse">
            <summary>
            This is the response object from the RemoveTagsFromCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RenewalSummary">
            <summary>
            Contains information about the status of ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for the certificate. This structure exists only when the certificate type
            is <code>AMAZON_ISSUED</code>.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RenewalSummary.DomainValidationOptions">
            <summary>
            Gets and sets the property DomainValidationOptions. 
            <para>
            Contains information about the validation of each domain name in the certificate,
            as it pertains to ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a>. This is different from the initial validation that occurs as a result
            of the <a>RequestCertificate</a> request. This field exists only when the certificate
            type is <code>AMAZON_ISSUED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RenewalSummary.RenewalStatus">
            <summary>
            Gets and sets the property RenewalStatus. 
            <para>
            The status of ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RenewalSummary.RenewalStatusReason">
            <summary>
            Gets and sets the property RenewalStatusReason. 
            <para>
            The reason that a renewal request was unsuccessful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RenewalSummary.UpdatedAt">
            <summary>
            Gets and sets the property UpdatedAt. 
            <para>
            The time at which the renewal summary was last updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RenewCertificateRequest">
            <summary>
            Container for the parameters to the RenewCertificate operation.
            Renews an eligible ACM certificate. At this time, only exported private certificates
            can be renewed with this operation. In order to renew your ACM PCA certificates with
            ACM, you must first <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaPermissions.html">grant
            the ACM service principal permission to do so</a>. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/manual-renewal.html">Testing
            Managed Renewal</a> in the ACM User Guide.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RenewCertificateRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the ACM certificate to be renewed. This must be of
            the form:
            </para>
             
            <para>
             <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
             
            <para>
            For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RenewCertificateResponse">
            <summary>
            This is the response object from the RenewCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RequestCertificateRequest">
            <summary>
            Container for the parameters to the RequestCertificate operation.
            Requests an ACM certificate for use with other Amazon Web Services services. To request
            an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code>
            parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code>
            parameter. 
            
             
            <para>
            If you are requesting a private certificate, domain validation is not required. If
            you are requesting a public certificate, each domain name that you specify must be
            validated to verify that you own or control the domain. You can use <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">DNS
            validation</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">email
            validation</a>. We recommend that you use DNS validation. ACM issues public certificates
            after receiving approval from the domain owner. 
            </para>
             <note> 
            <para>
            ACM behavior differs from the <a href="https://tools.ietf.org/html/rfc6125#appendix-B.2">https://tools.ietf.org/html/rfc6125#appendix-B.2</a>RFC
            6125 specification of the certificate validation process. first checks for a subject
            alternative name, and, if it finds one, ignores the common name (CN)
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.CertificateAuthorityArn">
            <summary>
            Gets and sets the property CertificateAuthorityArn. 
            <para>
            The Amazon Resource Name (ARN) of the private certificate authority (CA) that will
            be used to issue the certificate. If you do not provide an ARN and you are trying
            to request a private certificate, ACM will attempt to issue a public certificate.
            For more information about private CAs, see the <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaWelcome.html">Amazon
            Web Services Certificate Manager Private Certificate Authority (PCA)</a> user guide.
            The ARN must have the following form: 
            </para>
             
            <para>
             <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.DomainName">
            <summary>
            Gets and sets the property DomainName. 
            <para>
             Fully qualified domain name (FQDN), such as www.example.com, that you want to secure
            with an ACM certificate. Use an asterisk (*) to create a wildcard certificate that
            protects several sites in the same domain. For example, *.example.com protects www.example.com,
            site.example.com, and images.example.com. 
            </para>
             
            <para>
             The first domain name you enter cannot exceed 64 octets, including periods. Each
            subsequent Subject Alternative Name (SAN), however, can be up to 253 octets in length.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.DomainValidationOptions">
            <summary>
            Gets and sets the property DomainValidationOptions. 
            <para>
            The domain name that you want ACM to use to send you emails so that you can validate
            domain ownership.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.IdempotencyToken">
            <summary>
            Gets and sets the property IdempotencyToken. 
            <para>
            Customer chosen string that can be used to distinguish between calls to <code>RequestCertificate</code>.
            Idempotency tokens time out after one hour. Therefore, if you call <code>RequestCertificate</code>
            multiple times with the same idempotency token within one hour, ACM recognizes that
            you are requesting only one certificate and will issue only one. If you change the
            idempotency token for each call, ACM recognizes that you are requesting multiple certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            Currently, you can use this parameter to specify whether to add the certificate to
            a certificate transparency log. Certificate transparency makes it possible to detect
            SSL/TLS certificates that have been mistakenly or maliciously issued. Certificates
            that have not been logged typically produce an error message in a browser. For more
            information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency">Opting
            Out of Certificate Transparency Logging</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.SubjectAlternativeNames">
            <summary>
            Gets and sets the property SubjectAlternativeNames. 
            <para>
            Additional FQDNs to be included in the Subject Alternative Name extension of the ACM
            certificate. For example, add the name www.example.net to a certificate for which
            the <code>DomainName</code> field is www.example.com if users can reach your site
            by using either name. The maximum number of domain names that you can add to an ACM
            certificate is 100. However, the initial quota is 10 domain names. If you need more
            than 10 names, you must request a quota increase. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Quotas</a>.
            </para>
             
            <para>
             The maximum length of a SAN DNS name is 253 octets. The name is made up of multiple
            labels separated by periods. No label can be longer than 63 octets. Consider the following
            examples: 
            </para>
             <ul> <li> 
            <para>
             <code>(63 octets).(63 octets).(63 octets).(61 octets)</code> is legal because the
            total length is 253 octets (63+1+63+1+63+1+61) and no label exceeds 63 octets.
            </para>
             </li> <li> 
            <para>
             <code>(64 octets).(63 octets).(63 octets).(61 octets)</code> is not legal because
            the total length exceeds 253 octets (64+1+63+1+63+1+61) and the first label exceeds
            63 octets.
            </para>
             </li> <li> 
            <para>
             <code>(63 octets).(63 octets).(63 octets).(62 octets)</code> is not legal because
            the total length of the DNS name (63+1+63+1+63+1+62) exceeds 253 octets.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more resource tags to associate with the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateRequest.ValidationMethod">
            <summary>
            Gets and sets the property ValidationMethod. 
            <para>
            The method you want to use if you are requesting a public certificate to validate
            that you own or control domain. You can <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">validate
            with DNS</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">validate
            with email</a>. We recommend that you use DNS validation. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RequestCertificateResponse">
            <summary>
            This is the response object from the RequestCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.RequestCertificateResponse.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the issued certificate. This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.RequestInProgressException">
            <summary>
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.String)">
            <summary>
            Constructs a new RequestInProgressException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.Exception)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RequestInProgressException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RequestInProgressException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.RequestInProgressException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ResendValidationEmailRequest">
            <summary>
            Container for the parameters to the ResendValidationEmail operation.
            Resends the email that requests domain ownership validation. The domain owner or an
            authorized representative must approve the ACM certificate before it can be issued.
            The certificate can be approved by clicking a link in the mail to navigate to the
            Amazon certificate approval website and then clicking <b>I Approve</b>. However, the
            validation email can be blocked by spam filters. Therefore, if you do not receive
            the original mail, you can request that the mail be resent within 72 hours of requesting
            the ACM certificate. If more than 72 hours have elapsed since your original request
            or since your last attempt to resend validation mail, you must request a new certificate.
            For more information about setting up your contact email addresses, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/setup-email.html">Configure
            Email for your Domain</a>.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ResendValidationEmailRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            String that contains the ARN of the requested certificate. The certificate ARN is
            generated and returned by the <a>RequestCertificate</a> action as soon as the request
            is made. By default, using this parameter causes email to be sent to all top-level
            domains you specified in the certificate request. The ARN must be of the form: 
            </para>
             
            <para>
             <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ResendValidationEmailRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The fully qualified domain name (FQDN) of the certificate that needs to be validated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ResendValidationEmailRequest.ValidationDomain">
            <summary>
            Gets and sets the property ValidationDomain. 
            <para>
            The base validation domain that will act as the suffix of the email addresses that
            are used to send the emails. This must be the same as the <code>Domain</code> value
            or a superdomain of the <code>Domain</code> value. For example, if you requested a
            certificate for <code>site.subdomain.example.com</code> and specify a <b>ValidationDomain</b>
            of <code>subdomain.example.com</code>, ACM sends email to the domain registrant, technical
            contact, and administrative contact in WHOIS and the following five addresses:
            </para>
             <ul> <li> 
            <para>
            admin@subdomain.example.com
            </para>
             </li> <li> 
            <para>
            administrator@subdomain.example.com
            </para>
             </li> <li> 
            <para>
            hostmaster@subdomain.example.com
            </para>
             </li> <li> 
            <para>
            postmaster@subdomain.example.com
            </para>
             </li> <li> 
            <para>
            webmaster@subdomain.example.com
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ResendValidationEmailResponse">
            <summary>
            This is the response object from the ResendValidationEmail operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ResourceInUseException">
            <summary>
            The certificate is in use by another Amazon Web Services service in the caller's account.
            Remove the association and try again.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            <summary>
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ResourceRecord">
            <summary>
            Contains a DNS record value that you can use to validate ownership or control of a
            domain. This is used by the <a>DescribeCertificate</a> action.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ResourceRecord.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the DNS record to create in your domain. This is supplied by ACM.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ResourceRecord.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of DNS record. Currently this can be <code>CNAME</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ResourceRecord.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the CNAME record to add to your DNS database. This is supplied by ACM.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.Tag">
            <summary>
            A key-value pair that identifies or specifies metadata about an ACM resource.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key of the tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.TagPolicyException">
            <summary>
            A specified tag did not comply with an existing tag policy and was rejected.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TagPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new TagPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TagPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TagPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TagPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of TagPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TagPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TagPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TagPolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TagPolicyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TagPolicyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ThrottlingException">
            <summary>
            The request was denied because it exceeded a quota.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ThrottlingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ThrottlingException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ThrottlingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.TooManyTagsException">
            <summary>
            The request contains too many tags. Try the request again with fewer tags.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyTagsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TooManyTagsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.TooManyTagsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.UpdateCertificateOptionsRequest">
            <summary>
            Container for the parameters to the UpdateCertificateOptions operation.
            Updates a certificate. Currently, you can use this function to specify whether to
            opt in to or out of recording your certificate in a certificate transparency log.
            For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency">
            Opting Out of Certificate Transparency Logging</a>.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.UpdateCertificateOptionsRequest.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            ARN of the requested certificate to update. This must be of the form:
            </para>
             
            <para>
             <code>arn:aws:acm:us-east-1:<i>account</i>:certificate/<i>12345678-1234-1234-1234-123456789012</i>
            </code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.UpdateCertificateOptionsRequest.Options">
            <summary>
            Gets and sets the property Options. 
            <para>
            Use to update the options for your certificate. Currently, you can specify whether
            to add your certificate to a transparency log. Certificate transparency makes it possible
            to detect SSL/TLS certificates that have been mistakenly or maliciously issued. Certificates
            that have not been logged typically produce an error message in a browser. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.UpdateCertificateOptionsResponse">
            <summary>
            This is the response object from the UpdateCertificateOptions operation.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ValidationException">
            <summary>
            The supplied input failed to satisfy constraints of an Amazon Web Services service.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ValidationException.#ctor(System.String)">
            <summary>
            Constructs a new ValidationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ValidationException.#ctor(System.Exception)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ValidationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ValidationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ValidationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ValidationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CertificateManager.Model.CertificateManagerPaginatorFactory">
             <summary>
             Paginators for the CertificateManager service
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.CertificateManagerPaginatorFactory.ListCertificates(Amazon.CertificateManager.Model.ListCertificatesRequest)">
             <summary>
             Paginator for ListCertificates operation
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ICertificateManagerPaginatorFactory">
             <summary>
             Paginators for the CertificateManager service
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.Model.ICertificateManagerPaginatorFactory.ListCertificates(Amazon.CertificateManager.Model.ListCertificatesRequest)">
             <summary>
             Paginator for ListCertificates operation
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.IListCertificatesPaginator">
             <summary>
             Paginator for the ListCertificates operation
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.IListCertificatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.IListCertificatesPaginator.CertificateSummaryList">
            <summary>
            Enumerable containing all of the CertificateSummaryList
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.Model.ListCertificatesPaginator">
            <summary>
            Base class for ListCertificates paginators.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.Model.ListCertificatesPaginator.CertificateSummaryList">
            <summary>
            Enumerable containing all of the CertificateSummaryList
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.AmazonCertificateManagerRequest">
            <summary>
            Base class for CertificateManager operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CertificateManager.CertificateStatus">
            <summary>
            Constants used for properties of type CertificateStatus.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.EXPIRED">
            <summary>
            Constant EXPIRED for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.FAILED">
            <summary>
            Constant FAILED for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.INACTIVE">
            <summary>
            Constant INACTIVE for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.ISSUED">
            <summary>
            Constant ISSUED for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.PENDING_VALIDATION">
            <summary>
            Constant PENDING_VALIDATION for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.REVOKED">
            <summary>
            Constant REVOKED for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateStatus.VALIDATION_TIMED_OUT">
            <summary>
            Constant VALIDATION_TIMED_OUT for CertificateStatus
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateStatus.op_Implicit(System.String)~Amazon.CertificateManager.CertificateStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.CertificateTransparencyLoggingPreference">
            <summary>
            Constants used for properties of type CertificateTransparencyLoggingPreference.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateTransparencyLoggingPreference.DISABLED">
            <summary>
            Constant DISABLED for CertificateTransparencyLoggingPreference
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateTransparencyLoggingPreference.ENABLED">
            <summary>
            Constant ENABLED for CertificateTransparencyLoggingPreference
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateTransparencyLoggingPreference.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateTransparencyLoggingPreference.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateTransparencyLoggingPreference.op_Implicit(System.String)~Amazon.CertificateManager.CertificateTransparencyLoggingPreference">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.CertificateType">
            <summary>
            Constants used for properties of type CertificateType.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateType.AMAZON_ISSUED">
            <summary>
            Constant AMAZON_ISSUED for CertificateType
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateType.IMPORTED">
            <summary>
            Constant IMPORTED for CertificateType
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.CertificateType.PRIVATE">
            <summary>
            Constant PRIVATE for CertificateType
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.CertificateType.op_Implicit(System.String)~Amazon.CertificateManager.CertificateType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.DomainStatus">
            <summary>
            Constants used for properties of type DomainStatus.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.DomainStatus.FAILED">
            <summary>
            Constant FAILED for DomainStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.DomainStatus.PENDING_VALIDATION">
            <summary>
            Constant PENDING_VALIDATION for DomainStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.DomainStatus.SUCCESS">
            <summary>
            Constant SUCCESS for DomainStatus
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.DomainStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.DomainStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.DomainStatus.op_Implicit(System.String)~Amazon.CertificateManager.DomainStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.ExtendedKeyUsageName">
            <summary>
            Constants used for properties of type ExtendedKeyUsageName.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.ANY">
            <summary>
            Constant ANY for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.CODE_SIGNING">
            <summary>
            Constant CODE_SIGNING for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.CUSTOM">
            <summary>
            Constant CUSTOM for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.EMAIL_PROTECTION">
            <summary>
            Constant EMAIL_PROTECTION for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.IPSEC_END_SYSTEM">
            <summary>
            Constant IPSEC_END_SYSTEM for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.IPSEC_TUNNEL">
            <summary>
            Constant IPSEC_TUNNEL for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.IPSEC_USER">
            <summary>
            Constant IPSEC_USER for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.NONE">
            <summary>
            Constant NONE for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.OCSP_SIGNING">
            <summary>
            Constant OCSP_SIGNING for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.TIME_STAMPING">
            <summary>
            Constant TIME_STAMPING for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.TLS_WEB_CLIENT_AUTHENTICATION">
            <summary>
            Constant TLS_WEB_CLIENT_AUTHENTICATION for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ExtendedKeyUsageName.TLS_WEB_SERVER_AUTHENTICATION">
            <summary>
            Constant TLS_WEB_SERVER_AUTHENTICATION for ExtendedKeyUsageName
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.ExtendedKeyUsageName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.ExtendedKeyUsageName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.ExtendedKeyUsageName.op_Implicit(System.String)~Amazon.CertificateManager.ExtendedKeyUsageName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.FailureReason">
            <summary>
            Constants used for properties of type FailureReason.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.ADDITIONAL_VERIFICATION_REQUIRED">
            <summary>
            Constant ADDITIONAL_VERIFICATION_REQUIRED for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.CAA_ERROR">
            <summary>
            Constant CAA_ERROR for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.DOMAIN_NOT_ALLOWED">
            <summary>
            Constant DOMAIN_NOT_ALLOWED for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.DOMAIN_VALIDATION_DENIED">
            <summary>
            Constant DOMAIN_VALIDATION_DENIED for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.INVALID_PUBLIC_DOMAIN">
            <summary>
            Constant INVALID_PUBLIC_DOMAIN for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.NO_AVAILABLE_CONTACTS">
            <summary>
            Constant NO_AVAILABLE_CONTACTS for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.OTHER">
            <summary>
            Constant OTHER for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.PCA_ACCESS_DENIED">
            <summary>
            Constant PCA_ACCESS_DENIED for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.PCA_INVALID_ARGS">
            <summary>
            Constant PCA_INVALID_ARGS for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.PCA_INVALID_ARN">
            <summary>
            Constant PCA_INVALID_ARN for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.PCA_INVALID_DURATION">
            <summary>
            Constant PCA_INVALID_DURATION for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.PCA_INVALID_STATE">
            <summary>
            Constant PCA_INVALID_STATE for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.PCA_LIMIT_EXCEEDED">
            <summary>
            Constant PCA_LIMIT_EXCEEDED for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.PCA_NAME_CONSTRAINTS_VALIDATION">
            <summary>
            Constant PCA_NAME_CONSTRAINTS_VALIDATION for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.PCA_REQUEST_FAILED">
            <summary>
            Constant PCA_REQUEST_FAILED for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.PCA_RESOURCE_NOT_FOUND">
            <summary>
            Constant PCA_RESOURCE_NOT_FOUND for FailureReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.FailureReason.SLR_NOT_FOUND">
            <summary>
            Constant SLR_NOT_FOUND for FailureReason
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.FailureReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.FailureReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.FailureReason.op_Implicit(System.String)~Amazon.CertificateManager.FailureReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.KeyAlgorithm">
            <summary>
            Constants used for properties of type KeyAlgorithm.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyAlgorithm.EC_prime256v1">
            <summary>
            Constant EC_prime256v1 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyAlgorithm.EC_secp384r1">
            <summary>
            Constant EC_secp384r1 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyAlgorithm.EC_secp521r1">
            <summary>
            Constant EC_secp521r1 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyAlgorithm.RSA_1024">
            <summary>
            Constant RSA_1024 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyAlgorithm.RSA_2048">
            <summary>
            Constant RSA_2048 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyAlgorithm.RSA_3072">
            <summary>
            Constant RSA_3072 for KeyAlgorithm
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyAlgorithm.RSA_4096">
            <summary>
            Constant RSA_4096 for KeyAlgorithm
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.KeyAlgorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.KeyAlgorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.KeyAlgorithm.op_Implicit(System.String)~Amazon.CertificateManager.KeyAlgorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.KeyUsageName">
            <summary>
            Constants used for properties of type KeyUsageName.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.ANY">
            <summary>
            Constant ANY for KeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.CERTIFICATE_SIGNING">
            <summary>
            Constant CERTIFICATE_SIGNING for KeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.CRL_SIGNING">
            <summary>
            Constant CRL_SIGNING for KeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.CUSTOM">
            <summary>
            Constant CUSTOM for KeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.DATA_ENCIPHERMENT">
            <summary>
            Constant DATA_ENCIPHERMENT for KeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.DECIPHER_ONLY">
            <summary>
            Constant DECIPHER_ONLY for KeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.DIGITAL_SIGNATURE">
            <summary>
            Constant DIGITAL_SIGNATURE for KeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.ENCIPHER_ONLY">
            <summary>
            Constant ENCIPHER_ONLY for KeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.KEY_AGREEMENT">
            <summary>
            Constant KEY_AGREEMENT for KeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.KEY_ENCIPHERMENT">
            <summary>
            Constant KEY_ENCIPHERMENT for KeyUsageName
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.KeyUsageName.NON_REPUDIATION">
            <summary>
            Constant NON_REPUDIATION for KeyUsageName
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.KeyUsageName.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.KeyUsageName.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.KeyUsageName.op_Implicit(System.String)~Amazon.CertificateManager.KeyUsageName">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.RecordType">
            <summary>
            Constants used for properties of type RecordType.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RecordType.CNAME">
            <summary>
            Constant CNAME for RecordType
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RecordType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RecordType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.RecordType.op_Implicit(System.String)~Amazon.CertificateManager.RecordType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.RenewalEligibility">
            <summary>
            Constants used for properties of type RenewalEligibility.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RenewalEligibility.ELIGIBLE">
            <summary>
            Constant ELIGIBLE for RenewalEligibility
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RenewalEligibility.INELIGIBLE">
            <summary>
            Constant INELIGIBLE for RenewalEligibility
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RenewalEligibility.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RenewalEligibility.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.RenewalEligibility.op_Implicit(System.String)~Amazon.CertificateManager.RenewalEligibility">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.RenewalStatus">
            <summary>
            Constants used for properties of type RenewalStatus.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RenewalStatus.FAILED">
            <summary>
            Constant FAILED for RenewalStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RenewalStatus.PENDING_AUTO_RENEWAL">
            <summary>
            Constant PENDING_AUTO_RENEWAL for RenewalStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RenewalStatus.PENDING_VALIDATION">
            <summary>
            Constant PENDING_VALIDATION for RenewalStatus
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RenewalStatus.SUCCESS">
            <summary>
            Constant SUCCESS for RenewalStatus
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RenewalStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RenewalStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.RenewalStatus.op_Implicit(System.String)~Amazon.CertificateManager.RenewalStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.RevocationReason">
            <summary>
            Constants used for properties of type RevocationReason.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.A_A_COMPROMISE">
            <summary>
            Constant A_A_COMPROMISE for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.AFFILIATION_CHANGED">
            <summary>
            Constant AFFILIATION_CHANGED for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.CA_COMPROMISE">
            <summary>
            Constant CA_COMPROMISE for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.CERTIFICATE_HOLD">
            <summary>
            Constant CERTIFICATE_HOLD for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.CESSATION_OF_OPERATION">
            <summary>
            Constant CESSATION_OF_OPERATION for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.KEY_COMPROMISE">
            <summary>
            Constant KEY_COMPROMISE for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.PRIVILEGE_WITHDRAWN">
            <summary>
            Constant PRIVILEGE_WITHDRAWN for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.REMOVE_FROM_CRL">
            <summary>
            Constant REMOVE_FROM_CRL for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.SUPERCEDED">
            <summary>
            Constant SUPERCEDED for RevocationReason
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.RevocationReason.UNSPECIFIED">
            <summary>
            Constant UNSPECIFIED for RevocationReason
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RevocationReason.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.RevocationReason.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.RevocationReason.op_Implicit(System.String)~Amazon.CertificateManager.RevocationReason">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.ValidationMethod">
            <summary>
            Constants used for properties of type ValidationMethod.
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ValidationMethod.DNS">
            <summary>
            Constant DNS for ValidationMethod
            </summary>
        </member>
        <member name="F:Amazon.CertificateManager.ValidationMethod.EMAIL">
            <summary>
            Constant EMAIL for ValidationMethod
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.ValidationMethod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.ValidationMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CertificateManager.ValidationMethod.op_Implicit(System.String)~Amazon.CertificateManager.ValidationMethod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CertificateManager.AmazonCertificateManagerClient">
             <summary>
             Implementation for accessing CertificateManager
            
             Amazon Web Services Certificate Manager 
             <para>
             You can use Amazon Web Services Certificate Manager (ACM) to manage SSL/TLS certificates
             for your Amazon Web Services-based websites and applications. For more information
             about using ACM, see the <a href="https://docs.aws.amazon.com/acm/latest/userguide/">Amazon
             Web Services Certificate Manager User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.CertificateManager.AmazonCertificateManagerClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor">
             <summary>
             Constructs AmazonCertificateManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonCertificateManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(Amazon.CertificateManager.AmazonCertificateManagerConfig)">
             <summary>
             Constructs AmazonCertificateManagerClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCertificateManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CertificateManager.AmazonCertificateManagerConfig)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Credentials and an
            AmazonCertificateManagerClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCertificateManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String,Amazon.CertificateManager.AmazonCertificateManagerConfig)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCertificateManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCertificateManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.#ctor(System.String,System.String,System.String,Amazon.CertificateManager.AmazonCertificateManagerConfig)">
            <summary>
            Constructs AmazonCertificateManagerClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCertificateManagerClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCertificateManagerClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.CertificateManager.AmazonCertificateManagerClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.AddTagsToCertificate(Amazon.CertificateManager.Model.AddTagsToCertificateRequest)">
            <summary>
            Adds one or more tags to an ACM certificate. Tags are labels that you can use to identify
            and organize your Amazon Web Services resources. Each tag consists of a <code>key</code>
            and an optional <code>value</code>. You specify the certificate on input by its Amazon
            Resource Name (ARN). You specify the tag by using a key-value pair. 
            
             
            <para>
            You can apply a tag to just one certificate if you want to identify a specific characteristic
            of that certificate, or you can apply the same tag to multiple certificates if you
            want to filter for a common relationship among those certificates. Similarly, you
            can apply the same tag to multiple resources if you want to specify a relationship
            among those resources. For example, you can add the same tag to an ACM certificate
            and an Elastic Load Balancing load balancer to indicate that they are both used by
            the same website. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging
            ACM certificates</a>. 
            </para>
             
            <para>
            To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view
            all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToCertificate service method.</param>
            
            <returns>The response from the AddTagsToCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/AddTagsToCertificate">REST API Reference for AddTagsToCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.AddTagsToCertificateAsync(Amazon.CertificateManager.Model.AddTagsToCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to an ACM certificate. Tags are labels that you can use to identify
            and organize your Amazon Web Services resources. Each tag consists of a <code>key</code>
            and an optional <code>value</code>. You specify the certificate on input by its Amazon
            Resource Name (ARN). You specify the tag by using a key-value pair. 
            
             
            <para>
            You can apply a tag to just one certificate if you want to identify a specific characteristic
            of that certificate, or you can apply the same tag to multiple certificates if you
            want to filter for a common relationship among those certificates. Similarly, you
            can apply the same tag to multiple resources if you want to specify a relationship
            among those resources. For example, you can add the same tag to an ACM certificate
            and an Elastic Load Balancing load balancer to indicate that they are both used by
            the same website. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging
            ACM certificates</a>. 
            </para>
             
            <para>
            To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view
            all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddTagsToCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/AddTagsToCertificate">REST API Reference for AddTagsToCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DeleteCertificate(System.String)">
            <summary>
            Deletes a certificate and its associated private key. If this action succeeds, the
            certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a>
            action or be retrieved by calling the <a>GetCertificate</a> action. The certificate
            will not be available for use by Amazon Web Services services integrated with ACM.
            
            
             <note> 
            <para>
            You cannot delete an ACM certificate that is being used by another Amazon Web Services
            service. To delete a certificate that is in use, the certificate association must
            first be removed.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains the ARN of the ACM certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another Amazon Web Services service in the caller's account.
            Remove the association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DeleteCertificate(Amazon.CertificateManager.Model.DeleteCertificateRequest)">
            <summary>
            Deletes a certificate and its associated private key. If this action succeeds, the
            certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a>
            action or be retrieved by calling the <a>GetCertificate</a> action. The certificate
            will not be available for use by Amazon Web Services services integrated with ACM.
            
            
             <note> 
            <para>
            You cannot delete an ACM certificate that is being used by another Amazon Web Services
            service. To delete a certificate that is in use, the certificate association must
            first be removed.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate service method.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another Amazon Web Services service in the caller's account.
            Remove the association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DeleteCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate and its associated private key. If this action succeeds, the
            certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a>
            action or be retrieved by calling the <a>GetCertificate</a> action. The certificate
            will not be available for use by Amazon Web Services services integrated with ACM.
            
            
             <note> 
            <para>
            You cannot delete an ACM certificate that is being used by another Amazon Web Services
            service. To delete a certificate that is in use, the certificate association must
            first be removed.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains the ARN of the ACM certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another Amazon Web Services service in the caller's account.
            Remove the association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DeleteCertificateAsync(Amazon.CertificateManager.Model.DeleteCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate and its associated private key. If this action succeeds, the
            certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a>
            action or be retrieved by calling the <a>GetCertificate</a> action. The certificate
            will not be available for use by Amazon Web Services services integrated with ACM.
            
            
             <note> 
            <para>
            You cannot delete an ACM certificate that is being used by another Amazon Web Services
            service. To delete a certificate that is in use, the certificate association must
            first be removed.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another Amazon Web Services service in the caller's account.
            Remove the association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DescribeCertificate(System.String)">
            <summary>
            Returns detailed metadata about the specified ACM certificate.
            </summary>
            <param name="certificateArn">The Amazon Resource Name (ARN) of the ACM certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DescribeCertificate(Amazon.CertificateManager.Model.DescribeCertificateRequest)">
            <summary>
            Returns detailed metadata about the specified ACM certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate service method.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DescribeCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns detailed metadata about the specified ACM certificate.
            </summary>
            <param name="certificateArn">The Amazon Resource Name (ARN) of the ACM certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.DescribeCertificateAsync(Amazon.CertificateManager.Model.DescribeCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns detailed metadata about the specified ACM certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ExportCertificate(Amazon.CertificateManager.Model.ExportCertificateRequest)">
            <summary>
            Exports a private certificate issued by a private certificate authority (CA) for use
            anywhere. The exported file contains the certificate, the certificate chain, and the
            encrypted private 2048-bit RSA key associated with the public key that is embedded
            in the certificate. For security, you must assign a passphrase for the private key
            when exporting it. 
            
             
            <para>
            For information about exporting and formatting a certificate using the ACM console
            or CLI, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-export-private.html">Export
            a Private Certificate</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExportCertificate service method.</param>
            
            <returns>The response from the ExportCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ExportCertificate">REST API Reference for ExportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ExportCertificateAsync(Amazon.CertificateManager.Model.ExportCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Exports a private certificate issued by a private certificate authority (CA) for use
            anywhere. The exported file contains the certificate, the certificate chain, and the
            encrypted private 2048-bit RSA key associated with the public key that is embedded
            in the certificate. For security, you must assign a passphrase for the private key
            when exporting it. 
            
             
            <para>
            For information about exporting and formatting a certificate using the ACM console
            or CLI, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-export-private.html">Export
            a Private Certificate</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExportCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExportCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ExportCertificate">REST API Reference for ExportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.GetAccountConfiguration(Amazon.CertificateManager.Model.GetAccountConfigurationRequest)">
            <summary>
            Returns the account configuration options associated with an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAccountConfiguration service method.</param>
            
            <returns>The response from the GetAccountConfiguration service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.AccessDeniedException">
            You do not have access required to perform this action.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetAccountConfiguration">REST API Reference for GetAccountConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.GetAccountConfigurationAsync(Amazon.CertificateManager.Model.GetAccountConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the account configuration options associated with an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAccountConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAccountConfiguration service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.AccessDeniedException">
            You do not have access required to perform this action.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetAccountConfiguration">REST API Reference for GetAccountConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.GetCertificate(System.String)">
            <summary>
            Retrieves an Amazon-issued certificate and its certificate chain. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a>
            to decode the certificates and inspect individual fields.
            </summary>
            <param name="certificateArn">String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.GetCertificate(Amazon.CertificateManager.Model.GetCertificateRequest)">
            <summary>
            Retrieves an Amazon-issued certificate and its certificate chain. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a>
            to decode the certificates and inspect individual fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificate service method.</param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.GetCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an Amazon-issued certificate and its certificate chain. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a>
            to decode the certificates and inspect individual fields.
            </summary>
            <param name="certificateArn">String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.GetCertificateAsync(Amazon.CertificateManager.Model.GetCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves an Amazon-issued certificate and its certificate chain. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a>
            to decode the certificates and inspect individual fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ImportCertificate(Amazon.CertificateManager.Model.ImportCertificateRequest)">
            <summary>
            Imports a certificate into Amazon Web Services Certificate Manager (ACM) to use with
            services that are integrated with ACM. Note that <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">integrated
            services</a> allow only certificate types and keys they support to be associated with
            their resources. Further, their support differs depending on whether the certificate
            is imported into IAM or into ACM. For more information, see the documentation for
            each service. For more information about importing certificates into ACM, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>Amazon Web Services Certificate Manager User Guide</i>.
            
            
             <note> 
            <para>
            ACM does not provide <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for certificates that you import.
            </para>
             </note> 
            <para>
            Note the following guidelines when importing third party certificates:
            </para>
             <ul> <li> 
            <para>
            You must enter the private key that matches the certificate you are importing.
            </para>
             </li> <li> 
            <para>
            The private key must be unencrypted. You cannot import a private key that is protected
            by a password or a passphrase.
            </para>
             </li> <li> 
            <para>
            The private key must be no larger than 5 KB (5,120 bytes).
            </para>
             </li> <li> 
            <para>
            If the certificate you are importing is not self-signed, you must enter its certificate
            chain.
            </para>
             </li> <li> 
            <para>
            If a certificate chain is included, the issuer must be the subject of one of the certificates
            in the chain.
            </para>
             </li> <li> 
            <para>
            The certificate, private key, and certificate chain must be PEM-encoded.
            </para>
             </li> <li> 
            <para>
            The current time must be between the <code>Not Before</code> and <code>Not After</code>
            certificate fields.
            </para>
             </li> <li> 
            <para>
            The <code>Issuer</code> field must not be empty.
            </para>
             </li> <li> 
            <para>
            The OCSP authority URL, if present, must not exceed 1000 characters.
            </para>
             </li> <li> 
            <para>
            To import a new certificate, omit the <code>CertificateArn</code> argument. Include
            this argument only when you want to replace a previously imported certificate.
            </para>
             </li> <li> 
            <para>
            When you import a certificate by using the CLI, you must specify the certificate,
            the certificate chain, and the private key by their file names preceded by <code>fileb://</code>.
            For example, you can specify a certificate saved in the <code>C:\temp</code> folder
            as <code>fileb://C:\temp\certificate_to_import.pem</code>. If you are making an HTTP
            or HTTPS Query request, include these arguments as BLOBs. 
            </para>
             </li> <li> 
            <para>
            When you import a certificate by using an SDK, you must specify the certificate, the
            certificate chain, and the private key files in the manner required by the programming
            language you're using. 
            </para>
             </li> <li> 
            <para>
            The cryptographic algorithm of an imported certificate must match the algorithm of
            the signing CA. For example, if the signing CA key type is RSA, then the certificate
            key type must also be RSA.
            </para>
             </li> </ul> 
            <para>
            This operation returns the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportCertificate service method.</param>
            
            <returns>The response from the ImportCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ImportCertificate">REST API Reference for ImportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ImportCertificateAsync(Amazon.CertificateManager.Model.ImportCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Imports a certificate into Amazon Web Services Certificate Manager (ACM) to use with
            services that are integrated with ACM. Note that <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">integrated
            services</a> allow only certificate types and keys they support to be associated with
            their resources. Further, their support differs depending on whether the certificate
            is imported into IAM or into ACM. For more information, see the documentation for
            each service. For more information about importing certificates into ACM, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>Amazon Web Services Certificate Manager User Guide</i>.
            
            
             <note> 
            <para>
            ACM does not provide <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for certificates that you import.
            </para>
             </note> 
            <para>
            Note the following guidelines when importing third party certificates:
            </para>
             <ul> <li> 
            <para>
            You must enter the private key that matches the certificate you are importing.
            </para>
             </li> <li> 
            <para>
            The private key must be unencrypted. You cannot import a private key that is protected
            by a password or a passphrase.
            </para>
             </li> <li> 
            <para>
            The private key must be no larger than 5 KB (5,120 bytes).
            </para>
             </li> <li> 
            <para>
            If the certificate you are importing is not self-signed, you must enter its certificate
            chain.
            </para>
             </li> <li> 
            <para>
            If a certificate chain is included, the issuer must be the subject of one of the certificates
            in the chain.
            </para>
             </li> <li> 
            <para>
            The certificate, private key, and certificate chain must be PEM-encoded.
            </para>
             </li> <li> 
            <para>
            The current time must be between the <code>Not Before</code> and <code>Not After</code>
            certificate fields.
            </para>
             </li> <li> 
            <para>
            The <code>Issuer</code> field must not be empty.
            </para>
             </li> <li> 
            <para>
            The OCSP authority URL, if present, must not exceed 1000 characters.
            </para>
             </li> <li> 
            <para>
            To import a new certificate, omit the <code>CertificateArn</code> argument. Include
            this argument only when you want to replace a previously imported certificate.
            </para>
             </li> <li> 
            <para>
            When you import a certificate by using the CLI, you must specify the certificate,
            the certificate chain, and the private key by their file names preceded by <code>fileb://</code>.
            For example, you can specify a certificate saved in the <code>C:\temp</code> folder
            as <code>fileb://C:\temp\certificate_to_import.pem</code>. If you are making an HTTP
            or HTTPS Query request, include these arguments as BLOBs. 
            </para>
             </li> <li> 
            <para>
            When you import a certificate by using an SDK, you must specify the certificate, the
            certificate chain, and the private key files in the manner required by the programming
            language you're using. 
            </para>
             </li> <li> 
            <para>
            The cryptographic algorithm of an imported certificate must match the algorithm of
            the signing CA. For example, if the signing CA key type is RSA, then the certificate
            key type must also be RSA.
            </para>
             </li> </ul> 
            <para>
            This operation returns the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ImportCertificate">REST API Reference for ImportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListCertificates">
            <summary>
            Retrieves a list of certificate ARNs and domain names. You can request that only certificates
            that match a specific status be listed. You can also filter by specific attributes
            of the certificate. Default filtering returns only <code>RSA_2048</code> certificates.
            For more information, see <a>Filters</a>.
            </summary>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArgsException">
            One or more of of request parameters specified is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListCertificates(Amazon.CertificateManager.Model.ListCertificatesRequest)">
            <summary>
            Retrieves a list of certificate ARNs and domain names. You can request that only certificates
            that match a specific status be listed. You can also filter by specific attributes
            of the certificate. Default filtering returns only <code>RSA_2048</code> certificates.
            For more information, see <a>Filters</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificates service method.</param>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArgsException">
            One or more of of request parameters specified is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListCertificatesAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of certificate ARNs and domain names. You can request that only certificates
            that match a specific status be listed. You can also filter by specific attributes
            of the certificate. Default filtering returns only <code>RSA_2048</code> certificates.
            For more information, see <a>Filters</a>.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArgsException">
            One or more of of request parameters specified is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListCertificatesAsync(Amazon.CertificateManager.Model.ListCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of certificate ARNs and domain names. You can request that only certificates
            that match a specific status be listed. You can also filter by specific attributes
            of the certificate. Default filtering returns only <code>RSA_2048</code> certificates.
            For more information, see <a>Filters</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArgsException">
            One or more of of request parameters specified is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListTagsForCertificate(Amazon.CertificateManager.Model.ListTagsForCertificateRequest)">
            <summary>
            Lists the tags that have been applied to the ACM certificate. Use the certificate's
            Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM certificate,
            use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForCertificate service method.</param>
            
            <returns>The response from the ListTagsForCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListTagsForCertificate">REST API Reference for ListTagsForCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ListTagsForCertificateAsync(Amazon.CertificateManager.Model.ListTagsForCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags that have been applied to the ACM certificate. Use the certificate's
            Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM certificate,
            use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListTagsForCertificate">REST API Reference for ListTagsForCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.PutAccountConfiguration(Amazon.CertificateManager.Model.PutAccountConfigurationRequest)">
            <summary>
            Adds or modifies account-level configurations in ACM. 
            
             
            <para>
            The supported configuration option is <code>DaysBeforeExpiry</code>. This option specifies
            the number of days prior to certificate expiration when ACM starts generating <code>EventBridge</code>
            events. ACM sends one event per day per certificate until the certificate expires.
            By default, accounts receive events starting 45 days before certificate expiration.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountConfiguration service method.</param>
            
            <returns>The response from the PutAccountConfiguration service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.AccessDeniedException">
            You do not have access required to perform this action.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ConflictException">
            You are trying to update a resource or configuration that is already being created
            or updated. Wait for the previous operation to finish and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ValidationException">
            The supplied input failed to satisfy constraints of an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/PutAccountConfiguration">REST API Reference for PutAccountConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.PutAccountConfigurationAsync(Amazon.CertificateManager.Model.PutAccountConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or modifies account-level configurations in ACM. 
            
             
            <para>
            The supported configuration option is <code>DaysBeforeExpiry</code>. This option specifies
            the number of days prior to certificate expiration when ACM starts generating <code>EventBridge</code>
            events. ACM sends one event per day per certificate until the certificate expires.
            By default, accounts receive events starting 45 days before certificate expiration.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountConfiguration service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.AccessDeniedException">
            You do not have access required to perform this action.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ConflictException">
            You are trying to update a resource or configuration that is already being created
            or updated. Wait for the previous operation to finish and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ValidationException">
            The supplied input failed to satisfy constraints of an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/PutAccountConfiguration">REST API Reference for PutAccountConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RemoveTagsFromCertificate(Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest)">
            <summary>
            Remove one or more tags from an ACM certificate. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this function, the
            tag will be removed regardless of value. If you specify a value, the tag is removed
            only if it is associated with the specified value. 
            
             
            <para>
            To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view
            all of the tags that have been applied to a specific ACM certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromCertificate service method.</param>
            
            <returns>The response from the RemoveTagsFromCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RemoveTagsFromCertificate">REST API Reference for RemoveTagsFromCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RemoveTagsFromCertificateAsync(Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Remove one or more tags from an ACM certificate. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this function, the
            tag will be removed regardless of value. If you specify a value, the tag is removed
            only if it is associated with the specified value. 
            
             
            <para>
            To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view
            all of the tags that have been applied to a specific ACM certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveTagsFromCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RemoveTagsFromCertificate">REST API Reference for RemoveTagsFromCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RenewCertificate(Amazon.CertificateManager.Model.RenewCertificateRequest)">
            <summary>
            Renews an eligible ACM certificate. At this time, only exported private certificates
            can be renewed with this operation. In order to renew your ACM PCA certificates with
            ACM, you must first <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaPermissions.html">grant
            the ACM service principal permission to do so</a>. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/manual-renewal.html">Testing
            Managed Renewal</a> in the ACM User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RenewCertificate service method.</param>
            
            <returns>The response from the RenewCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RenewCertificate">REST API Reference for RenewCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RenewCertificateAsync(Amazon.CertificateManager.Model.RenewCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Renews an eligible ACM certificate. At this time, only exported private certificates
            can be renewed with this operation. In order to renew your ACM PCA certificates with
            ACM, you must first <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaPermissions.html">grant
            the ACM service principal permission to do so</a>. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/manual-renewal.html">Testing
            Managed Renewal</a> in the ACM User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RenewCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RenewCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RenewCertificate">REST API Reference for RenewCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RequestCertificate(System.String)">
            <summary>
            Requests an ACM certificate for use with other Amazon Web Services services. To request
            an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code>
            parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code>
            parameter. 
            
             
            <para>
            If you are requesting a private certificate, domain validation is not required. If
            you are requesting a public certificate, each domain name that you specify must be
            validated to verify that you own or control the domain. You can use <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">DNS
            validation</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">email
            validation</a>. We recommend that you use DNS validation. ACM issues public certificates
            after receiving approval from the domain owner. 
            </para>
             <note> 
            <para>
            ACM behavior differs from the <a href="https://tools.ietf.org/html/rfc6125#appendix-B.2">https://tools.ietf.org/html/rfc6125#appendix-B.2</a>RFC
            6125 specification of the certificate validation process. first checks for a subject
            alternative name, and, if it finds one, ignores the common name (CN)
            </para>
             </note>
            </summary>
            <param name="domainName"> Fully qualified domain name (FQDN), such as www.example.com, that you want to secure with an ACM certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.   The first domain name you enter cannot exceed 64 octets, including periods. Each subsequent Subject Alternative Name (SAN), however, can be up to 253 octets in length. </param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RequestCertificate(Amazon.CertificateManager.Model.RequestCertificateRequest)">
            <summary>
            Requests an ACM certificate for use with other Amazon Web Services services. To request
            an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code>
            parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code>
            parameter. 
            
             
            <para>
            If you are requesting a private certificate, domain validation is not required. If
            you are requesting a public certificate, each domain name that you specify must be
            validated to verify that you own or control the domain. You can use <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">DNS
            validation</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">email
            validation</a>. We recommend that you use DNS validation. ACM issues public certificates
            after receiving approval from the domain owner. 
            </para>
             <note> 
            <para>
            ACM behavior differs from the <a href="https://tools.ietf.org/html/rfc6125#appendix-B.2">https://tools.ietf.org/html/rfc6125#appendix-B.2</a>RFC
            6125 specification of the certificate validation process. first checks for a subject
            alternative name, and, if it finds one, ignores the common name (CN)
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestCertificate service method.</param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RequestCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Requests an ACM certificate for use with other Amazon Web Services services. To request
            an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code>
            parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code>
            parameter. 
            
             
            <para>
            If you are requesting a private certificate, domain validation is not required. If
            you are requesting a public certificate, each domain name that you specify must be
            validated to verify that you own or control the domain. You can use <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">DNS
            validation</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">email
            validation</a>. We recommend that you use DNS validation. ACM issues public certificates
            after receiving approval from the domain owner. 
            </para>
             <note> 
            <para>
            ACM behavior differs from the <a href="https://tools.ietf.org/html/rfc6125#appendix-B.2">https://tools.ietf.org/html/rfc6125#appendix-B.2</a>RFC
            6125 specification of the certificate validation process. first checks for a subject
            alternative name, and, if it finds one, ignores the common name (CN)
            </para>
             </note>
            </summary>
            <param name="domainName"> Fully qualified domain name (FQDN), such as www.example.com, that you want to secure with an ACM certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.   The first domain name you enter cannot exceed 64 octets, including periods. Each subsequent Subject Alternative Name (SAN), however, can be up to 253 octets in length. </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.RequestCertificateAsync(Amazon.CertificateManager.Model.RequestCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Requests an ACM certificate for use with other Amazon Web Services services. To request
            an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code>
            parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code>
            parameter. 
            
             
            <para>
            If you are requesting a private certificate, domain validation is not required. If
            you are requesting a public certificate, each domain name that you specify must be
            validated to verify that you own or control the domain. You can use <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">DNS
            validation</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">email
            validation</a>. We recommend that you use DNS validation. ACM issues public certificates
            after receiving approval from the domain owner. 
            </para>
             <note> 
            <para>
            ACM behavior differs from the <a href="https://tools.ietf.org/html/rfc6125#appendix-B.2">https://tools.ietf.org/html/rfc6125#appendix-B.2</a>RFC
            6125 specification of the certificate validation process. first checks for a subject
            alternative name, and, if it finds one, ignores the common name (CN)
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ResendValidationEmail(Amazon.CertificateManager.Model.ResendValidationEmailRequest)">
            <summary>
            Resends the email that requests domain ownership validation. The domain owner or an
            authorized representative must approve the ACM certificate before it can be issued.
            The certificate can be approved by clicking a link in the mail to navigate to the
            Amazon certificate approval website and then clicking <b>I Approve</b>. However, the
            validation email can be blocked by spam filters. Therefore, if you do not receive
            the original mail, you can request that the mail be resent within 72 hours of requesting
            the ACM certificate. If more than 72 hours have elapsed since your original request
            or since your last attempt to resend validation mail, you must request a new certificate.
            For more information about setting up your contact email addresses, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/setup-email.html">Configure
            Email for your Domain</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendValidationEmail service method.</param>
            
            <returns>The response from the ResendValidationEmail service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidStateException">
            Processing has reached an invalid state.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ResendValidationEmail">REST API Reference for ResendValidationEmail Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.ResendValidationEmailAsync(Amazon.CertificateManager.Model.ResendValidationEmailRequest,System.Threading.CancellationToken)">
            <summary>
            Resends the email that requests domain ownership validation. The domain owner or an
            authorized representative must approve the ACM certificate before it can be issued.
            The certificate can be approved by clicking a link in the mail to navigate to the
            Amazon certificate approval website and then clicking <b>I Approve</b>. However, the
            validation email can be blocked by spam filters. Therefore, if you do not receive
            the original mail, you can request that the mail be resent within 72 hours of requesting
            the ACM certificate. If more than 72 hours have elapsed since your original request
            or since your last attempt to resend validation mail, you must request a new certificate.
            For more information about setting up your contact email addresses, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/setup-email.html">Configure
            Email for your Domain</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendValidationEmail service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResendValidationEmail service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidStateException">
            Processing has reached an invalid state.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ResendValidationEmail">REST API Reference for ResendValidationEmail Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.UpdateCertificateOptions(Amazon.CertificateManager.Model.UpdateCertificateOptionsRequest)">
            <summary>
            Updates a certificate. Currently, you can use this function to specify whether to
            opt in to or out of recording your certificate in a certificate transparency log.
            For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency">
            Opting Out of Certificate Transparency Logging</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCertificateOptions service method.</param>
            
            <returns>The response from the UpdateCertificateOptions service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidStateException">
            Processing has reached an invalid state.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/UpdateCertificateOptions">REST API Reference for UpdateCertificateOptions Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.AmazonCertificateManagerClient.UpdateCertificateOptionsAsync(Amazon.CertificateManager.Model.UpdateCertificateOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a certificate. Currently, you can use this function to specify whether to
            opt in to or out of recording your certificate in a certificate transparency log.
            For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency">
            Opting Out of Certificate Transparency Logging</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCertificateOptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCertificateOptions service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidStateException">
            Processing has reached an invalid state.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/UpdateCertificateOptions">REST API Reference for UpdateCertificateOptions Operation</seealso>
        </member>
        <member name="T:Amazon.CertificateManager.IAmazonCertificateManager">
             <summary>
             Interface for accessing CertificateManager
            
             Amazon Web Services Certificate Manager 
             <para>
             You can use Amazon Web Services Certificate Manager (ACM) to manage SSL/TLS certificates
             for your Amazon Web Services-based websites and applications. For more information
             about using ACM, see the <a href="https://docs.aws.amazon.com/acm/latest/userguide/">Amazon
             Web Services Certificate Manager User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.CertificateManager.IAmazonCertificateManager.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.AddTagsToCertificate(Amazon.CertificateManager.Model.AddTagsToCertificateRequest)">
            <summary>
            Adds one or more tags to an ACM certificate. Tags are labels that you can use to identify
            and organize your Amazon Web Services resources. Each tag consists of a <code>key</code>
            and an optional <code>value</code>. You specify the certificate on input by its Amazon
            Resource Name (ARN). You specify the tag by using a key-value pair. 
            
             
            <para>
            You can apply a tag to just one certificate if you want to identify a specific characteristic
            of that certificate, or you can apply the same tag to multiple certificates if you
            want to filter for a common relationship among those certificates. Similarly, you
            can apply the same tag to multiple resources if you want to specify a relationship
            among those resources. For example, you can add the same tag to an ACM certificate
            and an Elastic Load Balancing load balancer to indicate that they are both used by
            the same website. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging
            ACM certificates</a>. 
            </para>
             
            <para>
            To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view
            all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToCertificate service method.</param>
            
            <returns>The response from the AddTagsToCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/AddTagsToCertificate">REST API Reference for AddTagsToCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.AddTagsToCertificateAsync(Amazon.CertificateManager.Model.AddTagsToCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Adds one or more tags to an ACM certificate. Tags are labels that you can use to identify
            and organize your Amazon Web Services resources. Each tag consists of a <code>key</code>
            and an optional <code>value</code>. You specify the certificate on input by its Amazon
            Resource Name (ARN). You specify the tag by using a key-value pair. 
            
             
            <para>
            You can apply a tag to just one certificate if you want to identify a specific characteristic
            of that certificate, or you can apply the same tag to multiple certificates if you
            want to filter for a common relationship among those certificates. Similarly, you
            can apply the same tag to multiple resources if you want to specify a relationship
            among those resources. For example, you can add the same tag to an ACM certificate
            and an Elastic Load Balancing load balancer to indicate that they are both used by
            the same website. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging
            ACM certificates</a>. 
            </para>
             
            <para>
            To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view
            all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddTagsToCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/AddTagsToCertificate">REST API Reference for AddTagsToCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DeleteCertificate(System.String)">
            <summary>
            Deletes a certificate and its associated private key. If this action succeeds, the
            certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a>
            action or be retrieved by calling the <a>GetCertificate</a> action. The certificate
            will not be available for use by Amazon Web Services services integrated with ACM.
            
            
             <note> 
            <para>
            You cannot delete an ACM certificate that is being used by another Amazon Web Services
            service. To delete a certificate that is in use, the certificate association must
            first be removed.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains the ARN of the ACM certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another Amazon Web Services service in the caller's account.
            Remove the association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DeleteCertificate(Amazon.CertificateManager.Model.DeleteCertificateRequest)">
            <summary>
            Deletes a certificate and its associated private key. If this action succeeds, the
            certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a>
            action or be retrieved by calling the <a>GetCertificate</a> action. The certificate
            will not be available for use by Amazon Web Services services integrated with ACM.
            
            
             <note> 
            <para>
            You cannot delete an ACM certificate that is being used by another Amazon Web Services
            service. To delete a certificate that is in use, the certificate association must
            first be removed.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate service method.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another Amazon Web Services service in the caller's account.
            Remove the association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DeleteCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate and its associated private key. If this action succeeds, the
            certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a>
            action or be retrieved by calling the <a>GetCertificate</a> action. The certificate
            will not be available for use by Amazon Web Services services integrated with ACM.
            
            
             <note> 
            <para>
            You cannot delete an ACM certificate that is being used by another Amazon Web Services
            service. To delete a certificate that is in use, the certificate association must
            first be removed.
            </para>
             </note>
            </summary>
            <param name="certificateArn">String that contains the ARN of the ACM certificate to be deleted. This must be of the form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another Amazon Web Services service in the caller's account.
            Remove the association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DeleteCertificateAsync(Amazon.CertificateManager.Model.DeleteCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a certificate and its associated private key. If this action succeeds, the
            certificate no longer appears in the list that can be displayed by calling the <a>ListCertificates</a>
            action or be retrieved by calling the <a>GetCertificate</a> action. The certificate
            will not be available for use by Amazon Web Services services integrated with ACM.
            
            
             <note> 
            <para>
            You cannot delete an ACM certificate that is being used by another Amazon Web Services
            service. To delete a certificate that is in use, the certificate association must
            first be removed.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceInUseException">
            The certificate is in use by another Amazon Web Services service in the caller's account.
            Remove the association and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DeleteCertificate">REST API Reference for DeleteCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DescribeCertificate(System.String)">
            <summary>
            Returns detailed metadata about the specified ACM certificate.
            </summary>
            <param name="certificateArn">The Amazon Resource Name (ARN) of the ACM certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DescribeCertificate(Amazon.CertificateManager.Model.DescribeCertificateRequest)">
            <summary>
            Returns detailed metadata about the specified ACM certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate service method.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DescribeCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns detailed metadata about the specified ACM certificate.
            </summary>
            <param name="certificateArn">The Amazon Resource Name (ARN) of the ACM certificate. The ARN must have the following form:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.DescribeCertificateAsync(Amazon.CertificateManager.Model.DescribeCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns detailed metadata about the specified ACM certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/DescribeCertificate">REST API Reference for DescribeCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ExportCertificate(Amazon.CertificateManager.Model.ExportCertificateRequest)">
            <summary>
            Exports a private certificate issued by a private certificate authority (CA) for use
            anywhere. The exported file contains the certificate, the certificate chain, and the
            encrypted private 2048-bit RSA key associated with the public key that is embedded
            in the certificate. For security, you must assign a passphrase for the private key
            when exporting it. 
            
             
            <para>
            For information about exporting and formatting a certificate using the ACM console
            or CLI, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-export-private.html">Export
            a Private Certificate</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExportCertificate service method.</param>
            
            <returns>The response from the ExportCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ExportCertificate">REST API Reference for ExportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ExportCertificateAsync(Amazon.CertificateManager.Model.ExportCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Exports a private certificate issued by a private certificate authority (CA) for use
            anywhere. The exported file contains the certificate, the certificate chain, and the
            encrypted private 2048-bit RSA key associated with the public key that is embedded
            in the certificate. For security, you must assign a passphrase for the private key
            when exporting it. 
            
             
            <para>
            For information about exporting and formatting a certificate using the ACM console
            or CLI, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-export-private.html">Export
            a Private Certificate</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ExportCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ExportCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ExportCertificate">REST API Reference for ExportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.GetAccountConfiguration(Amazon.CertificateManager.Model.GetAccountConfigurationRequest)">
            <summary>
            Returns the account configuration options associated with an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAccountConfiguration service method.</param>
            
            <returns>The response from the GetAccountConfiguration service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.AccessDeniedException">
            You do not have access required to perform this action.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetAccountConfiguration">REST API Reference for GetAccountConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.GetAccountConfigurationAsync(Amazon.CertificateManager.Model.GetAccountConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the account configuration options associated with an Amazon Web Services account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAccountConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetAccountConfiguration service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.AccessDeniedException">
            You do not have access required to perform this action.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetAccountConfiguration">REST API Reference for GetAccountConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.GetCertificate(System.String)">
            <summary>
            Retrieves an Amazon-issued certificate and its certificate chain. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a>
            to decode the certificates and inspect individual fields.
            </summary>
            <param name="certificateArn">String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.GetCertificate(Amazon.CertificateManager.Model.GetCertificateRequest)">
            <summary>
            Retrieves an Amazon-issued certificate and its certificate chain. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a>
            to decode the certificates and inspect individual fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificate service method.</param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.GetCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an Amazon-issued certificate and its certificate chain. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a>
            to decode the certificates and inspect individual fields.
            </summary>
            <param name="certificateArn">String that contains a certificate ARN in the following format:  <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code>  For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.GetCertificateAsync(Amazon.CertificateManager.Model.GetCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves an Amazon-issued certificate and its certificate chain. The chain consists
            of the certificate of the issuing CA and the intermediate certificates of any other
            subordinate CAs. All of the certificates are base64 encoded. You can use <a href="https://wiki.openssl.org/index.php/Command_Line_Utilities">OpenSSL</a>
            to decode the certificates and inspect individual fields.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.RequestInProgressException">
            The certificate request is in process and the certificate in your account has not
            yet been issued.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/GetCertificate">REST API Reference for GetCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ImportCertificate(Amazon.CertificateManager.Model.ImportCertificateRequest)">
            <summary>
            Imports a certificate into Amazon Web Services Certificate Manager (ACM) to use with
            services that are integrated with ACM. Note that <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">integrated
            services</a> allow only certificate types and keys they support to be associated with
            their resources. Further, their support differs depending on whether the certificate
            is imported into IAM or into ACM. For more information, see the documentation for
            each service. For more information about importing certificates into ACM, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>Amazon Web Services Certificate Manager User Guide</i>.
            
            
             <note> 
            <para>
            ACM does not provide <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for certificates that you import.
            </para>
             </note> 
            <para>
            Note the following guidelines when importing third party certificates:
            </para>
             <ul> <li> 
            <para>
            You must enter the private key that matches the certificate you are importing.
            </para>
             </li> <li> 
            <para>
            The private key must be unencrypted. You cannot import a private key that is protected
            by a password or a passphrase.
            </para>
             </li> <li> 
            <para>
            The private key must be no larger than 5 KB (5,120 bytes).
            </para>
             </li> <li> 
            <para>
            If the certificate you are importing is not self-signed, you must enter its certificate
            chain.
            </para>
             </li> <li> 
            <para>
            If a certificate chain is included, the issuer must be the subject of one of the certificates
            in the chain.
            </para>
             </li> <li> 
            <para>
            The certificate, private key, and certificate chain must be PEM-encoded.
            </para>
             </li> <li> 
            <para>
            The current time must be between the <code>Not Before</code> and <code>Not After</code>
            certificate fields.
            </para>
             </li> <li> 
            <para>
            The <code>Issuer</code> field must not be empty.
            </para>
             </li> <li> 
            <para>
            The OCSP authority URL, if present, must not exceed 1000 characters.
            </para>
             </li> <li> 
            <para>
            To import a new certificate, omit the <code>CertificateArn</code> argument. Include
            this argument only when you want to replace a previously imported certificate.
            </para>
             </li> <li> 
            <para>
            When you import a certificate by using the CLI, you must specify the certificate,
            the certificate chain, and the private key by their file names preceded by <code>fileb://</code>.
            For example, you can specify a certificate saved in the <code>C:\temp</code> folder
            as <code>fileb://C:\temp\certificate_to_import.pem</code>. If you are making an HTTP
            or HTTPS Query request, include these arguments as BLOBs. 
            </para>
             </li> <li> 
            <para>
            When you import a certificate by using an SDK, you must specify the certificate, the
            certificate chain, and the private key files in the manner required by the programming
            language you're using. 
            </para>
             </li> <li> 
            <para>
            The cryptographic algorithm of an imported certificate must match the algorithm of
            the signing CA. For example, if the signing CA key type is RSA, then the certificate
            key type must also be RSA.
            </para>
             </li> </ul> 
            <para>
            This operation returns the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportCertificate service method.</param>
            
            <returns>The response from the ImportCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ImportCertificate">REST API Reference for ImportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ImportCertificateAsync(Amazon.CertificateManager.Model.ImportCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Imports a certificate into Amazon Web Services Certificate Manager (ACM) to use with
            services that are integrated with ACM. Note that <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">integrated
            services</a> allow only certificate types and keys they support to be associated with
            their resources. Further, their support differs depending on whether the certificate
            is imported into IAM or into ACM. For more information, see the documentation for
            each service. For more information about importing certificates into ACM, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            Certificates</a> in the <i>Amazon Web Services Certificate Manager User Guide</i>.
            
            
             <note> 
            <para>
            ACM does not provide <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed
            renewal</a> for certificates that you import.
            </para>
             </note> 
            <para>
            Note the following guidelines when importing third party certificates:
            </para>
             <ul> <li> 
            <para>
            You must enter the private key that matches the certificate you are importing.
            </para>
             </li> <li> 
            <para>
            The private key must be unencrypted. You cannot import a private key that is protected
            by a password or a passphrase.
            </para>
             </li> <li> 
            <para>
            The private key must be no larger than 5 KB (5,120 bytes).
            </para>
             </li> <li> 
            <para>
            If the certificate you are importing is not self-signed, you must enter its certificate
            chain.
            </para>
             </li> <li> 
            <para>
            If a certificate chain is included, the issuer must be the subject of one of the certificates
            in the chain.
            </para>
             </li> <li> 
            <para>
            The certificate, private key, and certificate chain must be PEM-encoded.
            </para>
             </li> <li> 
            <para>
            The current time must be between the <code>Not Before</code> and <code>Not After</code>
            certificate fields.
            </para>
             </li> <li> 
            <para>
            The <code>Issuer</code> field must not be empty.
            </para>
             </li> <li> 
            <para>
            The OCSP authority URL, if present, must not exceed 1000 characters.
            </para>
             </li> <li> 
            <para>
            To import a new certificate, omit the <code>CertificateArn</code> argument. Include
            this argument only when you want to replace a previously imported certificate.
            </para>
             </li> <li> 
            <para>
            When you import a certificate by using the CLI, you must specify the certificate,
            the certificate chain, and the private key by their file names preceded by <code>fileb://</code>.
            For example, you can specify a certificate saved in the <code>C:\temp</code> folder
            as <code>fileb://C:\temp\certificate_to_import.pem</code>. If you are making an HTTP
            or HTTPS Query request, include these arguments as BLOBs. 
            </para>
             </li> <li> 
            <para>
            When you import a certificate by using an SDK, you must specify the certificate, the
            certificate chain, and the private key files in the manner required by the programming
            language you're using. 
            </para>
             </li> <li> 
            <para>
            The cryptographic algorithm of an imported certificate must match the algorithm of
            the signing CA. For example, if the signing CA key type is RSA, then the certificate
            key type must also be RSA.
            </para>
             </li> </ul> 
            <para>
            This operation returns the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of the imported certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ImportCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ImportCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ImportCertificate">REST API Reference for ImportCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListCertificates">
            <summary>
            Retrieves a list of certificate ARNs and domain names. You can request that only certificates
            that match a specific status be listed. You can also filter by specific attributes
            of the certificate. Default filtering returns only <code>RSA_2048</code> certificates.
            For more information, see <a>Filters</a>.
            </summary>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArgsException">
            One or more of of request parameters specified is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListCertificates(Amazon.CertificateManager.Model.ListCertificatesRequest)">
            <summary>
            Retrieves a list of certificate ARNs and domain names. You can request that only certificates
            that match a specific status be listed. You can also filter by specific attributes
            of the certificate. Default filtering returns only <code>RSA_2048</code> certificates.
            For more information, see <a>Filters</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificates service method.</param>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArgsException">
            One or more of of request parameters specified is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListCertificatesAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of certificate ARNs and domain names. You can request that only certificates
            that match a specific status be listed. You can also filter by specific attributes
            of the certificate. Default filtering returns only <code>RSA_2048</code> certificates.
            For more information, see <a>Filters</a>.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArgsException">
            One or more of of request parameters specified is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListCertificatesAsync(Amazon.CertificateManager.Model.ListCertificatesRequest,System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of certificate ARNs and domain names. You can request that only certificates
            that match a specific status be listed. You can also filter by specific attributes
            of the certificate. Default filtering returns only <code>RSA_2048</code> certificates.
            For more information, see <a>Filters</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListCertificates service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArgsException">
            One or more of of request parameters specified is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListCertificates">REST API Reference for ListCertificates Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListTagsForCertificate(Amazon.CertificateManager.Model.ListTagsForCertificateRequest)">
            <summary>
            Lists the tags that have been applied to the ACM certificate. Use the certificate's
            Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM certificate,
            use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForCertificate service method.</param>
            
            <returns>The response from the ListTagsForCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListTagsForCertificate">REST API Reference for ListTagsForCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ListTagsForCertificateAsync(Amazon.CertificateManager.Model.ListTagsForCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Lists the tags that have been applied to the ACM certificate. Use the certificate's
            Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM certificate,
            use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a>
            action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ListTagsForCertificate">REST API Reference for ListTagsForCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.PutAccountConfiguration(Amazon.CertificateManager.Model.PutAccountConfigurationRequest)">
            <summary>
            Adds or modifies account-level configurations in ACM. 
            
             
            <para>
            The supported configuration option is <code>DaysBeforeExpiry</code>. This option specifies
            the number of days prior to certificate expiration when ACM starts generating <code>EventBridge</code>
            events. ACM sends one event per day per certificate until the certificate expires.
            By default, accounts receive events starting 45 days before certificate expiration.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountConfiguration service method.</param>
            
            <returns>The response from the PutAccountConfiguration service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.AccessDeniedException">
            You do not have access required to perform this action.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ConflictException">
            You are trying to update a resource or configuration that is already being created
            or updated. Wait for the previous operation to finish and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ValidationException">
            The supplied input failed to satisfy constraints of an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/PutAccountConfiguration">REST API Reference for PutAccountConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.PutAccountConfigurationAsync(Amazon.CertificateManager.Model.PutAccountConfigurationRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or modifies account-level configurations in ACM. 
            
             
            <para>
            The supported configuration option is <code>DaysBeforeExpiry</code>. This option specifies
            the number of days prior to certificate expiration when ACM starts generating <code>EventBridge</code>
            events. ACM sends one event per day per certificate until the certificate expires.
            By default, accounts receive events starting 45 days before certificate expiration.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutAccountConfiguration service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutAccountConfiguration service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.AccessDeniedException">
            You do not have access required to perform this action.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ConflictException">
            You are trying to update a resource or configuration that is already being created
            or updated. Wait for the previous operation to finish and try again.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ValidationException">
            The supplied input failed to satisfy constraints of an Amazon Web Services service.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/PutAccountConfiguration">REST API Reference for PutAccountConfiguration Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RemoveTagsFromCertificate(Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest)">
            <summary>
            Remove one or more tags from an ACM certificate. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this function, the
            tag will be removed regardless of value. If you specify a value, the tag is removed
            only if it is associated with the specified value. 
            
             
            <para>
            To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view
            all of the tags that have been applied to a specific ACM certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromCertificate service method.</param>
            
            <returns>The response from the RemoveTagsFromCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RemoveTagsFromCertificate">REST API Reference for RemoveTagsFromCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RemoveTagsFromCertificateAsync(Amazon.CertificateManager.Model.RemoveTagsFromCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Remove one or more tags from an ACM certificate. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this function, the
            tag will be removed regardless of value. If you specify a value, the tag is removed
            only if it is associated with the specified value. 
            
             
            <para>
            To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view
            all of the tags that have been applied to a specific ACM certificate, use the <a>ListTagsForCertificate</a>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveTagsFromCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ThrottlingException">
            The request was denied because it exceeded a quota.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RemoveTagsFromCertificate">REST API Reference for RemoveTagsFromCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RenewCertificate(Amazon.CertificateManager.Model.RenewCertificateRequest)">
            <summary>
            Renews an eligible ACM certificate. At this time, only exported private certificates
            can be renewed with this operation. In order to renew your ACM PCA certificates with
            ACM, you must first <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaPermissions.html">grant
            the ACM service principal permission to do so</a>. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/manual-renewal.html">Testing
            Managed Renewal</a> in the ACM User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RenewCertificate service method.</param>
            
            <returns>The response from the RenewCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RenewCertificate">REST API Reference for RenewCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RenewCertificateAsync(Amazon.CertificateManager.Model.RenewCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Renews an eligible ACM certificate. At this time, only exported private certificates
            can be renewed with this operation. In order to renew your ACM PCA certificates with
            ACM, you must first <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaPermissions.html">grant
            the ACM service principal permission to do so</a>. For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/manual-renewal.html">Testing
            Managed Renewal</a> in the ACM User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RenewCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RenewCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RenewCertificate">REST API Reference for RenewCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RequestCertificate(System.String)">
            <summary>
            Requests an ACM certificate for use with other Amazon Web Services services. To request
            an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code>
            parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code>
            parameter. 
            
             
            <para>
            If you are requesting a private certificate, domain validation is not required. If
            you are requesting a public certificate, each domain name that you specify must be
            validated to verify that you own or control the domain. You can use <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">DNS
            validation</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">email
            validation</a>. We recommend that you use DNS validation. ACM issues public certificates
            after receiving approval from the domain owner. 
            </para>
             <note> 
            <para>
            ACM behavior differs from the <a href="https://tools.ietf.org/html/rfc6125#appendix-B.2">https://tools.ietf.org/html/rfc6125#appendix-B.2</a>RFC
            6125 specification of the certificate validation process. first checks for a subject
            alternative name, and, if it finds one, ignores the common name (CN)
            </para>
             </note>
            </summary>
            <param name="domainName"> Fully qualified domain name (FQDN), such as www.example.com, that you want to secure with an ACM certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.   The first domain name you enter cannot exceed 64 octets, including periods. Each subsequent Subject Alternative Name (SAN), however, can be up to 253 octets in length. </param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RequestCertificate(Amazon.CertificateManager.Model.RequestCertificateRequest)">
            <summary>
            Requests an ACM certificate for use with other Amazon Web Services services. To request
            an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code>
            parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code>
            parameter. 
            
             
            <para>
            If you are requesting a private certificate, domain validation is not required. If
            you are requesting a public certificate, each domain name that you specify must be
            validated to verify that you own or control the domain. You can use <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">DNS
            validation</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">email
            validation</a>. We recommend that you use DNS validation. ACM issues public certificates
            after receiving approval from the domain owner. 
            </para>
             <note> 
            <para>
            ACM behavior differs from the <a href="https://tools.ietf.org/html/rfc6125#appendix-B.2">https://tools.ietf.org/html/rfc6125#appendix-B.2</a>RFC
            6125 specification of the certificate validation process. first checks for a subject
            alternative name, and, if it finds one, ignores the common name (CN)
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestCertificate service method.</param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RequestCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Requests an ACM certificate for use with other Amazon Web Services services. To request
            an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code>
            parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code>
            parameter. 
            
             
            <para>
            If you are requesting a private certificate, domain validation is not required. If
            you are requesting a public certificate, each domain name that you specify must be
            validated to verify that you own or control the domain. You can use <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">DNS
            validation</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">email
            validation</a>. We recommend that you use DNS validation. ACM issues public certificates
            after receiving approval from the domain owner. 
            </para>
             <note> 
            <para>
            ACM behavior differs from the <a href="https://tools.ietf.org/html/rfc6125#appendix-B.2">https://tools.ietf.org/html/rfc6125#appendix-B.2</a>RFC
            6125 specification of the certificate validation process. first checks for a subject
            alternative name, and, if it finds one, ignores the common name (CN)
            </para>
             </note>
            </summary>
            <param name="domainName"> Fully qualified domain name (FQDN), such as www.example.com, that you want to secure with an ACM certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.   The first domain name you enter cannot exceed 64 octets, including periods. Each subsequent Subject Alternative Name (SAN), however, can be up to 253 octets in length. </param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.RequestCertificateAsync(Amazon.CertificateManager.Model.RequestCertificateRequest,System.Threading.CancellationToken)">
            <summary>
            Requests an ACM certificate for use with other Amazon Web Services services. To request
            an ACM certificate, you must specify a fully qualified domain name (FQDN) in the <code>DomainName</code>
            parameter. You can also specify additional FQDNs in the <code>SubjectAlternativeNames</code>
            parameter. 
            
             
            <para>
            If you are requesting a private certificate, domain validation is not required. If
            you are requesting a public certificate, each domain name that you specify must be
            validated to verify that you own or control the domain. You can use <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-dns.html">DNS
            validation</a> or <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-validate-email.html">email
            validation</a>. We recommend that you use DNS validation. ACM issues public certificates
            after receiving approval from the domain owner. 
            </para>
             <note> 
            <para>
            ACM behavior differs from the <a href="https://tools.ietf.org/html/rfc6125#appendix-B.2">https://tools.ietf.org/html/rfc6125#appendix-B.2</a>RFC
            6125 specification of the certificate validation process. first checks for a subject
            alternative name, and, if it finds one, ignores the common name (CN)
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestCertificate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RequestCertificate service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidParameterException">
            An input parameter was invalid.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidTagException">
            One or both of the values that make up the key-value pair is not valid. For example,
            you cannot specify a tag value that begins with <code>aws:</code>.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TagPolicyException">
            A specified tag did not comply with an existing tag policy and was rejected.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.TooManyTagsException">
            The request contains too many tags. Try the request again with fewer tags.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/RequestCertificate">REST API Reference for RequestCertificate Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ResendValidationEmail(Amazon.CertificateManager.Model.ResendValidationEmailRequest)">
            <summary>
            Resends the email that requests domain ownership validation. The domain owner or an
            authorized representative must approve the ACM certificate before it can be issued.
            The certificate can be approved by clicking a link in the mail to navigate to the
            Amazon certificate approval website and then clicking <b>I Approve</b>. However, the
            validation email can be blocked by spam filters. Therefore, if you do not receive
            the original mail, you can request that the mail be resent within 72 hours of requesting
            the ACM certificate. If more than 72 hours have elapsed since your original request
            or since your last attempt to resend validation mail, you must request a new certificate.
            For more information about setting up your contact email addresses, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/setup-email.html">Configure
            Email for your Domain</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendValidationEmail service method.</param>
            
            <returns>The response from the ResendValidationEmail service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidStateException">
            Processing has reached an invalid state.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ResendValidationEmail">REST API Reference for ResendValidationEmail Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.ResendValidationEmailAsync(Amazon.CertificateManager.Model.ResendValidationEmailRequest,System.Threading.CancellationToken)">
            <summary>
            Resends the email that requests domain ownership validation. The domain owner or an
            authorized representative must approve the ACM certificate before it can be issued.
            The certificate can be approved by clicking a link in the mail to navigate to the
            Amazon certificate approval website and then clicking <b>I Approve</b>. However, the
            validation email can be blocked by spam filters. Therefore, if you do not receive
            the original mail, you can request that the mail be resent within 72 hours of requesting
            the ACM certificate. If more than 72 hours have elapsed since your original request
            or since your last attempt to resend validation mail, you must request a new certificate.
            For more information about setting up your contact email addresses, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/setup-email.html">Configure
            Email for your Domain</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResendValidationEmail service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResendValidationEmail service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidDomainValidationOptionsException">
            One or more values in the <a>DomainValidationOption</a> structure is incorrect.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidStateException">
            Processing has reached an invalid state.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/ResendValidationEmail">REST API Reference for ResendValidationEmail Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.UpdateCertificateOptions(Amazon.CertificateManager.Model.UpdateCertificateOptionsRequest)">
            <summary>
            Updates a certificate. Currently, you can use this function to specify whether to
            opt in to or out of recording your certificate in a certificate transparency log.
            For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency">
            Opting Out of Certificate Transparency Logging</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCertificateOptions service method.</param>
            
            <returns>The response from the UpdateCertificateOptions service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidStateException">
            Processing has reached an invalid state.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/UpdateCertificateOptions">REST API Reference for UpdateCertificateOptions Operation</seealso>
        </member>
        <member name="M:Amazon.CertificateManager.IAmazonCertificateManager.UpdateCertificateOptionsAsync(Amazon.CertificateManager.Model.UpdateCertificateOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Updates a certificate. Currently, you can use this function to specify whether to
            opt in to or out of recording your certificate in a certificate transparency log.
            For more information, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency">
            Opting Out of Certificate Transparency Logging</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCertificateOptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateCertificateOptions service method, as returned by CertificateManager.</returns>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidArnException">
            The requested Amazon Resource Name (ARN) does not refer to an existing resource.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.InvalidStateException">
            Processing has reached an invalid state.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.LimitExceededException">
            An ACM quota has been exceeded.
            </exception>
            <exception cref="T:Amazon.CertificateManager.Model.ResourceNotFoundException">
            The specified certificate cannot be found in the caller's account or the caller's
            account cannot be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/acm-2015-12-08/UpdateCertificateOptions">REST API Reference for UpdateCertificateOptions Operation</seealso>
        </member>
    </members>
</doc>
