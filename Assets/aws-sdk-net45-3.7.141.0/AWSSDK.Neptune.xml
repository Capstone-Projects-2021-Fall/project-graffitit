<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.Neptune</name>
    </assembly>
    <members>
        <member name="T:Amazon.Neptune.Internal.IPreSignedUrlRequest">
            <summary>
            Interface implemented by requests that are supported by <see cref="T:Amazon.Neptune.Internal.PreSignedUrlRequestHandler"/> 
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Internal.IPreSignedUrlRequest.SourceRegion">
             <summary>
             Gets and sets the source region for the operation.
            
             If set, the PreSignedUrl property is not required for cross-region operations.
             
             PreSignedUrl will be auto-generated based on SourceRegion, and sent by the client.
             </summary>
        </member>
        <member name="P:Amazon.Neptune.Internal.IPreSignedUrlRequest.PreSignedUrl">
            <summary>
            Gets and sets the property PreSignedUrl.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Internal.PreSignedUrlRequestHandler">
            <summary>
            Custom pipeline handler to populate PreSignedUrl if it's empty, and the SourceRegion paramter is populated.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Internal.PreSignedUrlRequestHandler.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Construct instance of PreSignedUrlRequestHandler
            </summary>
            <param name="credentials"></param>
        </member>
        <member name="M:Amazon.Neptune.Internal.PreSignedUrlRequestHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.Neptune.Internal.PreSignedUrlRequestHandler.InvokeAsync``1(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <typeparam name="T">The response type for the current request.</typeparam>
            <param name="executionContext">The execution context, it contains the
            request and response context.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Amazon.Neptune.Internal.PreSignedUrlRequestHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            <para>
            Auto-generates pre-signed URLs for requests that implement <see cref="T:Amazon.Neptune.Internal.IPreSignedUrlRequest"/>.
            if the PreSignedUrl property isn't set and the SourceRegion property is set.
            </para>
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.Neptune.Internal.AmazonNeptuneMetadata">
            <summary>
            Service metadata for  Amazon Neptune service
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Internal.AmazonNeptuneMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Internal.AmazonNeptuneMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CopyDBClusterSnapshotRequest">
            <summary>
            Container for the parameters to the CopyDBClusterSnapshot operation.
            Copies a snapshot of a DB cluster.
            
             
            <para>
            To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterSnapshotRequest.SourceRegion">
            <summary>
            <para>
            The SourceRegion for generating the PreSignedUrl property.
            If SourceRegion is set and the PreSignedUrl property is not,
            then PreSignedUrl will be automatically generated by the client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterSnapshotRequest.CopyTags">
            <summary>
            Gets and sets the property CopyTags. 
            <para>
            True to copy all tags from the source DB cluster snapshot to the target DB cluster
            snapshot, and otherwise false. The default is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterSnapshotRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon Amazon KMS key ID for an encrypted DB cluster snapshot. The KMS key ID
            is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the
            KMS encryption key.
            </para>
             
            <para>
            If you copy an encrypted DB cluster snapshot from your Amazon account, you can specify
            a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS encryption key.
            If you don't specify a value for <code>KmsKeyId</code>, then the copy of the DB cluster
            snapshot is encrypted with the same KMS key as the source DB cluster snapshot.
            </para>
             
            <para>
            If you copy an encrypted DB cluster snapshot that is shared from another Amazon account,
            then you must specify a value for <code>KmsKeyId</code>.
            </para>
             
            <para>
             KMS encryption keys are specific to the Amazon Region that they are created in, and
            you can't use encryption keys from one Amazon Region in another Amazon Region.
            </para>
             
            <para>
            You cannot encrypt an unencrypted DB cluster snapshot when you copy it. If you try
            to copy an unencrypted DB cluster snapshot and specify a value for the KmsKeyId parameter,
            an error is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterSnapshotRequest.PreSignedUrl">
            <summary>
            Gets and sets the property PreSignedUrl. 
            <para>
            Not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterSnapshotRequest.SourceDBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property SourceDBClusterSnapshotIdentifier. 
            <para>
            The identifier of the DB cluster snapshot to copy. This parameter is not case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must specify a valid system snapshot in the "available" state.
            </para>
             </li> <li> 
            <para>
            Specify a valid DB snapshot identifier.
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster-snapshot1</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterSnapshotRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to assign to the new DB cluster snapshot copy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterSnapshotRequest.TargetDBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property TargetDBClusterSnapshotIdentifier. 
            <para>
            The identifier of the new DB cluster snapshot to create from the source DB cluster
            snapshot. This parameter is not case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            First character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster-snapshot2</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBClusterRequest">
            <summary>
            Container for the parameters to the CreateDBCluster operation.
            Creates a new Amazon Neptune DB cluster.
            
             
            <para>
            You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB
            cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance.
            </para>
             
            <para>
            Note that when you create a new cluster using <code>CreateDBCluster</code> directly,
            deletion protection is disabled by default (when you create a new production cluster
            in the console, deletion protection is enabled by default). You can only delete a
            DB cluster if its <code>DeletionProtection</code> field is set to <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.SourceRegion">
            <summary>
            <para>
            The SourceRegion for generating the PreSignedUrl property.
            If SourceRegion is set and the PreSignedUrl property is not,
            then PreSignedUrl will be automatically generated by the client.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            A list of EC2 Availability Zones that instances in the DB cluster can be created in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            The number of days for which automated backups are retained. You must specify a minimum
            value of 1.
            </para>
             
            <para>
            Default: 1
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be a value from 1 to 35
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.CharacterSetName">
            <summary>
            Gets and sets the property CharacterSetName. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.CopyTagsToSnapshot">
            <summary>
            Gets and sets the property CopyTagsToSnapshot. 
            <para>
             <i>If set to <code>true</code>, tags are copied to any snapshot of the DB cluster
            that is created.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            The name for your database of up to 64 alpha-numeric characters. If you do not provide
            a name, Amazon Neptune will not create a database in the DB cluster you are creating.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier. This parameter is stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            First character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster1</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
             The name of the DB cluster parameter group to associate with this DB cluster. If
            this argument is omitted, the default is used.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the name of an existing DBClusterParameterGroup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            A DB subnet group to associate with this DB cluster.
            </para>
             
            <para>
            Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.EnableCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnableCloudwatchLogsExports. 
            <para>
            The list of log types that need to be enabled for exporting to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.EnableIAMDatabaseAuthentication">
            <summary>
            Gets and sets the property EnableIAMDatabaseAuthentication. 
            <para>
            If set to <code>true</code>, enables Amazon Identity and Access Management (IAM) authentication
            for the entire DB cluster (this cannot be set at an instance level).
            </para>
             
            <para>
            Default: <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the database engine to be used for this DB cluster.
            </para>
             
            <para>
            Valid Values: <code>neptune</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version number of the database engine to use for the new DB cluster.
            </para>
             
            <para>
            Example: <code>1.0.2.1</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon KMS key identifier for an encrypted DB cluster.
            </para>
             
            <para>
            The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are creating a DB cluster with the same Amazon account that owns the KMS encryption
            key used to encrypt the new DB cluster, then you can use the KMS key alias instead
            of the ARN for the KMS encryption key.
            </para>
             
            <para>
            If an encryption key is not specified in <code>KmsKeyId</code>:
            </para>
             <ul> <li> 
            <para>
            If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon
            Neptune will use the encryption key used to encrypt the source. Otherwise, Amazon
            Neptune will use your default encryption key.
            </para>
             </li> <li> 
            <para>
            If the <code>StorageEncrypted</code> parameter is true and <code>ReplicationSourceIdentifier</code>
            is not specified, then Amazon Neptune will use your default encryption key.
            </para>
             </li> </ul> 
            <para>
            Amazon KMS creates the default encryption key for your Amazon account. Your Amazon
            account has a different default encryption key for each Amazon Region.
            </para>
             
            <para>
            If you create a Read Replica of an encrypted DB cluster in another Amazon Region,
            you must set <code>KmsKeyId</code> to a KMS key ID that is valid in the destination
            Amazon Region. This key is used to encrypt the Read Replica in that Amazon Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.MasterUsername">
            <summary>
            Gets and sets the property MasterUsername. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.MasterUserPassword">
            <summary>
            Gets and sets the property MasterUserPassword. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.OptionGroupName">
            <summary>
            Gets and sets the property OptionGroupName. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port number on which the instances in the DB cluster accept connections.
            </para>
             
            <para>
             Default: <code>8182</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.PreferredBackupWindow">
            <summary>
            Gets and sets the property PreferredBackupWindow. 
            <para>
            The daily time range during which automated backups are created if automated backups
            are enabled using the <code>BackupRetentionPeriod</code> parameter.
            </para>
             
            <para>
            The default is a 30-minute window selected at random from an 8-hour block of time
            for each Amazon Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html">
            Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i>
            
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be in the format <code>hh24:mi-hh24:mi</code>.
            </para>
             </li> <li> 
            <para>
            Must be in Universal Coordinated Time (UTC).
            </para>
             </li> <li> 
            <para>
            Must not conflict with the preferred maintenance window.
            </para>
             </li> <li> 
            <para>
            Must be at least 30 minutes.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).
            </para>
             
            <para>
            Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> 
            </para>
             
            <para>
            The default is a 30-minute window selected at random from an 8-hour block of time
            for each Amazon Region, occurring on a random day of the week. To see the time blocks
            available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html">
            Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i>
            
            </para>
             
            <para>
            Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
            </para>
             
            <para>
            Constraints: Minimum 30-minute window.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.PreSignedUrl">
            <summary>
            Gets and sets the property PreSignedUrl. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.ReplicationSourceIdentifier">
            <summary>
            Gets and sets the property ReplicationSourceIdentifier. 
            <para>
            The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB
            cluster is created as a Read Replica.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            Specifies whether the DB cluster is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to assign to the new DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterRequest.VpcSecurityGroupIds">
            <summary>
            Gets and sets the property VpcSecurityGroupIds. 
            <para>
            A list of EC2 VPC security groups to associate with this DB cluster.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.AddRoleToDBClusterRequest">
            <summary>
            Container for the parameters to the AddRoleToDBCluster operation.
            Associates an Identity and Access Management (IAM) role from an Neptune DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.AddRoleToDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The name of the DB cluster to associate the IAM role with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.AddRoleToDBClusterRequest.FeatureName">
            <summary>
            Gets and sets the property FeatureName. 
            <para>
            The name of the feature for the Neptune DB cluster that the IAM role is to be associated
            with. For the list of supported feature names, see <a>DBEngineVersion</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.AddRoleToDBClusterRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role to associate with the Neptune DB cluster,
            for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.AddRoleToDBClusterResponse">
            <summary>
            This is the response object from the AddRoleToDBCluster operation.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionRequest">
            <summary>
            Container for the parameters to the AddSourceIdentifierToSubscription operation.
            Adds a source identifier to an existing event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionRequest.SourceIdentifier">
            <summary>
            Gets and sets the property SourceIdentifier. 
            <para>
            The identifier of the event source to be added.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must
            be supplied.
            </para>
             </li> <li> 
            <para>
            If the source type is a DB security group, a <code>DBSecurityGroupName</code> must
            be supplied.
            </para>
             </li> <li> 
            <para>
            If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must
            be supplied.
            </para>
             </li> <li> 
            <para>
            If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the event notification subscription you want to add a source identifier
            to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionResponse">
            <summary>
            This is the response object from the AddSourceIdentifierToSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionResponse.EventSubscription">
            <summary>
            Gets and sets the property EventSubscription.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.AddTagsToResourceRequest">
            <summary>
            Container for the parameters to the AddTagsToResource operation.
            Adds metadata tags to an Amazon Neptune resource. These tags can also be used with
            cost allocation reporting to track cost associated with Amazon Neptune resources,
            or used in a Condition statement in an IAM policy for Amazon Neptune.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.AddTagsToResourceRequest.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The Amazon Neptune resource that the tags are added to. This value is an Amazon Resource
            Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.AddTagsToResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the Amazon Neptune resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.AddTagsToResourceResponse">
            <summary>
            This is the response object from the AddTagsToResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ApplyPendingMaintenanceActionRequest">
            <summary>
            Container for the parameters to the ApplyPendingMaintenanceAction operation.
            Applies a pending maintenance action to a resource (for example, to a DB instance).
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ApplyPendingMaintenanceActionRequest.ApplyAction">
            <summary>
            Gets and sets the property ApplyAction. 
            <para>
            The pending maintenance action to apply to this resource.
            </para>
             
            <para>
            Valid values: <code>system-update</code>, <code>db-upgrade</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ApplyPendingMaintenanceActionRequest.OptInType">
            <summary>
            Gets and sets the property OptInType. 
            <para>
            A value that specifies the type of opt-in request, or undoes an opt-in request. An
            opt-in request of type <code>immediate</code> can't be undone.
            </para>
             
            <para>
            Valid values:
            </para>
             <ul> <li> 
            <para>
             <code>immediate</code> - Apply the maintenance action immediately.
            </para>
             </li> <li> 
            <para>
             <code>next-maintenance</code> - Apply the maintenance action during the next maintenance
            window for the resource.
            </para>
             </li> <li> 
            <para>
             <code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in
            requests.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ApplyPendingMaintenanceActionRequest.ResourceIdentifier">
            <summary>
            Gets and sets the property ResourceIdentifier. 
            <para>
            The Amazon Resource Name (ARN) of the resource that the pending maintenance action
            applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ApplyPendingMaintenanceActionResponse">
            <summary>
            This is the response object from the ApplyPendingMaintenanceAction operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ApplyPendingMaintenanceActionResponse.ResourcePendingMaintenanceActions">
            <summary>
            Gets and sets the property ResourcePendingMaintenanceActions.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.AuthorizationNotFoundException">
            <summary>
            Specified CIDRIP or EC2 security group is not authorized for the specified DB security
            group.
            
             
            <para>
            Neptune may not also be authorized via IAM to perform necessary actions on your behalf.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.AuthorizationNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new AuthorizationNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.AuthorizationNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AuthorizationNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.AuthorizationNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of AuthorizationNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.AuthorizationNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthorizationNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.AuthorizationNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthorizationNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.AuthorizationNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AuthorizationNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.AuthorizationNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.AvailabilityZone">
            <summary>
            Specifies an Availability Zone.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.AvailabilityZone.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the availability zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CertificateNotFoundException">
            <summary>
            <i>CertificateIdentifier</i> does not refer to an existing certificate.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.CertificateNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new CertificateNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.CertificateNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CertificateNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.CertificateNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of CertificateNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.CertificateNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CertificateNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.CertificateNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CertificateNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.CertificateNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CertificateNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.CertificateNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.CharacterSet">
            <summary>
            Specifies a character set.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CharacterSet.CharacterSetDescription">
            <summary>
            Gets and sets the property CharacterSetDescription. 
            <para>
            The description of the character set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CharacterSet.CharacterSetName">
            <summary>
            Gets and sets the property CharacterSetName. 
            <para>
            The name of the character set.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CloudwatchLogsExportConfiguration">
            <summary>
            The configuration setting for the log types to be enabled for export to CloudWatch
            Logs for a specific DB instance or DB cluster.
            
             
            <para>
            The <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine
            which logs will be exported (or not exported) to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CloudwatchLogsExportConfiguration.DisableLogTypes">
            <summary>
            Gets and sets the property DisableLogTypes. 
            <para>
            The list of log types to disable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CloudwatchLogsExportConfiguration.EnableLogTypes">
            <summary>
            Gets and sets the property EnableLogTypes. 
            <para>
            The list of log types to enable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CopyDBClusterParameterGroupRequest">
            <summary>
            Container for the parameters to the CopyDBClusterParameterGroup operation.
            Copies the specified DB cluster parameter group.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterParameterGroupRequest.SourceDBClusterParameterGroupIdentifier">
            <summary>
            Gets and sets the property SourceDBClusterParameterGroupIdentifier. 
            <para>
            The identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group.
            For information about creating an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must specify a valid DB cluster parameter group.
            </para>
             </li> <li> 
            <para>
            If the source DB cluster parameter group is in the same Amazon Region as the copy,
            specify a valid DB parameter group identifier, for example <code>my-db-cluster-param-group</code>,
            or a valid ARN.
            </para>
             </li> <li> 
            <para>
            If the source DB parameter group is in a different Amazon Region than the copy, specify
            a valid DB cluster parameter group ARN, for example <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterParameterGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the copied DB cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterParameterGroupRequest.TargetDBClusterParameterGroupDescription">
            <summary>
            Gets and sets the property TargetDBClusterParameterGroupDescription. 
            <para>
            A description for the copied DB cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterParameterGroupRequest.TargetDBClusterParameterGroupIdentifier">
            <summary>
            Gets and sets the property TargetDBClusterParameterGroupIdentifier. 
            <para>
            The identifier for the copied DB cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Cannot be null, empty, or blank
            </para>
             </li> <li> 
            <para>
            Must contain from 1 to 255 letters, numbers, or hyphens
            </para>
             </li> <li> 
            <para>
            First character must be a letter
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster-param-group1</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CopyDBClusterParameterGroupResponse">
            <summary>
            This is the response object from the CopyDBClusterParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterParameterGroupResponse.DBClusterParameterGroup">
            <summary>
            Gets and sets the property DBClusterParameterGroup.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CopyDBClusterSnapshotResponse">
            <summary>
            This is the response object from the CopyDBClusterSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBClusterSnapshotResponse.DBClusterSnapshot">
            <summary>
            Gets and sets the property DBClusterSnapshot.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CopyDBParameterGroupRequest">
            <summary>
            Container for the parameters to the CopyDBParameterGroup operation.
            Copies the specified DB parameter group.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBParameterGroupRequest.SourceDBParameterGroupIdentifier">
            <summary>
            Gets and sets the property SourceDBParameterGroupIdentifier. 
            <para>
            The identifier or ARN for the source DB parameter group. For information about creating
            an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must specify a valid DB parameter group.
            </para>
             </li> <li> 
            <para>
            Must specify a valid DB parameter group identifier, for example <code>my-db-param-group</code>,
            or a valid ARN.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBParameterGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the copied DB parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBParameterGroupRequest.TargetDBParameterGroupDescription">
            <summary>
            Gets and sets the property TargetDBParameterGroupDescription. 
            <para>
            A description for the copied DB parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBParameterGroupRequest.TargetDBParameterGroupIdentifier">
            <summary>
            Gets and sets the property TargetDBParameterGroupIdentifier. 
            <para>
            The identifier for the copied DB parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Cannot be null, empty, or blank.
            </para>
             </li> <li> 
            <para>
            Must contain from 1 to 255 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            First character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-db-parameter-group</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CopyDBParameterGroupResponse">
            <summary>
            This is the response object from the CopyDBParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CopyDBParameterGroupResponse.DBParameterGroup">
            <summary>
            Gets and sets the property DBParameterGroup.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBClusterEndpointRequest">
            <summary>
            Container for the parameters to the CreateDBClusterEndpoint operation.
            Creates a new custom endpoint and associates it with an Amazon Neptune DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointRequest.DBClusterEndpointIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointIdentifier. 
            <para>
            The identifier to use for the new endpoint. This parameter is stored as a lowercase
            string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
            is stored as a lowercase string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointRequest.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointRequest.ExcludedMembers">
            <summary>
            Gets and sets the property ExcludedMembers. 
            <para>
            List of DB instance identifiers that aren't part of the custom endpoint group. All
            other eligible instances are reachable through the custom endpoint. Only relevant
            if the list of static members is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointRequest.StaticMembers">
            <summary>
            Gets and sets the property StaticMembers. 
            <para>
            List of DB instance identifiers that are part of the custom endpoint group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the Amazon Neptune resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBClusterEndpointResponse">
            <summary>
            This data type represents the information you need to connect to an Amazon Neptune
            DB cluster. This data type is used as a response element in the following actions:
            
             <ul> <li> 
            <para>
             <code>CreateDBClusterEndpoint</code> 
            </para>
             </li> <li> 
            <para>
             <code>DescribeDBClusterEndpoints</code> 
            </para>
             </li> <li> 
            <para>
             <code>ModifyDBClusterEndpoint</code> 
            </para>
             </li> <li> 
            <para>
             <code>DeleteDBClusterEndpoint</code> 
            </para>
             </li> </ul> 
            <para>
            For the data structure that represents Amazon Neptune DB instance endpoints, see <code>Endpoint</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointResponse.CustomEndpointType">
            <summary>
            Gets and sets the property CustomEndpointType. 
            <para>
            The type associated with a custom endpoint. One of: <code>READER</code>, <code>WRITER</code>,
            <code>ANY</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointResponse.DBClusterEndpointArn">
            <summary>
            Gets and sets the property DBClusterEndpointArn. 
            <para>
            The Amazon Resource Name (ARN) for the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointResponse.DBClusterEndpointIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointIdentifier. 
            <para>
            The identifier associated with the endpoint. This parameter is stored as a lowercase
            string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointResponse.DBClusterEndpointResourceIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointResourceIdentifier. 
            <para>
            A unique system-generated identifier for an endpoint. It remains the same for the
            whole life of the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointResponse.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
            is stored as a lowercase string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointResponse.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The DNS address of the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointResponse.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>CUSTOM</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointResponse.ExcludedMembers">
            <summary>
            Gets and sets the property ExcludedMembers. 
            <para>
            List of DB instance identifiers that aren't part of the custom endpoint group. All
            other eligible instances are reachable through the custom endpoint. Only relevant
            if the list of static members is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointResponse.StaticMembers">
            <summary>
            Gets and sets the property StaticMembers. 
            <para>
            List of DB instance identifiers that are part of the custom endpoint group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterEndpointResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the endpoint. One of: <code>creating</code>, <code>available</code>,
            <code>deleting</code>, <code>inactive</code>, <code>modifying</code>. The <code>inactive</code>
            state applies to an endpoint that cannot be used for a certain kind of cluster, such
            as a <code>writer</code> endpoint for a read-only secondary cluster in a global database.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBClusterParameterGroupRequest">
            <summary>
            Container for the parameters to the CreateDBClusterParameterGroup operation.
            Creates a new DB cluster parameter group.
            
             
            <para>
            Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.
            </para>
             
            <para>
             A DB cluster parameter group is initially created with the default parameters for
            the database engine used by instances in the DB cluster. To provide custom values
            for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>.
            Once you've created a DB cluster parameter group, you need to associate it with your
            DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter
            group with a running DB cluster, you need to reboot the DB instances in the DB cluster
            without failover for the new DB cluster parameter group and associated settings to
            take effect.
            </para>
             <important> 
            <para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the DB cluster parameter group is used as the default for a new DB cluster.
            This is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon Neptune
            console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your
            DB cluster parameter group has been created or modified.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterParameterGroupRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the DB cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the name of an existing DBClusterParameterGroup.
            </para>
             </li> </ul> <note> 
            <para>
            This value is stored as a lowercase string.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterParameterGroupRequest.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The DB cluster parameter group family name. A DB cluster parameter group can be associated
            with one and only one DB cluster parameter group family, and can be applied only to
            a DB cluster running a database engine and engine version compatible with that DB
            cluster parameter group family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterParameterGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description for the DB cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterParameterGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the new DB cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBClusterParameterGroupResponse">
            <summary>
            This is the response object from the CreateDBClusterParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterParameterGroupResponse.DBClusterParameterGroup">
            <summary>
            Gets and sets the property DBClusterParameterGroup.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBClusterResponse">
            <summary>
            This is the response object from the CreateDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBClusterSnapshotRequest">
            <summary>
            Container for the parameters to the CreateDBClusterSnapshot operation.
            Creates a snapshot of a DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterSnapshotRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The identifier of the DB cluster to create a snapshot for. This parameter is not case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing DBCluster.
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster1</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterSnapshotRequest.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            The identifier of the DB cluster snapshot. This parameter is stored as a lowercase
            string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            First character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster1-snapshot1</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterSnapshotRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBClusterSnapshotResponse">
            <summary>
            This is the response object from the CreateDBClusterSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBClusterSnapshotResponse.DBClusterSnapshot">
            <summary>
            Gets and sets the property DBClusterSnapshot.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBInstanceRequest">
            <summary>
            Container for the parameters to the CreateDBInstance operation.
            Creates a new DB instance.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.AllocatedStorage">
            <summary>
            Gets and sets the property AllocatedStorage. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.AutoMinorVersionUpgrade">
            <summary>
            Gets and sets the property AutoMinorVersionUpgrade. 
            <para>
            Indicates that minor engine upgrades are applied automatically to the DB instance
            during the maintenance window.
            </para>
             
            <para>
            Default: <code>true</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
             The EC2 Availability Zone that the DB instance is created in
            </para>
             
            <para>
            Default: A random, system-chosen Availability Zone in the endpoint's Amazon Region.
            </para>
             
            <para>
             Example: <code>us-east-1d</code> 
            </para>
             
            <para>
             Constraint: The AvailabilityZone parameter can't be specified if the MultiAZ parameter
            is set to <code>true</code>. The specified Availability Zone must be in the same Amazon
            Region as the current endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            The number of days for which automated backups are retained.
            </para>
             
            <para>
            Not applicable. The retention period for automated backups is managed by the DB cluster.
            For more information, see <a>CreateDBCluster</a>.
            </para>
             
            <para>
            Default: 1
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be a value from 0 to 35
            </para>
             </li> <li> 
            <para>
            Cannot be set to 0 if the DB instance is a source to Read Replicas
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.CharacterSetName">
            <summary>
            Gets and sets the property CharacterSetName. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.CopyTagsToSnapshot">
            <summary>
            Gets and sets the property CopyTagsToSnapshot. 
            <para>
            True to copy all tags from the DB instance to snapshots of the DB instance, and otherwise
            false. The default is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The identifier of the DB cluster that the instance will belong to.
            </para>
             
            <para>
            For information on creating a DB cluster, see <a>CreateDBCluster</a>.
            </para>
             
            <para>
            Type: String
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
            The compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>.
            Not all DB instance classes are available in all Amazon Regions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The DB instance identifier. This parameter is stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            First character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> 
            <para>
            Example: <code>mydbinstance</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.DBName">
            <summary>
            Gets and sets the property DBName. 
            <para>
            Not supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            The name of the DB parameter group to associate with this DB instance. If this argument
            is omitted, the default DBParameterGroup for the specified engine is used.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be 1 to 255 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            First character must be a letter
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.DBSecurityGroups">
            <summary>
            Gets and sets the property DBSecurityGroups. 
            <para>
            A list of DB security groups to associate with this DB instance.
            </para>
             
            <para>
            Default: The default DB security group for the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            A DB subnet group to associate with this DB instance.
            </para>
             
            <para>
            If there is no DB subnet group, then it is a non-VPC DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            A value that indicates whether the DB instance has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. See <a href="https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html">Deleting
            a DB Instance</a>.
            </para>
             
            <para>
            DB instances in a DB cluster can be deleted even when deletion protection is enabled
            in their parent DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            Specify the Active Directory Domain to create the instance in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.DomainIAMRoleName">
            <summary>
            Gets and sets the property DomainIAMRoleName. 
            <para>
            Specify the name of the IAM role to be used when making API calls to the Directory
            Service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.EnableCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnableCloudwatchLogsExports. 
            <para>
            The list of log types that need to be enabled for exporting to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.EnableIAMDatabaseAuthentication">
            <summary>
            Gets and sets the property EnableIAMDatabaseAuthentication. 
            <para>
            Not supported by Neptune (ignored).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.EnablePerformanceInsights">
            <summary>
            Gets and sets the property EnablePerformanceInsights. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the database engine to be used for this instance.
            </para>
             
            <para>
            Valid Values: <code>neptune</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version number of the database engine to use. Currently, setting this parameter
            has no effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The amount of Provisioned IOPS (input/output operations per second) to be initially
            allocated for the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon KMS key identifier for an encrypted DB instance.
            </para>
             
            <para>
            The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are creating a DB instance with the same Amazon account that owns the KMS encryption
            key used to encrypt the new DB instance, then you can use the KMS key alias instead
            of the ARN for the KM encryption key.
            </para>
             
            <para>
            Not applicable. The KMS key identifier is managed by the DB cluster. For more information,
            see <a>CreateDBCluster</a>.
            </para>
             
            <para>
            If the <code>StorageEncrypted</code> parameter is true, and you do not specify a value
            for the <code>KmsKeyId</code> parameter, then Amazon Neptune will use your default
            encryption key. Amazon KMS creates the default encryption key for your Amazon account.
            Your Amazon account has a different default encryption key for each Amazon Region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.LicenseModel">
            <summary>
            Gets and sets the property LicenseModel. 
            <para>
            License model information for this DB instance.
            </para>
             
            <para>
             Valid values: <code>license-included</code> | <code>bring-your-own-license</code>
            | <code>general-public-license</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.MasterUsername">
            <summary>
            Gets and sets the property MasterUsername. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.MasterUserPassword">
            <summary>
            Gets and sets the property MasterUserPassword. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.MonitoringInterval">
            <summary>
            Gets and sets the property MonitoringInterval. 
            <para>
            The interval, in seconds, between points when Enhanced Monitoring metrics are collected
            for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.
            The default is 0.
            </para>
             
            <para>
            If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code>
            to a value other than 0.
            </para>
             
            <para>
            Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.MonitoringRoleArn">
            <summary>
            Gets and sets the property MonitoringRoleArn. 
            <para>
            The ARN for the IAM role that permits Neptune to send enhanced monitoring metrics
            to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.
            </para>
             
            <para>
            If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply
            a <code>MonitoringRoleArn</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.MultiAZ">
            <summary>
            Gets and sets the property MultiAZ. 
            <para>
            Specifies if the DB instance is a Multi-AZ deployment. You can't set the AvailabilityZone
            parameter if the MultiAZ parameter is set to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.OptionGroupName">
            <summary>
            Gets and sets the property OptionGroupName. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.PerformanceInsightsKMSKeyId">
            <summary>
            Gets and sets the property PerformanceInsightsKMSKeyId. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port number on which the database accepts connections.
            </para>
             
            <para>
            Not applicable. The port is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.
            </para>
             
            <para>
             Default: <code>8182</code> 
            </para>
             
            <para>
            Type: Integer
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.PreferredBackupWindow">
            <summary>
            Gets and sets the property PreferredBackupWindow. 
            <para>
             The daily time range during which automated backups are created.
            </para>
             
            <para>
            Not applicable. The daily time range for creating automated backups is managed by
            the DB cluster. For more information, see <a>CreateDBCluster</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            The time range each week during which system maintenance can occur, in Universal Coordinated
            Time (UTC).
            </para>
             
            <para>
             Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> 
            </para>
             
            <para>
            The default is a 30-minute window selected at random from an 8-hour block of time
            for each Amazon Region, occurring on a random day of the week.
            </para>
             
            <para>
            Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
            </para>
             
            <para>
            Constraints: Minimum 30-minute window.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.PromotionTier">
            <summary>
            Gets and sets the property PromotionTier. 
            <para>
            A value that specifies the order in which an Read Replica is promoted to the primary
            instance after a failure of the existing primary instance. 
            </para>
             
            <para>
            Default: 1
            </para>
             
            <para>
            Valid Values: 0 - 15
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.PubliclyAccessible">
            <summary>
            Gets and sets the property PubliclyAccessible. 
            <para>
            This flag should no longer be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            Specifies whether the DB instance is encrypted.
            </para>
             
            <para>
            Not applicable. The encryption for DB instances is managed by the DB cluster. For
            more information, see <a>CreateDBCluster</a>.
            </para>
             
            <para>
            Default: false
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            Specifies the storage type to be associated with the DB instance.
            </para>
             
            <para>
            Not applicable. Storage is managed by the DB Cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to assign to the new instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.TdeCredentialArn">
            <summary>
            Gets and sets the property TdeCredentialArn. 
            <para>
            The ARN from the key store with which to associate the instance for TDE encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.TdeCredentialPassword">
            <summary>
            Gets and sets the property TdeCredentialPassword. 
            <para>
            The password for the given ARN from the key store in order to access the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.Timezone">
            <summary>
            Gets and sets the property Timezone. 
            <para>
            The time zone of the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceRequest.VpcSecurityGroupIds">
            <summary>
            Gets and sets the property VpcSecurityGroupIds. 
            <para>
            A list of EC2 VPC security groups to associate with this DB instance.
            </para>
             
            <para>
            Not applicable. The associated list of EC2 VPC security groups is managed by the DB
            cluster. For more information, see <a>CreateDBCluster</a>.
            </para>
             
            <para>
            Default: The default EC2 VPC security group for the DB subnet group's VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBInstanceResponse">
            <summary>
            This is the response object from the CreateDBInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBInstanceResponse.DBInstance">
            <summary>
            Gets and sets the property DBInstance.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBParameterGroupRequest">
            <summary>
            Container for the parameters to the CreateDBParameterGroup operation.
            Creates a new DB parameter group.
            
             
            <para>
            A DB parameter group is initially created with the default parameters for the database
            engine used by the DB instance. To provide custom values for any of the parameters,
            you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once
            you've created a DB parameter group, you need to associate it with your DB instance
            using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a
            running DB instance, you need to reboot the DB instance without failover for the new
            DB parameter group and associated settings to take effect.
            </para>
             <important> 
            <para>
            After you create a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the create action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBParameterGroupRequest.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The DB parameter group family name. A DB parameter group can be associated with one
            and only one DB parameter group family, and can be applied only to a DB instance running
            a database engine and engine version compatible with that DB parameter group family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBParameterGroupRequest.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            The name of the DB parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be 1 to 255 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            First character must be a letter
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens
            </para>
             </li> </ul> <note> 
            <para>
            This value is stored as a lowercase string.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBParameterGroupRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description for the DB parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBParameterGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the new DB parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBParameterGroupResponse">
            <summary>
            This is the response object from the CreateDBParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBParameterGroupResponse.DBParameterGroup">
            <summary>
            Gets and sets the property DBParameterGroup.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBSubnetGroupRequest">
            <summary>
            Container for the parameters to the CreateDBSubnetGroup operation.
            Creates a new DB subnet group. DB subnet groups must contain at least one subnet in
            at least two AZs in the Amazon Region.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBSubnetGroupRequest.DBSubnetGroupDescription">
            <summary>
            Gets and sets the property DBSubnetGroupDescription. 
            <para>
            The description for the DB subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBSubnetGroupRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name for the DB subnet group. This value is stored as a lowercase string.
            </para>
             
            <para>
            Constraints: Must contain no more than 255 letters, numbers, periods, underscores,
            spaces, or hyphens. Must not be default.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBSubnetGroupRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The EC2 Subnet IDs for the DB subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBSubnetGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the new DB subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateDBSubnetGroupResponse">
            <summary>
            This is the response object from the CreateDBSubnetGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateDBSubnetGroupResponse.DBSubnetGroup">
            <summary>
            Gets and sets the property DBSubnetGroup.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateEventSubscriptionRequest">
            <summary>
            Container for the parameters to the CreateEventSubscription operation.
            Creates an event notification subscription. This action requires a topic ARN (Amazon
            Resource Name) created by either the Neptune console, the SNS console, or the SNS
            API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe
            to the topic. The ARN is displayed in the SNS console.
            
             
            <para>
            You can specify the type of source (SourceType) you want to be notified of, provide
            a list of Neptune sources (SourceIds) that triggers the events, and provide a list
            of event categories (EventCategories) for events you want to be notified of. For example,
            you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2
            and EventCategories = Availability, Backup.
            </para>
             
            <para>
            If you specify both the SourceType and SourceIds, such as SourceType = db-instance
            and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events
            for the specified source. If you specify a SourceType but do not specify a SourceIdentifier,
            you receive notice of the events for that source type for all your Neptune sources.
            If you do not specify either the SourceType nor the SourceIdentifier, you are notified
            of events generated from all Neptune sources belonging to your customer account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateEventSubscriptionRequest.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
             A Boolean value; set to <b>true</b> to activate the subscription, set to <b>false</b>
            to create the subscription but not active it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateEventSubscriptionRequest.EventCategories">
            <summary>
            Gets and sets the property EventCategories. 
            <para>
             A list of event categories for a SourceType that you want to subscribe to. You can
            see a list of the categories for a given SourceType by using the <b>DescribeEventCategories</b>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateEventSubscriptionRequest.SnsTopicArn">
            <summary>
            Gets and sets the property SnsTopicArn. 
            <para>
            The Amazon Resource Name (ARN) of the SNS topic created for event notification. The
            ARN is created by Amazon SNS when you create a topic and subscribe to it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateEventSubscriptionRequest.SourceIds">
            <summary>
            Gets and sets the property SourceIds. 
            <para>
            The list of identifiers of the event sources for which events are returned. If not
            specified, then all sources are included in the response. An identifier must begin
            with a letter and must contain only ASCII letters, digits, and hyphens; it can't end
            with a hyphen or contain two consecutive hyphens.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If SourceIds are supplied, SourceType must also be provided.
            </para>
             </li> <li> 
            <para>
            If the source type is a DB instance, then a <code>DBInstanceIdentifier</code> must
            be supplied.
            </para>
             </li> <li> 
            <para>
            If the source type is a DB security group, a <code>DBSecurityGroupName</code> must
            be supplied.
            </para>
             </li> <li> 
            <para>
            If the source type is a DB parameter group, a <code>DBParameterGroupName</code> must
            be supplied.
            </para>
             </li> <li> 
            <para>
            If the source type is a DB snapshot, a <code>DBSnapshotIdentifier</code> must be supplied.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateEventSubscriptionRequest.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The type of source that is generating the events. For example, if you want to be notified
            of events generated by a DB instance, you would set this parameter to db-instance.
            if this value is not specified, all events are returned.
            </para>
             
            <para>
            Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code>
            | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateEventSubscriptionRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the subscription.
            </para>
             
            <para>
            Constraints: The name must be less than 255 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateEventSubscriptionRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be applied to the new event subscription.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.CreateEventSubscriptionResponse">
            <summary>
            This is the response object from the CreateEventSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.CreateEventSubscriptionResponse.EventSubscription">
            <summary>
            Gets and sets the property EventSubscription.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBCluster">
            <summary>
            Contains the details of an Amazon Neptune DB cluster.
            
             
            <para>
            This data type is used as a response element in the <a>DescribeDBClusters</a> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.AllocatedStorage">
            <summary>
            Gets and sets the property AllocatedStorage. 
            <para>
             <code>AllocatedStorage</code> always returns 1, because Neptune DB cluster storage
            size is not fixed, but instead automatically adjusts as needed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.AssociatedRoles">
            <summary>
            Gets and sets the property AssociatedRoles. 
            <para>
            Provides a list of the Amazon Identity and Access Management (IAM) roles that are
            associated with the DB cluster. IAM roles that are associated with a DB cluster grant
            permission for the DB cluster to access other Amazon services on your behalf.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.AutomaticRestartTime">
            <summary>
            Gets and sets the property AutomaticRestartTime. 
            <para>
            Time at which the DB cluster will be automatically restarted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            Provides the list of EC2 Availability Zones that instances in the DB cluster can be
            created in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            Specifies the number of days for which automatic DB snapshots are retained.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.CharacterSetName">
            <summary>
            Gets and sets the property CharacterSetName. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.CloneGroupId">
            <summary>
            Gets and sets the property CloneGroupId. 
            <para>
            Identifies the clone group to which the DB cluster is associated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.ClusterCreateTime">
            <summary>
            Gets and sets the property ClusterCreateTime. 
            <para>
            Specifies the time when the DB cluster was created, in Universal Coordinated Time
            (UTC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.CopyTagsToSnapshot">
            <summary>
            Gets and sets the property CopyTagsToSnapshot. 
            <para>
             <i>If set to <code>true</code>, tags are copied to any snapshot of the DB cluster
            that is created.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.CrossAccountClone">
            <summary>
            Gets and sets the property CrossAccountClone. 
            <para>
            If set to <code>true</code>, the DB cluster can be cloned across accounts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            Contains the name of the initial database of this DB cluster that was provided at
            create time, if one was specified when the DB cluster was created. This same name
            is returned for the life of the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.DBClusterArn">
            <summary>
            Gets and sets the property DBClusterArn. 
            <para>
            The Amazon Resource Name (ARN) for the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            Contains a user-supplied DB cluster identifier. This identifier is the unique key
            that identifies a DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.DBClusterMembers">
            <summary>
            Gets and sets the property DBClusterMembers. 
            <para>
            Provides the list of instances that make up the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.DBClusterOptionGroupMemberships">
            <summary>
            Gets and sets the property DBClusterOptionGroupMemberships. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.DBClusterParameterGroup">
            <summary>
            Gets and sets the property DBClusterParameterGroup. 
            <para>
            Specifies the name of the DB cluster parameter group for the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.DbClusterResourceId">
            <summary>
            Gets and sets the property DbClusterResourceId. 
            <para>
            The Amazon Region-unique, immutable identifier for the DB cluster. This identifier
            is found in Amazon CloudTrail log entries whenever the Amazon KMS key for the DB cluster
            is accessed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.DBSubnetGroup">
            <summary>
            Gets and sets the property DBSubnetGroup. 
            <para>
            Specifies information on the subnet group associated with the DB cluster, including
            the name, description, and subnets in the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            Indicates whether or not the DB cluster has deletion protection enabled. The database
            can't be deleted when deletion protection is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.EarliestRestorableTime">
            <summary>
            Gets and sets the property EarliestRestorableTime. 
            <para>
            Specifies the earliest time to which a database can be restored with point-in-time
            restore.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.EnabledCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnabledCloudwatchLogsExports. 
            <para>
            A list of log types that this DB cluster is configured to export to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            Specifies the connection endpoint for the primary instance of the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            Provides the name of the database engine to be used for this DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Indicates the database engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.HostedZoneId">
            <summary>
            Gets and sets the property HostedZoneId. 
            <para>
            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.IAMDatabaseAuthenticationEnabled">
            <summary>
            Gets and sets the property IAMDatabaseAuthenticationEnabled. 
            <para>
            True if mapping of Amazon Identity and Access Management (IAM) accounts to database
            accounts is enabled, and otherwise false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            If <code>StorageEncrypted</code> is true, the Amazon KMS key identifier for the encrypted
            DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.LatestRestorableTime">
            <summary>
            Gets and sets the property LatestRestorableTime. 
            <para>
            Specifies the latest time to which a database can be restored with point-in-time restore.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.MasterUsername">
            <summary>
            Gets and sets the property MasterUsername. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.MultiAZ">
            <summary>
            Gets and sets the property MultiAZ. 
            <para>
            Specifies whether the DB cluster has instances in multiple Availability Zones.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.PercentProgress">
            <summary>
            Gets and sets the property PercentProgress. 
            <para>
            Specifies the progress of the operation as a percentage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            Specifies the port that the database engine is listening on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.PreferredBackupWindow">
            <summary>
            Gets and sets the property PreferredBackupWindow. 
            <para>
            Specifies the daily time range during which automated backups are created if automated
            backups are enabled, as determined by the <code>BackupRetentionPeriod</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            Specifies the weekly time range during which system maintenance can occur, in Universal
            Coordinated Time (UTC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.ReaderEndpoint">
            <summary>
            Gets and sets the property ReaderEndpoint. 
            <para>
            The reader endpoint for the DB cluster. The reader endpoint for a DB cluster load-balances
            connections across the Read Replicas that are available in a DB cluster. As clients
            request new connections to the reader endpoint, Neptune distributes the connection
            requests among the Read Replicas in the DB cluster. This functionality can help balance
            your read workload across multiple Read Replicas in your DB cluster.
            </para>
             
            <para>
            If a failover occurs, and the Read Replica that you are connected to is promoted to
            be the primary instance, your connection is dropped. To continue sending your read
            workload to other Read Replicas in the cluster, you can then reconnect to the reader
            endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.ReadReplicaIdentifiers">
            <summary>
            Gets and sets the property ReadReplicaIdentifiers. 
            <para>
            Contains one or more identifiers of the Read Replicas associated with this DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.ReplicationSourceIdentifier">
            <summary>
            Gets and sets the property ReplicationSourceIdentifier. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Specifies the current state of this DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            Specifies whether the DB cluster is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBCluster.VpcSecurityGroups">
            <summary>
            Gets and sets the property VpcSecurityGroups. 
            <para>
            Provides a list of VPC security groups that the DB cluster belongs to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            <summary>
            User already has a DB cluster with the given identifier.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterEndpoint">
            <summary>
            This data type represents the information you need to connect to an Amazon Neptune
            DB cluster. This data type is used as a response element in the following actions:
            
             <ul> <li> 
            <para>
             <code>CreateDBClusterEndpoint</code> 
            </para>
             </li> <li> 
            <para>
             <code>DescribeDBClusterEndpoints</code> 
            </para>
             </li> <li> 
            <para>
             <code>ModifyDBClusterEndpoint</code> 
            </para>
             </li> <li> 
            <para>
             <code>DeleteDBClusterEndpoint</code> 
            </para>
             </li> </ul> 
            <para>
            For the data structure that represents Amazon Neptune DB instance endpoints, see <code>Endpoint</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterEndpoint.CustomEndpointType">
            <summary>
            Gets and sets the property CustomEndpointType. 
            <para>
            The type associated with a custom endpoint. One of: <code>READER</code>, <code>WRITER</code>,
            <code>ANY</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterEndpoint.DBClusterEndpointArn">
            <summary>
            Gets and sets the property DBClusterEndpointArn. 
            <para>
            The Amazon Resource Name (ARN) for the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterEndpoint.DBClusterEndpointIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointIdentifier. 
            <para>
            The identifier associated with the endpoint. This parameter is stored as a lowercase
            string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterEndpoint.DBClusterEndpointResourceIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointResourceIdentifier. 
            <para>
            A unique system-generated identifier for an endpoint. It remains the same for the
            whole life of the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterEndpoint.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
            is stored as a lowercase string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterEndpoint.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The DNS address of the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterEndpoint.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>CUSTOM</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterEndpoint.ExcludedMembers">
            <summary>
            Gets and sets the property ExcludedMembers. 
            <para>
            List of DB instance identifiers that aren't part of the custom endpoint group. All
            other eligible instances are reachable through the custom endpoint. Only relevant
            if the list of static members is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterEndpoint.StaticMembers">
            <summary>
            Gets and sets the property StaticMembers. 
            <para>
            List of DB instance identifiers that are part of the custom endpoint group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterEndpoint.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the endpoint. One of: <code>creating</code>, <code>available</code>,
            <code>deleting</code>, <code>inactive</code>, <code>modifying</code>. The <code>inactive</code>
            state applies to an endpoint that cannot be used for a certain kind of cluster, such
            as a <code>writer</code> endpoint for a read-only secondary cluster in a global database.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException">
            <summary>
            The specified custom endpoint cannot be created because it already exists.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterEndpointAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterEndpointAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterEndpointAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterEndpointAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterEndpointAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterEndpointAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterEndpointNotFoundException">
            <summary>
            The specified custom endpoint doesn't exist.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterEndpointNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterEndpointNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterEndpointNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterEndpointNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterEndpointNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterEndpointNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException">
            <summary>
            The cluster already has the maximum number of custom endpoints.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterEndpointQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterEndpointQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterEndpointQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterEndpointQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterEndpointQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterEndpointQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterMember">
            <summary>
            Contains information about an instance that is part of a DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterMember.DBClusterParameterGroupStatus">
            <summary>
            Gets and sets the property DBClusterParameterGroupStatus. 
            <para>
            Specifies the status of the DB cluster parameter group for this member of the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterMember.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            Specifies the instance identifier for this member of the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterMember.IsClusterWriter">
            <summary>
            Gets and sets the property IsClusterWriter. 
            <para>
            Value that is <code>true</code> if the cluster member is the primary instance for
            the DB cluster and <code>false</code> otherwise.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterMember.PromotionTier">
            <summary>
            Gets and sets the property PromotionTier. 
            <para>
            A value that specifies the order in which a Read Replica is promoted to the primary
            instance after a failure of the existing primary instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <summary>
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterOptionGroupStatus">
            <summary>
            Not supported by Neptune.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterOptionGroupStatus.DBClusterOptionGroupName">
            <summary>
            Gets and sets the property DBClusterOptionGroupName. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterOptionGroupStatus.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterParameterGroup">
            <summary>
            Contains the details of an Amazon Neptune DB cluster parameter group.
            
             
            <para>
            This data type is used as a response element in the <a>DescribeDBClusterParameterGroups</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterParameterGroup.DBClusterParameterGroupArn">
            <summary>
            Gets and sets the property DBClusterParameterGroupArn. 
            <para>
            The Amazon Resource Name (ARN) for the DB cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterParameterGroup.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            Provides the name of the DB cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterParameterGroup.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            Provides the name of the DB parameter group family that this DB cluster parameter
            group is compatible with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterParameterGroup.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Provides the customer-specified description for this DB cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <summary>
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterParameterGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterParameterGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterParameterGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            <summary>
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterRole">
            <summary>
            Describes an Amazon Identity and Access Management (IAM) role that is associated with
            a DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterRole.FeatureName">
            <summary>
            Gets and sets the property FeatureName. 
            <para>
            The name of the feature associated with the Amazon Identity and Access Management
            (IAM) role. For the list of supported feature names, see <a>DBEngineVersion</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterRole.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterRole.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Describes the state of association between the IAM role and the DB cluster. The Status
            property returns one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>ACTIVE</code> - the IAM role ARN is associated with the DB cluster and can
            be used to access other Amazon services on your behalf.
            </para>
             </li> <li> 
            <para>
             <code>PENDING</code> - the IAM role ARN is being associated with the DB cluster.
            </para>
             </li> <li> 
            <para>
             <code>INVALID</code> - the IAM role ARN is associated with the DB cluster, but the
            DB cluster is unable to assume the IAM role in order to access other Amazon services
            on your behalf.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException">
            <summary>
            The specified IAM role Amazon Resource Name (ARN) is already associated with the specified
            DB cluster.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterRoleAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterRoleAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterRoleAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterRoleAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterRoleAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterRoleAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterRoleNotFoundException">
            <summary>
            The specified IAM role Amazon Resource Name (ARN) is not associated with the specified
            DB cluster.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterRoleNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterRoleNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterRoleNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterRoleNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterRoleNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterRoleNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException">
            <summary>
            You have exceeded the maximum number of IAM roles that can be associated with the
            specified DB cluster.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterRoleQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterRoleQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterRoleQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterRoleQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterRoleQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterRoleQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterSnapshot">
            <summary>
            Contains the details for an Amazon Neptune DB cluster snapshot
            
             
            <para>
            This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.AllocatedStorage">
            <summary>
            Gets and sets the property AllocatedStorage. 
            <para>
            Specifies the allocated storage size in gibibytes (GiB).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            Provides the list of EC2 Availability Zones that instances in the DB cluster snapshot
            can be restored in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.ClusterCreateTime">
            <summary>
            Gets and sets the property ClusterCreateTime. 
            <para>
            Specifies the time when the DB cluster was created, in Universal Coordinated Time
            (UTC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot
            was created from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.DBClusterSnapshotArn">
            <summary>
            Gets and sets the property DBClusterSnapshotArn. 
            <para>
            The Amazon Resource Name (ARN) for the DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            Specifies the identifier for a DB cluster snapshot. Must match the identifier of an
            existing snapshot.
            </para>
             
            <para>
            After you restore a DB cluster using a <code>DBClusterSnapshotIdentifier</code>, you
            must specify the same <code>DBClusterSnapshotIdentifier</code> for any future updates
            to the DB cluster. When you specify this property for an update, the DB cluster is
            not restored from the snapshot again, and the data in the database is not changed.
            </para>
             
            <para>
            However, if you don't specify the <code>DBClusterSnapshotIdentifier</code>, an empty
            DB cluster is created, and the original DB cluster is deleted. If you specify a property
            that is different from the previous snapshot restore property, the DB cluster is restored
            from the snapshot specified by the <code>DBClusterSnapshotIdentifier</code>, and the
            original DB cluster is deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            Specifies the name of the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Provides the version of the database engine for this DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.IAMDatabaseAuthenticationEnabled">
            <summary>
            Gets and sets the property IAMDatabaseAuthenticationEnabled. 
            <para>
            True if mapping of Amazon Identity and Access Management (IAM) accounts to database
            accounts is enabled, and otherwise false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            If <code>StorageEncrypted</code> is true, the Amazon KMS key identifier for the encrypted
            DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.LicenseModel">
            <summary>
            Gets and sets the property LicenseModel. 
            <para>
            Provides the license model information for this DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.MasterUsername">
            <summary>
            Gets and sets the property MasterUsername. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.PercentProgress">
            <summary>
            Gets and sets the property PercentProgress. 
            <para>
            Specifies the percentage of the estimated data that has been transferred.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            Specifies the port that the DB cluster was listening on at the time of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.SnapshotCreateTime">
            <summary>
            Gets and sets the property SnapshotCreateTime. 
            <para>
            Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.SnapshotType">
            <summary>
            Gets and sets the property SnapshotType. 
            <para>
            Provides the type of the DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.SourceDBClusterSnapshotArn">
            <summary>
            Gets and sets the property SourceDBClusterSnapshotArn. 
            <para>
            If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
            Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Specifies the status of this DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            Specifies whether the DB cluster snapshot is encrypted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshot.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            Provides the VPC ID associated with the DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            <summary>
            User already has a DB cluster snapshot with the given identifier.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterSnapshotAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterSnapshotAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterSnapshotAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterSnapshotAttribute">
            <summary>
            Contains the name and values of a manual DB cluster snapshot attribute.
            
             
            <para>
            Manual DB cluster snapshot attributes are used to authorize other Amazon accounts
            to restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshotAttribute.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the manual DB cluster snapshot attribute.
            </para>
             
            <para>
            The attribute named <code>restore</code> refers to the list of Amazon accounts that
            have permission to copy or restore the manual DB cluster snapshot. For more information,
            see the <a>ModifyDBClusterSnapshotAttribute</a> API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshotAttribute.AttributeValues">
            <summary>
            Gets and sets the property AttributeValues. 
            <para>
            The value(s) for the manual DB cluster snapshot attribute.
            </para>
             
            <para>
            If the <code>AttributeName</code> field is set to <code>restore</code>, then this
            element returns a list of IDs of the Amazon accounts that are authorized to copy or
            restore the manual DB cluster snapshot. If a value of <code>all</code> is in the list,
            then the manual DB cluster snapshot is public and available for any Amazon account
            to copy or restore.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterSnapshotAttributesResult">
            <summary>
            Contains the results of a successful call to the <a>DescribeDBClusterSnapshotAttributes</a>
            API action.
            
             
            <para>
            Manual DB cluster snapshot attributes are used to authorize other Amazon accounts
            to copy or restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshotAttributesResult.DBClusterSnapshotAttributes">
            <summary>
            Gets and sets the property DBClusterSnapshotAttributes. 
            <para>
            The list of attributes and values for the manual DB cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBClusterSnapshotAttributesResult.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            The identifier of the manual DB cluster snapshot that the attributes apply to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <summary>
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBClusterSnapshotNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBClusterSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBClusterSnapshotNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBClusterSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBClusterSnapshotNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBEngineVersion">
            <summary>
            This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.DBEngineDescription">
            <summary>
            Gets and sets the property DBEngineDescription. 
            <para>
            The description of the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.DBEngineVersionDescription">
            <summary>
            Gets and sets the property DBEngineVersionDescription. 
            <para>
            The description of the database engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The name of the DB parameter group family for the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.DefaultCharacterSet">
            <summary>
            Gets and sets the property DefaultCharacterSet. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version number of the database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.ExportableLogTypes">
            <summary>
            Gets and sets the property ExportableLogTypes. 
            <para>
            The types of logs that the database engine has available for export to CloudWatch
            Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.SupportedCharacterSets">
            <summary>
            Gets and sets the property SupportedCharacterSets. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.SupportedTimezones">
            <summary>
            Gets and sets the property SupportedTimezones. 
            <para>
            A list of the time zones supported by this engine for the <code>Timezone</code> parameter
            of the <code>CreateDBInstance</code> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.SupportsLogExportsToCloudwatchLogs">
            <summary>
            Gets and sets the property SupportsLogExportsToCloudwatchLogs. 
            <para>
            A value that indicates whether the engine version supports exporting the log types
            specified by ExportableLogTypes to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.SupportsReadReplica">
            <summary>
            Gets and sets the property SupportsReadReplica. 
            <para>
            Indicates whether the database engine version supports read replicas.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBEngineVersion.ValidUpgradeTarget">
            <summary>
            Gets and sets the property ValidUpgradeTarget. 
            <para>
            A list of engine versions that this database engine version can be upgraded to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBInstance">
            <summary>
            Contains the details of an Amazon Neptune DB instance.
            
             
            <para>
            This data type is used as a response element in the <a>DescribeDBInstances</a> action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.AllocatedStorage">
            <summary>
            Gets and sets the property AllocatedStorage. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.AutoMinorVersionUpgrade">
            <summary>
            Gets and sets the property AutoMinorVersionUpgrade. 
            <para>
            Indicates that minor version patches are applied automatically.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.AvailabilityZone">
            <summary>
            Gets and sets the property AvailabilityZone. 
            <para>
            Specifies the name of the Availability Zone the DB instance is located in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            Specifies the number of days for which automatic DB snapshots are retained.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.CACertificateIdentifier">
            <summary>
            Gets and sets the property CACertificateIdentifier. 
            <para>
            The identifier of the CA certificate for this DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.CharacterSetName">
            <summary>
            Gets and sets the property CharacterSetName. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.CopyTagsToSnapshot">
            <summary>
            Gets and sets the property CopyTagsToSnapshot. 
            <para>
            Specifies whether tags are copied from the DB instance to snapshots of the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            If the DB instance is a member of a DB cluster, contains the name of the DB cluster
            that the DB instance is a member of.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DBInstanceArn">
            <summary>
            Gets and sets the property DBInstanceArn. 
            <para>
            The Amazon Resource Name (ARN) for the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
            Contains the name of the compute and memory capacity class of the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            Contains a user-supplied database identifier. This identifier is the unique key that
            identifies a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DbInstancePort">
            <summary>
            Gets and sets the property DbInstancePort. 
            <para>
            Specifies the port that the DB instance listens on. If the DB instance is part of
            a DB cluster, this can be a different port than the DB cluster port.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DBInstanceStatus">
            <summary>
            Gets and sets the property DBInstanceStatus. 
            <para>
            Specifies the current state of this database.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DbiResourceId">
            <summary>
            Gets and sets the property DbiResourceId. 
            <para>
            The Amazon Region-unique, immutable identifier for the DB instance. This identifier
            is found in Amazon CloudTrail log entries whenever the Amazon KMS key for the DB instance
            is accessed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DBName">
            <summary>
            Gets and sets the property DBName. 
            <para>
            The database name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DBParameterGroups">
            <summary>
            Gets and sets the property DBParameterGroups. 
            <para>
            Provides the list of DB parameter groups applied to this DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DBSecurityGroups">
            <summary>
            Gets and sets the property DBSecurityGroups. 
            <para>
             Provides List of DB security group elements containing only <code>DBSecurityGroup.Name</code>
            and <code>DBSecurityGroup.Status</code> subelements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DBSubnetGroup">
            <summary>
            Gets and sets the property DBSubnetGroup. 
            <para>
            Specifies information on the subnet group associated with the DB instance, including
            the name, description, and subnets in the subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            Indicates whether or not the DB instance has deletion protection enabled. The instance
            can't be deleted when deletion protection is enabled. See <a href="https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html">Deleting
            a DB Instance</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.DomainMemberships">
            <summary>
            Gets and sets the property DomainMemberships. 
            <para>
            Not supported
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.EnabledCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnabledCloudwatchLogsExports. 
            <para>
            A list of log types that this DB instance is configured to export to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            Specifies the connection endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            Provides the name of the database engine to be used for this DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Indicates the database engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.EnhancedMonitoringResourceArn">
            <summary>
            Gets and sets the property EnhancedMonitoringResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that receives
            the Enhanced Monitoring metrics data for the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.IAMDatabaseAuthenticationEnabled">
            <summary>
            Gets and sets the property IAMDatabaseAuthenticationEnabled. 
            <para>
            True if Amazon Identity and Access Management (IAM) authentication is enabled, and
            otherwise false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.InstanceCreateTime">
            <summary>
            Gets and sets the property InstanceCreateTime. 
            <para>
            Provides the date and time the DB instance was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            Specifies the Provisioned IOPS (I/O operations per second) value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
             Not supported: The encryption for DB instances is managed by the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.LatestRestorableTime">
            <summary>
            Gets and sets the property LatestRestorableTime. 
            <para>
            Specifies the latest time to which a database can be restored with point-in-time restore.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.LicenseModel">
            <summary>
            Gets and sets the property LicenseModel. 
            <para>
            License model information for this DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.MasterUsername">
            <summary>
            Gets and sets the property MasterUsername. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.MonitoringInterval">
            <summary>
            Gets and sets the property MonitoringInterval. 
            <para>
            The interval, in seconds, between points when Enhanced Monitoring metrics are collected
            for the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.MonitoringRoleArn">
            <summary>
            Gets and sets the property MonitoringRoleArn. 
            <para>
            The ARN for the IAM role that permits Neptune to send Enhanced Monitoring metrics
            to Amazon CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.MultiAZ">
            <summary>
            Gets and sets the property MultiAZ. 
            <para>
            Specifies if the DB instance is a Multi-AZ deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.OptionGroupMemberships">
            <summary>
            Gets and sets the property OptionGroupMemberships. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.PendingModifiedValues">
            <summary>
            Gets and sets the property PendingModifiedValues. 
            <para>
            Specifies that changes to the DB instance are pending. This element is only included
            when changes are pending. Specific changes are identified by subelements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.PerformanceInsightsEnabled">
            <summary>
            Gets and sets the property PerformanceInsightsEnabled. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.PerformanceInsightsKMSKeyId">
            <summary>
            Gets and sets the property PerformanceInsightsKMSKeyId. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.PreferredBackupWindow">
            <summary>
            Gets and sets the property PreferredBackupWindow. 
            <para>
             Specifies the daily time range during which automated backups are created if automated
            backups are enabled, as determined by the <code>BackupRetentionPeriod</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            Specifies the weekly time range during which system maintenance can occur, in Universal
            Coordinated Time (UTC).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.PromotionTier">
            <summary>
            Gets and sets the property PromotionTier. 
            <para>
            A value that specifies the order in which a Read Replica is promoted to the primary
            instance after a failure of the existing primary instance. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.PubliclyAccessible">
            <summary>
            Gets and sets the property PubliclyAccessible. 
            <para>
            This flag should no longer be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.ReadReplicaDBClusterIdentifiers">
            <summary>
            Gets and sets the property ReadReplicaDBClusterIdentifiers. 
            <para>
            Contains one or more identifiers of DB clusters that are Read Replicas of this DB
            instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.ReadReplicaDBInstanceIdentifiers">
            <summary>
            Gets and sets the property ReadReplicaDBInstanceIdentifiers. 
            <para>
            Contains one or more identifiers of the Read Replicas associated with this DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.ReadReplicaSourceDBInstanceIdentifier">
            <summary>
            Gets and sets the property ReadReplicaSourceDBInstanceIdentifier. 
            <para>
            Contains the identifier of the source DB instance if this DB instance is a Read Replica.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.SecondaryAvailabilityZone">
            <summary>
            Gets and sets the property SecondaryAvailabilityZone. 
            <para>
            If present, specifies the name of the secondary Availability Zone for a DB instance
            with multi-AZ support.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.StatusInfos">
            <summary>
            Gets and sets the property StatusInfos. 
            <para>
            The status of a Read Replica. If the instance is not a Read Replica, this is blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.StorageEncrypted">
            <summary>
            Gets and sets the property StorageEncrypted. 
            <para>
            Not supported: The encryption for DB instances is managed by the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            Specifies the storage type associated with DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.TdeCredentialArn">
            <summary>
            Gets and sets the property TdeCredentialArn. 
            <para>
            The ARN from the key store with which the instance is associated for TDE encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.Timezone">
            <summary>
            Gets and sets the property Timezone. 
            <para>
            Not supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstance.VpcSecurityGroups">
            <summary>
            Gets and sets the property VpcSecurityGroups. 
            <para>
            Provides a list of VPC security group elements that the DB instance belongs to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBInstanceAlreadyExistsException">
            <summary>
            User already has a DB instance with the given identifier.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBInstanceAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBInstanceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBInstanceAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBInstanceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBInstanceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBInstanceAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <summary>
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBInstanceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBInstanceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBInstanceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBInstanceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBInstanceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBInstanceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBInstanceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBInstanceStatusInfo">
            <summary>
            Provides a list of status information for a DB instance.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstanceStatusInfo.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            Details of the error if there is an error for the instance. If the instance is not
            in an error state, this value is blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstanceStatusInfo.Normal">
            <summary>
            Gets and sets the property Normal. 
            <para>
            Boolean value that is true if the instance is operating normally, or false if the
            instance is in an error state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstanceStatusInfo.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Status of the DB instance. For a StatusType of read replica, the values can be replicating,
            error, stopped, or terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBInstanceStatusInfo.StatusType">
            <summary>
            Gets and sets the property StatusType. 
            <para>
            This value is currently "read replication."
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBParameterGroup">
            <summary>
            Contains the details of an Amazon Neptune DB parameter group.
            
             
            <para>
            This data type is used as a response element in the <a>DescribeDBParameterGroups</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBParameterGroup.DBParameterGroupArn">
            <summary>
            Gets and sets the property DBParameterGroupArn. 
            <para>
            The Amazon Resource Name (ARN) for the DB parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBParameterGroup.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            Provides the name of the DB parameter group family that this DB parameter group is
            compatible with.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBParameterGroup.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            Provides the name of the DB parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBParameterGroup.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Provides the customer-specified description for this DB parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            <summary>
            A DB parameter group with the same name exists.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBParameterGroupAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBParameterGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBParameterGroupAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBParameterGroupAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <summary>
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBParameterGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBParameterGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBParameterGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            <summary>
            Request would result in user exceeding the allowed number of DB parameter groups.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DBParameterGroupQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBParameterGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBParameterGroupQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBParameterGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBParameterGroupQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBParameterGroupStatus">
            <summary>
            The status of the DB parameter group.
            
             
            <para>
            This data type is used as a response element in the following actions:
            </para>
             <ul> <li> 
            <para>
             <a>CreateDBInstance</a> 
            </para>
             </li> <li> 
            <para>
             <a>DeleteDBInstance</a> 
            </para>
             </li> <li> 
            <para>
             <a>ModifyDBInstance</a> 
            </para>
             </li> <li> 
            <para>
             <a>RebootDBInstance</a> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBParameterGroupStatus.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            The name of the DP parameter group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBParameterGroupStatus.ParameterApplyStatus">
            <summary>
            Gets and sets the property ParameterApplyStatus. 
            <para>
            The status of parameter updates.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBSecurityGroupMembership">
            <summary>
            Specifies membership in a designated DB security group.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBSecurityGroupMembership.DBSecurityGroupName">
            <summary>
            Gets and sets the property DBSecurityGroupName. 
            <para>
            The name of the DB security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBSecurityGroupMembership.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the DB security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBSecurityGroupNotFoundException">
            <summary>
            <i>DBSecurityGroupName</i> does not refer to an existing DB security group.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSecurityGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBSecurityGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSecurityGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSecurityGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSecurityGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSecurityGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSecurityGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSecurityGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSecurityGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSecurityGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException">
            <summary>
            <i>DBSnapshotIdentifier</i> is already used by an existing snapshot.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBSnapshotAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSnapshotAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSnapshotAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSnapshotAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <summary>
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBSnapshotNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSnapshotNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSnapshotNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSnapshotNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSnapshotNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBSubnetGroup">
            <summary>
            Contains the details of an Amazon Neptune DB subnet group.
            
             
            <para>
            This data type is used as a response element in the <a>DescribeDBSubnetGroups</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBSubnetGroup.DBSubnetGroupArn">
            <summary>
            Gets and sets the property DBSubnetGroupArn. 
            <para>
            The Amazon Resource Name (ARN) for the DB subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBSubnetGroup.DBSubnetGroupDescription">
            <summary>
            Gets and sets the property DBSubnetGroupDescription. 
            <para>
            Provides the description of the DB subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBSubnetGroup.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name of the DB subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBSubnetGroup.SubnetGroupStatus">
            <summary>
            Gets and sets the property SubnetGroupStatus. 
            <para>
            Provides the status of the DB subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBSubnetGroup.Subnets">
            <summary>
            Gets and sets the property Subnets. 
            <para>
             Contains a list of <a>Subnet</a> elements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DBSubnetGroup.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            Provides the VpcId of the DB subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException">
            <summary>
            <i>DBSubnetGroupName</i> is already used by an existing DB subnet group.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DBSubnetGroupAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSubnetGroupAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            <summary>
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.String)">
            <summary>
            Constructs a new DBSubnetGroupDoesNotCoverEnoughAZsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupDoesNotCoverEnoughAZsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupDoesNotCoverEnoughAZsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupDoesNotCoverEnoughAZsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupDoesNotCoverEnoughAZsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSubnetGroupDoesNotCoverEnoughAZsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <summary>
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DBSubnetGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSubnetGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException">
            <summary>
            Request would result in user exceeding the allowed number of DB subnet groups.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DBSubnetGroupQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSubnetGroupQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetGroupQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSubnetGroupQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBSubnetQuotaExceededException">
            <summary>
            Request would result in user exceeding the allowed number of subnets in a DB subnet
            groups.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DBSubnetQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBSubnetQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBSubnetQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBSubnetQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBSubnetQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBSubnetQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DBUpgradeDependencyFailureException">
            <summary>
            The DB upgrade failed because a resource the DB depends on could not be modified.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DBUpgradeDependencyFailureException.#ctor(System.String)">
            <summary>
            Constructs a new DBUpgradeDependencyFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBUpgradeDependencyFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DBUpgradeDependencyFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBUpgradeDependencyFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of DBUpgradeDependencyFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBUpgradeDependencyFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBUpgradeDependencyFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBUpgradeDependencyFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DBUpgradeDependencyFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DBUpgradeDependencyFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DBUpgradeDependencyFailureException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DBUpgradeDependencyFailureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBClusterEndpointRequest">
            <summary>
            Container for the parameters to the DeleteDBClusterEndpoint operation.
            Deletes a custom endpoint and removes it from an Amazon Neptune DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointRequest.DBClusterEndpointIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointIdentifier. 
            <para>
            The identifier associated with the custom endpoint. This parameter is stored as a
            lowercase string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse">
            <summary>
            This data type represents the information you need to connect to an Amazon Neptune
            DB cluster. This data type is used as a response element in the following actions:
            
             <ul> <li> 
            <para>
             <code>CreateDBClusterEndpoint</code> 
            </para>
             </li> <li> 
            <para>
             <code>DescribeDBClusterEndpoints</code> 
            </para>
             </li> <li> 
            <para>
             <code>ModifyDBClusterEndpoint</code> 
            </para>
             </li> <li> 
            <para>
             <code>DeleteDBClusterEndpoint</code> 
            </para>
             </li> </ul> 
            <para>
            For the data structure that represents Amazon RDS DB instance endpoints, see <code>Endpoint</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse.CustomEndpointType">
            <summary>
            Gets and sets the property CustomEndpointType. 
            <para>
            The type associated with a custom endpoint. One of: <code>READER</code>, <code>WRITER</code>,
            <code>ANY</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse.DBClusterEndpointArn">
            <summary>
            Gets and sets the property DBClusterEndpointArn. 
            <para>
            The Amazon Resource Name (ARN) for the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse.DBClusterEndpointIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointIdentifier. 
            <para>
            The identifier associated with the endpoint. This parameter is stored as a lowercase
            string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse.DBClusterEndpointResourceIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointResourceIdentifier. 
            <para>
            A unique system-generated identifier for an endpoint. It remains the same for the
            whole life of the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
            is stored as a lowercase string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The DNS address of the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>CUSTOM</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse.ExcludedMembers">
            <summary>
            Gets and sets the property ExcludedMembers. 
            <para>
            List of DB instance identifiers that aren't part of the custom endpoint group. All
            other eligible instances are reachable through the custom endpoint. Only relevant
            if the list of static members is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse.StaticMembers">
            <summary>
            Gets and sets the property StaticMembers. 
            <para>
            List of DB instance identifiers that are part of the custom endpoint group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterEndpointResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the endpoint. One of: <code>creating</code>, <code>available</code>,
            <code>deleting</code>, <code>inactive</code>, <code>modifying</code>. The <code>inactive</code>
            state applies to an endpoint that cannot be used for a certain kind of cluster, such
            as a <code>writer</code> endpoint for a read-only secondary cluster in a global database.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBClusterParameterGroupRequest">
            <summary>
            Container for the parameters to the DeleteDBClusterParameterGroup operation.
            Deletes a specified DB cluster parameter group. The DB cluster parameter group to
            be deleted can't be associated with any DB clusters.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterParameterGroupRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the DB cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be the name of an existing DB cluster parameter group.
            </para>
             </li> <li> 
            <para>
            You can't delete a default DB cluster parameter group.
            </para>
             </li> <li> 
            <para>
            Cannot be associated with any DB clusters.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBClusterParameterGroupResponse">
            <summary>
            This is the response object from the DeleteDBClusterParameterGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBClusterRequest">
            <summary>
            Container for the parameters to the DeleteDBCluster operation.
            The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete
            a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered.
            Manual DB cluster snapshots of the specified DB cluster are not deleted.
            
             
            <para>
            Note that the DB Cluster cannot be deleted if deletion protection is enabled. To delete
            it, you must first set its <code>DeletionProtection</code> field to <code>False</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier for the DB cluster to be deleted. This parameter isn't case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match an existing DBClusterIdentifier.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterRequest.FinalDBSnapshotIdentifier">
            <summary>
            Gets and sets the property FinalDBSnapshotIdentifier. 
            <para>
             The DB cluster snapshot identifier of the new DB cluster snapshot created when <code>SkipFinalSnapshot</code>
            is set to <code>false</code>.
            </para>
             <note> 
            <para>
             Specifying this parameter and also setting the <code>SkipFinalShapshot</code> parameter
            to true results in an error.
            </para>
             </note> 
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be 1 to 255 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            First character must be a letter
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterRequest.SkipFinalSnapshot">
            <summary>
            Gets and sets the property SkipFinalSnapshot. 
            <para>
             Determines whether a final DB cluster snapshot is created before the DB cluster is
            deleted. If <code>true</code> is specified, no DB cluster snapshot is created. If
            <code>false</code> is specified, a DB cluster snapshot is created before the DB cluster
            is deleted.
            </para>
             <note> 
            <para>
            You must specify a <code>FinalDBSnapshotIdentifier</code> parameter if <code>SkipFinalSnapshot</code>
            is <code>false</code>.
            </para>
             </note> 
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBClusterResponse">
            <summary>
            This is the response object from the DeleteDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBClusterSnapshotRequest">
            <summary>
            Container for the parameters to the DeleteDBClusterSnapshot operation.
            Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation
            is terminated.
            
             <note> 
            <para>
            The DB cluster snapshot must be in the <code>available</code> state to be deleted.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterSnapshotRequest.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            The identifier of the DB cluster snapshot to delete.
            </para>
             
            <para>
            Constraints: Must be the name of an existing DB cluster snapshot in the <code>available</code>
            state.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBClusterSnapshotResponse">
            <summary>
            This is the response object from the DeleteDBClusterSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBClusterSnapshotResponse.DBClusterSnapshot">
            <summary>
            Gets and sets the property DBClusterSnapshot.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBInstanceRequest">
            <summary>
            Container for the parameters to the DeleteDBInstance operation.
            The DeleteDBInstance action deletes a previously provisioned DB instance. When you
            delete a DB instance, all automated backups for that instance are deleted and can't
            be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code>
            are not deleted.
            
             
            <para>
             If you request a final DB snapshot the status of the Amazon Neptune DB instance is
            <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code>
            is used to monitor the status of this operation. The action can't be canceled or reverted
            once submitted.
            </para>
             
            <para>
            Note that when a DB instance is in a failure state and has a status of <code>failed</code>,
            <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only
            delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.
            </para>
             
            <para>
            You can't delete a DB instance if it is the only instance in the DB cluster, or if
            it has deletion protection enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBInstanceRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The DB instance identifier for the DB instance to be deleted. This parameter isn't
            case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the name of an existing DB instance.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBInstanceRequest.FinalDBSnapshotIdentifier">
            <summary>
            Gets and sets the property FinalDBSnapshotIdentifier. 
            <para>
             The DBSnapshotIdentifier of the new DBSnapshot created when SkipFinalSnapshot is
            set to <code>false</code>.
            </para>
             <note> 
            <para>
            Specifying this parameter and also setting the SkipFinalShapshot parameter to true
            results in an error.
            </para>
             </note> 
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be 1 to 255 letters or numbers.
            </para>
             </li> <li> 
            <para>
            First character must be a letter
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens
            </para>
             </li> <li> 
            <para>
            Cannot be specified when deleting a Read Replica.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBInstanceRequest.SkipFinalSnapshot">
            <summary>
            Gets and sets the property SkipFinalSnapshot. 
            <para>
             Determines whether a final DB snapshot is created before the DB instance is deleted.
            If <code>true</code> is specified, no DBSnapshot is created. If <code>false</code>
            is specified, a DB snapshot is created before the DB instance is deleted.
            </para>
             
            <para>
            Note that when a DB instance is in a failure state and has a status of 'failed', 'incompatible-restore',
            or 'incompatible-network', it can only be deleted when the SkipFinalSnapshot parameter
            is set to "true".
            </para>
             
            <para>
            Specify <code>true</code> when deleting a Read Replica.
            </para>
             <note> 
            <para>
            The FinalDBSnapshotIdentifier parameter must be specified if SkipFinalSnapshot is
            <code>false</code>.
            </para>
             </note> 
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBInstanceResponse">
            <summary>
            This is the response object from the DeleteDBInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBInstanceResponse.DBInstance">
            <summary>
            Gets and sets the property DBInstance.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBParameterGroupRequest">
            <summary>
            Container for the parameters to the DeleteDBParameterGroup operation.
            Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted can't be
            associated with any DB instances.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBParameterGroupRequest.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            The name of the DB parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be the name of an existing DB parameter group
            </para>
             </li> <li> 
            <para>
            You can't delete a default DB parameter group
            </para>
             </li> <li> 
            <para>
            Cannot be associated with any DB instances
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBParameterGroupResponse">
            <summary>
            This is the response object from the DeleteDBParameterGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBSubnetGroupRequest">
            <summary>
            Container for the parameters to the DeleteDBSubnetGroup operation.
            Deletes a DB subnet group.
            
             <note> 
            <para>
            The specified database subnet group must not be associated with any DB instances.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteDBSubnetGroupRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name of the database subnet group to delete.
            </para>
             <note> 
            <para>
            You can't delete the default subnet group.
            </para>
             </note> 
            <para>
            Constraints:
            </para>
             
            <para>
            Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteDBSubnetGroupResponse">
            <summary>
            This is the response object from the DeleteDBSubnetGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteEventSubscriptionRequest">
            <summary>
            Container for the parameters to the DeleteEventSubscription operation.
            Deletes an event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteEventSubscriptionRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the event notification subscription you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DeleteEventSubscriptionResponse">
            <summary>
            This is the response object from the DeleteEventSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DeleteEventSubscriptionResponse.EventSubscription">
            <summary>
            Gets and sets the property EventSubscription.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest">
            <summary>
            Container for the parameters to the DescribeDBClusterEndpoints operation.
            Returns information about endpoints for an Amazon Neptune DB cluster.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest.DBClusterEndpointIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointIdentifier. 
            <para>
            The identifier of the endpoint to describe. This parameter is stored as a lowercase
            string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
            is stored as a lowercase string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A set of name-value pairs that define which endpoints to include in the output. The
            filters are specified as name-value pairs, in the format <code>Name=<i>endpoint_type</i>,Values=<i>endpoint_type1</i>,<i>endpoint_type2</i>,...</code>.
            <code>Name</code> can be one of: <code>db-cluster-endpoint-type</code>, <code>db-cluster-endpoint-custom-type</code>,
            <code>db-cluster-endpoint-id</code>, <code>db-cluster-endpoint-status</code>. <code>Values</code>
            for the <code> db-cluster-endpoint-type</code> filter can be one or more of: <code>reader</code>,
            <code>writer</code>, <code>custom</code>. <code>Values</code> for the <code>db-cluster-endpoint-custom-type</code>
            filter can be one or more of: <code>reader</code>, <code>any</code>. <code>Values</code>
            for the <code>db-cluster-endpoint-status</code> filter can be one or more of: <code>available</code>,
            <code>creating</code>, <code>deleting</code>, <code>inactive</code>, <code>modifying</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so you can retrieve the remaining results. 
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterEndpointsResponse">
            <summary>
            This is the response object from the DescribeDBClusterEndpoints operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterEndpointsResponse.DBClusterEndpoints">
            <summary>
            Gets and sets the property DBClusterEndpoints. 
            <para>
            Contains the details of the endpoints associated with the cluster and matching any
            filter conditions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterEndpointsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest">
            <summary>
            Container for the parameters to the DescribeDBClusterParameterGroups operation.
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list will contain only the description of the specified
            DB cluster parameter group.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of a specific DB cluster parameter group to return details for.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the name of an existing DBClusterParameterGroup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsResponse">
            <summary>
            This is the response object from the DescribeDBClusterParameterGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsResponse.DBClusterParameterGroups">
            <summary>
            Gets and sets the property DBClusterParameterGroups. 
            <para>
            A list of DB cluster parameter groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <code>DescribeDBClusterParameterGroups</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterParametersRequest">
            <summary>
            Container for the parameters to the DescribeDBClusterParameters operation.
            Returns the detailed parameter list for a particular DB cluster parameter group.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParametersRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of a specific DB cluster parameter group to return parameter details for.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the name of an existing DBClusterParameterGroup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParametersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParametersRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <code>DescribeDBClusterParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParametersRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParametersRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
             A value that indicates to return only parameters for a specific source. Parameter
            sources can be <code>engine</code>, <code>service</code>, or <code>customer</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterParametersResponse">
            <summary>
            This is the response object from the DescribeDBClusterParameters operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParametersResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous DescribeDBClusterParameters request.
            If this parameter is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code> .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParametersResponse.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Provides a list of parameters for the DB cluster parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesRequest">
            <summary>
            Container for the parameters to the DescribeDBClusterSnapshotAttributes operation.
            Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When sharing snapshots with other Amazon accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the Amazon accounts
            that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual DB cluster snapshot is public and can be copied or restored by all Amazon accounts.
            </para>
             
            <para>
            To add or remove access for an Amazon account to copy or restore a manual DB cluster
            snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesRequest.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            The identifier for the DB cluster snapshot to describe the attributes for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesResponse">
            <summary>
            This is the response object from the DescribeDBClusterSnapshotAttributes operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesResponse.DBClusterSnapshotAttributesResult">
            <summary>
            Gets and sets the property DBClusterSnapshotAttributesResult.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest">
            <summary>
            Container for the parameters to the DescribeDBClusterSnapshots operation.
            Returns information about DB cluster snapshots. This API action supports pagination.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The ID of the DB cluster to retrieve the list of DB cluster snapshots for. This parameter
            can't be used in conjunction with the <code>DBClusterSnapshotIdentifier</code> parameter.
            This parameter is not case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the identifier of an existing DBCluster.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            A specific DB cluster snapshot identifier to describe. This parameter can't be used
            in conjunction with the <code>DBClusterIdentifier</code> parameter. This value is
            stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the identifier of an existing DBClusterSnapshot.
            </para>
             </li> <li> 
            <para>
            If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter
            must also be specified.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest.IncludePublic">
            <summary>
            Gets and sets the property IncludePublic. 
            <para>
            True to include manual DB cluster snapshots that are public and can be copied or restored
            by any Amazon account, and otherwise false. The default is <code>false</code>. The
            default is false.
            </para>
             
            <para>
            You can share a manual DB cluster snapshot as public by using the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest.IncludeShared">
            <summary>
            Gets and sets the property IncludeShared. 
            <para>
            True to include shared manual DB cluster snapshots from other Amazon accounts that
            this AWS account has been given permission to copy or restore, and otherwise false.
            The default is <code>false</code>.
            </para>
             
            <para>
            You can give an Amazon account permission to restore a manual DB cluster snapshot
            from another Amazon account by the <a>ModifyDBClusterSnapshotAttribute</a> API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous <code>DescribeDBClusterSnapshots</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest.SnapshotType">
            <summary>
            Gets and sets the property SnapshotType. 
            <para>
            The type of DB cluster snapshots to be returned. You can specify one of the following
            values:
            </para>
             <ul> <li> 
            <para>
             <code>automated</code> - Return all DB cluster snapshots that have been automatically
            taken by Amazon Neptune for my Amazon account.
            </para>
             </li> <li> 
            <para>
             <code>manual</code> - Return all DB cluster snapshots that have been taken by my
            AWS account.
            </para>
             </li> <li> 
            <para>
             <code>shared</code> - Return all manual DB cluster snapshots that have been shared
            to my Amazon account.
            </para>
             </li> <li> 
            <para>
             <code>public</code> - Return all DB cluster snapshots that have been marked as public.
            </para>
             </li> </ul> 
            <para>
            If you don't specify a <code>SnapshotType</code> value, then both automated and manual
            DB cluster snapshots are returned. You can include shared DB cluster snapshots with
            these results by setting the <code>IncludeShared</code> parameter to <code>true</code>.
            You can include public DB cluster snapshots with these results by setting the <code>IncludePublic</code>
            parameter to <code>true</code>.
            </para>
             
            <para>
            The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply
            for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>.
            The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code>
            is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply
            when <code>SnapshotType</code> is set to <code>public</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterSnapshotsResponse">
            <summary>
            This is the response object from the DescribeDBClusterSnapshots operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsResponse.DBClusterSnapshots">
            <summary>
            Gets and sets the property DBClusterSnapshots. 
            <para>
            Provides a list of DB cluster snapshots for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <a>DescribeDBClusterSnapshots</a>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClustersRequest">
            <summary>
            Container for the parameters to the DescribeDBClusters operation.
            Returns information about provisioned DB clusters, and supports pagination.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClustersRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The user-supplied DB cluster identifier. If this parameter is specified, information
            from only the specific DB cluster is returned. This parameter isn't case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match an existing DBClusterIdentifier.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClustersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A filter that specifies one or more DB clusters to describe.
            </para>
             
            <para>
            Supported filters:
            </para>
             <ul> <li> 
            <para>
             <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs). The results list will only include information about the DB
            clusters identified by these ARNs.
            </para>
             </li> <li> 
            <para>
             <code>engine</code> - Accepts an engine name (such as <code>neptune</code>), and
            restricts the results list to DB clusters created by that engine.
            </para>
             </li> </ul> 
            <para>
            For example, to invoke this API from the Amazon CLI and filter so that only Neptune
            DB clusters are returned, you could use the following command:
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClustersRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous <a>DescribeDBClusters</a> request.
            If this parameter is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClustersRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClustersResponse">
            <summary>
            This is the response object from the DescribeDBClusters operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClustersResponse.DBClusters">
            <summary>
            Gets and sets the property DBClusters. 
            <para>
            Contains a list of DB clusters for the user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClustersResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            A pagination token that can be used in a subsequent DescribeDBClusters request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBEngineVersionsRequest">
            <summary>
            Container for the parameters to the DescribeDBEngineVersions operation.
            Returns a list of the available DB engines.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsRequest.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The name of a specific DB parameter group family to return details for.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match an existing DBParameterGroupFamily.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsRequest.DefaultOnly">
            <summary>
            Gets and sets the property DefaultOnly. 
            <para>
            Indicates that only the default version of the specified engine or engine and major
            version combination is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The database engine to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The database engine version to return.
            </para>
             
            <para>
            Example: <code>5.1.49</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsRequest.ListSupportedCharacterSets">
            <summary>
            Gets and sets the property ListSupportedCharacterSets. 
            <para>
            If this parameter is specified and the requested engine supports the <code>CharacterSetName</code>
            parameter for <code>CreateDBInstance</code>, the response includes a list of supported
            character sets for each engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsRequest.ListSupportedTimezones">
            <summary>
            Gets and sets the property ListSupportedTimezones. 
            <para>
            If this parameter is specified and the requested engine supports the <code>TimeZone</code>
            parameter for <code>CreateDBInstance</code>, the response includes a list of supported
            time zones for each engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more than the <code>MaxRecords</code>
            value is available, a pagination token called a marker is included in the response
            so that the following results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBEngineVersionsResponse">
            <summary>
            This is the response object from the DescribeDBEngineVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsResponse.DBEngineVersions">
            <summary>
            Gets and sets the property DBEngineVersions. 
            <para>
             A list of <code>DBEngineVersion</code> elements.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBInstancesRequest">
            <summary>
            Container for the parameters to the DescribeDBInstances operation.
            Returns information about provisioned instances, and supports pagination.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS instances and Amazon DocDB
            instances.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBInstancesRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The user-supplied instance identifier. If this parameter is specified, information
            from only the specific DB instance is returned. This parameter isn't case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the identifier of an existing DBInstance.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBInstancesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A filter that specifies one or more DB instances to describe.
            </para>
             
            <para>
            Supported filters:
            </para>
             <ul> <li> 
            <para>
             <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs). The results list will only include information about the DB
            instances associated with the DB clusters identified by these ARNs.
            </para>
             </li> <li> 
            <para>
             <code>engine</code> - Accepts an engine name (such as <code>neptune</code>), and
            restricts the results list to DB instances created by that engine.
            </para>
             </li> </ul> 
            <para>
            For example, to invoke this API from the Amazon CLI and filter so that only Neptune
            DB instances are returned, you could use the following command:
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBInstancesRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <code>DescribeDBInstances</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBInstancesRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBInstancesResponse">
            <summary>
            This is the response object from the DescribeDBInstances operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBInstancesResponse.DBInstances">
            <summary>
            Gets and sets the property DBInstances. 
            <para>
             A list of <a>DBInstance</a> instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBInstancesResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code> .
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBParameterGroupsRequest">
            <summary>
            Container for the parameters to the DescribeDBParameterGroups operation.
            Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code>
            is specified, the list will contain only the description of the specified DB parameter
            group.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParameterGroupsRequest.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            The name of a specific DB parameter group to return details for.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the name of an existing DBClusterParameterGroup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParameterGroupsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParameterGroupsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParameterGroupsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBParameterGroupsResponse">
            <summary>
            This is the response object from the DescribeDBParameterGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParameterGroupsResponse.DBParameterGroups">
            <summary>
            Gets and sets the property DBParameterGroups. 
            <para>
            A list of <a>DBParameterGroup</a> instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParameterGroupsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBParametersRequest">
            <summary>
            Container for the parameters to the DescribeDBParameters operation.
            Returns the detailed parameter list for a particular DB parameter group.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParametersRequest.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            The name of a specific DB parameter group to return details for.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the name of an existing DBParameterGroup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParametersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParametersRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous <code>DescribeDBParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParametersRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
            The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParametersRequest.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The parameter types to return.
            </para>
             
            <para>
            Default: All parameter types returned
            </para>
             
            <para>
            Valid Values: <code>user | system | engine-default</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBParametersResponse">
            <summary>
            This is the response object from the DescribeDBParameters operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParametersResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParametersResponse.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            A list of <a>Parameter</a> values.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest">
            <summary>
            Container for the parameters to the DescribeDBSubnetGroups operation.
            Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified,
            the list will contain only the descriptions of the specified DBSubnetGroup.
            
             
            <para>
            For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia
            Tutorial</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name of the DB subnet group to return details for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous DescribeDBSubnetGroups request.
            If this parameter is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBSubnetGroupsResponse">
            <summary>
            This is the response object from the DescribeDBSubnetGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBSubnetGroupsResponse.DBSubnetGroups">
            <summary>
            Gets and sets the property DBSubnetGroups. 
            <para>
             A list of <a>DBSubnetGroup</a> instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBSubnetGroupsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous request. If this parameter is
            specified, the response includes only records beyond the marker, up to the value specified
            by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersRequest">
            <summary>
            Container for the parameters to the DescribeEngineDefaultClusterParameters operation.
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersRequest.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The name of the DB cluster parameter group family to return engine parameter information
            for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <code>DescribeEngineDefaultClusterParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersResponse">
            <summary>
            This is the response object from the DescribeEngineDefaultClusterParameters operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersResponse.EngineDefaults">
            <summary>
            Gets and sets the property EngineDefaults.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest">
            <summary>
            Container for the parameters to the DescribeEngineDefaultParameters operation.
            Returns the default engine and system parameter information for the specified database
            engine.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            The name of the DB parameter group family.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            Not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEngineDefaultParametersResponse">
            <summary>
            This is the response object from the DescribeEngineDefaultParameters operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultParametersResponse.EngineDefaults">
            <summary>
            Gets and sets the property EngineDefaults.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEventCategoriesRequest">
            <summary>
            Container for the parameters to the DescribeEventCategories operation.
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventCategoriesRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventCategoriesRequest.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The type of source that is generating the events.
            </para>
             
            <para>
            Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEventCategoriesResponse">
            <summary>
            This is the response object from the DescribeEventCategories operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventCategoriesResponse.EventCategoriesMapList">
            <summary>
            Gets and sets the property EventCategoriesMapList. 
            <para>
            A list of EventCategoriesMap data types.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEventsRequest">
            <summary>
            Container for the parameters to the DescribeEvents operation.
            Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter
            groups for the past 14 days. Events specific to a particular DB instance, DB security
            group, database snapshot, or DB parameter group can be obtained by providing the name
            as a parameter. By default, the past hour of events are returned.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.Duration">
            <summary>
            Gets and sets the property Duration. 
            <para>
            The number of minutes to retrieve events for.
            </para>
             
            <para>
            Default: 60
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.EndTimeUtc">
            <summary>
            Gets and sets the property EndTimeUtc. 
            <para>
             The end of the time interval for which to retrieve events, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a> 
            </para>
             
            <para>
            Example: 2009-07-08T18:00Z
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.EventCategories">
            <summary>
            Gets and sets the property EventCategories. 
            <para>
            A list of event categories that trigger notifications for a event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous DescribeEvents request. If this
            parameter is specified, the response includes only records beyond the marker, up to
            the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.SourceIdentifier">
            <summary>
            Gets and sets the property SourceIdentifier. 
            <para>
            The identifier of the event source for which events are returned. If not specified,
            then all sources are included in the response.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If SourceIdentifier is supplied, SourceType must also be provided.
            </para>
             </li> <li> 
            <para>
            If the source type is <code>DBInstance</code>, then a <code>DBInstanceIdentifier</code>
            must be supplied.
            </para>
             </li> <li> 
            <para>
            If the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code>
            must be supplied.
            </para>
             </li> <li> 
            <para>
            If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code>
            must be supplied.
            </para>
             </li> <li> 
            <para>
            If the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code>
            must be supplied.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The event source to retrieve events for. If no value is specified, all events are
            returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.StartTimeUtc">
            <summary>
            Gets and sets the property StartTimeUtc. 
            <para>
             The beginning of the time interval to retrieve events for, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a> 
            </para>
             
            <para>
            Example: 2009-07-08T18:00Z
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.EndTime">
            <summary>
            Gets and sets the property EndTimeUtc. 
            <para>
            This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.
            </para>
             
            <para>
             The end of the time interval for which to retrieve events, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a> 
            </para>
             
            <para>
            Example: 2009-07-08T18:00Z
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsRequest.StartTime">
            <summary>
            Gets and sets the property StartTimeUtc. 
            <para>
            This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.
            </para>
             
            <para>
             The beginning of the time interval to retrieve events for, specified in ISO 8601
            format. For more information about ISO 8601, go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a> 
            </para>
             
            <para>
            Example: 2009-07-08T18:00Z
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEventsResponse">
            <summary>
            This is the response object from the DescribeEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsResponse.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
             A list of <a>Event</a> instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous Events request. If this parameter
            is specified, the response includes only records beyond the marker, up to the value
            specified by <code>MaxRecords</code> .
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEventSubscriptionsRequest">
            <summary>
            Container for the parameters to the DescribeEventSubscriptions operation.
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID,
            CreationTime, and Status.
            
             
            <para>
            If you specify a SubscriptionName, lists the description for that subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventSubscriptionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventSubscriptionsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code> .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventSubscriptionsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventSubscriptionsRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the event notification subscription you want to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEventSubscriptionsResponse">
            <summary>
            This is the response object from the DescribeEventSubscriptions operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventSubscriptionsResponse.EventSubscriptionsList">
            <summary>
            Gets and sets the property EventSubscriptionsList. 
            <para>
            A list of EventSubscriptions data types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventSubscriptionsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest">
            <summary>
            Container for the parameters to the DescribeOrderableDBInstanceOptions operation.
            Returns a list of orderable DB instance options for the specified engine.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
            The DB instance class filter value. Specify this parameter to show only the available
            offerings matching the specified DB instance class.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the engine to retrieve DB instance options for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The engine version filter value. Specify this parameter to show only the available
            offerings matching the specified engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest.LicenseModel">
            <summary>
            Gets and sets the property LicenseModel. 
            <para>
            The license model filter value. Specify this parameter to show only the available
            offerings matching the specified license model.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code> .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest.Vpc">
            <summary>
            Gets and sets the property Vpc. 
            <para>
            The VPC filter value. Specify this parameter to show only the available VPC or non-VPC
            offerings.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsResponse">
            <summary>
            This is the response object from the DescribeOrderableDBInstanceOptions operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous OrderableDBInstanceOptions request.
            If this parameter is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code> .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsResponse.OrderableDBInstanceOptions">
            <summary>
            Gets and sets the property OrderableDBInstanceOptions. 
            <para>
            An <a>OrderableDBInstanceOption</a> structure containing information about orderable
            options for the DB instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest">
            <summary>
            Container for the parameters to the DescribePendingMaintenanceActions operation.
            Returns a list of resources (for example, DB instances) that have at least one pending
            maintenance action.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            A filter that specifies one or more resources to return pending maintenance actions
            for.
            </para>
             
            <para>
            Supported filters:
            </para>
             <ul> <li> 
            <para>
             <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB cluster Amazon
            Resource Names (ARNs). The results list will only include pending maintenance actions
            for the DB clusters identified by these ARNs.
            </para>
             </li> <li> 
            <para>
             <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance ARNs.
            The results list will only include pending maintenance actions for the DB instances
            identified by these ARNs.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to a number of records specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest.MaxRecords">
            <summary>
            Gets and sets the property MaxRecords. 
            <para>
             The maximum number of records to include in the response. If more records exist than
            the specified <code>MaxRecords</code> value, a pagination token called a marker is
            included in the response so that the remaining results can be retrieved.
            </para>
             
            <para>
            Default: 100
            </para>
             
            <para>
            Constraints: Minimum 20, maximum 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest.ResourceIdentifier">
            <summary>
            Gets and sets the property ResourceIdentifier. 
            <para>
            The ARN of a resource to return pending maintenance actions for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribePendingMaintenanceActionsResponse">
            <summary>
            This is the response object from the DescribePendingMaintenanceActions operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribePendingMaintenanceActionsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous <code>DescribePendingMaintenanceActions</code>
            request. If this parameter is specified, the response includes only records beyond
            the marker, up to a number of records specified by <code>MaxRecords</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribePendingMaintenanceActionsResponse.PendingMaintenanceActions">
            <summary>
            Gets and sets the property PendingMaintenanceActions. 
            <para>
            A list of the pending maintenance actions for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeValidDBInstanceModificationsRequest">
            <summary>
            Container for the parameters to the DescribeValidDBInstanceModifications operation.
            You can call <a>DescribeValidDBInstanceModifications</a> to learn what modifications
            you can make to your DB instance. You can use this information when you call <a>ModifyDBInstance</a>.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeValidDBInstanceModificationsRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The customer identifier or the ARN of your DB instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeValidDBInstanceModificationsResponse">
            <summary>
            This is the response object from the DescribeValidDBInstanceModifications operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeValidDBInstanceModificationsResponse.ValidDBInstanceModificationsMessage">
            <summary>
            Gets and sets the property ValidDBInstanceModificationsMessage.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DomainMembership">
            <summary>
            An Active Directory Domain membership record associated with a DB instance.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DomainMembership.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The identifier of the Active Directory Domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DomainMembership.FQDN">
            <summary>
            Gets and sets the property FQDN. 
            <para>
            The fully qualified domain name of the Active Directory Domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DomainMembership.IAMRoleName">
            <summary>
            Gets and sets the property IAMRoleName. 
            <para>
            The name of the IAM role to be used when making API calls to the Directory Service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DomainMembership.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the DB instance's Active Directory Domain membership, such as joined,
            pending-join, failed etc).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DomainNotFoundException">
            <summary>
            <i>Domain</i> does not refer to an existing Active Directory Domain.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.DomainNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new DomainNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.DomainNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DomainNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DomainNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of DomainNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DomainNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DomainNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DomainNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DomainNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.DomainNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DomainNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.DomainNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.DoubleRange">
            <summary>
            A range of double values.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DoubleRange.From">
            <summary>
            Gets and sets the property From. 
            <para>
            The minimum value in the range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DoubleRange.To">
            <summary>
            Gets and sets the property To. 
            <para>
            The maximum value in the range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.Endpoint">
            <summary>
            Specifies a connection endpoint.
            
             
            <para>
            For the data structure that represents Amazon Neptune DB cluster endpoints, see <code>DBClusterEndpoint</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Endpoint.Address">
            <summary>
            Gets and sets the property Address. 
            <para>
            Specifies the DNS address of the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Endpoint.HostedZoneId">
            <summary>
            Gets and sets the property HostedZoneId. 
            <para>
            Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Endpoint.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            Specifies the port that the database engine is listening on.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.EngineDefaults">
            <summary>
            Contains the result of a successful invocation of the <a>DescribeEngineDefaultParameters</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EngineDefaults.DBParameterGroupFamily">
            <summary>
            Gets and sets the property DBParameterGroupFamily. 
            <para>
            Specifies the name of the DB parameter group family that the engine default parameters
            apply to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EngineDefaults.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             An optional pagination token provided by a previous EngineDefaults request. If this
            parameter is specified, the response includes only records beyond the marker, up to
            the value specified by <code>MaxRecords</code> .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EngineDefaults.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            Contains a list of engine default parameters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.Event">
            <summary>
            This data type is used as a response element in the <a>DescribeEvents</a> action.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Event.Date">
            <summary>
            Gets and sets the property Date. 
            <para>
            Specifies the date and time of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Event.EventCategories">
            <summary>
            Gets and sets the property EventCategories. 
            <para>
            Specifies the category for the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Event.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            Provides the text of this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Event.SourceArn">
            <summary>
            Gets and sets the property SourceArn. 
            <para>
            The Amazon Resource Name (ARN) for the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Event.SourceIdentifier">
            <summary>
            Gets and sets the property SourceIdentifier. 
            <para>
            Provides the identifier for the source of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Event.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            Specifies the source type for this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.EventCategoriesMap">
            <summary>
            Contains the results of a successful invocation of the <a>DescribeEventCategories</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventCategoriesMap.EventCategories">
            <summary>
            Gets and sets the property EventCategories. 
            <para>
            The event categories for the specified source type
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventCategoriesMap.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The source type that the returned categories belong to
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.EventSubscription">
            <summary>
            Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventSubscription.CustomerAwsId">
            <summary>
            Gets and sets the property CustomerAwsId. 
            <para>
            The Amazon customer account associated with the event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventSubscription.CustSubscriptionId">
            <summary>
            Gets and sets the property CustSubscriptionId. 
            <para>
            The event notification subscription Id.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventSubscription.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
            A Boolean value indicating if the subscription is enabled. True indicates the subscription
            is enabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventSubscription.EventCategoriesList">
            <summary>
            Gets and sets the property EventCategoriesList. 
            <para>
            A list of event categories for the event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventSubscription.EventSubscriptionArn">
            <summary>
            Gets and sets the property EventSubscriptionArn. 
            <para>
            The Amazon Resource Name (ARN) for the event subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventSubscription.SnsTopicArn">
            <summary>
            Gets and sets the property SnsTopicArn. 
            <para>
            The topic ARN of the event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventSubscription.SourceIdsList">
            <summary>
            Gets and sets the property SourceIdsList. 
            <para>
            A list of source IDs for the event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventSubscription.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The source type for the event notification subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventSubscription.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the event notification subscription.
            </para>
             
            <para>
            Constraints:
            </para>
             
            <para>
            Can be one of the following: creating | modifying | deleting | active | no-permission
            | topic-not-exist
            </para>
             
            <para>
            The status "no-permission" indicates that Neptune no longer has permission to post
            to the SNS topic. The status "topic-not-exist" indicates that the topic was deleted
            after the subscription was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.EventSubscription.SubscriptionCreationTime">
            <summary>
            Gets and sets the property SubscriptionCreationTime. 
            <para>
            The time the event notification subscription was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException">
            <summary>
            You have exceeded the number of events you can subscribe to.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new EventSubscriptionQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EventSubscriptionQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of EventSubscriptionQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EventSubscriptionQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EventSubscriptionQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EventSubscriptionQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.FailoverDBClusterRequest">
            <summary>
            Container for the parameters to the FailoverDBCluster operation.
            Forces a failover for a DB cluster.
            
             
            <para>
            A failover for a DB cluster promotes one of the Read Replicas (read-only instances)
            in the DB cluster to be the primary instance (the cluster writer).
            </para>
             
            <para>
            Amazon Neptune will automatically fail over to a Read Replica, if one exists, when
            the primary instance fails. You can force a failover when you want to simulate a failure
            of a primary instance for testing. Because each instance in a DB cluster has its own
            endpoint address, you will need to clean up and re-establish any existing connections
            that use those endpoint addresses when the failover is complete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.FailoverDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            A DB cluster identifier to force a failover for. This parameter is not case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing DBCluster.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.FailoverDBClusterRequest.TargetDBInstanceIdentifier">
            <summary>
            Gets and sets the property TargetDBInstanceIdentifier. 
            <para>
            The name of the instance to promote to the primary instance.
            </para>
             
            <para>
            You must specify the instance identifier for an Read Replica in the DB cluster. For
            example, <code>mydbcluster-replica1</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.FailoverDBClusterResponse">
            <summary>
            This is the response object from the FailoverDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.FailoverDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.Filter">
            <summary>
            This type is not currently supported.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Filter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Filter.Values">
            <summary>
            Gets and sets the property Values. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.InstanceQuotaExceededException">
            <summary>
            Request would result in user exceeding the allowed number of DB instances.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InstanceQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new InstanceQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InstanceQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InstanceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InstanceQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of InstanceQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InstanceQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InstanceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InstanceQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InstanceQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InstanceQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InstanceQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InstanceQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InsufficientDBClusterCapacityException">
            <summary>
            The DB cluster does not have enough capacity for the current operation.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBClusterCapacityException.#ctor(System.String)">
            <summary>
            Constructs a new InsufficientDBClusterCapacityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBClusterCapacityException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InsufficientDBClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBClusterCapacityException.#ctor(System.Exception)">
            <summary>
            Construct instance of InsufficientDBClusterCapacityException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBClusterCapacityException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientDBClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBClusterCapacityException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientDBClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBClusterCapacityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InsufficientDBClusterCapacityException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBClusterCapacityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException">
            <summary>
            Specified DB instance class is not available in the specified Availability Zone.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException.#ctor(System.String)">
            <summary>
            Constructs a new InsufficientDBInstanceCapacityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InsufficientDBInstanceCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException.#ctor(System.Exception)">
            <summary>
            Construct instance of InsufficientDBInstanceCapacityException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientDBInstanceCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientDBInstanceCapacityException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InsufficientDBInstanceCapacityException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            <summary>
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException.#ctor(System.String)">
            <summary>
            Constructs a new InsufficientStorageClusterCapacityException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InsufficientStorageClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException.#ctor(System.Exception)">
            <summary>
            Construct instance of InsufficientStorageClusterCapacityException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientStorageClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientStorageClusterCapacityException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InsufficientStorageClusterCapacityException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.AddRoleToDBClusterRequestMarshaller">
            <summary>
            AddRoleToDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddRoleToDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddRoleToDBClusterRequestMarshaller.Marshall(Amazon.Neptune.Model.AddRoleToDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.AddRoleToDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.AddRoleToDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddRoleToDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddRoleToDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddRoleToDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.AddRoleToDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionRequestMarshaller">
            <summary>
            AddSourceIdentifierToSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionRequestMarshaller.Marshall(Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddSourceIdentifierToSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.AddSourceIdentifierToSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller">
            <summary>
            AddTagsToResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller.Marshall(Amazon.Neptune.Model.AddTagsToResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.AddTagsToResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AddTagsToResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.AddTagsToResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionRequestMarshaller">
            <summary>
            ApplyPendingMaintenanceAction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionRequestMarshaller.Marshall(Amazon.Neptune.Model.ApplyPendingMaintenanceActionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ApplyPendingMaintenanceAction operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ApplyPendingMaintenanceActionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.AuthorizationNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AuthorizationNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AuthorizationNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AuthorizationNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.AuthorizationNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller">
            <summary>
            Response Unmarshaller for AvailabilityZone Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.AvailabilityZoneUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CertificateNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CertificateNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CertificateNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CertificateNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CertificateNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CharacterSetUnmarshaller">
            <summary>
            Response Unmarshaller for CharacterSet Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CharacterSetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CharacterSetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CharacterSetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupRequestMarshaller">
            <summary>
            CopyDBClusterParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.CopyDBClusterParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CopyDBClusterParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotRequestMarshaller">
            <summary>
            CopyDBClusterSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotRequestMarshaller.Marshall(Amazon.Neptune.Model.CopyDBClusterSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CopyDBClusterSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBClusterSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBParameterGroupRequestMarshaller">
            <summary>
            CopyDBParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBParameterGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.CopyDBParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CopyDBParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CopyDBParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterEndpointRequestMarshaller">
            <summary>
            CreateDBClusterEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterEndpointRequestMarshaller.Marshall(Amazon.Neptune.Model.CreateDBClusterEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterEndpointRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBClusterEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupRequestMarshaller">
            <summary>
            CreateDBClusterParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.CreateDBClusterParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBClusterParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterRequestMarshaller">
            <summary>
            CreateDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterRequestMarshaller.Marshall(Amazon.Neptune.Model.CreateDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotRequestMarshaller">
            <summary>
            CreateDBClusterSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotRequestMarshaller.Marshall(Amazon.Neptune.Model.CreateDBClusterSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBClusterSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBClusterSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBInstanceRequestMarshaller">
            <summary>
            CreateDBInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBInstanceRequestMarshaller.Marshall(Amazon.Neptune.Model.CreateDBInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBParameterGroupRequestMarshaller">
            <summary>
            CreateDBParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBParameterGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.CreateDBParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBSubnetGroupRequestMarshaller">
            <summary>
            CreateDBSubnetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBSubnetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBSubnetGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.CreateDBSubnetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBSubnetGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBSubnetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDBSubnetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBSubnetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBSubnetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateDBSubnetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateEventSubscriptionRequestMarshaller">
            <summary>
            CreateEventSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateEventSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateEventSubscriptionRequestMarshaller.Marshall(Amazon.Neptune.Model.CreateEventSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateEventSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateEventSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateEventSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateEventSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateEventSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.CreateEventSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterEndpointAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterEndpointNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterEndpointQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterEndpoint Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterEndpointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterMemberUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterMember Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterMemberUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterMemberUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterMemberUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterOptionGroupStatusUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterOptionGroupStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterOptionGroupStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterOptionGroupStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterOptionGroupStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterParameterGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterParameterGroupNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterParameterGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterParameterGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterParameterGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterParameterGroupUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterParameterGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterParameterGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterParameterGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterParameterGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterRoleAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterRoleNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterRoleQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterRole Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterRoleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterSnapshotAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributesResultUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterSnapshotAttributesResult Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributesResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributesResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributesResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterSnapshotAttribute Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotAttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterSnapshotNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotUnmarshaller">
            <summary>
            Response Unmarshaller for DBClusterSnapshot Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterSnapshotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterUnmarshaller">
            <summary>
            Response Unmarshaller for DBCluster Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBClusterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBEngineVersionUnmarshaller">
            <summary>
            Response Unmarshaller for DBEngineVersion Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBEngineVersionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBEngineVersionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBEngineVersionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBInstanceAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBInstanceNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceStatusInfoUnmarshaller">
            <summary>
            Response Unmarshaller for DBInstanceStatusInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceStatusInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceStatusInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceStatusInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceUnmarshaller">
            <summary>
            Response Unmarshaller for DBInstance Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBInstanceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBParameterGroupAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBParameterGroupNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBParameterGroupQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupStatusUnmarshaller">
            <summary>
            Response Unmarshaller for DBParameterGroupStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupUnmarshaller">
            <summary>
            Response Unmarshaller for DBParameterGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBParameterGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSecurityGroupMembershipUnmarshaller">
            <summary>
            Response Unmarshaller for DBSecurityGroupMembership Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSecurityGroupMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSecurityGroupMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSecurityGroupMembershipUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSecurityGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSecurityGroupNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSecurityGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSecurityGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSecurityGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSnapshotAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSnapshotAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSnapshotAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSnapshotAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSnapshotAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSnapshotNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSnapshotNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSnapshotNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSnapshotNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSnapshotNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetGroupAlreadyExistsException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetGroupDoesNotCoverEnoughAZsException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupDoesNotCoverEnoughAZsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetGroupNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetGroupQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBSubnetQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBSubnetQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DBUpgradeDependencyFailureExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DBUpgradeDependencyFailureException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBUpgradeDependencyFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DBUpgradeDependencyFailureExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DBUpgradeDependencyFailureExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterEndpointRequestMarshaller">
            <summary>
            DeleteDBClusterEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterEndpointRequestMarshaller.Marshall(Amazon.Neptune.Model.DeleteDBClusterEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterEndpointRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBClusterEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupRequestMarshaller">
            <summary>
            DeleteDBClusterParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.DeleteDBClusterParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBClusterParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterRequestMarshaller">
            <summary>
            DeleteDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterRequestMarshaller.Marshall(Amazon.Neptune.Model.DeleteDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotRequestMarshaller">
            <summary>
            DeleteDBClusterSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotRequestMarshaller.Marshall(Amazon.Neptune.Model.DeleteDBClusterSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBClusterSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBClusterSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBInstanceRequestMarshaller">
            <summary>
            DeleteDBInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBInstanceRequestMarshaller.Marshall(Amazon.Neptune.Model.DeleteDBInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBParameterGroupRequestMarshaller">
            <summary>
            DeleteDBParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBParameterGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.DeleteDBParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupRequestMarshaller">
            <summary>
            DeleteDBSubnetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.DeleteDBSubnetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDBSubnetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteDBSubnetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteEventSubscriptionRequestMarshaller">
            <summary>
            DeleteEventSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteEventSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteEventSubscriptionRequestMarshaller.Marshall(Amazon.Neptune.Model.DeleteEventSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteEventSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteEventSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteEventSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteEventSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteEventSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DeleteEventSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterEndpointsRequestMarshaller">
            <summary>
            DescribeDBClusterEndpoints Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterEndpointsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterEndpointsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterEndpointsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterEndpointsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusterEndpoints operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterEndpointsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterEndpointsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterEndpointsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsRequestMarshaller">
            <summary>
            DescribeDBClusterParameterGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusterParameterGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParameterGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParametersRequestMarshaller">
            <summary>
            DescribeDBClusterParameters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParametersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParametersRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBClusterParametersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParametersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParametersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusterParameters operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParametersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParametersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterParametersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesRequestMarshaller">
            <summary>
            DescribeDBClusterSnapshotAttributes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusterSnapshotAttributes operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotAttributesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsRequestMarshaller">
            <summary>
            DescribeDBClusterSnapshots Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusterSnapshots operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClusterSnapshotsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClustersRequestMarshaller">
            <summary>
            DescribeDBClusters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClustersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClustersRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBClustersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClustersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClustersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBClusters operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClustersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClustersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBClustersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsRequestMarshaller">
            <summary>
            DescribeDBEngineVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBEngineVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBEngineVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBEngineVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBInstancesRequestMarshaller">
            <summary>
            DescribeDBInstances Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBInstancesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBInstancesRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBInstancesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBInstancesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBInstancesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBInstances operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBInstancesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBInstancesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBInstancesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParameterGroupsRequestMarshaller">
            <summary>
            DescribeDBParameterGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParameterGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParameterGroupsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBParameterGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParameterGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParameterGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBParameterGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParameterGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParameterGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParameterGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParametersRequestMarshaller">
            <summary>
            DescribeDBParameters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParametersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParametersRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBParametersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParametersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParametersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBParameters operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParametersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParametersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBParametersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsRequestMarshaller">
            <summary>
            DescribeDBSubnetGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDBSubnetGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeDBSubnetGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersRequestMarshaller">
            <summary>
            DescribeEngineDefaultClusterParameters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEngineDefaultClusterParameters operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultClusterParametersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultParametersRequestMarshaller">
            <summary>
            DescribeEngineDefaultParameters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultParametersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultParametersRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultParametersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultParametersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEngineDefaultParameters operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultParametersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultParametersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEngineDefaultParametersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventCategoriesRequestMarshaller">
            <summary>
            DescribeEventCategories Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventCategoriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventCategoriesRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeEventCategoriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventCategoriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventCategoriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEventCategories operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventCategoriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventCategoriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventCategoriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller">
            <summary>
            DescribeEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsRequestMarshaller">
            <summary>
            DescribeEventSubscriptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeEventSubscriptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEventSubscriptions operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeEventSubscriptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsRequestMarshaller">
            <summary>
            DescribeOrderableDBInstanceOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeOrderableDBInstanceOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeOrderableDBInstanceOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsRequestMarshaller">
            <summary>
            DescribePendingMaintenanceActions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribePendingMaintenanceActions operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribePendingMaintenanceActionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeValidDBInstanceModificationsRequestMarshaller">
            <summary>
            DescribeValidDBInstanceModifications Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeValidDBInstanceModificationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeValidDBInstanceModificationsRequestMarshaller.Marshall(Amazon.Neptune.Model.DescribeValidDBInstanceModificationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeValidDBInstanceModificationsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeValidDBInstanceModificationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeValidDBInstanceModifications operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeValidDBInstanceModificationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeValidDBInstanceModificationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DescribeValidDBInstanceModificationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DomainMembershipUnmarshaller">
            <summary>
            Response Unmarshaller for DomainMembership Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DomainMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DomainMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DomainMembershipUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DomainNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DomainNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DomainNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DomainNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DomainNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.DoubleRangeUnmarshaller">
            <summary>
            Response Unmarshaller for DoubleRange Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DoubleRangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.DoubleRangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.DoubleRangeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.EndpointUnmarshaller">
            <summary>
            Response Unmarshaller for Endpoint Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EndpointUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.EndpointUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.EngineDefaultsUnmarshaller">
            <summary>
            Response Unmarshaller for EngineDefaults Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EngineDefaultsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EngineDefaultsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.EngineDefaultsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.EventCategoriesMapUnmarshaller">
            <summary>
            Response Unmarshaller for EventCategoriesMap Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EventCategoriesMapUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EventCategoriesMapUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.EventCategoriesMapUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.EventSubscriptionQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EventSubscriptionQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EventSubscriptionQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EventSubscriptionQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.EventSubscriptionQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.EventSubscriptionUnmarshaller">
            <summary>
            Response Unmarshaller for EventSubscription Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EventSubscriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EventSubscriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.EventSubscriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.EventUnmarshaller">
            <summary>
            Response Unmarshaller for Event Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.EventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.EventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.FailoverDBClusterRequestMarshaller">
            <summary>
            FailoverDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.FailoverDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.FailoverDBClusterRequestMarshaller.Marshall(Amazon.Neptune.Model.FailoverDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.FailoverDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.FailoverDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for FailoverDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.FailoverDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.FailoverDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.FailoverDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InstanceQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InstanceQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InstanceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InstanceQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InstanceQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientDBClusterCapacityExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InsufficientDBClusterCapacityException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientDBClusterCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientDBClusterCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientDBClusterCapacityExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientDBInstanceCapacityExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InsufficientDBInstanceCapacityException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientDBInstanceCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientDBInstanceCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientDBInstanceCapacityExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientStorageClusterCapacityExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InsufficientStorageClusterCapacityException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientStorageClusterCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientStorageClusterCapacityExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InsufficientStorageClusterCapacityExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterEndpointStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBClusterEndpointStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterEndpointStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterEndpointStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterEndpointStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterSnapshotStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBClusterSnapshotStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterSnapshotStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterSnapshotStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterSnapshotStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBClusterStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBClusterStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBInstanceStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBInstanceStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBInstanceStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBInstanceStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBInstanceStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBParameterGroupStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBParameterGroupStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBParameterGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBParameterGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBParameterGroupStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSecurityGroupStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBSecurityGroupStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSecurityGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSecurityGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSecurityGroupStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSnapshotStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBSnapshotStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSnapshotStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSnapshotStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSnapshotStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSubnetGroupStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBSubnetGroupStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSubnetGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSubnetGroupStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSubnetGroupStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSubnetStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDBSubnetStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSubnetStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSubnetStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidDBSubnetStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidEventSubscriptionStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidEventSubscriptionStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidEventSubscriptionStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidEventSubscriptionStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidEventSubscriptionStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidRestoreExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRestoreException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidRestoreExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidRestoreExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidRestoreExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidSubnetException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidSubnetExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidVPCNetworkStateException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.InvalidVPCNetworkStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.KMSKeyNotAccessibleExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for KMSKeyNotAccessibleException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.KMSKeyNotAccessibleExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.KMSKeyNotAccessibleExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.KMSKeyNotAccessibleExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Neptune.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterEndpointRequestMarshaller">
            <summary>
            ModifyDBClusterEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterEndpointRequestMarshaller.Marshall(Amazon.Neptune.Model.ModifyDBClusterEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterEndpointRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBClusterEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupRequestMarshaller">
            <summary>
            ModifyDBClusterParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.ModifyDBClusterParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBClusterParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterRequestMarshaller">
            <summary>
            ModifyDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterRequestMarshaller.Marshall(Amazon.Neptune.Model.ModifyDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeRequestMarshaller">
            <summary>
            ModifyDBClusterSnapshotAttribute Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeRequestMarshaller.Marshall(Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBClusterSnapshotAttribute operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBClusterSnapshotAttributeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBInstanceRequestMarshaller">
            <summary>
            ModifyDBInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBInstanceRequestMarshaller.Marshall(Amazon.Neptune.Model.ModifyDBInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBParameterGroupRequestMarshaller">
            <summary>
            ModifyDBParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBParameterGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.ModifyDBParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupRequestMarshaller">
            <summary>
            ModifyDBSubnetGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.ModifyDBSubnetGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyDBSubnetGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyDBSubnetGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyEventSubscriptionRequestMarshaller">
            <summary>
            ModifyEventSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyEventSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyEventSubscriptionRequestMarshaller.Marshall(Amazon.Neptune.Model.ModifyEventSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyEventSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyEventSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyEventSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyEventSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyEventSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ModifyEventSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.OptionGroupMembershipUnmarshaller">
            <summary>
            Response Unmarshaller for OptionGroupMembership Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.OptionGroupMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.OptionGroupMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.OptionGroupMembershipUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.OptionGroupNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for OptionGroupNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.OptionGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.OptionGroupNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.OptionGroupNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.OrderableDBInstanceOptionUnmarshaller">
            <summary>
            Response Unmarshaller for OrderableDBInstanceOption Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.OrderableDBInstanceOptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.OrderableDBInstanceOptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.OrderableDBInstanceOptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ParameterUnmarshaller">
            <summary>
            Response Unmarshaller for Parameter Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ParameterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ParameterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingCloudwatchLogsExportsUnmarshaller">
            <summary>
            Response Unmarshaller for PendingCloudwatchLogsExports Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingCloudwatchLogsExportsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingCloudwatchLogsExportsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingCloudwatchLogsExportsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingMaintenanceActionUnmarshaller">
            <summary>
            Response Unmarshaller for PendingMaintenanceAction Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingMaintenanceActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingMaintenanceActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingMaintenanceActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingModifiedValuesUnmarshaller">
            <summary>
            Response Unmarshaller for PendingModifiedValues Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingModifiedValuesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingModifiedValuesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.PendingModifiedValuesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.PromoteReadReplicaDBClusterRequestMarshaller">
            <summary>
            PromoteReadReplicaDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.PromoteReadReplicaDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.PromoteReadReplicaDBClusterRequestMarshaller.Marshall(Amazon.Neptune.Model.PromoteReadReplicaDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.PromoteReadReplicaDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.PromoteReadReplicaDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PromoteReadReplicaDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.PromoteReadReplicaDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.PromoteReadReplicaDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.PromoteReadReplicaDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ProvisionedIopsNotAvailableInAZExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ProvisionedIopsNotAvailableInAZException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ProvisionedIopsNotAvailableInAZExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ProvisionedIopsNotAvailableInAZExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ProvisionedIopsNotAvailableInAZExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RangeUnmarshaller">
            <summary>
            Response Unmarshaller for Range Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RangeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RangeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RebootDBInstanceRequestMarshaller">
            <summary>
            RebootDBInstance Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RebootDBInstanceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RebootDBInstanceRequestMarshaller.Marshall(Amazon.Neptune.Model.RebootDBInstanceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RebootDBInstanceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RebootDBInstanceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RebootDBInstance operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RebootDBInstanceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RebootDBInstanceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RebootDBInstanceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveRoleFromDBClusterRequestMarshaller">
            <summary>
            RemoveRoleFromDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveRoleFromDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveRoleFromDBClusterRequestMarshaller.Marshall(Amazon.Neptune.Model.RemoveRoleFromDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveRoleFromDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveRoleFromDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveRoleFromDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveRoleFromDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveRoleFromDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveRoleFromDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionRequestMarshaller">
            <summary>
            RemoveSourceIdentifierFromSubscription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Marshall(Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveSourceIdentifierFromSubscription operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller">
            <summary>
            RemoveTagsFromResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller.Marshall(Amazon.Neptune.Model.RemoveTagsFromResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveTagsFromResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RemoveTagsFromResource operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RemoveTagsFromResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupRequestMarshaller">
            <summary>
            ResetDBClusterParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.ResetDBClusterParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetDBClusterParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBClusterParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBParameterGroupRequestMarshaller">
            <summary>
            ResetDBParameterGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBParameterGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBParameterGroupRequestMarshaller.Marshall(Amazon.Neptune.Model.ResetDBParameterGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBParameterGroupRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBParameterGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ResetDBParameterGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBParameterGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBParameterGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ResetDBParameterGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ResourcePendingMaintenanceActionsUnmarshaller">
            <summary>
            Response Unmarshaller for ResourcePendingMaintenanceActions Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResourcePendingMaintenanceActionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ResourcePendingMaintenanceActionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ResourcePendingMaintenanceActionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotRequestMarshaller">
            <summary>
            RestoreDBClusterFromSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotRequestMarshaller.Marshall(Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreDBClusterFromSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterFromSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeRequestMarshaller">
            <summary>
            RestoreDBClusterToPointInTime Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeRequestMarshaller.Marshall(Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreDBClusterToPointInTime operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SharedSnapshotQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SharedSnapshotQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SharedSnapshotQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SharedSnapshotQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SharedSnapshotQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SnapshotQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SnapshotQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SnapshotQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SnapshotQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SnapshotQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSInvalidTopicExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SNSInvalidTopicException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSInvalidTopicExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSInvalidTopicExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSInvalidTopicExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSNoAuthorizationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SNSNoAuthorizationException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSNoAuthorizationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSNoAuthorizationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSNoAuthorizationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSTopicArnNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SNSTopicArnNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSTopicArnNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSTopicArnNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SNSTopicArnNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SourceNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.StartDBClusterRequestMarshaller">
            <summary>
            StartDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StartDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StartDBClusterRequestMarshaller.Marshall(Amazon.Neptune.Model.StartDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.StartDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.StartDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StartDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StartDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.StartDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.StopDBClusterRequestMarshaller">
            <summary>
            StopDBCluster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StopDBClusterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StopDBClusterRequestMarshaller.Marshall(Amazon.Neptune.Model.StopDBClusterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.StopDBClusterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.StopDBClusterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopDBCluster operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StopDBClusterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StopDBClusterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.StopDBClusterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.StorageQuotaExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for StorageQuotaExceededException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StorageQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StorageQuotaExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.StorageQuotaExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.StorageTypeNotSupportedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for StorageTypeNotSupportedException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StorageTypeNotSupportedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.StorageTypeNotSupportedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.StorageTypeNotSupportedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SubnetAlreadyInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubnetAlreadyInUseException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SubnetAlreadyInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SubnetAlreadyInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SubnetAlreadyInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SubnetUnmarshaller">
            <summary>
            Response Unmarshaller for Subnet Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SubnetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionAlreadyExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubscriptionAlreadyExistException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionAlreadyExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionAlreadyExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionAlreadyExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionCategoryNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubscriptionCategoryNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionCategoryNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionCategoryNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionCategoryNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SubscriptionNotFoundException operation
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.SubscriptionNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.TimezoneUnmarshaller">
            <summary>
            Response Unmarshaller for Timezone Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.TimezoneUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.TimezoneUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.TimezoneUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.UpgradeTargetUnmarshaller">
            <summary>
            Response Unmarshaller for UpgradeTarget Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.UpgradeTargetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.UpgradeTargetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.UpgradeTargetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ValidDBInstanceModificationsMessageUnmarshaller">
            <summary>
            Response Unmarshaller for ValidDBInstanceModificationsMessage Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ValidDBInstanceModificationsMessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ValidDBInstanceModificationsMessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ValidDBInstanceModificationsMessageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.ValidStorageOptionsUnmarshaller">
            <summary>
            Response Unmarshaller for ValidStorageOptions Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ValidStorageOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.ValidStorageOptionsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.ValidStorageOptionsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.Internal.MarshallTransformations.VpcSecurityGroupMembershipUnmarshaller">
            <summary>
            Response Unmarshaller for VpcSecurityGroupMembership Object
            </summary>  
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.VpcSecurityGroupMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.Neptune.Model.Internal.MarshallTransformations.VpcSecurityGroupMembershipUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.Neptune.Model.Internal.MarshallTransformations.VpcSecurityGroupMembershipUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException">
            <summary>
            The requested operation cannot be performed on the endpoint while the endpoint is
            in this state.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBClusterEndpointStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBClusterEndpointStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBClusterEndpointStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBClusterEndpointStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBClusterEndpointStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBClusterEndpointStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            <summary>
            The supplied value is not a valid DB cluster snapshot state.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBClusterSnapshotStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBClusterSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBClusterSnapshotStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBClusterSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBClusterSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBClusterSnapshotStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            <summary>
            The DB cluster is not in a valid state.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBClusterStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBClusterStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBClusterStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBClusterStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBClusterStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBClusterStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBClusterStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            <summary>
            The specified DB instance is not in the <i>available</i> state.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBInstanceStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBInstanceStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBInstanceStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBInstanceStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBInstanceStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBInstanceStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBInstanceStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBInstanceStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBInstanceStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBInstanceStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBInstanceStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBInstanceStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBInstanceStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            <summary>
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBParameterGroupStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBParameterGroupStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBParameterGroupStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBParameterGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBParameterGroupStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBParameterGroupStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBParameterGroupStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBParameterGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBParameterGroupStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBParameterGroupStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBParameterGroupStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBParameterGroupStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBParameterGroupStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException">
            <summary>
            The state of the DB security group does not allow deletion.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBSecurityGroupStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBSecurityGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBSecurityGroupStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSecurityGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSecurityGroupStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBSecurityGroupStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidDBSnapshotStateException">
            <summary>
            The state of the DB snapshot does not allow deletion.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSnapshotStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBSnapshotStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSnapshotStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSnapshotStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBSnapshotStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSnapshotStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSnapshotStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSnapshotStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSnapshotStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBSnapshotStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSnapshotStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            <summary>
            The DB subnet group cannot be deleted because it is in use.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBSubnetGroupStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBSubnetGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBSubnetGroupStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSubnetGroupStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSubnetGroupStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBSubnetGroupStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidDBSubnetStateException">
            <summary>
            The DB subnet is not in the <i>available</i> state.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDBSubnetStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDBSubnetStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDBSubnetStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSubnetStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDBSubnetStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDBSubnetStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidDBSubnetStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidEventSubscriptionStateException">
            <summary>
            The event subscription is in an invalid state.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidEventSubscriptionStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidEventSubscriptionStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidEventSubscriptionStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidEventSubscriptionStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidEventSubscriptionStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidEventSubscriptionStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidEventSubscriptionStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEventSubscriptionStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidEventSubscriptionStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEventSubscriptionStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidEventSubscriptionStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidEventSubscriptionStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidEventSubscriptionStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidRestoreException">
            <summary>
            Cannot restore from vpc backup to non-vpc DB instance.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidRestoreException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRestoreException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidRestoreException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRestoreException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidRestoreException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRestoreException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidRestoreException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRestoreException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidRestoreException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRestoreException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidRestoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRestoreException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidRestoreException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidSubnetException">
            <summary>
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidSubnetException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSubnetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidSubnetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidSubnetException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidSubnetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidSubnetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSubnetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidSubnetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSubnetException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidSubnetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            <summary>
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidVPCNetworkStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidVPCNetworkStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidVPCNetworkStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidVPCNetworkStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidVPCNetworkStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidVPCNetworkStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidVPCNetworkStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidVPCNetworkStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidVPCNetworkStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.InvalidVPCNetworkStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            <summary>
            Error accessing KMS key.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.KMSKeyNotAccessibleException.#ctor(System.String)">
            <summary>
            Constructs a new KMSKeyNotAccessibleException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.KMSKeyNotAccessibleException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of KMSKeyNotAccessibleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.KMSKeyNotAccessibleException.#ctor(System.Exception)">
            <summary>
            Construct instance of KMSKeyNotAccessibleException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.KMSKeyNotAccessibleException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of KMSKeyNotAccessibleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.KMSKeyNotAccessibleException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of KMSKeyNotAccessibleException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.KMSKeyNotAccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the KMSKeyNotAccessibleException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.KMSKeyNotAccessibleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Lists all tags on an Amazon Neptune resource.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ListTagsForResourceRequest.Filters">
            <summary>
            Gets and sets the property Filters. 
            <para>
            This parameter is not currently supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ListTagsForResourceRequest.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The Amazon Neptune resource with tags to be listed. This value is an Amazon Resource
            Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ListTagsForResourceResponse.TagList">
            <summary>
            Gets and sets the property TagList. 
            <para>
            List of tags returned by the ListTagsForResource operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBClusterEndpointRequest">
            <summary>
            Container for the parameters to the ModifyDBClusterEndpoint operation.
            Modifies the properties of an endpoint in an Amazon Neptune DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointRequest.DBClusterEndpointIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointIdentifier. 
            <para>
            The identifier of the endpoint to modify. This parameter is stored as a lowercase
            string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointRequest.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointRequest.ExcludedMembers">
            <summary>
            Gets and sets the property ExcludedMembers. 
            <para>
            List of DB instance identifiers that aren't part of the custom endpoint group. All
            other eligible instances are reachable through the custom endpoint. Only relevant
            if the list of static members is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointRequest.StaticMembers">
            <summary>
            Gets and sets the property StaticMembers. 
            <para>
            List of DB instance identifiers that are part of the custom endpoint group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse">
            <summary>
            This data type represents the information you need to connect to an Amazon Aurora
            DB cluster. This data type is used as a response element in the following actions:
            
             <ul> <li> 
            <para>
             <code>CreateDBClusterEndpoint</code> 
            </para>
             </li> <li> 
            <para>
             <code>DescribeDBClusterEndpoints</code> 
            </para>
             </li> <li> 
            <para>
             <code>ModifyDBClusterEndpoint</code> 
            </para>
             </li> <li> 
            <para>
             <code>DeleteDBClusterEndpoint</code> 
            </para>
             </li> </ul> 
            <para>
            For the data structure that represents Amazon RDS DB instance endpoints, see <code>Endpoint</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse.CustomEndpointType">
            <summary>
            Gets and sets the property CustomEndpointType. 
            <para>
            The type associated with a custom endpoint. One of: <code>READER</code>, <code>WRITER</code>,
            <code>ANY</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse.DBClusterEndpointArn">
            <summary>
            Gets and sets the property DBClusterEndpointArn. 
            <para>
            The Amazon Resource Name (ARN) for the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse.DBClusterEndpointIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointIdentifier. 
            <para>
            The identifier associated with the endpoint. This parameter is stored as a lowercase
            string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse.DBClusterEndpointResourceIdentifier">
            <summary>
            Gets and sets the property DBClusterEndpointResourceIdentifier. 
            <para>
            A unique system-generated identifier for an endpoint. It remains the same for the
            whole life of the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier of the DB cluster associated with the endpoint. This parameter
            is stored as a lowercase string.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The DNS address of the endpoint.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse.EndpointType">
            <summary>
            Gets and sets the property EndpointType. 
            <para>
            The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>CUSTOM</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse.ExcludedMembers">
            <summary>
            Gets and sets the property ExcludedMembers. 
            <para>
            List of DB instance identifiers that aren't part of the custom endpoint group. All
            other eligible instances are reachable through the custom endpoint. Only relevant
            if the list of static members is empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse.StaticMembers">
            <summary>
            Gets and sets the property StaticMembers. 
            <para>
            List of DB instance identifiers that are part of the custom endpoint group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterEndpointResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the endpoint. One of: <code>creating</code>, <code>available</code>,
            <code>deleting</code>, <code>inactive</code>, <code>modifying</code>. The <code>inactive</code>
            state applies to an endpoint that cannot be used for a certain kind of cluster, such
            as a <code>writer</code> endpoint for a read-only secondary cluster in a global database.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBClusterParameterGroupRequest">
            <summary>
            Container for the parameters to the ModifyDBClusterParameterGroup operation.
            Modifies the parameters of a DB cluster parameter group. To modify more than one
            parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB cluster associated with the parameter
            group before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the parameter group is used as the default for a new DB cluster. This
            is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the Amazon Neptune console or the <a>DescribeDBClusterParameters</a>
            command to verify that your DB cluster parameter group has been created or modified.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterParameterGroupRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the DB cluster parameter group to modify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterParameterGroupRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            A list of parameters in the DB cluster parameter group to modify.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBClusterParameterGroupResponse">
            <summary>
            This is the response object from the ModifyDBClusterParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterParameterGroupResponse.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the DB cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be 1 to 255 letters or numbers.
            </para>
             </li> <li> 
            <para>
            First character must be a letter
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens
            </para>
             </li> </ul> <note> 
            <para>
            This value is stored as a lowercase string.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBClusterRequest">
            <summary>
            Container for the parameters to the ModifyDBCluster operation.
            Modify a setting for a DB cluster. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.ApplyImmediately">
            <summary>
            Gets and sets the property ApplyImmediately. 
            <para>
            A value that specifies whether the modifications in this request and any pending modifications
            are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the DB cluster. If this parameter is set to <code>false</code>, changes
            to the DB cluster are applied during the next maintenance window.
            </para>
             
            <para>
            The <code>ApplyImmediately</code> parameter only affects <code>NewDBClusterIdentifier</code>
            values. If you set the <code>ApplyImmediately</code> parameter value to false, then
            changes to <code>NewDBClusterIdentifier</code> values are applied during the next
            maintenance window. All other changes are applied immediately, regardless of the value
            of the <code>ApplyImmediately</code> parameter.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            The number of days for which automated backups are retained. You must specify a minimum
            value of 1.
            </para>
             
            <para>
            Default: 1
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be a value from 1 to 35
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.CloudwatchLogsExportConfiguration">
            <summary>
            Gets and sets the property CloudwatchLogsExportConfiguration. 
            <para>
            The configuration setting for the log types to be enabled for export to CloudWatch
            Logs for a specific DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.CopyTagsToSnapshot">
            <summary>
            Gets and sets the property CopyTagsToSnapshot. 
            <para>
             <i>If set to <code>true</code>, tags are copied to any snapshot of the DB cluster
            that is created.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier for the cluster being modified. This parameter is not case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing DBCluster.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the DB cluster parameter group to use for the DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.EnableIAMDatabaseAuthentication">
            <summary>
            Gets and sets the property EnableIAMDatabaseAuthentication. 
            <para>
            True to enable mapping of Amazon Identity and Access Management (IAM) accounts to
            database accounts, and otherwise false.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version number of the database engine to which you want to upgrade. Changing this
            parameter results in an outage. The change is applied during the next maintenance
            window unless the <code>ApplyImmediately</code> parameter is set to true.
            </para>
             
            <para>
            For a list of valid engine versions, see <a href="https://docs.aws.amazon.com/neptune/latest/userguide/engine-releases.html">Engine
            Releases for Amazon Neptune</a>, or call <a href="https://docs.aws.amazon.com/neptune/latest/userguide/api-other-apis.html#DescribeDBEngineVersions">DescribeDBEngineVersions</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.MasterUserPassword">
            <summary>
            Gets and sets the property MasterUserPassword. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.NewDBClusterIdentifier">
            <summary>
            Gets and sets the property NewDBClusterIdentifier. 
            <para>
            The new DB cluster identifier for the DB cluster when renaming a DB cluster. This
            value is stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens
            </para>
             </li> <li> 
            <para>
            The first character must be a letter
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-cluster2</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.OptionGroupName">
            <summary>
            Gets and sets the property OptionGroupName. 
            <para>
             <i>Not supported by Neptune.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port number on which the DB cluster accepts connections.
            </para>
             
            <para>
            Constraints: Value must be <code>1150-65535</code> 
            </para>
             
            <para>
            Default: The same port as the original DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.PreferredBackupWindow">
            <summary>
            Gets and sets the property PreferredBackupWindow. 
            <para>
            The daily time range during which automated backups are created if automated backups
            are enabled, using the <code>BackupRetentionPeriod</code> parameter.
            </para>
             
            <para>
            The default is a 30-minute window selected at random from an 8-hour block of time
            for each Amazon Region.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be in the format <code>hh24:mi-hh24:mi</code>.
            </para>
             </li> <li> 
            <para>
            Must be in Universal Coordinated Time (UTC).
            </para>
             </li> <li> 
            <para>
            Must not conflict with the preferred maintenance window.
            </para>
             </li> <li> 
            <para>
            Must be at least 30 minutes.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            The weekly time range during which system maintenance can occur, in Universal Coordinated
            Time (UTC).
            </para>
             
            <para>
            Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> 
            </para>
             
            <para>
            The default is a 30-minute window selected at random from an 8-hour block of time
            for each Amazon Region, occurring on a random day of the week.
            </para>
             
            <para>
            Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
            </para>
             
            <para>
            Constraints: Minimum 30-minute window.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterRequest.VpcSecurityGroupIds">
            <summary>
            Gets and sets the property VpcSecurityGroupIds. 
            <para>
            A list of VPC security groups that the DB cluster will belong to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBClusterResponse">
            <summary>
            This is the response object from the ModifyDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeRequest">
            <summary>
            Container for the parameters to the ModifyDBClusterSnapshotAttribute operation.
            Adds an attribute and values to, or removes an attribute and values from, a manual
            DB cluster snapshot.
            
             
            <para>
            To share a manual DB cluster snapshot with other Amazon accounts, specify <code>restore</code>
            as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to
            add a list of IDs of the Amazon accounts that are authorized to restore the manual
            DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster
            snapshot public, which means that it can be copied or restored by all Amazon accounts.
            Do not add the <code>all</code> value for any manual DB cluster snapshots that contain
            private information that you don't want available to all Amazon accounts. If a manual
            DB cluster snapshot is encrypted, it can be shared, but only by specifying a list
            of authorized Amazon account IDs for the <code>ValuesToAdd</code> parameter. You can't
            use <code>all</code> as a value for that parameter in this case.
            </para>
             
            <para>
            To view which Amazon accounts have access to copy or restore a manual DB cluster snapshot,
            or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a>
            API action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The name of the DB cluster snapshot attribute to modify.
            </para>
             
            <para>
            To manage authorization for other Amazon accounts to copy or restore a manual DB cluster
            snapshot, set this value to <code>restore</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeRequest.DBClusterSnapshotIdentifier">
            <summary>
            Gets and sets the property DBClusterSnapshotIdentifier. 
            <para>
            The identifier for the DB cluster snapshot to modify the attributes for.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeRequest.ValuesToAdd">
            <summary>
            Gets and sets the property ValuesToAdd. 
            <para>
            A list of DB cluster snapshot attributes to add to the attribute specified by <code>AttributeName</code>.
            </para>
             
            <para>
            To authorize other Amazon accounts to copy or restore a manual DB cluster snapshot,
            set this list to include one or more Amazon account IDs, or <code>all</code> to make
            the manual DB cluster snapshot restorable by any Amazon account. Do not add the <code>all</code>
            value for any manual DB cluster snapshots that contain private information that you
            don't want available to all AWS accounts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeRequest.ValuesToRemove">
            <summary>
            Gets and sets the property ValuesToRemove. 
            <para>
            A list of DB cluster snapshot attributes to remove from the attribute specified by
            <code>AttributeName</code>.
            </para>
             
            <para>
            To remove authorization for other Amazon accounts to copy or restore a manual DB cluster
            snapshot, set this list to include one or more Amazon account identifiers, or <code>all</code>
            to remove authorization for any Amazon account to copy or restore the DB cluster snapshot.
            If you specify <code>all</code>, an Amazon account whose account ID is explicitly
            added to the <code>restore</code> attribute can still copy or restore a manual DB
            cluster snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeResponse">
            <summary>
            This is the response object from the ModifyDBClusterSnapshotAttribute operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeResponse.DBClusterSnapshotAttributesResult">
            <summary>
            Gets and sets the property DBClusterSnapshotAttributesResult.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBInstanceRequest">
            <summary>
            Container for the parameters to the ModifyDBInstance operation.
            Modifies settings for a DB instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request. To learn
            what modifications you can make to your DB instance, call <a>DescribeValidDBInstanceModifications</a>
            before you call <a>ModifyDBInstance</a>.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.AllocatedStorage">
            <summary>
            Gets and sets the property AllocatedStorage. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.AllowMajorVersionUpgrade">
            <summary>
            Gets and sets the property AllowMajorVersionUpgrade. 
            <para>
            Indicates that major version upgrades are allowed. Changing this parameter doesn't
            result in an outage and the change is asynchronously applied as soon as possible.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.ApplyImmediately">
            <summary>
            Gets and sets the property ApplyImmediately. 
            <para>
            Specifies whether the modifications in this request and any pending modifications
            are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the DB instance.
            </para>
             
            <para>
             If this parameter is set to <code>false</code>, changes to the DB instance are applied
            during the next maintenance window. Some parameter changes can cause an outage and
            are applied on the next call to <a>RebootDBInstance</a>, or the next failure reboot.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.AutoMinorVersionUpgrade">
            <summary>
            Gets and sets the property AutoMinorVersionUpgrade. 
            <para>
             Indicates that minor version upgrades are applied automatically to the DB instance
            during the maintenance window. Changing this parameter doesn't result in an outage
            except in the following case and the change is asynchronously applied as soon as possible.
            An outage will result if this parameter is set to <code>true</code> during the maintenance
            window, and a newer minor version is available, and Neptune has enabled auto patching
            for that engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            Not applicable. The retention period for automated backups is managed by the DB cluster.
            For more information, see <a>ModifyDBCluster</a>.
            </para>
             
            <para>
            Default: Uses existing setting
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.CACertificateIdentifier">
            <summary>
            Gets and sets the property CACertificateIdentifier. 
            <para>
            Indicates the certificate that needs to be associated with the instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.CloudwatchLogsExportConfiguration">
            <summary>
            Gets and sets the property CloudwatchLogsExportConfiguration. 
            <para>
            The configuration setting for the log types to be enabled for export to CloudWatch
            Logs for a specific DB instance or DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.CopyTagsToSnapshot">
            <summary>
            Gets and sets the property CopyTagsToSnapshot. 
            <para>
            True to copy all tags from the DB instance to snapshots of the DB instance, and otherwise
            false. The default is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
            The new compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>.
            Not all DB instance classes are available in all AWS Regions.
            </para>
             
            <para>
            If you modify the DB instance class, an outage occurs during the change. The change
            is applied during the next maintenance window, unless <code>ApplyImmediately</code>
            is specified as <code>true</code> for this request.
            </para>
             
            <para>
            Default: Uses existing setting
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The DB instance identifier. This value is stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing DBInstance.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            The name of the DB parameter group to apply to the DB instance. Changing this setting
            doesn't result in an outage. The parameter group name itself is changed immediately,
            but the actual parameter changes are not applied until you reboot the instance without
            failover. The db instance will NOT be rebooted automatically and the parameter changes
            will NOT be applied during the next maintenance window.
            </para>
             
            <para>
            Default: Uses existing setting
            </para>
             
            <para>
            Constraints: The DB parameter group must be in the same DB parameter group family
            as this DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.DBPortNumber">
            <summary>
            Gets and sets the property DBPortNumber. 
            <para>
            The port number on which the database accepts connections.
            </para>
             
            <para>
            The value of the <code>DBPortNumber</code> parameter must not match any of the port
            values specified for options in the option group for the DB instance.
            </para>
             
            <para>
            Your database will restart when you change the <code>DBPortNumber</code> value regardless
            of the value of the <code>ApplyImmediately</code> parameter.
            </para>
             
            <para>
             Default: <code>8182</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.DBSecurityGroups">
            <summary>
            Gets and sets the property DBSecurityGroups. 
            <para>
            A list of DB security groups to authorize on this DB instance. Changing this setting
            doesn't result in an outage and the change is asynchronously applied as soon as possible.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match existing DBSecurityGroups.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The new DB subnet group for the DB instance. You can use this parameter to move your
            DB instance to a different VPC.
            </para>
             
            <para>
            Changing the subnet group causes an outage during the change. The change is applied
            during the next maintenance window, unless you specify <code>true</code> for the <code>ApplyImmediately</code>
            parameter.
            </para>
             
            <para>
            Constraints: If supplied, must match the name of an existing DBSubnetGroup.
            </para>
             
            <para>
            Example: <code>mySubnetGroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            A value that indicates whether the DB instance has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. See <a href="https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html">Deleting
            a DB Instance</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            Not supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.DomainIAMRoleName">
            <summary>
            Gets and sets the property DomainIAMRoleName. 
            <para>
            Not supported
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.EnableIAMDatabaseAuthentication">
            <summary>
            Gets and sets the property EnableIAMDatabaseAuthentication. 
            <para>
            True to enable mapping of Amazon Identity and Access Management (IAM) accounts to
            database accounts, and otherwise false.
            </para>
             
            <para>
            You can enable IAM database authentication for the following database engines
            </para>
             
            <para>
            Not applicable. Mapping Amazon IAM accounts to database accounts is managed by the
            DB cluster. For more information, see <a>ModifyDBCluster</a>.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.EnablePerformanceInsights">
            <summary>
            Gets and sets the property EnablePerformanceInsights. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version number of the database engine to upgrade to. Currently, setting this parameter
            has no effect. To upgrade your database engine to the most recent release, use the
            <a>ApplyPendingMaintenanceAction</a> API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            The new Provisioned IOPS (I/O operations per second) value for the instance.
            </para>
             
            <para>
            Changing this setting doesn't result in an outage and the change is applied during
            the next maintenance window unless the <code>ApplyImmediately</code> parameter is
            set to <code>true</code> for this request.
            </para>
             
            <para>
            Default: Uses existing setting
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.LicenseModel">
            <summary>
            Gets and sets the property LicenseModel. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.MasterUserPassword">
            <summary>
            Gets and sets the property MasterUserPassword. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.MonitoringInterval">
            <summary>
            Gets and sets the property MonitoringInterval. 
            <para>
            The interval, in seconds, between points when Enhanced Monitoring metrics are collected
            for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.
            The default is 0.
            </para>
             
            <para>
            If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code>
            to a value other than 0.
            </para>
             
            <para>
            Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.MonitoringRoleArn">
            <summary>
            Gets and sets the property MonitoringRoleArn. 
            <para>
            The ARN for the IAM role that permits Neptune to send enhanced monitoring metrics
            to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.
            </para>
             
            <para>
            If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply
            a <code>MonitoringRoleArn</code> value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.MultiAZ">
            <summary>
            Gets and sets the property MultiAZ. 
            <para>
            Specifies if the DB instance is a Multi-AZ deployment. Changing this parameter doesn't
            result in an outage and the change is applied during the next maintenance window unless
            the <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.NewDBInstanceIdentifier">
            <summary>
            Gets and sets the property NewDBInstanceIdentifier. 
            <para>
             The new DB instance identifier for the DB instance when renaming a DB instance. When
            you change the DB instance identifier, an instance reboot will occur immediately if
            you set <code>Apply Immediately</code> to true, or will occur during the next maintenance
            window if <code>Apply Immediately</code> to false. This value is stored as a lowercase
            string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens.
            </para>
             </li> <li> 
            <para>
            The first character must be a letter.
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens.
            </para>
             </li> </ul> 
            <para>
            Example: <code>mydbinstance</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.OptionGroupName">
            <summary>
            Gets and sets the property OptionGroupName. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.PerformanceInsightsKMSKeyId">
            <summary>
            Gets and sets the property PerformanceInsightsKMSKeyId. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.PreferredBackupWindow">
            <summary>
            Gets and sets the property PreferredBackupWindow. 
            <para>
             The daily time range during which automated backups are created if automated backups
            are enabled.
            </para>
             
            <para>
            Not applicable. The daily time range for creating automated backups is managed by
            the DB cluster. For more information, see <a>ModifyDBCluster</a>.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be in the format hh24:mi-hh24:mi
            </para>
             </li> <li> 
            <para>
            Must be in Universal Time Coordinated (UTC)
            </para>
             </li> <li> 
            <para>
            Must not conflict with the preferred maintenance window
            </para>
             </li> <li> 
            <para>
            Must be at least 30 minutes
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.PreferredMaintenanceWindow">
            <summary>
            Gets and sets the property PreferredMaintenanceWindow. 
            <para>
            The weekly time range (in UTC) during which system maintenance can occur, which might
            result in an outage. Changing this parameter doesn't result in an outage, except in
            the following situation, and the change is asynchronously applied as soon as possible.
            If there are pending actions that cause a reboot, and the maintenance window is changed
            to include the current time, then changing this parameter will cause a reboot of the
            DB instance. If moving this window to the current time, there must be at least 30
            minutes between the current time and end of the window to ensure pending changes are
            applied.
            </para>
             
            <para>
            Default: Uses existing setting
            </para>
             
            <para>
            Format: ddd:hh24:mi-ddd:hh24:mi
            </para>
             
            <para>
            Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun
            </para>
             
            <para>
            Constraints: Must be at least 30 minutes
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.PromotionTier">
            <summary>
            Gets and sets the property PromotionTier. 
            <para>
            A value that specifies the order in which a Read Replica is promoted to the primary
            instance after a failure of the existing primary instance.
            </para>
             
            <para>
            Default: 1
            </para>
             
            <para>
            Valid Values: 0 - 15
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.PubliclyAccessible">
            <summary>
            Gets and sets the property PubliclyAccessible. 
            <para>
            This flag should no longer be used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            Not supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.TdeCredentialArn">
            <summary>
            Gets and sets the property TdeCredentialArn. 
            <para>
            The ARN from the key store with which to associate the instance for TDE encryption.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.TdeCredentialPassword">
            <summary>
            Gets and sets the property TdeCredentialPassword. 
            <para>
            The password for the given ARN from the key store in order to access the device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceRequest.VpcSecurityGroupIds">
            <summary>
            Gets and sets the property VpcSecurityGroupIds. 
            <para>
            A list of EC2 VPC security groups to authorize on this DB instance. This change is
            asynchronously applied as soon as possible.
            </para>
             
            <para>
            Not applicable. The associated list of EC2 VPC security groups is managed by the DB
            cluster. For more information, see <a>ModifyDBCluster</a>.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match existing VpcSecurityGroupIds.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBInstanceResponse">
            <summary>
            This is the response object from the ModifyDBInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBInstanceResponse.DBInstance">
            <summary>
            Gets and sets the property DBInstance.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBParameterGroupRequest">
            <summary>
            Container for the parameters to the ModifyDBParameterGroup operation.
            Modifies the parameters of a DB parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB instance associated with the parameter
            group before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you modify a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the modify action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBParameterGroupRequest.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            The name of the DB parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the name of an existing DBParameterGroup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBParameterGroupRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            An array of parameter names, values, and the apply method for the parameter update.
            At least one parameter name, value, and apply method must be supplied; subsequent
            arguments are optional. A maximum of 20 parameters can be modified in a single request.
            </para>
             
            <para>
            Valid Values (for the application method): <code>immediate | pending-reboot</code>
            
            </para>
             <note> 
            <para>
            You can use the immediate value with dynamic parameters only. You can use the pending-reboot
            value for both dynamic and static parameters, and changes are applied when you reboot
            the DB instance without failover.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBParameterGroupResponse">
            <summary>
            This is the response object from the ModifyDBParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBParameterGroupResponse.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            Provides the name of the DB parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBSubnetGroupRequest">
            <summary>
            Container for the parameters to the ModifyDBSubnetGroup operation.
            Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet
            in at least two AZs in the Amazon Region.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBSubnetGroupRequest.DBSubnetGroupDescription">
            <summary>
            Gets and sets the property DBSubnetGroupDescription. 
            <para>
            The description for the DB subnet group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBSubnetGroupRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name for the DB subnet group. This value is stored as a lowercase string. You
            can't modify the default subnet group.
            </para>
             
            <para>
            Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBSubnetGroupRequest.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The EC2 subnet IDs for the DB subnet group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyDBSubnetGroupResponse">
            <summary>
            This is the response object from the ModifyDBSubnetGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyDBSubnetGroupResponse.DBSubnetGroup">
            <summary>
            Gets and sets the property DBSubnetGroup.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyEventSubscriptionRequest">
            <summary>
            Container for the parameters to the ModifyEventSubscription operation.
            Modifies an existing event notification subscription. Note that you can't modify the
            source identifiers using this call; to change source identifiers for a subscription,
            use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a>
            calls.
            
             
            <para>
            You can see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyEventSubscriptionRequest.Enabled">
            <summary>
            Gets and sets the property Enabled. 
            <para>
             A Boolean value; set to <b>true</b> to activate the subscription.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyEventSubscriptionRequest.EventCategories">
            <summary>
            Gets and sets the property EventCategories. 
            <para>
             A list of event categories for a SourceType that you want to subscribe to. You can
            see a list of the categories for a given SourceType by using the <b>DescribeEventCategories</b>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyEventSubscriptionRequest.SnsTopicArn">
            <summary>
            Gets and sets the property SnsTopicArn. 
            <para>
            The Amazon Resource Name (ARN) of the SNS topic created for event notification. The
            ARN is created by Amazon SNS when you create a topic and subscribe to it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyEventSubscriptionRequest.SourceType">
            <summary>
            Gets and sets the property SourceType. 
            <para>
            The type of source that is generating the events. For example, if you want to be notified
            of events generated by a DB instance, you would set this parameter to db-instance.
            if this value is not specified, all events are returned.
            </para>
             
            <para>
            Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyEventSubscriptionRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the event notification subscription.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ModifyEventSubscriptionResponse">
            <summary>
            This is the response object from the ModifyEventSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ModifyEventSubscriptionResponse.EventSubscription">
            <summary>
            Gets and sets the property EventSubscription.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.OptionGroupMembership">
            <summary>
            Not supported by Neptune.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OptionGroupMembership.OptionGroupName">
            <summary>
            Gets and sets the property OptionGroupName. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OptionGroupMembership.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            <summary>
            The designated option group could not be found.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.OptionGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new OptionGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.OptionGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of OptionGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.OptionGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of OptionGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.OptionGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OptionGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.OptionGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OptionGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.OptionGroupNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the OptionGroupNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.OptionGroupNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.OrderableDBInstanceOption">
            <summary>
            Contains a list of available options for a DB instance.
            
             
            <para>
             This data type is used as a response element in the <a>DescribeOrderableDBInstanceOptions</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            A list of Availability Zones for a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
            The DB instance class for a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The engine type of a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The engine version of a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.LicenseModel">
            <summary>
            Gets and sets the property LicenseModel. 
            <para>
            The license model for a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.MaxIopsPerDbInstance">
            <summary>
            Gets and sets the property MaxIopsPerDbInstance. 
            <para>
            Maximum total provisioned IOPS for a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.MaxIopsPerGib">
            <summary>
            Gets and sets the property MaxIopsPerGib. 
            <para>
            Maximum provisioned IOPS per GiB for a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.MaxStorageSize">
            <summary>
            Gets and sets the property MaxStorageSize. 
            <para>
            Maximum storage size for a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.MinIopsPerDbInstance">
            <summary>
            Gets and sets the property MinIopsPerDbInstance. 
            <para>
            Minimum total provisioned IOPS for a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.MinIopsPerGib">
            <summary>
            Gets and sets the property MinIopsPerGib. 
            <para>
            Minimum provisioned IOPS per GiB for a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.MinStorageSize">
            <summary>
            Gets and sets the property MinStorageSize. 
            <para>
            Minimum storage size for a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.MultiAZCapable">
            <summary>
            Gets and sets the property MultiAZCapable. 
            <para>
            Indicates whether a DB instance is Multi-AZ capable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.ReadReplicaCapable">
            <summary>
            Gets and sets the property ReadReplicaCapable. 
            <para>
            Indicates whether a DB instance can have a Read Replica.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            Indicates the storage type for a DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.SupportsEnhancedMonitoring">
            <summary>
            Gets and sets the property SupportsEnhancedMonitoring. 
            <para>
            Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to
            60 seconds.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.SupportsIAMDatabaseAuthentication">
            <summary>
            Gets and sets the property SupportsIAMDatabaseAuthentication. 
            <para>
            Indicates whether a DB instance supports IAM database authentication.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.SupportsIops">
            <summary>
            Gets and sets the property SupportsIops. 
            <para>
            Indicates whether a DB instance supports provisioned IOPS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.SupportsPerformanceInsights">
            <summary>
            Gets and sets the property SupportsPerformanceInsights. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.SupportsStorageEncryption">
            <summary>
            Gets and sets the property SupportsStorageEncryption. 
            <para>
            Indicates whether a DB instance supports encrypted storage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.OrderableDBInstanceOption.Vpc">
            <summary>
            Gets and sets the property Vpc. 
            <para>
            Indicates whether a DB instance is in a VPC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.Parameter">
            <summary>
            Specifies a parameter.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Parameter.AllowedValues">
            <summary>
            Gets and sets the property AllowedValues. 
            <para>
            Specifies the valid range of values for the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Parameter.ApplyMethod">
            <summary>
            Gets and sets the property ApplyMethod. 
            <para>
            Indicates when to apply parameter updates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Parameter.ApplyType">
            <summary>
            Gets and sets the property ApplyType. 
            <para>
            Specifies the engine specific parameters type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Parameter.DataType">
            <summary>
            Gets and sets the property DataType. 
            <para>
            Specifies the valid data type for the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Parameter.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Provides a description of the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Parameter.IsModifiable">
            <summary>
            Gets and sets the property IsModifiable. 
            <para>
             Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can
            be modified. Some parameters have security or operational implications that prevent
            them from being changed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Parameter.MinimumEngineVersion">
            <summary>
            Gets and sets the property MinimumEngineVersion. 
            <para>
            The earliest engine version to which the parameter can apply.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Parameter.ParameterName">
            <summary>
            Gets and sets the property ParameterName. 
            <para>
            Specifies the name of the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Parameter.ParameterValue">
            <summary>
            Gets and sets the property ParameterValue. 
            <para>
            Specifies the value of the parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Parameter.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            Indicates the source of the parameter value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.PendingCloudwatchLogsExports">
            <summary>
            A list of the log types whose configuration is still pending. In other words, these
            log types are in the process of being activated or deactivated.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingCloudwatchLogsExports.LogTypesToDisable">
            <summary>
            Gets and sets the property LogTypesToDisable. 
            <para>
            Log types that are in the process of being enabled. After they are enabled, these
            log types are exported to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingCloudwatchLogsExports.LogTypesToEnable">
            <summary>
            Gets and sets the property LogTypesToEnable. 
            <para>
            Log types that are in the process of being deactivated. After they are deactivated,
            these log types aren't exported to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.PendingMaintenanceAction">
            <summary>
            Provides information about a pending maintenance action for a resource.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingMaintenanceAction.Action">
            <summary>
            Gets and sets the property Action. 
            <para>
            The type of pending maintenance action that is available for the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingMaintenanceAction.AutoAppliedAfterDate">
            <summary>
            Gets and sets the property AutoAppliedAfterDate. 
            <para>
            The date of the maintenance window when the action is applied. The maintenance action
            is applied to the resource during its first maintenance window after this date. If
            this date is specified, any <code>next-maintenance</code> opt-in requests are ignored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingMaintenanceAction.CurrentApplyDate">
            <summary>
            Gets and sets the property CurrentApplyDate. 
            <para>
            The effective date when the pending maintenance action is applied to the resource.
            This date takes into account opt-in requests received from the <a>ApplyPendingMaintenanceAction</a>
            API, the <code>AutoAppliedAfterDate</code>, and the <code>ForcedApplyDate</code>.
            This value is blank if an opt-in request has not been received and nothing has been
            specified as <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingMaintenanceAction.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description providing more detail about the maintenance action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingMaintenanceAction.ForcedApplyDate">
            <summary>
            Gets and sets the property ForcedApplyDate. 
            <para>
            The date when the maintenance action is automatically applied. The maintenance action
            is applied to the resource on this date regardless of the maintenance window for the
            resource. If this date is specified, any <code>immediate</code> opt-in requests are
            ignored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingMaintenanceAction.OptInStatus">
            <summary>
            Gets and sets the property OptInStatus. 
            <para>
            Indicates the type of opt-in request that has been received for the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.PendingModifiedValues">
            <summary>
            This data type is used as a response element in the <a>ModifyDBInstance</a> action.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.AllocatedStorage">
            <summary>
            Gets and sets the property AllocatedStorage. 
            <para>
             Contains the new <code>AllocatedStorage</code> size for the DB instance that will
            be applied or is currently being applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.BackupRetentionPeriod">
            <summary>
            Gets and sets the property BackupRetentionPeriod. 
            <para>
            Specifies the pending number of days for which automated backups are retained.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.CACertificateIdentifier">
            <summary>
            Gets and sets the property CACertificateIdentifier. 
            <para>
            Specifies the identifier of the CA certificate for the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.DBInstanceClass">
            <summary>
            Gets and sets the property DBInstanceClass. 
            <para>
             Contains the new <code>DBInstanceClass</code> for the DB instance that will be applied
            or is currently being applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
             Contains the new <code>DBInstanceIdentifier</code> for the DB instance that will
            be applied or is currently being applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The new DB subnet group for the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            Indicates the database engine version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.Iops">
            <summary>
            Gets and sets the property Iops. 
            <para>
            Specifies the new Provisioned IOPS value for the DB instance that will be applied
            or is currently being applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.LicenseModel">
            <summary>
            Gets and sets the property LicenseModel. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.MasterUserPassword">
            <summary>
            Gets and sets the property MasterUserPassword. 
            <para>
            Not supported by Neptune.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.MultiAZ">
            <summary>
            Gets and sets the property MultiAZ. 
            <para>
            Indicates that the Single-AZ DB instance is to change to a Multi-AZ deployment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.PendingCloudwatchLogsExports">
            <summary>
            Gets and sets the property PendingCloudwatchLogsExports. 
            <para>
            This <code>PendingCloudwatchLogsExports</code> structure specifies pending changes
            to which CloudWatch logs are enabled and which are disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            Specifies the pending port for the DB instance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PendingModifiedValues.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            Specifies the storage type to be associated with the DB instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.PromoteReadReplicaDBClusterRequest">
            <summary>
            Container for the parameters to the PromoteReadReplicaDBCluster operation.
            Not supported.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PromoteReadReplicaDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            Not supported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.PromoteReadReplicaDBClusterResponse">
            <summary>
            This is the response object from the PromoteReadReplicaDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.PromoteReadReplicaDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException">
            <summary>
            Provisioned IOPS not available in the specified Availability Zone.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException.#ctor(System.String)">
            <summary>
            Constructs a new ProvisionedIopsNotAvailableInAZException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ProvisionedIopsNotAvailableInAZException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException.#ctor(System.Exception)">
            <summary>
            Construct instance of ProvisionedIopsNotAvailableInAZException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ProvisionedIopsNotAvailableInAZException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ProvisionedIopsNotAvailableInAZException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ProvisionedIopsNotAvailableInAZException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.Range">
            <summary>
            A range of integer values.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Range.From">
            <summary>
            Gets and sets the property From. 
            <para>
            The minimum value in the range.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Range.Step">
            <summary>
            Gets and sets the property Step. 
            <para>
            The step value for the range. For example, if you have a range of 5,000 to 10,000,
            with a step value of 1,000, the valid values start at 5,000 and step up by 1,000.
            Even though 7,500 is within the range, it isn't a valid value for the range. The valid
            values are 5,000, 6,000, 7,000, 8,000...
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Range.To">
            <summary>
            Gets and sets the property To. 
            <para>
            The maximum value in the range.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RebootDBInstanceRequest">
            <summary>
            Container for the parameters to the RebootDBInstance operation.
            You might need to reboot your DB instance, usually for maintenance reasons. For example,
            if you make certain modifications, or if you change the DB parameter group associated
            with the DB instance, you must reboot the instance for the changes to take effect.
            
             
            <para>
            Rebooting a DB instance restarts the database engine service. Rebooting a DB instance
            results in a momentary outage, during which the DB instance status is set to rebooting.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RebootDBInstanceRequest.DBInstanceIdentifier">
            <summary>
            Gets and sets the property DBInstanceIdentifier. 
            <para>
            The DB instance identifier. This parameter is stored as a lowercase string.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing DBInstance.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RebootDBInstanceRequest.ForceFailover">
            <summary>
            Gets and sets the property ForceFailover. 
            <para>
             When <code>true</code>, the reboot is conducted through a MultiAZ failover.
            </para>
             
            <para>
            Constraint: You can't specify <code>true</code> if the instance is not configured
            for MultiAZ.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RebootDBInstanceResponse">
            <summary>
            This is the response object from the RebootDBInstance operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RebootDBInstanceResponse.DBInstance">
            <summary>
            Gets and sets the property DBInstance.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RemoveRoleFromDBClusterRequest">
            <summary>
            Container for the parameters to the RemoveRoleFromDBCluster operation.
            Disassociates an Identity and Access Management (IAM) role from a DB cluster.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RemoveRoleFromDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The name of the DB cluster to disassociate the IAM role from.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RemoveRoleFromDBClusterRequest.FeatureName">
            <summary>
            Gets and sets the property FeatureName. 
            <para>
            The name of the feature for the DB cluster that the IAM role is to be disassociated
            from. For the list of supported feature names, see <a>DBEngineVersion</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RemoveRoleFromDBClusterRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB cluster,
            for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RemoveRoleFromDBClusterResponse">
            <summary>
            This is the response object from the RemoveRoleFromDBCluster operation.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionRequest">
            <summary>
            Container for the parameters to the RemoveSourceIdentifierFromSubscription operation.
            Removes a source identifier from an existing event notification subscription.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionRequest.SourceIdentifier">
            <summary>
            Gets and sets the property SourceIdentifier. 
            <para>
             The source identifier to be removed from the subscription, such as the <b>DB instance
            identifier</b> for a DB instance or the name of a security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionRequest.SubscriptionName">
            <summary>
            Gets and sets the property SubscriptionName. 
            <para>
            The name of the event notification subscription you want to remove a source identifier
            from.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionResponse">
            <summary>
            This is the response object from the RemoveSourceIdentifierFromSubscription operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionResponse.EventSubscription">
            <summary>
            Gets and sets the property EventSubscription.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RemoveTagsFromResourceRequest">
            <summary>
            Container for the parameters to the RemoveTagsFromResource operation.
            Removes metadata tags from an Amazon Neptune resource.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RemoveTagsFromResourceRequest.ResourceName">
            <summary>
            Gets and sets the property ResourceName. 
            <para>
            The Amazon Neptune resource that the tags are removed from. This value is an Amazon
            Resource Name (ARN). For information about creating an ARN, see <a href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RemoveTagsFromResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The tag key (name) of the tag to be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RemoveTagsFromResourceResponse">
            <summary>
            This is the response object from the RemoveTagsFromResource operation.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ResetDBClusterParameterGroupRequest">
            <summary>
            Container for the parameters to the ResetDBClusterParameterGroup operation.
            Modifies the parameters of a DB cluster parameter group to the default value. To
            reset specific parameters submit a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify
            the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
             
            <para>
             When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a>
            for every DB instance in your DB cluster that you want the updated static parameter
            to apply to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ResetDBClusterParameterGroupRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the DB cluster parameter group to reset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ResetDBClusterParameterGroupRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            A list of parameter names in the DB cluster parameter group to reset to the default
            values. You can't use this parameter if the <code>ResetAllParameters</code> parameter
            is set to <code>true</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ResetDBClusterParameterGroupRequest.ResetAllParameters">
            <summary>
            Gets and sets the property ResetAllParameters. 
            <para>
            A value that is set to <code>true</code> to reset all parameters in the DB cluster
            parameter group to their default values, and <code>false</code> otherwise. You can't
            use this parameter if there is a list of parameter names specified for the <code>Parameters</code>
            parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ResetDBClusterParameterGroupResponse">
            <summary>
            This is the response object from the ResetDBClusterParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ResetDBClusterParameterGroupResponse.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the DB cluster parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be 1 to 255 letters or numbers.
            </para>
             </li> <li> 
            <para>
            First character must be a letter
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens
            </para>
             </li> </ul> <note> 
            <para>
            This value is stored as a lowercase string.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ResetDBParameterGroupRequest">
            <summary>
            Container for the parameters to the ResetDBParameterGroup operation.
            Modifies the parameters of a DB parameter group to the engine/system default value.
            To reset specific parameters, provide a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the
            <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters.
            When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <code>RebootDBInstance</code> request.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ResetDBParameterGroupRequest.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            The name of the DB parameter group.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the name of an existing DBParameterGroup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ResetDBParameterGroupRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            To reset the entire DB parameter group, specify the <code>DBParameterGroup</code>
            name and <code>ResetAllParameters</code> parameters. To reset specific parameters,
            provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>.
            A maximum of 20 parameters can be modified in a single request.
            </para>
             
            <para>
            Valid Values (for Apply method): <code>pending-reboot</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ResetDBParameterGroupRequest.ResetAllParameters">
            <summary>
            Gets and sets the property ResetAllParameters. 
            <para>
            Specifies whether (<code>true</code>) or not (<code>false</code>) to reset all parameters
            in the DB parameter group to default values.
            </para>
             
            <para>
            Default: <code>true</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ResetDBParameterGroupResponse">
            <summary>
            This is the response object from the ResetDBParameterGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ResetDBParameterGroupResponse.DBParameterGroupName">
            <summary>
            Gets and sets the property DBParameterGroupName. 
            <para>
            Provides the name of the DB parameter group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ResourceNotFoundException">
            <summary>
            The specified resource ID was not found.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.ResourcePendingMaintenanceActions">
            <summary>
            Describes the pending maintenance actions for a resource.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ResourcePendingMaintenanceActions.PendingMaintenanceActionDetails">
            <summary>
            Gets and sets the property PendingMaintenanceActionDetails. 
            <para>
            A list that provides details about the pending maintenance actions for the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ResourcePendingMaintenanceActions.ResourceIdentifier">
            <summary>
            Gets and sets the property ResourceIdentifier. 
            <para>
            The ARN of the resource that has pending maintenance actions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest">
            <summary>
            Container for the parameters to the RestoreDBClusterFromSnapshot operation.
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
            
             
            <para>
            If a DB snapshot is specified, the target DB cluster is created from the source DB
            snapshot with a default configuration and default security group.
            </para>
             
            <para>
            If a DB cluster snapshot is specified, the target DB cluster is created from the source
            DB cluster restore point with the same configuration as the original source DB cluster,
            except that the new DB cluster is created with the default security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            Provides the list of EC2 Availability Zones that instances in the restored DB cluster
            can be created in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.CopyTagsToSnapshot">
            <summary>
            Gets and sets the property CopyTagsToSnapshot. 
            <para>
             <i>If set to <code>true</code>, tags are copied to any snapshot of the restored DB
            cluster that is created.</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName. 
            <para>
            Not supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The name of the DB cluster to create from the DB snapshot or DB cluster snapshot.
            This parameter isn't case-sensitive.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens
            </para>
             </li> <li> 
            <para>
            First character must be a letter
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens
            </para>
             </li> </ul> 
            <para>
            Example: <code>my-snapshot-id</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the DB cluster parameter group to associate with the new DB cluster.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the name of an existing DBClusterParameterGroup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The name of the DB subnet group to use for the new DB cluster.
            </para>
             
            <para>
            Constraints: If supplied, must match the name of an existing DBSubnetGroup.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.EnableCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnableCloudwatchLogsExports. 
            <para>
            The list of logs that the restored DB cluster is to export to Amazon CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.EnableIAMDatabaseAuthentication">
            <summary>
            Gets and sets the property EnableIAMDatabaseAuthentication. 
            <para>
            True to enable mapping of Amazon Identity and Access Management (IAM) accounts to
            database accounts, and otherwise false.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The database engine to use for the new DB cluster.
            </para>
             
            <para>
            Default: The same as source
            </para>
             
            <para>
            Constraint: Must be compatible with the engine of the source
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version of the database engine to use for the new DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon KMS key identifier to use when restoring an encrypted DB cluster from a
            DB snapshot or DB cluster snapshot.
            </para>
             
            <para>
            The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are restoring a DB cluster with the same Amazon account that owns the KMS encryption
            key used to encrypt the new DB cluster, then you can use the KMS key alias instead
            of the ARN for the KMS encryption key.
            </para>
             
            <para>
            If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following
            will occur:
            </para>
             <ul> <li> 
            <para>
            If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted,
            then the restored DB cluster is encrypted using the KMS key that was used to encrypt
            the DB snapshot or DB cluster snapshot.
            </para>
             </li> <li> 
            <para>
            If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is not
            encrypted, then the restored DB cluster is not encrypted.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.OptionGroupName">
            <summary>
            Gets and sets the property OptionGroupName. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port number on which the new DB cluster accepts connections.
            </para>
             
            <para>
            Constraints: Value must be <code>1150-65535</code> 
            </para>
             
            <para>
            Default: The same port as the original DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.SnapshotIdentifier">
            <summary>
            Gets and sets the property SnapshotIdentifier. 
            <para>
            The identifier for the DB snapshot or DB cluster snapshot to restore from.
            </para>
             
            <para>
            You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster
            snapshot. However, you can use only the ARN to specify a DB snapshot.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing Snapshot.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be assigned to the restored DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest.VpcSecurityGroupIds">
            <summary>
            Gets and sets the property VpcSecurityGroupIds. 
            <para>
            A list of VPC security groups that the new DB cluster will belong to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotResponse">
            <summary>
            This is the response object from the RestoreDBClusterFromSnapshot operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterFromSnapshotResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest">
            <summary>
            Container for the parameters to the RestoreDBClusterToPointInTime operation.
            Restores a DB cluster to an arbitrary point in time. Users can restore to any point
            in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target DB cluster is created from the source DB cluster with the same configuration
            as the original DB cluster, except that the new DB cluster is created with the default
            DB security group.
            
             <note> 
            <para>
            This action only restores the DB cluster, not the DB instances for that DB cluster.
            You must invoke the <a>CreateDBInstance</a> action to create DB instances for the
            restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.
            You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code>
            action has completed and the DB cluster is available.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The name of the new DB cluster to be created.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must contain from 1 to 63 letters, numbers, or hyphens
            </para>
             </li> <li> 
            <para>
            First character must be a letter
            </para>
             </li> <li> 
            <para>
            Cannot end with a hyphen or contain two consecutive hyphens
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.DBClusterParameterGroupName">
            <summary>
            Gets and sets the property DBClusterParameterGroupName. 
            <para>
            The name of the DB cluster parameter group to associate with the new DB cluster.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            If supplied, must match the name of an existing DBClusterParameterGroup.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.DBSubnetGroupName">
            <summary>
            Gets and sets the property DBSubnetGroupName. 
            <para>
            The DB subnet group name to use for the new DB cluster.
            </para>
             
            <para>
            Constraints: If supplied, must match the name of an existing DBSubnetGroup.
            </para>
             
            <para>
            Example: <code>mySubnetgroup</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.DeletionProtection">
            <summary>
            Gets and sets the property DeletionProtection. 
            <para>
            A value that indicates whether the DB cluster has deletion protection enabled. The
            database can't be deleted when deletion protection is enabled. By default, deletion
            protection is disabled. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.EnableCloudwatchLogsExports">
            <summary>
            Gets and sets the property EnableCloudwatchLogsExports. 
            <para>
            The list of logs that the restored DB cluster is to export to CloudWatch Logs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.EnableIAMDatabaseAuthentication">
            <summary>
            Gets and sets the property EnableIAMDatabaseAuthentication. 
            <para>
            True to enable mapping of Amazon Identity and Access Management (IAM) accounts to
            database accounts, and otherwise false.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon KMS key identifier to use when restoring an encrypted DB cluster from an
            encrypted DB cluster.
            </para>
             
            <para>
            The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key.
            If you are restoring a DB cluster with the same Amazon account that owns the KMS encryption
            key used to encrypt the new DB cluster, then you can use the KMS key alias instead
            of the ARN for the KMS encryption key.
            </para>
             
            <para>
            You can restore to a new DB cluster and encrypt the new DB cluster with a KMS key
            that is different than the KMS key used to encrypt the source DB cluster. The new
            DB cluster is encrypted with the KMS key identified by the <code>KmsKeyId</code> parameter.
            </para>
             
            <para>
            If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following
            will occur:
            </para>
             <ul> <li> 
            <para>
            If the DB cluster is encrypted, then the restored DB cluster is encrypted using the
            KMS key that was used to encrypt the source DB cluster.
            </para>
             </li> <li> 
            <para>
            If the DB cluster is not encrypted, then the restored DB cluster is not encrypted.
            </para>
             </li> </ul> 
            <para>
            If <code>DBClusterIdentifier</code> refers to a DB cluster that is not encrypted,
            then the restore request is rejected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.OptionGroupName">
            <summary>
            Gets and sets the property OptionGroupName. 
            <para>
             <i>(Not supported by Neptune)</i> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.Port">
            <summary>
            Gets and sets the property Port. 
            <para>
            The port number on which the new DB cluster accepts connections.
            </para>
             
            <para>
            Constraints: Value must be <code>1150-65535</code> 
            </para>
             
            <para>
            Default: The same port as the original DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.RestoreToTimeUtc">
            <summary>
            Gets and sets the property RestoreToTimeUtc. 
            <para>
            The date and time to restore the DB cluster to.
            </para>
             
            <para>
            Valid Values: Value must be a time in Universal Coordinated Time (UTC) format
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be before the latest restorable time for the DB instance
            </para>
             </li> <li> 
            <para>
            Must be specified if <code>UseLatestRestorableTime</code> parameter is not provided
            </para>
             </li> <li> 
            <para>
            Cannot be specified if <code>UseLatestRestorableTime</code> parameter is true
            </para>
             </li> <li> 
            <para>
            Cannot be specified if <code>RestoreType</code> parameter is <code>copy-on-write</code>
            
            </para>
             </li> </ul> 
            <para>
            Example: <code>2015-03-07T23:45:00Z</code> 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.RestoreType">
            <summary>
            Gets and sets the property RestoreType. 
            <para>
            The type of restore to be performed. You can specify one of the following values:
            </para>
             <ul> <li> 
            <para>
             <code>full-copy</code> - The new DB cluster is restored as a full copy of the source
            DB cluster.
            </para>
             </li> <li> 
            <para>
             <code>copy-on-write</code> - The new DB cluster is restored as a clone of the source
            DB cluster.
            </para>
             </li> </ul> 
            <para>
            If you don't specify a <code>RestoreType</code> value, then the new DB cluster is
            restored as a full copy of the source DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.SourceDBClusterIdentifier">
            <summary>
            Gets and sets the property SourceDBClusterIdentifier. 
            <para>
            The identifier of the source DB cluster from which to restore.
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must match the identifier of an existing DBCluster.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags to be applied to the restored DB cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.UseLatestRestorableTime">
            <summary>
            Gets and sets the property UseLatestRestorableTime. 
            <para>
            A value that is set to <code>true</code> to restore the DB cluster to the latest restorable
            backup time, and <code>false</code> otherwise.
            </para>
             
            <para>
            Default: <code>false</code> 
            </para>
             
            <para>
            Constraints: Cannot be specified if <code>RestoreToTime</code> parameter is provided.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.VpcSecurityGroupIds">
            <summary>
            Gets and sets the property VpcSecurityGroupIds. 
            <para>
            A list of VPC security groups that the new DB cluster belongs to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest.RestoreToTime">
            <summary>
            Gets and sets the property RestoreToTimeUtc. 
            <para>
            This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use RestoreToTimeUtc instead. Setting either RestoreToTime
            or RestoreToTimeUtc results in both RestoreToTime and RestoreToTimeUtc being assigned,
            the latest assignment to either one of the two property is reflected in the value
            of both. RestoreToTime is provided for backwards compatibility only and assigning
            a non-Utc DateTime to it results in the wrong timestamp being passed to the service.
            </para>
             
            <para>
            The date and time to restore the DB cluster to.
            </para>
             
            <para>
            Valid Values: Value must be a time in Universal Coordinated Time (UTC) format
            </para>
             
            <para>
            Constraints:
            </para>
             <ul> <li> 
            <para>
            Must be before the latest restorable time for the DB instance
            </para>
             </li> <li> 
            <para>
            Must be specified if <code>UseLatestRestorableTime</code> parameter is not provided
            </para>
             </li> <li> 
            <para>
            Cannot be specified if <code>UseLatestRestorableTime</code> parameter is true
            </para>
             </li> <li> 
            <para>
            Cannot be specified if <code>RestoreType</code> parameter is <code>copy-on-write</code>
            
            </para>
             </li> </ul> 
            <para>
            Example: <code>2015-03-07T23:45:00Z</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeResponse">
            <summary>
            This is the response object from the RestoreDBClusterToPointInTime operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.RestoreDBClusterToPointInTimeResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException">
            <summary>
            You have exceeded the maximum number of accounts that you can share a manual DB snapshot
            with.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SharedSnapshotQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SharedSnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of SharedSnapshotQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SharedSnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SharedSnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SharedSnapshotQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            <summary>
            Request would result in user exceeding the allowed number of DB snapshots.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.SnapshotQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SnapshotQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.SnapshotQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SnapshotQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of SnapshotQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SnapshotQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SnapshotQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SnapshotQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SnapshotQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SnapshotQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.SnapshotQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.SNSInvalidTopicException">
            <summary>
            The SNS topic is invalid.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSInvalidTopicException.#ctor(System.String)">
            <summary>
            Constructs a new SNSInvalidTopicException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSInvalidTopicException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SNSInvalidTopicException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSInvalidTopicException.#ctor(System.Exception)">
            <summary>
            Construct instance of SNSInvalidTopicException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSInvalidTopicException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSInvalidTopicException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSInvalidTopicException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSInvalidTopicException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSInvalidTopicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SNSInvalidTopicException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSInvalidTopicException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.SNSNoAuthorizationException">
            <summary>
            There is no SNS authorization.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSNoAuthorizationException.#ctor(System.String)">
            <summary>
            Constructs a new SNSNoAuthorizationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSNoAuthorizationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SNSNoAuthorizationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSNoAuthorizationException.#ctor(System.Exception)">
            <summary>
            Construct instance of SNSNoAuthorizationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSNoAuthorizationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSNoAuthorizationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSNoAuthorizationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSNoAuthorizationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSNoAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SNSNoAuthorizationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSNoAuthorizationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.SNSTopicArnNotFoundException">
            <summary>
            The ARN of the SNS topic could not be found.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSTopicArnNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SNSTopicArnNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSTopicArnNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SNSTopicArnNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSTopicArnNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SNSTopicArnNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSTopicArnNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSTopicArnNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSTopicArnNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SNSTopicArnNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSTopicArnNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SNSTopicArnNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.SNSTopicArnNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.SourceNotFoundException">
            <summary>
            The source could not be found.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.SourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.SourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.SourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.StartDBClusterRequest">
            <summary>
            Container for the parameters to the StartDBCluster operation.
            Starts an Amazon Neptune DB cluster that was stopped using the AWS console, the Amazon
            CLI stop-db-cluster command, or the StopDBCluster API.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.StartDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier of the Neptune DB cluster to be started. This parameter
            is stored as a lowercase string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.StartDBClusterResponse">
            <summary>
            This is the response object from the StartDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.StartDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.StopDBClusterRequest">
            <summary>
            Container for the parameters to the StopDBCluster operation.
            Stops an Amazon Neptune DB cluster. When you stop a DB cluster, Neptune retains the
            DB cluster's metadata, including its endpoints and DB parameter groups.
            
             
            <para>
            Neptune also retains the transaction logs so you can do a point-in-time restore if
            necessary.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.StopDBClusterRequest.DBClusterIdentifier">
            <summary>
            Gets and sets the property DBClusterIdentifier. 
            <para>
            The DB cluster identifier of the Neptune DB cluster to be stopped. This parameter
            is stored as a lowercase string.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.StopDBClusterResponse">
            <summary>
            This is the response object from the StopDBCluster operation.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.StopDBClusterResponse.DBCluster">
            <summary>
            Gets and sets the property DBCluster.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            <summary>
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageQuotaExceededException.#ctor(System.String)">
            <summary>
            Constructs a new StorageQuotaExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of StorageQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageQuotaExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of StorageQuotaExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageQuotaExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StorageQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageQuotaExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StorageQuotaExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the StorageQuotaExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.StorageTypeNotSupportedException">
            <summary>
            <i>StorageType</i> specified cannot be associated with the DB Instance.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageTypeNotSupportedException.#ctor(System.String)">
            <summary>
            Constructs a new StorageTypeNotSupportedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageTypeNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of StorageTypeNotSupportedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageTypeNotSupportedException.#ctor(System.Exception)">
            <summary>
            Construct instance of StorageTypeNotSupportedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageTypeNotSupportedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StorageTypeNotSupportedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageTypeNotSupportedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of StorageTypeNotSupportedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageTypeNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the StorageTypeNotSupportedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.StorageTypeNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.Subnet">
            <summary>
            Specifies a subnet.
            
             
            <para>
             This data type is used as a response element in the <a>DescribeDBSubnetGroups</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Subnet.SubnetAvailabilityZone">
            <summary>
            Gets and sets the property SubnetAvailabilityZone. 
            <para>
            Specifies the EC2 Availability Zone that the subnet is in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Subnet.SubnetIdentifier">
            <summary>
            Gets and sets the property SubnetIdentifier. 
            <para>
            Specifies the identifier of the subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Subnet.SubnetStatus">
            <summary>
            Gets and sets the property SubnetStatus. 
            <para>
            Specifies the status of the subnet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.SubnetAlreadyInUseException">
            <summary>
            The DB subnet is already in use in the Availability Zone.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.SubnetAlreadyInUseException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetAlreadyInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubnetAlreadyInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubnetAlreadyInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubnetAlreadyInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubnetAlreadyInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubnetAlreadyInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetAlreadyInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubnetAlreadyInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetAlreadyInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubnetAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubnetAlreadyInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.SubnetAlreadyInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.SubscriptionAlreadyExistException">
            <summary>
            This subscription already exists.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionAlreadyExistException.#ctor(System.String)">
            <summary>
            Constructs a new SubscriptionAlreadyExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionAlreadyExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubscriptionAlreadyExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionAlreadyExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubscriptionAlreadyExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionAlreadyExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionAlreadyExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionAlreadyExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionAlreadyExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionAlreadyExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubscriptionAlreadyExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionAlreadyExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException">
            <summary>
            The designated subscription category could not be found.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SubscriptionCategoryNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubscriptionCategoryNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubscriptionCategoryNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionCategoryNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionCategoryNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubscriptionCategoryNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            <summary>
            The designated subscription could not be found.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SubscriptionNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubscriptionNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubscriptionNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubscriptionNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SubscriptionNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.Neptune.Model.SubscriptionNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.Neptune.Model.Tag">
            <summary>
            Metadata assigned to an Amazon Neptune resource consisting of a key-value pair.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            A key is the required name of the tag. The string value can be from 1 to 128 Unicode
            characters in length and can't be prefixed with "aws:" or "rds:". The string can only
            contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=',
            '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            A value is the optional value of the tag. The string value can be from 1 to 256 Unicode
            characters in length and can't be prefixed with "aws:" or "rds:". The string can only
            contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=',
            '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.Timezone">
            <summary>
            A time zone associated with a <a>DBInstance</a>.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.Timezone.TimezoneName">
            <summary>
            Gets and sets the property TimezoneName. 
            <para>
            The name of the time zone.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.UpgradeTarget">
            <summary>
            The version of the database engine that a DB instance can be upgraded to.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.UpgradeTarget.AutoUpgrade">
            <summary>
            Gets and sets the property AutoUpgrade. 
            <para>
            A value that indicates whether the target version is applied to any source DB instances
            that have AutoMinorVersionUpgrade set to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.UpgradeTarget.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The version of the database engine that a DB instance can be upgraded to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.UpgradeTarget.Engine">
            <summary>
            Gets and sets the property Engine. 
            <para>
            The name of the upgrade target database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.UpgradeTarget.EngineVersion">
            <summary>
            Gets and sets the property EngineVersion. 
            <para>
            The version number of the upgrade target database engine.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.UpgradeTarget.IsMajorVersionUpgrade">
            <summary>
            Gets and sets the property IsMajorVersionUpgrade. 
            <para>
            A value that indicates whether a database engine is upgraded to a major version.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ValidDBInstanceModificationsMessage">
            <summary>
            Information about valid modifications that you can make to your DB instance. Contains
            the result of a successful call to the <a>DescribeValidDBInstanceModifications</a>
            action. You can use this information when you call <a>ModifyDBInstance</a>.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ValidDBInstanceModificationsMessage.Storage">
            <summary>
            Gets and sets the property Storage. 
            <para>
            Valid storage options for your DB instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.ValidStorageOptions">
            <summary>
            Information about valid modifications that you can make to your DB instance.
            
             
            <para>
            Contains the result of a successful call to the <a>DescribeValidDBInstanceModifications</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ValidStorageOptions.IopsToStorageRatio">
            <summary>
            Gets and sets the property IopsToStorageRatio. 
            <para>
            The valid range of Provisioned IOPS to gibibytes of storage multiplier. For example,
            3-10, which means that provisioned IOPS can be between 3 and 10 times storage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ValidStorageOptions.ProvisionedIops">
            <summary>
            Gets and sets the property ProvisionedIops. 
            <para>
            The valid range of provisioned IOPS. For example, 1000-20000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ValidStorageOptions.StorageSize">
            <summary>
            Gets and sets the property StorageSize. 
            <para>
            The valid range of storage in gibibytes. For example, 100 to 16384.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.ValidStorageOptions.StorageType">
            <summary>
            Gets and sets the property StorageType. 
            <para>
            The valid storage types for your DB instance. For example, gp2, io1.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.VpcSecurityGroupMembership">
            <summary>
            This data type is used as a response element for queries on VPC security group membership.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.VpcSecurityGroupMembership.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the VPC security group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.VpcSecurityGroupMembership.VpcSecurityGroupId">
            <summary>
            Gets and sets the property VpcSecurityGroupId. 
            <para>
            The name of the VPC security group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterEndpointsPaginator">
            <summary>
            Base class for DescribeDBClusterEndpoints paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterEndpointsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterEndpointsPaginator.DBClusterEndpoints">
            <summary>
            Enumerable containing all of the DBClusterEndpoints
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsPaginator">
            <summary>
            Base class for DescribeDBClusterParameterGroups paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParameterGroupsPaginator.DBClusterParameterGroups">
            <summary>
            Enumerable containing all of the DBClusterParameterGroups
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterParametersPaginator">
            <summary>
            Base class for DescribeDBClusterParameters paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParametersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterParametersPaginator.Parameters">
            <summary>
            Enumerable containing all of the Parameters
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClusterSnapshotsPaginator">
            <summary>
            Base class for DescribeDBClusterSnapshots paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClusterSnapshotsPaginator.DBClusterSnapshots">
            <summary>
            Enumerable containing all of the DBClusterSnapshots
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBClustersPaginator">
            <summary>
            Base class for DescribeDBClusters paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBClustersPaginator.DBClusters">
            <summary>
            Enumerable containing all of the DBClusters
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBEngineVersionsPaginator">
            <summary>
            Base class for DescribeDBEngineVersions paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBEngineVersionsPaginator.DBEngineVersions">
            <summary>
            Enumerable containing all of the DBEngineVersions
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBInstancesPaginator">
            <summary>
            Base class for DescribeDBInstances paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBInstancesPaginator.DBInstances">
            <summary>
            Enumerable containing all of the DBInstances
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBParameterGroupsPaginator">
            <summary>
            Base class for DescribeDBParameterGroups paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParameterGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParameterGroupsPaginator.DBParameterGroups">
            <summary>
            Enumerable containing all of the DBParameterGroups
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBParametersPaginator">
            <summary>
            Base class for DescribeDBParameters paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParametersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBParametersPaginator.Parameters">
            <summary>
            Enumerable containing all of the Parameters
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeDBSubnetGroupsPaginator">
            <summary>
            Base class for DescribeDBSubnetGroups paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBSubnetGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeDBSubnetGroupsPaginator.DBSubnetGroups">
            <summary>
            Enumerable containing all of the DBSubnetGroups
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEngineDefaultParametersPaginator">
            <summary>
            Base class for DescribeEngineDefaultParameters paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultParametersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEngineDefaultParametersPaginator.Parameters">
            <summary>
            Enumerable containing all of the Parameters
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEventsPaginator">
            <summary>
            Base class for DescribeEvents paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventsPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeEventSubscriptionsPaginator">
            <summary>
            Base class for DescribeEventSubscriptions paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventSubscriptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeEventSubscriptionsPaginator.EventSubscriptionsList">
            <summary>
            Enumerable containing all of the EventSubscriptionsList
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsPaginator">
            <summary>
            Base class for DescribeOrderableDBInstanceOptions paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsPaginator.OrderableDBInstanceOptions">
            <summary>
            Enumerable containing all of the OrderableDBInstanceOptions
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.DescribePendingMaintenanceActionsPaginator">
            <summary>
            Base class for DescribePendingMaintenanceActions paginators.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribePendingMaintenanceActionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.DescribePendingMaintenanceActionsPaginator.PendingMaintenanceActions">
            <summary>
            Enumerable containing all of the PendingMaintenanceActions
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeDBClusterEndpointsPaginator">
             <summary>
             Paginator for the DescribeDBClusterEndpoints operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBClusterEndpointsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBClusterEndpointsPaginator.DBClusterEndpoints">
            <summary>
            Enumerable containing all of the DBClusterEndpoints
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeDBClusterParameterGroupsPaginator">
             <summary>
             Paginator for the DescribeDBClusterParameterGroups operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBClusterParameterGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBClusterParameterGroupsPaginator.DBClusterParameterGroups">
            <summary>
            Enumerable containing all of the DBClusterParameterGroups
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeDBClusterParametersPaginator">
             <summary>
             Paginator for the DescribeDBClusterParameters operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBClusterParametersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBClusterParametersPaginator.Parameters">
            <summary>
            Enumerable containing all of the Parameters
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeDBClusterSnapshotsPaginator">
             <summary>
             Paginator for the DescribeDBClusterSnapshots operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBClusterSnapshotsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBClusterSnapshotsPaginator.DBClusterSnapshots">
            <summary>
            Enumerable containing all of the DBClusterSnapshots
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeDBClustersPaginator">
             <summary>
             Paginator for the DescribeDBClusters operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBClustersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBClustersPaginator.DBClusters">
            <summary>
            Enumerable containing all of the DBClusters
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeDBEngineVersionsPaginator">
             <summary>
             Paginator for the DescribeDBEngineVersions operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBEngineVersionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBEngineVersionsPaginator.DBEngineVersions">
            <summary>
            Enumerable containing all of the DBEngineVersions
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeDBInstancesPaginator">
             <summary>
             Paginator for the DescribeDBInstances operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBInstancesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBInstancesPaginator.DBInstances">
            <summary>
            Enumerable containing all of the DBInstances
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeDBParameterGroupsPaginator">
             <summary>
             Paginator for the DescribeDBParameterGroups operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBParameterGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBParameterGroupsPaginator.DBParameterGroups">
            <summary>
            Enumerable containing all of the DBParameterGroups
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeDBParametersPaginator">
             <summary>
             Paginator for the DescribeDBParameters operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBParametersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBParametersPaginator.Parameters">
            <summary>
            Enumerable containing all of the Parameters
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeDBSubnetGroupsPaginator">
             <summary>
             Paginator for the DescribeDBSubnetGroups operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBSubnetGroupsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeDBSubnetGroupsPaginator.DBSubnetGroups">
            <summary>
            Enumerable containing all of the DBSubnetGroups
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeEngineDefaultParametersPaginator">
             <summary>
             Paginator for the DescribeEngineDefaultParameters operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeEngineDefaultParametersPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeEngineDefaultParametersPaginator.Parameters">
            <summary>
            Enumerable containing all of the Parameters
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeEventsPaginator">
             <summary>
             Paginator for the DescribeEvents operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeEventsPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeEventSubscriptionsPaginator">
             <summary>
             Paginator for the DescribeEventSubscriptions operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeEventSubscriptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeEventSubscriptionsPaginator.EventSubscriptionsList">
            <summary>
            Enumerable containing all of the EventSubscriptionsList
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribeOrderableDBInstanceOptionsPaginator">
             <summary>
             Paginator for the DescribeOrderableDBInstanceOptions operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeOrderableDBInstanceOptionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribeOrderableDBInstanceOptionsPaginator.OrderableDBInstanceOptions">
            <summary>
            Enumerable containing all of the OrderableDBInstanceOptions
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.IDescribePendingMaintenanceActionsPaginator">
             <summary>
             Paginator for the DescribePendingMaintenanceActions operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribePendingMaintenanceActionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.Neptune.Model.IDescribePendingMaintenanceActionsPaginator.PendingMaintenanceActions">
            <summary>
            Enumerable containing all of the PendingMaintenanceActions
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.INeptunePaginatorFactory">
             <summary>
             Paginators for the Neptune service
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeDBClusterEndpoints(Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest)">
             <summary>
             Paginator for DescribeDBClusterEndpoints operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeDBClusterParameterGroups(Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest)">
             <summary>
             Paginator for DescribeDBClusterParameterGroups operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeDBClusterParameters(Amazon.Neptune.Model.DescribeDBClusterParametersRequest)">
             <summary>
             Paginator for DescribeDBClusterParameters operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeDBClusters(Amazon.Neptune.Model.DescribeDBClustersRequest)">
             <summary>
             Paginator for DescribeDBClusters operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeDBClusterSnapshots(Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest)">
             <summary>
             Paginator for DescribeDBClusterSnapshots operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeDBEngineVersions(Amazon.Neptune.Model.DescribeDBEngineVersionsRequest)">
             <summary>
             Paginator for DescribeDBEngineVersions operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeDBInstances(Amazon.Neptune.Model.DescribeDBInstancesRequest)">
             <summary>
             Paginator for DescribeDBInstances operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeDBParameterGroups(Amazon.Neptune.Model.DescribeDBParameterGroupsRequest)">
             <summary>
             Paginator for DescribeDBParameterGroups operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeDBParameters(Amazon.Neptune.Model.DescribeDBParametersRequest)">
             <summary>
             Paginator for DescribeDBParameters operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeDBSubnetGroups(Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest)">
             <summary>
             Paginator for DescribeDBSubnetGroups operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeEngineDefaultParameters(Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest)">
             <summary>
             Paginator for DescribeEngineDefaultParameters operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeEvents(Amazon.Neptune.Model.DescribeEventsRequest)">
             <summary>
             Paginator for DescribeEvents operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeEventSubscriptions(Amazon.Neptune.Model.DescribeEventSubscriptionsRequest)">
             <summary>
             Paginator for DescribeEventSubscriptions operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribeOrderableDBInstanceOptions(Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest)">
             <summary>
             Paginator for DescribeOrderableDBInstanceOptions operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.INeptunePaginatorFactory.DescribePendingMaintenanceActions(Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest)">
             <summary>
             Paginator for DescribePendingMaintenanceActions operation
            </summary>
        </member>
        <member name="T:Amazon.Neptune.Model.NeptunePaginatorFactory">
             <summary>
             Paginators for the Neptune service
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeDBClusterEndpoints(Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest)">
             <summary>
             Paginator for DescribeDBClusterEndpoints operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeDBClusterParameterGroups(Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest)">
             <summary>
             Paginator for DescribeDBClusterParameterGroups operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeDBClusterParameters(Amazon.Neptune.Model.DescribeDBClusterParametersRequest)">
             <summary>
             Paginator for DescribeDBClusterParameters operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeDBClusters(Amazon.Neptune.Model.DescribeDBClustersRequest)">
             <summary>
             Paginator for DescribeDBClusters operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeDBClusterSnapshots(Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest)">
             <summary>
             Paginator for DescribeDBClusterSnapshots operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeDBEngineVersions(Amazon.Neptune.Model.DescribeDBEngineVersionsRequest)">
             <summary>
             Paginator for DescribeDBEngineVersions operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeDBInstances(Amazon.Neptune.Model.DescribeDBInstancesRequest)">
             <summary>
             Paginator for DescribeDBInstances operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeDBParameterGroups(Amazon.Neptune.Model.DescribeDBParameterGroupsRequest)">
             <summary>
             Paginator for DescribeDBParameterGroups operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeDBParameters(Amazon.Neptune.Model.DescribeDBParametersRequest)">
             <summary>
             Paginator for DescribeDBParameters operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeDBSubnetGroups(Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest)">
             <summary>
             Paginator for DescribeDBSubnetGroups operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeEngineDefaultParameters(Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest)">
             <summary>
             Paginator for DescribeEngineDefaultParameters operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeEvents(Amazon.Neptune.Model.DescribeEventsRequest)">
             <summary>
             Paginator for DescribeEvents operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeEventSubscriptions(Amazon.Neptune.Model.DescribeEventSubscriptionsRequest)">
             <summary>
             Paginator for DescribeEventSubscriptions operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribeOrderableDBInstanceOptions(Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest)">
             <summary>
             Paginator for DescribeOrderableDBInstanceOptions operation
            </summary>
        </member>
        <member name="M:Amazon.Neptune.Model.NeptunePaginatorFactory.DescribePendingMaintenanceActions(Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest)">
             <summary>
             Paginator for DescribePendingMaintenanceActions operation
            </summary>
        </member>
        <member name="T:Amazon.Neptune.AmazonNeptuneConfig">
            <summary>
            Configuration for accessing Amazon Neptune service
            </summary>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.Neptune.AmazonNeptuneConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.AmazonNeptuneConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.Neptune.AmazonNeptuneConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.AmazonNeptuneException">
            <summary>
             Common exception for the Neptune service.
             </summary>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonNeptuneException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonNeptuneException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonNeptuneException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonNeptuneException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonNeptuneException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonNeptuneException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.Neptune.AmazonNeptuneRequest">
            <summary>
            Base class for Neptune operation requests.
            </summary>
        </member>
        <member name="T:Amazon.Neptune.ApplyMethod">
            <summary>
            Constants used for properties of type ApplyMethod.
            </summary>
        </member>
        <member name="F:Amazon.Neptune.ApplyMethod.Immediate">
            <summary>
            Constant Immediate for ApplyMethod
            </summary>
        </member>
        <member name="F:Amazon.Neptune.ApplyMethod.PendingReboot">
            <summary>
            Constant PendingReboot for ApplyMethod
            </summary>
        </member>
        <member name="M:Amazon.Neptune.ApplyMethod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.ApplyMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Neptune.ApplyMethod.op_Implicit(System.String)~Amazon.Neptune.ApplyMethod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Neptune.SourceType">
            <summary>
            Constants used for properties of type SourceType.
            </summary>
        </member>
        <member name="F:Amazon.Neptune.SourceType.DbCluster">
            <summary>
            Constant DbCluster for SourceType
            </summary>
        </member>
        <member name="F:Amazon.Neptune.SourceType.DbClusterSnapshot">
            <summary>
            Constant DbClusterSnapshot for SourceType
            </summary>
        </member>
        <member name="F:Amazon.Neptune.SourceType.DbInstance">
            <summary>
            Constant DbInstance for SourceType
            </summary>
        </member>
        <member name="F:Amazon.Neptune.SourceType.DbParameterGroup">
            <summary>
            Constant DbParameterGroup for SourceType
            </summary>
        </member>
        <member name="F:Amazon.Neptune.SourceType.DbSecurityGroup">
            <summary>
            Constant DbSecurityGroup for SourceType
            </summary>
        </member>
        <member name="F:Amazon.Neptune.SourceType.DbSnapshot">
            <summary>
            Constant DbSnapshot for SourceType
            </summary>
        </member>
        <member name="M:Amazon.Neptune.SourceType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.SourceType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.Neptune.SourceType.op_Implicit(System.String)~Amazon.Neptune.SourceType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.Neptune.AmazonNeptuneClient">
             <summary>
             Implementation for accessing Neptune
            
             Amazon Neptune 
             <para>
             Amazon Neptune is a fast, reliable, fully-managed graph database service that makes
             it easy to build and run applications that work with highly connected datasets. The
             core of Amazon Neptune is a purpose-built, high-performance graph database engine
             optimized for storing billions of relationships and querying the graph with milliseconds
             latency. Amazon Neptune supports popular graph models Property Graph and W3C's RDF,
             and their respective query languages Apache TinkerPop Gremlin and SPARQL, allowing
             you to easily build queries that efficiently navigate highly connected datasets. Neptune
             powers graph use cases such as recommendation engines, fraud detection, knowledge
             graphs, drug discovery, and network security.
             </para>
              
             <para>
             This interface reference for Amazon Neptune contains documentation for a programming
             or command line interface you can use to manage Amazon Neptune. Note that Amazon Neptune
             is asynchronous, which means that some interfaces might require techniques such as
             polling or callback functions to determine when a command has been applied. In this
             reference, the parameter descriptions indicate whether a command is applied immediately,
             on the next instance reboot, or during the maintenance window. The reference structure
             is as follows, and we list following some related topics from the user guide.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.Neptune.AmazonNeptuneClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor">
             <summary>
             Constructs AmazonNeptuneClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonNeptuneClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(Amazon.Neptune.AmazonNeptuneConfig)">
             <summary>
             Constructs AmazonNeptuneClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonNeptuneClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonNeptuneClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonNeptuneClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.Neptune.AmazonNeptuneConfig)">
            <summary>
            Constructs AmazonNeptuneClient with AWS Credentials and an
            AmazonNeptuneClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonNeptuneClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonNeptuneClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonNeptuneClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(System.String,System.String,Amazon.Neptune.AmazonNeptuneConfig)">
            <summary>
            Constructs AmazonNeptuneClient with AWS Access Key ID, AWS Secret Key and an
            AmazonNeptuneClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonNeptuneClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonNeptuneClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonNeptuneClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.#ctor(System.String,System.String,System.String,Amazon.Neptune.AmazonNeptuneConfig)">
            <summary>
            Constructs AmazonNeptuneClient with AWS Access Key ID, AWS Secret Key and an
            AmazonNeptuneClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonNeptuneClient Configuration Object</param>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customize the pipeline
            </summary>
            <param name="pipeline"></param>
        </member>
        <member name="P:Amazon.Neptune.AmazonNeptuneClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.AddRoleToDBCluster(Amazon.Neptune.Model.AddRoleToDBClusterRequest)">
            <summary>
            Associates an Identity and Access Management (IAM) role from an Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddRoleToDBCluster service method.</param>
            
            <returns>The response from the AddRoleToDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException">
            The specified IAM role Amazon Resource Name (ARN) is already associated with the specified
            DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException">
            You have exceeded the maximum number of IAM roles that can be associated with the
            specified DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddRoleToDBCluster">REST API Reference for AddRoleToDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.AddRoleToDBClusterAsync(Amazon.Neptune.Model.AddRoleToDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Associates an Identity and Access Management (IAM) role from an Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddRoleToDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddRoleToDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException">
            The specified IAM role Amazon Resource Name (ARN) is already associated with the specified
            DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException">
            You have exceeded the maximum number of IAM roles that can be associated with the
            specified DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddRoleToDBCluster">REST API Reference for AddRoleToDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.AddSourceIdentifierToSubscription(Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionRequest)">
            <summary>
            Adds a source identifier to an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddSourceIdentifierToSubscription service method.</param>
            
            <returns>The response from the AddSourceIdentifierToSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddSourceIdentifierToSubscription">REST API Reference for AddSourceIdentifierToSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.AddSourceIdentifierToSubscriptionAsync(Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a source identifier to an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddSourceIdentifierToSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddSourceIdentifierToSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddSourceIdentifierToSubscription">REST API Reference for AddSourceIdentifierToSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.AddTagsToResource(Amazon.Neptune.Model.AddTagsToResourceRequest)">
            <summary>
            Adds metadata tags to an Amazon Neptune resource. These tags can also be used with
            cost allocation reporting to track cost associated with Amazon Neptune resources,
            or used in a Condition statement in an IAM policy for Amazon Neptune.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToResource service method.</param>
            
            <returns>The response from the AddTagsToResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddTagsToResource">REST API Reference for AddTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.AddTagsToResourceAsync(Amazon.Neptune.Model.AddTagsToResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds metadata tags to an Amazon Neptune resource. These tags can also be used with
            cost allocation reporting to track cost associated with Amazon Neptune resources,
            or used in a Condition statement in an IAM policy for Amazon Neptune.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddTagsToResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddTagsToResource">REST API Reference for AddTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ApplyPendingMaintenanceAction(Amazon.Neptune.Model.ApplyPendingMaintenanceActionRequest)">
            <summary>
            Applies a pending maintenance action to a resource (for example, to a DB instance).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ApplyPendingMaintenanceAction service method.</param>
            
            <returns>The response from the ApplyPendingMaintenanceAction service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ApplyPendingMaintenanceAction">REST API Reference for ApplyPendingMaintenanceAction Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ApplyPendingMaintenanceActionAsync(Amazon.Neptune.Model.ApplyPendingMaintenanceActionRequest,System.Threading.CancellationToken)">
            <summary>
            Applies a pending maintenance action to a resource (for example, to a DB instance).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ApplyPendingMaintenanceAction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ApplyPendingMaintenanceAction service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ApplyPendingMaintenanceAction">REST API Reference for ApplyPendingMaintenanceAction Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CopyDBClusterParameterGroup(Amazon.Neptune.Model.CopyDBClusterParameterGroupRequest)">
            <summary>
            Copies the specified DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterParameterGroup service method.</param>
            
            <returns>The response from the CopyDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBClusterParameterGroup">REST API Reference for CopyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CopyDBClusterParameterGroupAsync(Amazon.Neptune.Model.CopyDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Copies the specified DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBClusterParameterGroup">REST API Reference for CopyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CopyDBClusterSnapshot(Amazon.Neptune.Model.CopyDBClusterSnapshotRequest)">
            <summary>
            Copies a snapshot of a DB cluster.
            
             
            <para>
            To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterSnapshot service method.</param>
            
            <returns>The response from the CopyDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBClusterSnapshot">REST API Reference for CopyDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CopyDBClusterSnapshotAsync(Amazon.Neptune.Model.CopyDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Copies a snapshot of a DB cluster.
            
             
            <para>
            To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBClusterSnapshot">REST API Reference for CopyDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CopyDBParameterGroup(Amazon.Neptune.Model.CopyDBParameterGroupRequest)">
            <summary>
            Copies the specified DB parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBParameterGroup service method.</param>
            
            <returns>The response from the CopyDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBParameterGroup">REST API Reference for CopyDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CopyDBParameterGroupAsync(Amazon.Neptune.Model.CopyDBParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Copies the specified DB parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBParameterGroup">REST API Reference for CopyDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBCluster(Amazon.Neptune.Model.CreateDBClusterRequest)">
            <summary>
            Creates a new Amazon Neptune DB cluster.
            
             
            <para>
            You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB
            cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance.
            </para>
             
            <para>
            Note that when you create a new cluster using <code>CreateDBCluster</code> directly,
            deletion protection is disabled by default (when you create a new production cluster
            in the console, deletion protection is enabled by default). You can only delete a
            DB cluster if its <code>DeletionProtection</code> field is set to <code>false</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBCluster service method.</param>
            
            <returns>The response from the CreateDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBCluster">REST API Reference for CreateDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBClusterAsync(Amazon.Neptune.Model.CreateDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon Neptune DB cluster.
            
             
            <para>
            You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB
            cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance.
            </para>
             
            <para>
            Note that when you create a new cluster using <code>CreateDBCluster</code> directly,
            deletion protection is disabled by default (when you create a new production cluster
            in the console, deletion protection is enabled by default). You can only delete a
            DB cluster if its <code>DeletionProtection</code> field is set to <code>false</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBCluster">REST API Reference for CreateDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBClusterEndpoint(Amazon.Neptune.Model.CreateDBClusterEndpointRequest)">
            <summary>
            Creates a new custom endpoint and associates it with an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterEndpoint service method.</param>
            
            <returns>The response from the CreateDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException">
            The specified custom endpoint cannot be created because it already exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException">
            The cluster already has the maximum number of custom endpoints.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterEndpoint">REST API Reference for CreateDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBClusterEndpointAsync(Amazon.Neptune.Model.CreateDBClusterEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new custom endpoint and associates it with an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException">
            The specified custom endpoint cannot be created because it already exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException">
            The cluster already has the maximum number of custom endpoints.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterEndpoint">REST API Reference for CreateDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBClusterParameterGroup(Amazon.Neptune.Model.CreateDBClusterParameterGroupRequest)">
            <summary>
            Creates a new DB cluster parameter group.
            
             
            <para>
            Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.
            </para>
             
            <para>
             A DB cluster parameter group is initially created with the default parameters for
            the database engine used by instances in the DB cluster. To provide custom values
            for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>.
            Once you've created a DB cluster parameter group, you need to associate it with your
            DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter
            group with a running DB cluster, you need to reboot the DB instances in the DB cluster
            without failover for the new DB cluster parameter group and associated settings to
            take effect.
            </para>
             <important> 
            <para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the DB cluster parameter group is used as the default for a new DB cluster.
            This is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon Neptune
            console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your
            DB cluster parameter group has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterParameterGroup service method.</param>
            
            <returns>The response from the CreateDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterParameterGroup">REST API Reference for CreateDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBClusterParameterGroupAsync(Amazon.Neptune.Model.CreateDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new DB cluster parameter group.
            
             
            <para>
            Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.
            </para>
             
            <para>
             A DB cluster parameter group is initially created with the default parameters for
            the database engine used by instances in the DB cluster. To provide custom values
            for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>.
            Once you've created a DB cluster parameter group, you need to associate it with your
            DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter
            group with a running DB cluster, you need to reboot the DB instances in the DB cluster
            without failover for the new DB cluster parameter group and associated settings to
            take effect.
            </para>
             <important> 
            <para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the DB cluster parameter group is used as the default for a new DB cluster.
            This is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon Neptune
            console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your
            DB cluster parameter group has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterParameterGroup">REST API Reference for CreateDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBClusterSnapshot(Amazon.Neptune.Model.CreateDBClusterSnapshotRequest)">
            <summary>
            Creates a snapshot of a DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterSnapshot service method.</param>
            
            <returns>The response from the CreateDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterSnapshot">REST API Reference for CreateDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBClusterSnapshotAsync(Amazon.Neptune.Model.CreateDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a snapshot of a DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterSnapshot">REST API Reference for CreateDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBInstance(Amazon.Neptune.Model.CreateDBInstanceRequest)">
            <summary>
            Creates a new DB instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBInstance service method.</param>
            
            <returns>The response from the CreateDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.AuthorizationNotFoundException">
            Specified CIDRIP or EC2 security group is not authorized for the specified DB security
            group.
            
             
            <para>
            Neptune may not also be authorized via IAM to perform necessary actions on your behalf.
            </para>
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceAlreadyExistsException">
            User already has a DB instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSecurityGroupNotFoundException">
            <i>DBSecurityGroupName</i> does not refer to an existing DB security group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DomainNotFoundException">
            <i>Domain</i> does not refer to an existing Active Directory Domain.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InstanceQuotaExceededException">
            Request would result in user exceeding the allowed number of DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException">
            Specified DB instance class is not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException">
            Provisioned IOPS not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageTypeNotSupportedException">
            <i>StorageType</i> specified cannot be associated with the DB Instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBInstance">REST API Reference for CreateDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBInstanceAsync(Amazon.Neptune.Model.CreateDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new DB instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.AuthorizationNotFoundException">
            Specified CIDRIP or EC2 security group is not authorized for the specified DB security
            group.
            
             
            <para>
            Neptune may not also be authorized via IAM to perform necessary actions on your behalf.
            </para>
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceAlreadyExistsException">
            User already has a DB instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSecurityGroupNotFoundException">
            <i>DBSecurityGroupName</i> does not refer to an existing DB security group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DomainNotFoundException">
            <i>Domain</i> does not refer to an existing Active Directory Domain.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InstanceQuotaExceededException">
            Request would result in user exceeding the allowed number of DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException">
            Specified DB instance class is not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException">
            Provisioned IOPS not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageTypeNotSupportedException">
            <i>StorageType</i> specified cannot be associated with the DB Instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBInstance">REST API Reference for CreateDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBParameterGroup(Amazon.Neptune.Model.CreateDBParameterGroupRequest)">
            <summary>
            Creates a new DB parameter group.
            
             
            <para>
            A DB parameter group is initially created with the default parameters for the database
            engine used by the DB instance. To provide custom values for any of the parameters,
            you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once
            you've created a DB parameter group, you need to associate it with your DB instance
            using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a
            running DB instance, you need to reboot the DB instance without failover for the new
            DB parameter group and associated settings to take effect.
            </para>
             <important> 
            <para>
            After you create a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the create action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBParameterGroup service method.</param>
            
            <returns>The response from the CreateDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBParameterGroup">REST API Reference for CreateDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBParameterGroupAsync(Amazon.Neptune.Model.CreateDBParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new DB parameter group.
            
             
            <para>
            A DB parameter group is initially created with the default parameters for the database
            engine used by the DB instance. To provide custom values for any of the parameters,
            you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once
            you've created a DB parameter group, you need to associate it with your DB instance
            using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a
            running DB instance, you need to reboot the DB instance without failover for the new
            DB parameter group and associated settings to take effect.
            </para>
             <important> 
            <para>
            After you create a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the create action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBParameterGroup">REST API Reference for CreateDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBSubnetGroup(Amazon.Neptune.Model.CreateDBSubnetGroupRequest)">
            <summary>
            Creates a new DB subnet group. DB subnet groups must contain at least one subnet in
            at least two AZs in the Amazon Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBSubnetGroup service method.</param>
            
            <returns>The response from the CreateDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException">
            <i>DBSubnetGroupName</i> is already used by an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB subnet groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetQuotaExceededException">
            Request would result in user exceeding the allowed number of subnets in a DB subnet
            groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBSubnetGroup">REST API Reference for CreateDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateDBSubnetGroupAsync(Amazon.Neptune.Model.CreateDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new DB subnet group. DB subnet groups must contain at least one subnet in
            at least two AZs in the Amazon Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException">
            <i>DBSubnetGroupName</i> is already used by an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB subnet groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetQuotaExceededException">
            Request would result in user exceeding the allowed number of subnets in a DB subnet
            groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBSubnetGroup">REST API Reference for CreateDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateEventSubscription(Amazon.Neptune.Model.CreateEventSubscriptionRequest)">
            <summary>
            Creates an event notification subscription. This action requires a topic ARN (Amazon
            Resource Name) created by either the Neptune console, the SNS console, or the SNS
            API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe
            to the topic. The ARN is displayed in the SNS console.
            
             
            <para>
            You can specify the type of source (SourceType) you want to be notified of, provide
            a list of Neptune sources (SourceIds) that triggers the events, and provide a list
            of event categories (EventCategories) for events you want to be notified of. For example,
            you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2
            and EventCategories = Availability, Backup.
            </para>
             
            <para>
            If you specify both the SourceType and SourceIds, such as SourceType = db-instance
            and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events
            for the specified source. If you specify a SourceType but do not specify a SourceIdentifier,
            you receive notice of the events for that source type for all your Neptune sources.
            If you do not specify either the SourceType nor the SourceIdentifier, you are notified
            of events generated from all Neptune sources belonging to your customer account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventSubscription service method.</param>
            
            <returns>The response from the CreateEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException">
            You have exceeded the number of events you can subscribe to.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSInvalidTopicException">
            The SNS topic is invalid.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSNoAuthorizationException">
            There is no SNS authorization.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSTopicArnNotFoundException">
            The ARN of the SNS topic could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionAlreadyExistException">
            This subscription already exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException">
            The designated subscription category could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateEventSubscription">REST API Reference for CreateEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.CreateEventSubscriptionAsync(Amazon.Neptune.Model.CreateEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an event notification subscription. This action requires a topic ARN (Amazon
            Resource Name) created by either the Neptune console, the SNS console, or the SNS
            API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe
            to the topic. The ARN is displayed in the SNS console.
            
             
            <para>
            You can specify the type of source (SourceType) you want to be notified of, provide
            a list of Neptune sources (SourceIds) that triggers the events, and provide a list
            of event categories (EventCategories) for events you want to be notified of. For example,
            you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2
            and EventCategories = Availability, Backup.
            </para>
             
            <para>
            If you specify both the SourceType and SourceIds, such as SourceType = db-instance
            and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events
            for the specified source. If you specify a SourceType but do not specify a SourceIdentifier,
            you receive notice of the events for that source type for all your Neptune sources.
            If you do not specify either the SourceType nor the SourceIdentifier, you are notified
            of events generated from all Neptune sources belonging to your customer account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException">
            You have exceeded the number of events you can subscribe to.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSInvalidTopicException">
            The SNS topic is invalid.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSNoAuthorizationException">
            There is no SNS authorization.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSTopicArnNotFoundException">
            The ARN of the SNS topic could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionAlreadyExistException">
            This subscription already exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException">
            The designated subscription category could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateEventSubscription">REST API Reference for CreateEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBCluster(Amazon.Neptune.Model.DeleteDBClusterRequest)">
            <summary>
            The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete
            a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered.
            Manual DB cluster snapshots of the specified DB cluster are not deleted.
            
             
            <para>
            Note that the DB Cluster cannot be deleted if deletion protection is enabled. To delete
            it, you must first set its <code>DeletionProtection</code> field to <code>False</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBCluster service method.</param>
            
            <returns>The response from the DeleteDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBCluster">REST API Reference for DeleteDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBClusterAsync(Amazon.Neptune.Model.DeleteDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete
            a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered.
            Manual DB cluster snapshots of the specified DB cluster are not deleted.
            
             
            <para>
            Note that the DB Cluster cannot be deleted if deletion protection is enabled. To delete
            it, you must first set its <code>DeletionProtection</code> field to <code>False</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBCluster">REST API Reference for DeleteDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBClusterEndpoint(Amazon.Neptune.Model.DeleteDBClusterEndpointRequest)">
            <summary>
            Deletes a custom endpoint and removes it from an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterEndpoint service method.</param>
            
            <returns>The response from the DeleteDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointNotFoundException">
            The specified custom endpoint doesn't exist.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException">
            The requested operation cannot be performed on the endpoint while the endpoint is
            in this state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterEndpoint">REST API Reference for DeleteDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBClusterEndpointAsync(Amazon.Neptune.Model.DeleteDBClusterEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a custom endpoint and removes it from an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointNotFoundException">
            The specified custom endpoint doesn't exist.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException">
            The requested operation cannot be performed on the endpoint while the endpoint is
            in this state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterEndpoint">REST API Reference for DeleteDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBClusterParameterGroup(Amazon.Neptune.Model.DeleteDBClusterParameterGroupRequest)">
            <summary>
            Deletes a specified DB cluster parameter group. The DB cluster parameter group to
            be deleted can't be associated with any DB clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterParameterGroup service method.</param>
            
            <returns>The response from the DeleteDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterParameterGroup">REST API Reference for DeleteDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBClusterParameterGroupAsync(Amazon.Neptune.Model.DeleteDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified DB cluster parameter group. The DB cluster parameter group to
            be deleted can't be associated with any DB clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterParameterGroup">REST API Reference for DeleteDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBClusterSnapshot(Amazon.Neptune.Model.DeleteDBClusterSnapshotRequest)">
            <summary>
            Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation
            is terminated.
            
             <note> 
            <para>
            The DB cluster snapshot must be in the <code>available</code> state to be deleted.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterSnapshot service method.</param>
            
            <returns>The response from the DeleteDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterSnapshot">REST API Reference for DeleteDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBClusterSnapshotAsync(Amazon.Neptune.Model.DeleteDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation
            is terminated.
            
             <note> 
            <para>
            The DB cluster snapshot must be in the <code>available</code> state to be deleted.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterSnapshot">REST API Reference for DeleteDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBInstance(Amazon.Neptune.Model.DeleteDBInstanceRequest)">
            <summary>
            The DeleteDBInstance action deletes a previously provisioned DB instance. When you
            delete a DB instance, all automated backups for that instance are deleted and can't
            be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code>
            are not deleted.
            
             
            <para>
             If you request a final DB snapshot the status of the Amazon Neptune DB instance is
            <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code>
            is used to monitor the status of this operation. The action can't be canceled or reverted
            once submitted.
            </para>
             
            <para>
            Note that when a DB instance is in a failure state and has a status of <code>failed</code>,
            <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only
            delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.
            </para>
             
            <para>
            You can't delete a DB instance if it is the only instance in the DB cluster, or if
            it has deletion protection enabled.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBInstance service method.</param>
            
            <returns>The response from the DeleteDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException">
            <i>DBSnapshotIdentifier</i> is already used by an existing snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBInstance">REST API Reference for DeleteDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBInstanceAsync(Amazon.Neptune.Model.DeleteDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            The DeleteDBInstance action deletes a previously provisioned DB instance. When you
            delete a DB instance, all automated backups for that instance are deleted and can't
            be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code>
            are not deleted.
            
             
            <para>
             If you request a final DB snapshot the status of the Amazon Neptune DB instance is
            <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code>
            is used to monitor the status of this operation. The action can't be canceled or reverted
            once submitted.
            </para>
             
            <para>
            Note that when a DB instance is in a failure state and has a status of <code>failed</code>,
            <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only
            delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.
            </para>
             
            <para>
            You can't delete a DB instance if it is the only instance in the DB cluster, or if
            it has deletion protection enabled.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException">
            <i>DBSnapshotIdentifier</i> is already used by an existing snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBInstance">REST API Reference for DeleteDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBParameterGroup(Amazon.Neptune.Model.DeleteDBParameterGroupRequest)">
            <summary>
            Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted can't be
            associated with any DB instances.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBParameterGroup service method.</param>
            
            <returns>The response from the DeleteDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBParameterGroup">REST API Reference for DeleteDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBParameterGroupAsync(Amazon.Neptune.Model.DeleteDBParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted can't be
            associated with any DB instances.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBParameterGroup">REST API Reference for DeleteDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBSubnetGroup(Amazon.Neptune.Model.DeleteDBSubnetGroupRequest)">
            <summary>
            Deletes a DB subnet group.
            
             <note> 
            <para>
            The specified database subnet group must not be associated with any DB instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBSubnetGroup service method.</param>
            
            <returns>The response from the DeleteDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetStateException">
            The DB subnet is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBSubnetGroup">REST API Reference for DeleteDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteDBSubnetGroupAsync(Amazon.Neptune.Model.DeleteDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a DB subnet group.
            
             <note> 
            <para>
            The specified database subnet group must not be associated with any DB instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetStateException">
            The DB subnet is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBSubnetGroup">REST API Reference for DeleteDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteEventSubscription(Amazon.Neptune.Model.DeleteEventSubscriptionRequest)">
            <summary>
            Deletes an event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventSubscription service method.</param>
            
            <returns>The response from the DeleteEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.InvalidEventSubscriptionStateException">
            The event subscription is in an invalid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteEventSubscription">REST API Reference for DeleteEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DeleteEventSubscriptionAsync(Amazon.Neptune.Model.DeleteEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.InvalidEventSubscriptionStateException">
            The event subscription is in an invalid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteEventSubscription">REST API Reference for DeleteEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusterEndpoints(Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest)">
            <summary>
            Returns information about endpoints for an Amazon Neptune DB cluster.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterEndpoints service method.</param>
            
            <returns>The response from the DescribeDBClusterEndpoints service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterEndpoints">REST API Reference for DescribeDBClusterEndpoints Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusterEndpointsAsync(Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about endpoints for an Amazon Neptune DB cluster.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterEndpoints service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterEndpoints service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterEndpoints">REST API Reference for DescribeDBClusterEndpoints Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusterParameterGroups(Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest)">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list will contain only the description of the specified
            DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameterGroups service method.</param>
            
            <returns>The response from the DescribeDBClusterParameterGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterParameterGroups">REST API Reference for DescribeDBClusterParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusterParameterGroupsAsync(Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list will contain only the description of the specified
            DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameterGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterParameterGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterParameterGroups">REST API Reference for DescribeDBClusterParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusterParameters(Amazon.Neptune.Model.DescribeDBClusterParametersRequest)">
            <summary>
            Returns the detailed parameter list for a particular DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameters service method.</param>
            
            <returns>The response from the DescribeDBClusterParameters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterParameters">REST API Reference for DescribeDBClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusterParametersAsync(Amazon.Neptune.Model.DescribeDBClusterParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the detailed parameter list for a particular DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterParameters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterParameters">REST API Reference for DescribeDBClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusters(Amazon.Neptune.Model.DescribeDBClustersRequest)">
            <summary>
            Returns information about provisioned DB clusters, and supports pagination.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusters service method.</param>
            
            <returns>The response from the DescribeDBClusters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusters">REST API Reference for DescribeDBClusters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClustersAsync(Amazon.Neptune.Model.DescribeDBClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about provisioned DB clusters, and supports pagination.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusters">REST API Reference for DescribeDBClusters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusterSnapshotAttributes(Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesRequest)">
            <summary>
            Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When sharing snapshots with other Amazon accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the Amazon accounts
            that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual DB cluster snapshot is public and can be copied or restored by all Amazon accounts.
            </para>
             
            <para>
            To add or remove access for an Amazon account to copy or restore a manual DB cluster
            snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshotAttributes service method.</param>
            
            <returns>The response from the DescribeDBClusterSnapshotAttributes service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterSnapshotAttributes">REST API Reference for DescribeDBClusterSnapshotAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusterSnapshotAttributesAsync(Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When sharing snapshots with other Amazon accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the Amazon accounts
            that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual DB cluster snapshot is public and can be copied or restored by all Amazon accounts.
            </para>
             
            <para>
            To add or remove access for an Amazon account to copy or restore a manual DB cluster
            snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshotAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterSnapshotAttributes service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterSnapshotAttributes">REST API Reference for DescribeDBClusterSnapshotAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusterSnapshots(Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest)">
            <summary>
            Returns information about DB cluster snapshots. This API action supports pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshots service method.</param>
            
            <returns>The response from the DescribeDBClusterSnapshots service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterSnapshots">REST API Reference for DescribeDBClusterSnapshots Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBClusterSnapshotsAsync(Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about DB cluster snapshots. This API action supports pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshots service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterSnapshots service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterSnapshots">REST API Reference for DescribeDBClusterSnapshots Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBEngineVersions(Amazon.Neptune.Model.DescribeDBEngineVersionsRequest)">
            <summary>
            Returns a list of the available DB engines.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBEngineVersions service method.</param>
            
            <returns>The response from the DescribeDBEngineVersions service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBEngineVersions">REST API Reference for DescribeDBEngineVersions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBEngineVersionsAsync(Amazon.Neptune.Model.DescribeDBEngineVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the available DB engines.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBEngineVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBEngineVersions service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBEngineVersions">REST API Reference for DescribeDBEngineVersions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBInstances(Amazon.Neptune.Model.DescribeDBInstancesRequest)">
            <summary>
            Returns information about provisioned instances, and supports pagination.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS instances and Amazon DocDB
            instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBInstances service method.</param>
            
            <returns>The response from the DescribeDBInstances service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBInstances">REST API Reference for DescribeDBInstances Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBInstancesAsync(Amazon.Neptune.Model.DescribeDBInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about provisioned instances, and supports pagination.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS instances and Amazon DocDB
            instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBInstances service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBInstances">REST API Reference for DescribeDBInstances Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBParameterGroups(Amazon.Neptune.Model.DescribeDBParameterGroupsRequest)">
            <summary>
            Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code>
            is specified, the list will contain only the description of the specified DB parameter
            group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBParameterGroups service method.</param>
            
            <returns>The response from the DescribeDBParameterGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBParameterGroups">REST API Reference for DescribeDBParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBParameterGroupsAsync(Amazon.Neptune.Model.DescribeDBParameterGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code>
            is specified, the list will contain only the description of the specified DB parameter
            group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBParameterGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBParameterGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBParameterGroups">REST API Reference for DescribeDBParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBParameters(Amazon.Neptune.Model.DescribeDBParametersRequest)">
            <summary>
            Returns the detailed parameter list for a particular DB parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBParameters service method.</param>
            
            <returns>The response from the DescribeDBParameters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBParameters">REST API Reference for DescribeDBParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBParametersAsync(Amazon.Neptune.Model.DescribeDBParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the detailed parameter list for a particular DB parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBParameters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBParameters">REST API Reference for DescribeDBParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBSubnetGroups(Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest)">
            <summary>
            Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified,
            the list will contain only the descriptions of the specified DBSubnetGroup.
            
             
            <para>
            For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia
            Tutorial</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBSubnetGroups service method.</param>
            
            <returns>The response from the DescribeDBSubnetGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBSubnetGroups">REST API Reference for DescribeDBSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeDBSubnetGroupsAsync(Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified,
            the list will contain only the descriptions of the specified DBSubnetGroup.
            
             
            <para>
            For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia
            Tutorial</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBSubnetGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBSubnetGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBSubnetGroups">REST API Reference for DescribeDBSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeEngineDefaultClusterParameters(Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersRequest)">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultClusterParameters service method.</param>
            
            <returns>The response from the DescribeEngineDefaultClusterParameters service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEngineDefaultClusterParameters">REST API Reference for DescribeEngineDefaultClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeEngineDefaultClusterParametersAsync(Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultClusterParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEngineDefaultClusterParameters service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEngineDefaultClusterParameters">REST API Reference for DescribeEngineDefaultClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeEngineDefaultParameters(Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest)">
            <summary>
            Returns the default engine and system parameter information for the specified database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultParameters service method.</param>
            
            <returns>The response from the DescribeEngineDefaultParameters service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEngineDefaultParameters">REST API Reference for DescribeEngineDefaultParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeEngineDefaultParametersAsync(Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the default engine and system parameter information for the specified database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEngineDefaultParameters service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEngineDefaultParameters">REST API Reference for DescribeEngineDefaultParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeEventCategories(Amazon.Neptune.Model.DescribeEventCategoriesRequest)">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventCategories service method.</param>
            
            <returns>The response from the DescribeEventCategories service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEventCategories">REST API Reference for DescribeEventCategories Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeEventCategoriesAsync(Amazon.Neptune.Model.DescribeEventCategoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventCategories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventCategories service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEventCategories">REST API Reference for DescribeEventCategories Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeEvents(Amazon.Neptune.Model.DescribeEventsRequest)">
            <summary>
            Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter
            groups for the past 14 days. Events specific to a particular DB instance, DB security
            group, database snapshot, or DB parameter group can be obtained by providing the name
            as a parameter. By default, the past hour of events are returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            
            <returns>The response from the DescribeEvents service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeEventsAsync(Amazon.Neptune.Model.DescribeEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter
            groups for the past 14 days. Events specific to a particular DB instance, DB security
            group, database snapshot, or DB parameter group can be obtained by providing the name
            as a parameter. By default, the past hour of events are returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEvents service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeEventSubscriptions(Amazon.Neptune.Model.DescribeEventSubscriptionsRequest)">
            <summary>
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID,
            CreationTime, and Status.
            
             
            <para>
            If you specify a SubscriptionName, lists the description for that subscription.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSubscriptions service method.</param>
            
            <returns>The response from the DescribeEventSubscriptions service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEventSubscriptions">REST API Reference for DescribeEventSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeEventSubscriptionsAsync(Amazon.Neptune.Model.DescribeEventSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID,
            CreationTime, and Status.
            
             
            <para>
            If you specify a SubscriptionName, lists the description for that subscription.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSubscriptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventSubscriptions service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEventSubscriptions">REST API Reference for DescribeEventSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeOrderableDBInstanceOptions(Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest)">
            <summary>
            Returns a list of orderable DB instance options for the specified engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeOrderableDBInstanceOptions service method.</param>
            
            <returns>The response from the DescribeOrderableDBInstanceOptions service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeOrderableDBInstanceOptions">REST API Reference for DescribeOrderableDBInstanceOptions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeOrderableDBInstanceOptionsAsync(Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of orderable DB instance options for the specified engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeOrderableDBInstanceOptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeOrderableDBInstanceOptions service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeOrderableDBInstanceOptions">REST API Reference for DescribeOrderableDBInstanceOptions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribePendingMaintenanceActions(Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest)">
            <summary>
            Returns a list of resources (for example, DB instances) that have at least one pending
            maintenance action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePendingMaintenanceActions service method.</param>
            
            <returns>The response from the DescribePendingMaintenanceActions service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribePendingMaintenanceActions">REST API Reference for DescribePendingMaintenanceActions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribePendingMaintenanceActionsAsync(Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of resources (for example, DB instances) that have at least one pending
            maintenance action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePendingMaintenanceActions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePendingMaintenanceActions service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribePendingMaintenanceActions">REST API Reference for DescribePendingMaintenanceActions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeValidDBInstanceModifications(Amazon.Neptune.Model.DescribeValidDBInstanceModificationsRequest)">
            <summary>
            You can call <a>DescribeValidDBInstanceModifications</a> to learn what modifications
            you can make to your DB instance. You can use this information when you call <a>ModifyDBInstance</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeValidDBInstanceModifications service method.</param>
            
            <returns>The response from the DescribeValidDBInstanceModifications service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeValidDBInstanceModifications">REST API Reference for DescribeValidDBInstanceModifications Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.DescribeValidDBInstanceModificationsAsync(Amazon.Neptune.Model.DescribeValidDBInstanceModificationsRequest,System.Threading.CancellationToken)">
            <summary>
            You can call <a>DescribeValidDBInstanceModifications</a> to learn what modifications
            you can make to your DB instance. You can use this information when you call <a>ModifyDBInstance</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeValidDBInstanceModifications service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeValidDBInstanceModifications service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeValidDBInstanceModifications">REST API Reference for DescribeValidDBInstanceModifications Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.FailoverDBCluster(Amazon.Neptune.Model.FailoverDBClusterRequest)">
            <summary>
            Forces a failover for a DB cluster.
            
             
            <para>
            A failover for a DB cluster promotes one of the Read Replicas (read-only instances)
            in the DB cluster to be the primary instance (the cluster writer).
            </para>
             
            <para>
            Amazon Neptune will automatically fail over to a Read Replica, if one exists, when
            the primary instance fails. You can force a failover when you want to simulate a failure
            of a primary instance for testing. Because each instance in a DB cluster has its own
            endpoint address, you will need to clean up and re-establish any existing connections
            that use those endpoint addresses when the failover is complete.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FailoverDBCluster service method.</param>
            
            <returns>The response from the FailoverDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/FailoverDBCluster">REST API Reference for FailoverDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.FailoverDBClusterAsync(Amazon.Neptune.Model.FailoverDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Forces a failover for a DB cluster.
            
             
            <para>
            A failover for a DB cluster promotes one of the Read Replicas (read-only instances)
            in the DB cluster to be the primary instance (the cluster writer).
            </para>
             
            <para>
            Amazon Neptune will automatically fail over to a Read Replica, if one exists, when
            the primary instance fails. You can force a failover when you want to simulate a failure
            of a primary instance for testing. Because each instance in a DB cluster has its own
            endpoint address, you will need to clean up and re-establish any existing connections
            that use those endpoint addresses when the failover is complete.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FailoverDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the FailoverDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/FailoverDBCluster">REST API Reference for FailoverDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ListTagsForResource(Amazon.Neptune.Model.ListTagsForResourceRequest)">
            <summary>
            Lists all tags on an Amazon Neptune resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ListTagsForResourceAsync(Amazon.Neptune.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all tags on an Amazon Neptune resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBCluster(Amazon.Neptune.Model.ModifyDBClusterRequest)">
            <summary>
            Modify a setting for a DB cluster. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBCluster service method.</param>
            
            <returns>The response from the ModifyDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException">
            The state of the DB security group does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBCluster">REST API Reference for ModifyDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBClusterAsync(Amazon.Neptune.Model.ModifyDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Modify a setting for a DB cluster. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException">
            The state of the DB security group does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBCluster">REST API Reference for ModifyDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBClusterEndpoint(Amazon.Neptune.Model.ModifyDBClusterEndpointRequest)">
            <summary>
            Modifies the properties of an endpoint in an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterEndpoint service method.</param>
            
            <returns>The response from the ModifyDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointNotFoundException">
            The specified custom endpoint doesn't exist.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException">
            The requested operation cannot be performed on the endpoint while the endpoint is
            in this state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterEndpoint">REST API Reference for ModifyDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBClusterEndpointAsync(Amazon.Neptune.Model.ModifyDBClusterEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the properties of an endpoint in an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointNotFoundException">
            The specified custom endpoint doesn't exist.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException">
            The requested operation cannot be performed on the endpoint while the endpoint is
            in this state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterEndpoint">REST API Reference for ModifyDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBClusterParameterGroup(Amazon.Neptune.Model.ModifyDBClusterParameterGroupRequest)">
            <summary>
            Modifies the parameters of a DB cluster parameter group. To modify more than one
            parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB cluster associated with the parameter
            group before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the parameter group is used as the default for a new DB cluster. This
            is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the Amazon Neptune console or the <a>DescribeDBClusterParameters</a>
            command to verify that your DB cluster parameter group has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterParameterGroup service method.</param>
            
            <returns>The response from the ModifyDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterParameterGroup">REST API Reference for ModifyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBClusterParameterGroupAsync(Amazon.Neptune.Model.ModifyDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a DB cluster parameter group. To modify more than one
            parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB cluster associated with the parameter
            group before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the parameter group is used as the default for a new DB cluster. This
            is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the Amazon Neptune console or the <a>DescribeDBClusterParameters</a>
            command to verify that your DB cluster parameter group has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterParameterGroup">REST API Reference for ModifyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBClusterSnapshotAttribute(Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeRequest)">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            DB cluster snapshot.
            
             
            <para>
            To share a manual DB cluster snapshot with other Amazon accounts, specify <code>restore</code>
            as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to
            add a list of IDs of the Amazon accounts that are authorized to restore the manual
            DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster
            snapshot public, which means that it can be copied or restored by all Amazon accounts.
            Do not add the <code>all</code> value for any manual DB cluster snapshots that contain
            private information that you don't want available to all Amazon accounts. If a manual
            DB cluster snapshot is encrypted, it can be shared, but only by specifying a list
            of authorized Amazon account IDs for the <code>ValuesToAdd</code> parameter. You can't
            use <code>all</code> as a value for that parameter in this case.
            </para>
             
            <para>
            To view which Amazon accounts have access to copy or restore a manual DB cluster snapshot,
            or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a>
            API action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterSnapshotAttribute service method.</param>
            
            <returns>The response from the ModifyDBClusterSnapshotAttribute service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException">
            You have exceeded the maximum number of accounts that you can share a manual DB snapshot
            with.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterSnapshotAttribute">REST API Reference for ModifyDBClusterSnapshotAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBClusterSnapshotAttributeAsync(Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            DB cluster snapshot.
            
             
            <para>
            To share a manual DB cluster snapshot with other Amazon accounts, specify <code>restore</code>
            as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to
            add a list of IDs of the Amazon accounts that are authorized to restore the manual
            DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster
            snapshot public, which means that it can be copied or restored by all Amazon accounts.
            Do not add the <code>all</code> value for any manual DB cluster snapshots that contain
            private information that you don't want available to all Amazon accounts. If a manual
            DB cluster snapshot is encrypted, it can be shared, but only by specifying a list
            of authorized Amazon account IDs for the <code>ValuesToAdd</code> parameter. You can't
            use <code>all</code> as a value for that parameter in this case.
            </para>
             
            <para>
            To view which Amazon accounts have access to copy or restore a manual DB cluster snapshot,
            or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a>
            API action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterSnapshotAttribute service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBClusterSnapshotAttribute service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException">
            You have exceeded the maximum number of accounts that you can share a manual DB snapshot
            with.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterSnapshotAttribute">REST API Reference for ModifyDBClusterSnapshotAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBInstance(Amazon.Neptune.Model.ModifyDBInstanceRequest)">
            <summary>
            Modifies settings for a DB instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request. To learn
            what modifications you can make to your DB instance, call <a>DescribeValidDBInstanceModifications</a>
            before you call <a>ModifyDBInstance</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBInstance service method.</param>
            
            <returns>The response from the ModifyDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.AuthorizationNotFoundException">
            Specified CIDRIP or EC2 security group is not authorized for the specified DB security
            group.
            
             
            <para>
            Neptune may not also be authorized via IAM to perform necessary actions on your behalf.
            </para>
            </exception>
            <exception cref="T:Amazon.Neptune.Model.CertificateNotFoundException">
            <i>CertificateIdentifier</i> does not refer to an existing certificate.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceAlreadyExistsException">
            User already has a DB instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSecurityGroupNotFoundException">
            <i>DBSecurityGroupName</i> does not refer to an existing DB security group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBUpgradeDependencyFailureException">
            The DB upgrade failed because a resource the DB depends on could not be modified.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DomainNotFoundException">
            <i>Domain</i> does not refer to an existing Active Directory Domain.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException">
            Specified DB instance class is not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException">
            The state of the DB security group does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException">
            Provisioned IOPS not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageTypeNotSupportedException">
            <i>StorageType</i> specified cannot be associated with the DB Instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBInstance">REST API Reference for ModifyDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBInstanceAsync(Amazon.Neptune.Model.ModifyDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies settings for a DB instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request. To learn
            what modifications you can make to your DB instance, call <a>DescribeValidDBInstanceModifications</a>
            before you call <a>ModifyDBInstance</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.AuthorizationNotFoundException">
            Specified CIDRIP or EC2 security group is not authorized for the specified DB security
            group.
            
             
            <para>
            Neptune may not also be authorized via IAM to perform necessary actions on your behalf.
            </para>
            </exception>
            <exception cref="T:Amazon.Neptune.Model.CertificateNotFoundException">
            <i>CertificateIdentifier</i> does not refer to an existing certificate.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceAlreadyExistsException">
            User already has a DB instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSecurityGroupNotFoundException">
            <i>DBSecurityGroupName</i> does not refer to an existing DB security group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBUpgradeDependencyFailureException">
            The DB upgrade failed because a resource the DB depends on could not be modified.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DomainNotFoundException">
            <i>Domain</i> does not refer to an existing Active Directory Domain.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException">
            Specified DB instance class is not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException">
            The state of the DB security group does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException">
            Provisioned IOPS not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageTypeNotSupportedException">
            <i>StorageType</i> specified cannot be associated with the DB Instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBInstance">REST API Reference for ModifyDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBParameterGroup(Amazon.Neptune.Model.ModifyDBParameterGroupRequest)">
            <summary>
            Modifies the parameters of a DB parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB instance associated with the parameter
            group before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you modify a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the modify action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBParameterGroup service method.</param>
            
            <returns>The response from the ModifyDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBParameterGroup">REST API Reference for ModifyDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBParameterGroupAsync(Amazon.Neptune.Model.ModifyDBParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a DB parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB instance associated with the parameter
            group before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you modify a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the modify action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBParameterGroup">REST API Reference for ModifyDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBSubnetGroup(Amazon.Neptune.Model.ModifyDBSubnetGroupRequest)">
            <summary>
            Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet
            in at least two AZs in the Amazon Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBSubnetGroup service method.</param>
            
            <returns>The response from the ModifyDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetQuotaExceededException">
            Request would result in user exceeding the allowed number of subnets in a DB subnet
            groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubnetAlreadyInUseException">
            The DB subnet is already in use in the Availability Zone.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBSubnetGroup">REST API Reference for ModifyDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyDBSubnetGroupAsync(Amazon.Neptune.Model.ModifyDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet
            in at least two AZs in the Amazon Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetQuotaExceededException">
            Request would result in user exceeding the allowed number of subnets in a DB subnet
            groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubnetAlreadyInUseException">
            The DB subnet is already in use in the Availability Zone.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBSubnetGroup">REST API Reference for ModifyDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyEventSubscription(Amazon.Neptune.Model.ModifyEventSubscriptionRequest)">
            <summary>
            Modifies an existing event notification subscription. Note that you can't modify the
            source identifiers using this call; to change source identifiers for a subscription,
            use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a>
            calls.
            
             
            <para>
            You can see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyEventSubscription service method.</param>
            
            <returns>The response from the ModifyEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException">
            You have exceeded the number of events you can subscribe to.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSInvalidTopicException">
            The SNS topic is invalid.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSNoAuthorizationException">
            There is no SNS authorization.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSTopicArnNotFoundException">
            The ARN of the SNS topic could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException">
            The designated subscription category could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyEventSubscription">REST API Reference for ModifyEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ModifyEventSubscriptionAsync(Amazon.Neptune.Model.ModifyEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing event notification subscription. Note that you can't modify the
            source identifiers using this call; to change source identifiers for a subscription,
            use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a>
            calls.
            
             
            <para>
            You can see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException">
            You have exceeded the number of events you can subscribe to.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSInvalidTopicException">
            The SNS topic is invalid.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSNoAuthorizationException">
            There is no SNS authorization.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSTopicArnNotFoundException">
            The ARN of the SNS topic could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException">
            The designated subscription category could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyEventSubscription">REST API Reference for ModifyEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.PromoteReadReplicaDBCluster(Amazon.Neptune.Model.PromoteReadReplicaDBClusterRequest)">
            <summary>
            Not supported.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PromoteReadReplicaDBCluster service method.</param>
            
            <returns>The response from the PromoteReadReplicaDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/PromoteReadReplicaDBCluster">REST API Reference for PromoteReadReplicaDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.PromoteReadReplicaDBClusterAsync(Amazon.Neptune.Model.PromoteReadReplicaDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Not supported.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PromoteReadReplicaDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PromoteReadReplicaDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/PromoteReadReplicaDBCluster">REST API Reference for PromoteReadReplicaDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RebootDBInstance(Amazon.Neptune.Model.RebootDBInstanceRequest)">
            <summary>
            You might need to reboot your DB instance, usually for maintenance reasons. For example,
            if you make certain modifications, or if you change the DB parameter group associated
            with the DB instance, you must reboot the instance for the changes to take effect.
            
             
            <para>
            Rebooting a DB instance restarts the database engine service. Rebooting a DB instance
            results in a momentary outage, during which the DB instance status is set to rebooting.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootDBInstance service method.</param>
            
            <returns>The response from the RebootDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RebootDBInstance">REST API Reference for RebootDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RebootDBInstanceAsync(Amazon.Neptune.Model.RebootDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            You might need to reboot your DB instance, usually for maintenance reasons. For example,
            if you make certain modifications, or if you change the DB parameter group associated
            with the DB instance, you must reboot the instance for the changes to take effect.
            
             
            <para>
            Rebooting a DB instance restarts the database engine service. Rebooting a DB instance
            results in a momentary outage, during which the DB instance status is set to rebooting.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RebootDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RebootDBInstance">REST API Reference for RebootDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RemoveRoleFromDBCluster(Amazon.Neptune.Model.RemoveRoleFromDBClusterRequest)">
            <summary>
            Disassociates an Identity and Access Management (IAM) role from a DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveRoleFromDBCluster service method.</param>
            
            <returns>The response from the RemoveRoleFromDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleNotFoundException">
            The specified IAM role Amazon Resource Name (ARN) is not associated with the specified
            DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveRoleFromDBCluster">REST API Reference for RemoveRoleFromDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RemoveRoleFromDBClusterAsync(Amazon.Neptune.Model.RemoveRoleFromDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates an Identity and Access Management (IAM) role from a DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveRoleFromDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveRoleFromDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleNotFoundException">
            The specified IAM role Amazon Resource Name (ARN) is not associated with the specified
            DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveRoleFromDBCluster">REST API Reference for RemoveRoleFromDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RemoveSourceIdentifierFromSubscription(Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionRequest)">
            <summary>
            Removes a source identifier from an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveSourceIdentifierFromSubscription service method.</param>
            
            <returns>The response from the RemoveSourceIdentifierFromSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveSourceIdentifierFromSubscription">REST API Reference for RemoveSourceIdentifierFromSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RemoveSourceIdentifierFromSubscriptionAsync(Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a source identifier from an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveSourceIdentifierFromSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveSourceIdentifierFromSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveSourceIdentifierFromSubscription">REST API Reference for RemoveSourceIdentifierFromSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RemoveTagsFromResource(Amazon.Neptune.Model.RemoveTagsFromResourceRequest)">
            <summary>
            Removes metadata tags from an Amazon Neptune resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromResource service method.</param>
            
            <returns>The response from the RemoveTagsFromResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveTagsFromResource">REST API Reference for RemoveTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RemoveTagsFromResourceAsync(Amazon.Neptune.Model.RemoveTagsFromResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes metadata tags from an Amazon Neptune resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveTagsFromResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveTagsFromResource">REST API Reference for RemoveTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ResetDBClusterParameterGroup(Amazon.Neptune.Model.ResetDBClusterParameterGroupRequest)">
            <summary>
            Modifies the parameters of a DB cluster parameter group to the default value. To
            reset specific parameters submit a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify
            the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
             
            <para>
             When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a>
            for every DB instance in your DB cluster that you want the updated static parameter
            to apply to.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBClusterParameterGroup service method.</param>
            
            <returns>The response from the ResetDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ResetDBClusterParameterGroup">REST API Reference for ResetDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ResetDBClusterParameterGroupAsync(Amazon.Neptune.Model.ResetDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a DB cluster parameter group to the default value. To
            reset specific parameters submit a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify
            the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
             
            <para>
             When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a>
            for every DB instance in your DB cluster that you want the updated static parameter
            to apply to.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResetDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ResetDBClusterParameterGroup">REST API Reference for ResetDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ResetDBParameterGroup(Amazon.Neptune.Model.ResetDBParameterGroupRequest)">
            <summary>
            Modifies the parameters of a DB parameter group to the engine/system default value.
            To reset specific parameters, provide a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the
            <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters.
            When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <code>RebootDBInstance</code> request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBParameterGroup service method.</param>
            
            <returns>The response from the ResetDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ResetDBParameterGroup">REST API Reference for ResetDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.ResetDBParameterGroupAsync(Amazon.Neptune.Model.ResetDBParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a DB parameter group to the engine/system default value.
            To reset specific parameters, provide a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the
            <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters.
            When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <code>RebootDBInstance</code> request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResetDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ResetDBParameterGroup">REST API Reference for ResetDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RestoreDBClusterFromSnapshot(Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest)">
            <summary>
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
            
             
            <para>
            If a DB snapshot is specified, the target DB cluster is created from the source DB
            snapshot with a default configuration and default security group.
            </para>
             
            <para>
            If a DB cluster snapshot is specified, the target DB cluster is created from the source
            DB cluster restore point with the same configuration as the original source DB cluster,
            except that the new DB cluster is created with the default security group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterFromSnapshot service method.</param>
            
            <returns>The response from the RestoreDBClusterFromSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBClusterCapacityException">
            The DB cluster does not have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSnapshotStateException">
            The state of the DB snapshot does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidRestoreException">
            Cannot restore from vpc backup to non-vpc DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RestoreDBClusterFromSnapshot">REST API Reference for RestoreDBClusterFromSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RestoreDBClusterFromSnapshotAsync(Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
            
             
            <para>
            If a DB snapshot is specified, the target DB cluster is created from the source DB
            snapshot with a default configuration and default security group.
            </para>
             
            <para>
            If a DB cluster snapshot is specified, the target DB cluster is created from the source
            DB cluster restore point with the same configuration as the original source DB cluster,
            except that the new DB cluster is created with the default security group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterFromSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreDBClusterFromSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBClusterCapacityException">
            The DB cluster does not have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSnapshotStateException">
            The state of the DB snapshot does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidRestoreException">
            Cannot restore from vpc backup to non-vpc DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RestoreDBClusterFromSnapshot">REST API Reference for RestoreDBClusterFromSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RestoreDBClusterToPointInTime(Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest)">
            <summary>
            Restores a DB cluster to an arbitrary point in time. Users can restore to any point
            in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target DB cluster is created from the source DB cluster with the same configuration
            as the original DB cluster, except that the new DB cluster is created with the default
            DB security group.
            
             <note> 
            <para>
            This action only restores the DB cluster, not the DB instances for that DB cluster.
            You must invoke the <a>CreateDBInstance</a> action to create DB instances for the
            restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.
            You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code>
            action has completed and the DB cluster is available.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterToPointInTime service method.</param>
            
            <returns>The response from the RestoreDBClusterToPointInTime service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBClusterCapacityException">
            The DB cluster does not have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSnapshotStateException">
            The state of the DB snapshot does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidRestoreException">
            Cannot restore from vpc backup to non-vpc DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RestoreDBClusterToPointInTime">REST API Reference for RestoreDBClusterToPointInTime Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.RestoreDBClusterToPointInTimeAsync(Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest,System.Threading.CancellationToken)">
            <summary>
            Restores a DB cluster to an arbitrary point in time. Users can restore to any point
            in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target DB cluster is created from the source DB cluster with the same configuration
            as the original DB cluster, except that the new DB cluster is created with the default
            DB security group.
            
             <note> 
            <para>
            This action only restores the DB cluster, not the DB instances for that DB cluster.
            You must invoke the <a>CreateDBInstance</a> action to create DB instances for the
            restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.
            You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code>
            action has completed and the DB cluster is available.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterToPointInTime service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreDBClusterToPointInTime service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBClusterCapacityException">
            The DB cluster does not have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSnapshotStateException">
            The state of the DB snapshot does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidRestoreException">
            Cannot restore from vpc backup to non-vpc DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RestoreDBClusterToPointInTime">REST API Reference for RestoreDBClusterToPointInTime Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.StartDBCluster(Amazon.Neptune.Model.StartDBClusterRequest)">
            <summary>
            Starts an Amazon Neptune DB cluster that was stopped using the AWS console, the Amazon
            CLI stop-db-cluster command, or the StopDBCluster API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDBCluster service method.</param>
            
            <returns>The response from the StartDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/StartDBCluster">REST API Reference for StartDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.StartDBClusterAsync(Amazon.Neptune.Model.StartDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Starts an Amazon Neptune DB cluster that was stopped using the AWS console, the Amazon
            CLI stop-db-cluster command, or the StopDBCluster API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/StartDBCluster">REST API Reference for StartDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.StopDBCluster(Amazon.Neptune.Model.StopDBClusterRequest)">
            <summary>
            Stops an Amazon Neptune DB cluster. When you stop a DB cluster, Neptune retains the
            DB cluster's metadata, including its endpoints and DB parameter groups.
            
             
            <para>
            Neptune also retains the transaction logs so you can do a point-in-time restore if
            necessary.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDBCluster service method.</param>
            
            <returns>The response from the StopDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/StopDBCluster">REST API Reference for StopDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.AmazonNeptuneClient.StopDBClusterAsync(Amazon.Neptune.Model.StopDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Stops an Amazon Neptune DB cluster. When you stop a DB cluster, Neptune retains the
            DB cluster's metadata, including its endpoints and DB parameter groups.
            
             
            <para>
            Neptune also retains the transaction logs so you can do a point-in-time restore if
            necessary.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/StopDBCluster">REST API Reference for StopDBCluster Operation</seealso>
        </member>
        <member name="T:Amazon.Neptune.IAmazonNeptune">
             <summary>
             Interface for accessing Neptune
            
             Amazon Neptune 
             <para>
             Amazon Neptune is a fast, reliable, fully-managed graph database service that makes
             it easy to build and run applications that work with highly connected datasets. The
             core of Amazon Neptune is a purpose-built, high-performance graph database engine
             optimized for storing billions of relationships and querying the graph with milliseconds
             latency. Amazon Neptune supports popular graph models Property Graph and W3C's RDF,
             and their respective query languages Apache TinkerPop Gremlin and SPARQL, allowing
             you to easily build queries that efficiently navigate highly connected datasets. Neptune
             powers graph use cases such as recommendation engines, fraud detection, knowledge
             graphs, drug discovery, and network security.
             </para>
              
             <para>
             This interface reference for Amazon Neptune contains documentation for a programming
             or command line interface you can use to manage Amazon Neptune. Note that Amazon Neptune
             is asynchronous, which means that some interfaces might require techniques such as
             polling or callback functions to determine when a command has been applied. In this
             reference, the parameter descriptions indicate whether a command is applied immediately,
             on the next instance reboot, or during the maintenance window. The reference structure
             is as follows, and we list following some related topics from the user guide.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.Neptune.IAmazonNeptune.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.AddRoleToDBCluster(Amazon.Neptune.Model.AddRoleToDBClusterRequest)">
            <summary>
            Associates an Identity and Access Management (IAM) role from an Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddRoleToDBCluster service method.</param>
            
            <returns>The response from the AddRoleToDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException">
            The specified IAM role Amazon Resource Name (ARN) is already associated with the specified
            DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException">
            You have exceeded the maximum number of IAM roles that can be associated with the
            specified DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddRoleToDBCluster">REST API Reference for AddRoleToDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.AddRoleToDBClusterAsync(Amazon.Neptune.Model.AddRoleToDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Associates an Identity and Access Management (IAM) role from an Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddRoleToDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddRoleToDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleAlreadyExistsException">
            The specified IAM role Amazon Resource Name (ARN) is already associated with the specified
            DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleQuotaExceededException">
            You have exceeded the maximum number of IAM roles that can be associated with the
            specified DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddRoleToDBCluster">REST API Reference for AddRoleToDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.AddSourceIdentifierToSubscription(Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionRequest)">
            <summary>
            Adds a source identifier to an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddSourceIdentifierToSubscription service method.</param>
            
            <returns>The response from the AddSourceIdentifierToSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddSourceIdentifierToSubscription">REST API Reference for AddSourceIdentifierToSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.AddSourceIdentifierToSubscriptionAsync(Amazon.Neptune.Model.AddSourceIdentifierToSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Adds a source identifier to an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddSourceIdentifierToSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddSourceIdentifierToSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddSourceIdentifierToSubscription">REST API Reference for AddSourceIdentifierToSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.AddTagsToResource(Amazon.Neptune.Model.AddTagsToResourceRequest)">
            <summary>
            Adds metadata tags to an Amazon Neptune resource. These tags can also be used with
            cost allocation reporting to track cost associated with Amazon Neptune resources,
            or used in a Condition statement in an IAM policy for Amazon Neptune.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToResource service method.</param>
            
            <returns>The response from the AddTagsToResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddTagsToResource">REST API Reference for AddTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.AddTagsToResourceAsync(Amazon.Neptune.Model.AddTagsToResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds metadata tags to an Amazon Neptune resource. These tags can also be used with
            cost allocation reporting to track cost associated with Amazon Neptune resources,
            or used in a Condition statement in an IAM policy for Amazon Neptune.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AddTagsToResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AddTagsToResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/AddTagsToResource">REST API Reference for AddTagsToResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ApplyPendingMaintenanceAction(Amazon.Neptune.Model.ApplyPendingMaintenanceActionRequest)">
            <summary>
            Applies a pending maintenance action to a resource (for example, to a DB instance).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ApplyPendingMaintenanceAction service method.</param>
            
            <returns>The response from the ApplyPendingMaintenanceAction service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ApplyPendingMaintenanceAction">REST API Reference for ApplyPendingMaintenanceAction Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ApplyPendingMaintenanceActionAsync(Amazon.Neptune.Model.ApplyPendingMaintenanceActionRequest,System.Threading.CancellationToken)">
            <summary>
            Applies a pending maintenance action to a resource (for example, to a DB instance).
            </summary>
            <param name="request">Container for the necessary parameters to execute the ApplyPendingMaintenanceAction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ApplyPendingMaintenanceAction service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ApplyPendingMaintenanceAction">REST API Reference for ApplyPendingMaintenanceAction Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CopyDBClusterParameterGroup(Amazon.Neptune.Model.CopyDBClusterParameterGroupRequest)">
            <summary>
            Copies the specified DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterParameterGroup service method.</param>
            
            <returns>The response from the CopyDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBClusterParameterGroup">REST API Reference for CopyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CopyDBClusterParameterGroupAsync(Amazon.Neptune.Model.CopyDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Copies the specified DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBClusterParameterGroup">REST API Reference for CopyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CopyDBClusterSnapshot(Amazon.Neptune.Model.CopyDBClusterSnapshotRequest)">
            <summary>
            Copies a snapshot of a DB cluster.
            
             
            <para>
            To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterSnapshot service method.</param>
            
            <returns>The response from the CopyDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBClusterSnapshot">REST API Reference for CopyDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CopyDBClusterSnapshotAsync(Amazon.Neptune.Model.CopyDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Copies a snapshot of a DB cluster.
            
             
            <para>
            To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>
            must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBClusterSnapshot">REST API Reference for CopyDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CopyDBParameterGroup(Amazon.Neptune.Model.CopyDBParameterGroupRequest)">
            <summary>
            Copies the specified DB parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBParameterGroup service method.</param>
            
            <returns>The response from the CopyDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBParameterGroup">REST API Reference for CopyDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CopyDBParameterGroupAsync(Amazon.Neptune.Model.CopyDBParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Copies the specified DB parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CopyDBParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CopyDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CopyDBParameterGroup">REST API Reference for CopyDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBCluster(Amazon.Neptune.Model.CreateDBClusterRequest)">
            <summary>
            Creates a new Amazon Neptune DB cluster.
            
             
            <para>
            You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB
            cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance.
            </para>
             
            <para>
            Note that when you create a new cluster using <code>CreateDBCluster</code> directly,
            deletion protection is disabled by default (when you create a new production cluster
            in the console, deletion protection is enabled by default). You can only delete a
            DB cluster if its <code>DeletionProtection</code> field is set to <code>false</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBCluster service method.</param>
            
            <returns>The response from the CreateDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBCluster">REST API Reference for CreateDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBClusterAsync(Amazon.Neptune.Model.CreateDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new Amazon Neptune DB cluster.
            
             
            <para>
            You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB
            cluster as a Read Replica of another DB cluster or Amazon Neptune DB instance.
            </para>
             
            <para>
            Note that when you create a new cluster using <code>CreateDBCluster</code> directly,
            deletion protection is disabled by default (when you create a new production cluster
            in the console, deletion protection is enabled by default). You can only delete a
            DB cluster if its <code>DeletionProtection</code> field is set to <code>false</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBCluster">REST API Reference for CreateDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBClusterEndpoint(Amazon.Neptune.Model.CreateDBClusterEndpointRequest)">
            <summary>
            Creates a new custom endpoint and associates it with an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterEndpoint service method.</param>
            
            <returns>The response from the CreateDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException">
            The specified custom endpoint cannot be created because it already exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException">
            The cluster already has the maximum number of custom endpoints.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterEndpoint">REST API Reference for CreateDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBClusterEndpointAsync(Amazon.Neptune.Model.CreateDBClusterEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new custom endpoint and associates it with an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointAlreadyExistsException">
            The specified custom endpoint cannot be created because it already exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointQuotaExceededException">
            The cluster already has the maximum number of custom endpoints.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterEndpoint">REST API Reference for CreateDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBClusterParameterGroup(Amazon.Neptune.Model.CreateDBClusterParameterGroupRequest)">
            <summary>
            Creates a new DB cluster parameter group.
            
             
            <para>
            Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.
            </para>
             
            <para>
             A DB cluster parameter group is initially created with the default parameters for
            the database engine used by instances in the DB cluster. To provide custom values
            for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>.
            Once you've created a DB cluster parameter group, you need to associate it with your
            DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter
            group with a running DB cluster, you need to reboot the DB instances in the DB cluster
            without failover for the new DB cluster parameter group and associated settings to
            take effect.
            </para>
             <important> 
            <para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the DB cluster parameter group is used as the default for a new DB cluster.
            This is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon Neptune
            console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your
            DB cluster parameter group has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterParameterGroup service method.</param>
            
            <returns>The response from the CreateDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterParameterGroup">REST API Reference for CreateDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBClusterParameterGroupAsync(Amazon.Neptune.Model.CreateDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new DB cluster parameter group.
            
             
            <para>
            Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.
            </para>
             
            <para>
             A DB cluster parameter group is initially created with the default parameters for
            the database engine used by instances in the DB cluster. To provide custom values
            for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>.
            Once you've created a DB cluster parameter group, you need to associate it with your
            DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter
            group with a running DB cluster, you need to reboot the DB instances in the DB cluster
            without failover for the new DB cluster parameter group and associated settings to
            take effect.
            </para>
             <important> 
            <para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the DB cluster parameter group is used as the default for a new DB cluster.
            This is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon Neptune
            console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your
            DB cluster parameter group has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterParameterGroup">REST API Reference for CreateDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBClusterSnapshot(Amazon.Neptune.Model.CreateDBClusterSnapshotRequest)">
            <summary>
            Creates a snapshot of a DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterSnapshot service method.</param>
            
            <returns>The response from the CreateDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterSnapshot">REST API Reference for CreateDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBClusterSnapshotAsync(Amazon.Neptune.Model.CreateDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a snapshot of a DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBClusterSnapshot">REST API Reference for CreateDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBInstance(Amazon.Neptune.Model.CreateDBInstanceRequest)">
            <summary>
            Creates a new DB instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBInstance service method.</param>
            
            <returns>The response from the CreateDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.AuthorizationNotFoundException">
            Specified CIDRIP or EC2 security group is not authorized for the specified DB security
            group.
            
             
            <para>
            Neptune may not also be authorized via IAM to perform necessary actions on your behalf.
            </para>
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceAlreadyExistsException">
            User already has a DB instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSecurityGroupNotFoundException">
            <i>DBSecurityGroupName</i> does not refer to an existing DB security group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DomainNotFoundException">
            <i>Domain</i> does not refer to an existing Active Directory Domain.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InstanceQuotaExceededException">
            Request would result in user exceeding the allowed number of DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException">
            Specified DB instance class is not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException">
            Provisioned IOPS not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageTypeNotSupportedException">
            <i>StorageType</i> specified cannot be associated with the DB Instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBInstance">REST API Reference for CreateDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBInstanceAsync(Amazon.Neptune.Model.CreateDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new DB instance.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.AuthorizationNotFoundException">
            Specified CIDRIP or EC2 security group is not authorized for the specified DB security
            group.
            
             
            <para>
            Neptune may not also be authorized via IAM to perform necessary actions on your behalf.
            </para>
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceAlreadyExistsException">
            User already has a DB instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSecurityGroupNotFoundException">
            <i>DBSecurityGroupName</i> does not refer to an existing DB security group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DomainNotFoundException">
            <i>Domain</i> does not refer to an existing Active Directory Domain.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InstanceQuotaExceededException">
            Request would result in user exceeding the allowed number of DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException">
            Specified DB instance class is not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException">
            Provisioned IOPS not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageTypeNotSupportedException">
            <i>StorageType</i> specified cannot be associated with the DB Instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBInstance">REST API Reference for CreateDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBParameterGroup(Amazon.Neptune.Model.CreateDBParameterGroupRequest)">
            <summary>
            Creates a new DB parameter group.
            
             
            <para>
            A DB parameter group is initially created with the default parameters for the database
            engine used by the DB instance. To provide custom values for any of the parameters,
            you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once
            you've created a DB parameter group, you need to associate it with your DB instance
            using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a
            running DB instance, you need to reboot the DB instance without failover for the new
            DB parameter group and associated settings to take effect.
            </para>
             <important> 
            <para>
            After you create a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the create action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBParameterGroup service method.</param>
            
            <returns>The response from the CreateDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBParameterGroup">REST API Reference for CreateDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBParameterGroupAsync(Amazon.Neptune.Model.CreateDBParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new DB parameter group.
            
             
            <para>
            A DB parameter group is initially created with the default parameters for the database
            engine used by the DB instance. To provide custom values for any of the parameters,
            you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once
            you've created a DB parameter group, you need to associate it with your DB instance
            using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a
            running DB instance, you need to reboot the DB instance without failover for the new
            DB parameter group and associated settings to take effect.
            </para>
             <important> 
            <para>
            After you create a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the create action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupAlreadyExistsException">
            A DB parameter group with the same name exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB parameter groups.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBParameterGroup">REST API Reference for CreateDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBSubnetGroup(Amazon.Neptune.Model.CreateDBSubnetGroupRequest)">
            <summary>
            Creates a new DB subnet group. DB subnet groups must contain at least one subnet in
            at least two AZs in the Amazon Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBSubnetGroup service method.</param>
            
            <returns>The response from the CreateDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException">
            <i>DBSubnetGroupName</i> is already used by an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB subnet groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetQuotaExceededException">
            Request would result in user exceeding the allowed number of subnets in a DB subnet
            groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBSubnetGroup">REST API Reference for CreateDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateDBSubnetGroupAsync(Amazon.Neptune.Model.CreateDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new DB subnet group. DB subnet groups must contain at least one subnet in
            at least two AZs in the Amazon Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupAlreadyExistsException">
            <i>DBSubnetGroupName</i> is already used by an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupQuotaExceededException">
            Request would result in user exceeding the allowed number of DB subnet groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetQuotaExceededException">
            Request would result in user exceeding the allowed number of subnets in a DB subnet
            groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateDBSubnetGroup">REST API Reference for CreateDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateEventSubscription(Amazon.Neptune.Model.CreateEventSubscriptionRequest)">
            <summary>
            Creates an event notification subscription. This action requires a topic ARN (Amazon
            Resource Name) created by either the Neptune console, the SNS console, or the SNS
            API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe
            to the topic. The ARN is displayed in the SNS console.
            
             
            <para>
            You can specify the type of source (SourceType) you want to be notified of, provide
            a list of Neptune sources (SourceIds) that triggers the events, and provide a list
            of event categories (EventCategories) for events you want to be notified of. For example,
            you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2
            and EventCategories = Availability, Backup.
            </para>
             
            <para>
            If you specify both the SourceType and SourceIds, such as SourceType = db-instance
            and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events
            for the specified source. If you specify a SourceType but do not specify a SourceIdentifier,
            you receive notice of the events for that source type for all your Neptune sources.
            If you do not specify either the SourceType nor the SourceIdentifier, you are notified
            of events generated from all Neptune sources belonging to your customer account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventSubscription service method.</param>
            
            <returns>The response from the CreateEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException">
            You have exceeded the number of events you can subscribe to.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSInvalidTopicException">
            The SNS topic is invalid.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSNoAuthorizationException">
            There is no SNS authorization.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSTopicArnNotFoundException">
            The ARN of the SNS topic could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionAlreadyExistException">
            This subscription already exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException">
            The designated subscription category could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateEventSubscription">REST API Reference for CreateEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.CreateEventSubscriptionAsync(Amazon.Neptune.Model.CreateEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an event notification subscription. This action requires a topic ARN (Amazon
            Resource Name) created by either the Neptune console, the SNS console, or the SNS
            API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe
            to the topic. The ARN is displayed in the SNS console.
            
             
            <para>
            You can specify the type of source (SourceType) you want to be notified of, provide
            a list of Neptune sources (SourceIds) that triggers the events, and provide a list
            of event categories (EventCategories) for events you want to be notified of. For example,
            you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2
            and EventCategories = Availability, Backup.
            </para>
             
            <para>
            If you specify both the SourceType and SourceIds, such as SourceType = db-instance
            and SourceIdentifier = myDBInstance1, you are notified of all the db-instance events
            for the specified source. If you specify a SourceType but do not specify a SourceIdentifier,
            you receive notice of the events for that source type for all your Neptune sources.
            If you do not specify either the SourceType nor the SourceIdentifier, you are notified
            of events generated from all Neptune sources belonging to your customer account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException">
            You have exceeded the number of events you can subscribe to.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSInvalidTopicException">
            The SNS topic is invalid.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSNoAuthorizationException">
            There is no SNS authorization.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSTopicArnNotFoundException">
            The ARN of the SNS topic could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionAlreadyExistException">
            This subscription already exists.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException">
            The designated subscription category could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/CreateEventSubscription">REST API Reference for CreateEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBCluster(Amazon.Neptune.Model.DeleteDBClusterRequest)">
            <summary>
            The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete
            a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered.
            Manual DB cluster snapshots of the specified DB cluster are not deleted.
            
             
            <para>
            Note that the DB Cluster cannot be deleted if deletion protection is enabled. To delete
            it, you must first set its <code>DeletionProtection</code> field to <code>False</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBCluster service method.</param>
            
            <returns>The response from the DeleteDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBCluster">REST API Reference for DeleteDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBClusterAsync(Amazon.Neptune.Model.DeleteDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete
            a DB cluster, all automated backups for that DB cluster are deleted and can't be recovered.
            Manual DB cluster snapshots of the specified DB cluster are not deleted.
            
             
            <para>
            Note that the DB Cluster cannot be deleted if deletion protection is enabled. To delete
            it, you must first set its <code>DeletionProtection</code> field to <code>False</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotAlreadyExistsException">
            User already has a DB cluster snapshot with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBCluster">REST API Reference for DeleteDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBClusterEndpoint(Amazon.Neptune.Model.DeleteDBClusterEndpointRequest)">
            <summary>
            Deletes a custom endpoint and removes it from an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterEndpoint service method.</param>
            
            <returns>The response from the DeleteDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointNotFoundException">
            The specified custom endpoint doesn't exist.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException">
            The requested operation cannot be performed on the endpoint while the endpoint is
            in this state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterEndpoint">REST API Reference for DeleteDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBClusterEndpointAsync(Amazon.Neptune.Model.DeleteDBClusterEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a custom endpoint and removes it from an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointNotFoundException">
            The specified custom endpoint doesn't exist.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException">
            The requested operation cannot be performed on the endpoint while the endpoint is
            in this state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterEndpoint">REST API Reference for DeleteDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBClusterParameterGroup(Amazon.Neptune.Model.DeleteDBClusterParameterGroupRequest)">
            <summary>
            Deletes a specified DB cluster parameter group. The DB cluster parameter group to
            be deleted can't be associated with any DB clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterParameterGroup service method.</param>
            
            <returns>The response from the DeleteDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterParameterGroup">REST API Reference for DeleteDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBClusterParameterGroupAsync(Amazon.Neptune.Model.DeleteDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified DB cluster parameter group. The DB cluster parameter group to
            be deleted can't be associated with any DB clusters.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterParameterGroup">REST API Reference for DeleteDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBClusterSnapshot(Amazon.Neptune.Model.DeleteDBClusterSnapshotRequest)">
            <summary>
            Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation
            is terminated.
            
             <note> 
            <para>
            The DB cluster snapshot must be in the <code>available</code> state to be deleted.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterSnapshot service method.</param>
            
            <returns>The response from the DeleteDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterSnapshot">REST API Reference for DeleteDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBClusterSnapshotAsync(Amazon.Neptune.Model.DeleteDBClusterSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation
            is terminated.
            
             <note> 
            <para>
            The DB cluster snapshot must be in the <code>available</code> state to be deleted.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBClusterSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBClusterSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBClusterSnapshot">REST API Reference for DeleteDBClusterSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBInstance(Amazon.Neptune.Model.DeleteDBInstanceRequest)">
            <summary>
            The DeleteDBInstance action deletes a previously provisioned DB instance. When you
            delete a DB instance, all automated backups for that instance are deleted and can't
            be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code>
            are not deleted.
            
             
            <para>
             If you request a final DB snapshot the status of the Amazon Neptune DB instance is
            <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code>
            is used to monitor the status of this operation. The action can't be canceled or reverted
            once submitted.
            </para>
             
            <para>
            Note that when a DB instance is in a failure state and has a status of <code>failed</code>,
            <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only
            delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.
            </para>
             
            <para>
            You can't delete a DB instance if it is the only instance in the DB cluster, or if
            it has deletion protection enabled.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBInstance service method.</param>
            
            <returns>The response from the DeleteDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException">
            <i>DBSnapshotIdentifier</i> is already used by an existing snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBInstance">REST API Reference for DeleteDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBInstanceAsync(Amazon.Neptune.Model.DeleteDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            The DeleteDBInstance action deletes a previously provisioned DB instance. When you
            delete a DB instance, all automated backups for that instance are deleted and can't
            be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code>
            are not deleted.
            
             
            <para>
             If you request a final DB snapshot the status of the Amazon Neptune DB instance is
            <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code>
            is used to monitor the status of this operation. The action can't be canceled or reverted
            once submitted.
            </para>
             
            <para>
            Note that when a DB instance is in a failure state and has a status of <code>failed</code>,
            <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only
            delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.
            </para>
             
            <para>
            You can't delete a DB instance if it is the only instance in the DB cluster, or if
            it has deletion protection enabled.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotAlreadyExistsException">
            <i>DBSnapshotIdentifier</i> is already used by an existing snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SnapshotQuotaExceededException">
            Request would result in user exceeding the allowed number of DB snapshots.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBInstance">REST API Reference for DeleteDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBParameterGroup(Amazon.Neptune.Model.DeleteDBParameterGroupRequest)">
            <summary>
            Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted can't be
            associated with any DB instances.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBParameterGroup service method.</param>
            
            <returns>The response from the DeleteDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBParameterGroup">REST API Reference for DeleteDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBParameterGroupAsync(Amazon.Neptune.Model.DeleteDBParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted can't be
            associated with any DB instances.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBParameterGroup">REST API Reference for DeleteDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBSubnetGroup(Amazon.Neptune.Model.DeleteDBSubnetGroupRequest)">
            <summary>
            Deletes a DB subnet group.
            
             <note> 
            <para>
            The specified database subnet group must not be associated with any DB instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBSubnetGroup service method.</param>
            
            <returns>The response from the DeleteDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetStateException">
            The DB subnet is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBSubnetGroup">REST API Reference for DeleteDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteDBSubnetGroupAsync(Amazon.Neptune.Model.DeleteDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a DB subnet group.
            
             <note> 
            <para>
            The specified database subnet group must not be associated with any DB instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetStateException">
            The DB subnet is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteDBSubnetGroup">REST API Reference for DeleteDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteEventSubscription(Amazon.Neptune.Model.DeleteEventSubscriptionRequest)">
            <summary>
            Deletes an event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventSubscription service method.</param>
            
            <returns>The response from the DeleteEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.InvalidEventSubscriptionStateException">
            The event subscription is in an invalid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteEventSubscription">REST API Reference for DeleteEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DeleteEventSubscriptionAsync(Amazon.Neptune.Model.DeleteEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.InvalidEventSubscriptionStateException">
            The event subscription is in an invalid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DeleteEventSubscription">REST API Reference for DeleteEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusterEndpoints(Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest)">
            <summary>
            Returns information about endpoints for an Amazon Neptune DB cluster.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterEndpoints service method.</param>
            
            <returns>The response from the DescribeDBClusterEndpoints service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterEndpoints">REST API Reference for DescribeDBClusterEndpoints Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusterEndpointsAsync(Amazon.Neptune.Model.DescribeDBClusterEndpointsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about endpoints for an Amazon Neptune DB cluster.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterEndpoints service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterEndpoints service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterEndpoints">REST API Reference for DescribeDBClusterEndpoints Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusterParameterGroups(Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest)">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list will contain only the description of the specified
            DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameterGroups service method.</param>
            
            <returns>The response from the DescribeDBClusterParameterGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterParameterGroups">REST API Reference for DescribeDBClusterParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusterParameterGroupsAsync(Amazon.Neptune.Model.DescribeDBClusterParameterGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code>
            parameter is specified, the list will contain only the description of the specified
            DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameterGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterParameterGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterParameterGroups">REST API Reference for DescribeDBClusterParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusterParameters(Amazon.Neptune.Model.DescribeDBClusterParametersRequest)">
            <summary>
            Returns the detailed parameter list for a particular DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameters service method.</param>
            
            <returns>The response from the DescribeDBClusterParameters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterParameters">REST API Reference for DescribeDBClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusterParametersAsync(Amazon.Neptune.Model.DescribeDBClusterParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the detailed parameter list for a particular DB cluster parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterParameters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterParameters">REST API Reference for DescribeDBClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusters(Amazon.Neptune.Model.DescribeDBClustersRequest)">
            <summary>
            Returns information about provisioned DB clusters, and supports pagination.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusters service method.</param>
            
            <returns>The response from the DescribeDBClusters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusters">REST API Reference for DescribeDBClusters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClustersAsync(Amazon.Neptune.Model.DescribeDBClustersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about provisioned DB clusters, and supports pagination.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS clusters and Amazon DocDB
            clusters.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusters">REST API Reference for DescribeDBClusters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusterSnapshotAttributes(Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesRequest)">
            <summary>
            Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When sharing snapshots with other Amazon accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the Amazon accounts
            that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual DB cluster snapshot is public and can be copied or restored by all Amazon accounts.
            </para>
             
            <para>
            To add or remove access for an Amazon account to copy or restore a manual DB cluster
            snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshotAttributes service method.</param>
            
            <returns>The response from the DescribeDBClusterSnapshotAttributes service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterSnapshotAttributes">REST API Reference for DescribeDBClusterSnapshotAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusterSnapshotAttributesAsync(Amazon.Neptune.Model.DescribeDBClusterSnapshotAttributesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster
            snapshot.
            
             
            <para>
            When sharing snapshots with other Amazon accounts, <code>DescribeDBClusterSnapshotAttributes</code>
            returns the <code>restore</code> attribute and a list of IDs for the Amazon accounts
            that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code>
            is included in the list of values for the <code>restore</code> attribute, then the
            manual DB cluster snapshot is public and can be copied or restored by all Amazon accounts.
            </para>
             
            <para>
            To add or remove access for an Amazon account to copy or restore a manual DB cluster
            snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a>
            API action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshotAttributes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterSnapshotAttributes service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterSnapshotAttributes">REST API Reference for DescribeDBClusterSnapshotAttributes Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusterSnapshots(Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest)">
            <summary>
            Returns information about DB cluster snapshots. This API action supports pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshots service method.</param>
            
            <returns>The response from the DescribeDBClusterSnapshots service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterSnapshots">REST API Reference for DescribeDBClusterSnapshots Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBClusterSnapshotsAsync(Amazon.Neptune.Model.DescribeDBClusterSnapshotsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about DB cluster snapshots. This API action supports pagination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBClusterSnapshots service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBClusterSnapshots service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBClusterSnapshots">REST API Reference for DescribeDBClusterSnapshots Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBEngineVersions(Amazon.Neptune.Model.DescribeDBEngineVersionsRequest)">
            <summary>
            Returns a list of the available DB engines.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBEngineVersions service method.</param>
            
            <returns>The response from the DescribeDBEngineVersions service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBEngineVersions">REST API Reference for DescribeDBEngineVersions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBEngineVersionsAsync(Amazon.Neptune.Model.DescribeDBEngineVersionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of the available DB engines.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBEngineVersions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBEngineVersions service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBEngineVersions">REST API Reference for DescribeDBEngineVersions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBInstances(Amazon.Neptune.Model.DescribeDBInstancesRequest)">
            <summary>
            Returns information about provisioned instances, and supports pagination.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS instances and Amazon DocDB
            instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBInstances service method.</param>
            
            <returns>The response from the DescribeDBInstances service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBInstances">REST API Reference for DescribeDBInstances Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBInstancesAsync(Amazon.Neptune.Model.DescribeDBInstancesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about provisioned instances, and supports pagination.
            
             <note> 
            <para>
            This operation can also return information for Amazon RDS instances and Amazon DocDB
            instances.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBInstances service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBInstances service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBInstances">REST API Reference for DescribeDBInstances Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBParameterGroups(Amazon.Neptune.Model.DescribeDBParameterGroupsRequest)">
            <summary>
            Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code>
            is specified, the list will contain only the description of the specified DB parameter
            group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBParameterGroups service method.</param>
            
            <returns>The response from the DescribeDBParameterGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBParameterGroups">REST API Reference for DescribeDBParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBParameterGroupsAsync(Amazon.Neptune.Model.DescribeDBParameterGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code>
            is specified, the list will contain only the description of the specified DB parameter
            group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBParameterGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBParameterGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBParameterGroups">REST API Reference for DescribeDBParameterGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBParameters(Amazon.Neptune.Model.DescribeDBParametersRequest)">
            <summary>
            Returns the detailed parameter list for a particular DB parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBParameters service method.</param>
            
            <returns>The response from the DescribeDBParameters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBParameters">REST API Reference for DescribeDBParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBParametersAsync(Amazon.Neptune.Model.DescribeDBParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the detailed parameter list for a particular DB parameter group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBParameters service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBParameters">REST API Reference for DescribeDBParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBSubnetGroups(Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest)">
            <summary>
            Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified,
            the list will contain only the descriptions of the specified DBSubnetGroup.
            
             
            <para>
            For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia
            Tutorial</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBSubnetGroups service method.</param>
            
            <returns>The response from the DescribeDBSubnetGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBSubnetGroups">REST API Reference for DescribeDBSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeDBSubnetGroupsAsync(Amazon.Neptune.Model.DescribeDBSubnetGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified,
            the list will contain only the descriptions of the specified DBSubnetGroup.
            
             
            <para>
            For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia
            Tutorial</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDBSubnetGroups service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDBSubnetGroups service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeDBSubnetGroups">REST API Reference for DescribeDBSubnetGroups Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeEngineDefaultClusterParameters(Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersRequest)">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultClusterParameters service method.</param>
            
            <returns>The response from the DescribeEngineDefaultClusterParameters service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEngineDefaultClusterParameters">REST API Reference for DescribeEngineDefaultClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeEngineDefaultClusterParametersAsync(Amazon.Neptune.Model.DescribeEngineDefaultClusterParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the default engine and system parameter information for the cluster database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultClusterParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEngineDefaultClusterParameters service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEngineDefaultClusterParameters">REST API Reference for DescribeEngineDefaultClusterParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeEngineDefaultParameters(Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest)">
            <summary>
            Returns the default engine and system parameter information for the specified database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultParameters service method.</param>
            
            <returns>The response from the DescribeEngineDefaultParameters service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEngineDefaultParameters">REST API Reference for DescribeEngineDefaultParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeEngineDefaultParametersAsync(Amazon.Neptune.Model.DescribeEngineDefaultParametersRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the default engine and system parameter information for the specified database
            engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEngineDefaultParameters service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEngineDefaultParameters service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEngineDefaultParameters">REST API Reference for DescribeEngineDefaultParameters Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeEventCategories(Amazon.Neptune.Model.DescribeEventCategoriesRequest)">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventCategories service method.</param>
            
            <returns>The response from the DescribeEventCategories service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEventCategories">REST API Reference for DescribeEventCategories Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeEventCategoriesAsync(Amazon.Neptune.Model.DescribeEventCategoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Displays a list of categories for all event source types, or, if specified, for a
            specified source type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventCategories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventCategories service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEventCategories">REST API Reference for DescribeEventCategories Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeEvents(Amazon.Neptune.Model.DescribeEventsRequest)">
            <summary>
            Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter
            groups for the past 14 days. Events specific to a particular DB instance, DB security
            group, database snapshot, or DB parameter group can be obtained by providing the name
            as a parameter. By default, the past hour of events are returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            
            <returns>The response from the DescribeEvents service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeEventsAsync(Amazon.Neptune.Model.DescribeEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter
            groups for the past 14 days. Events specific to a particular DB instance, DB security
            group, database snapshot, or DB parameter group can be obtained by providing the name
            as a parameter. By default, the past hour of events are returned.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEvents service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEvents">REST API Reference for DescribeEvents Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeEventSubscriptions(Amazon.Neptune.Model.DescribeEventSubscriptionsRequest)">
            <summary>
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID,
            CreationTime, and Status.
            
             
            <para>
            If you specify a SubscriptionName, lists the description for that subscription.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSubscriptions service method.</param>
            
            <returns>The response from the DescribeEventSubscriptions service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEventSubscriptions">REST API Reference for DescribeEventSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeEventSubscriptionsAsync(Amazon.Neptune.Model.DescribeEventSubscriptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all the subscription descriptions for a customer account. The description for
            a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID,
            CreationTime, and Status.
            
             
            <para>
            If you specify a SubscriptionName, lists the description for that subscription.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventSubscriptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeEventSubscriptions service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeEventSubscriptions">REST API Reference for DescribeEventSubscriptions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeOrderableDBInstanceOptions(Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest)">
            <summary>
            Returns a list of orderable DB instance options for the specified engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeOrderableDBInstanceOptions service method.</param>
            
            <returns>The response from the DescribeOrderableDBInstanceOptions service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeOrderableDBInstanceOptions">REST API Reference for DescribeOrderableDBInstanceOptions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeOrderableDBInstanceOptionsAsync(Amazon.Neptune.Model.DescribeOrderableDBInstanceOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of orderable DB instance options for the specified engine.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeOrderableDBInstanceOptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeOrderableDBInstanceOptions service method, as returned by Neptune.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeOrderableDBInstanceOptions">REST API Reference for DescribeOrderableDBInstanceOptions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribePendingMaintenanceActions(Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest)">
            <summary>
            Returns a list of resources (for example, DB instances) that have at least one pending
            maintenance action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePendingMaintenanceActions service method.</param>
            
            <returns>The response from the DescribePendingMaintenanceActions service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribePendingMaintenanceActions">REST API Reference for DescribePendingMaintenanceActions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribePendingMaintenanceActionsAsync(Amazon.Neptune.Model.DescribePendingMaintenanceActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of resources (for example, DB instances) that have at least one pending
            maintenance action.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePendingMaintenanceActions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePendingMaintenanceActions service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.ResourceNotFoundException">
            The specified resource ID was not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribePendingMaintenanceActions">REST API Reference for DescribePendingMaintenanceActions Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeValidDBInstanceModifications(Amazon.Neptune.Model.DescribeValidDBInstanceModificationsRequest)">
            <summary>
            You can call <a>DescribeValidDBInstanceModifications</a> to learn what modifications
            you can make to your DB instance. You can use this information when you call <a>ModifyDBInstance</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeValidDBInstanceModifications service method.</param>
            
            <returns>The response from the DescribeValidDBInstanceModifications service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeValidDBInstanceModifications">REST API Reference for DescribeValidDBInstanceModifications Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.DescribeValidDBInstanceModificationsAsync(Amazon.Neptune.Model.DescribeValidDBInstanceModificationsRequest,System.Threading.CancellationToken)">
            <summary>
            You can call <a>DescribeValidDBInstanceModifications</a> to learn what modifications
            you can make to your DB instance. You can use this information when you call <a>ModifyDBInstance</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeValidDBInstanceModifications service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeValidDBInstanceModifications service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/DescribeValidDBInstanceModifications">REST API Reference for DescribeValidDBInstanceModifications Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.FailoverDBCluster(Amazon.Neptune.Model.FailoverDBClusterRequest)">
            <summary>
            Forces a failover for a DB cluster.
            
             
            <para>
            A failover for a DB cluster promotes one of the Read Replicas (read-only instances)
            in the DB cluster to be the primary instance (the cluster writer).
            </para>
             
            <para>
            Amazon Neptune will automatically fail over to a Read Replica, if one exists, when
            the primary instance fails. You can force a failover when you want to simulate a failure
            of a primary instance for testing. Because each instance in a DB cluster has its own
            endpoint address, you will need to clean up and re-establish any existing connections
            that use those endpoint addresses when the failover is complete.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FailoverDBCluster service method.</param>
            
            <returns>The response from the FailoverDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/FailoverDBCluster">REST API Reference for FailoverDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.FailoverDBClusterAsync(Amazon.Neptune.Model.FailoverDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Forces a failover for a DB cluster.
            
             
            <para>
            A failover for a DB cluster promotes one of the Read Replicas (read-only instances)
            in the DB cluster to be the primary instance (the cluster writer).
            </para>
             
            <para>
            Amazon Neptune will automatically fail over to a Read Replica, if one exists, when
            the primary instance fails. You can force a failover when you want to simulate a failure
            of a primary instance for testing. Because each instance in a DB cluster has its own
            endpoint address, you will need to clean up and re-establish any existing connections
            that use those endpoint addresses when the failover is complete.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FailoverDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the FailoverDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/FailoverDBCluster">REST API Reference for FailoverDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ListTagsForResource(Amazon.Neptune.Model.ListTagsForResourceRequest)">
            <summary>
            Lists all tags on an Amazon Neptune resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ListTagsForResourceAsync(Amazon.Neptune.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all tags on an Amazon Neptune resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBCluster(Amazon.Neptune.Model.ModifyDBClusterRequest)">
            <summary>
            Modify a setting for a DB cluster. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBCluster service method.</param>
            
            <returns>The response from the ModifyDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException">
            The state of the DB security group does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBCluster">REST API Reference for ModifyDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBClusterAsync(Amazon.Neptune.Model.ModifyDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Modify a setting for a DB cluster. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException">
            The state of the DB security group does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSubnetGroupStateException">
            The DB subnet group cannot be deleted because it is in use.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBCluster">REST API Reference for ModifyDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBClusterEndpoint(Amazon.Neptune.Model.ModifyDBClusterEndpointRequest)">
            <summary>
            Modifies the properties of an endpoint in an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterEndpoint service method.</param>
            
            <returns>The response from the ModifyDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointNotFoundException">
            The specified custom endpoint doesn't exist.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException">
            The requested operation cannot be performed on the endpoint while the endpoint is
            in this state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterEndpoint">REST API Reference for ModifyDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBClusterEndpointAsync(Amazon.Neptune.Model.ModifyDBClusterEndpointRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the properties of an endpoint in an Amazon Neptune DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterEndpoint service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBClusterEndpoint service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterEndpointNotFoundException">
            The specified custom endpoint doesn't exist.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterEndpointStateException">
            The requested operation cannot be performed on the endpoint while the endpoint is
            in this state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterEndpoint">REST API Reference for ModifyDBClusterEndpoint Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBClusterParameterGroup(Amazon.Neptune.Model.ModifyDBClusterParameterGroupRequest)">
            <summary>
            Modifies the parameters of a DB cluster parameter group. To modify more than one
            parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB cluster associated with the parameter
            group before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the parameter group is used as the default for a new DB cluster. This
            is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the Amazon Neptune console or the <a>DescribeDBClusterParameters</a>
            command to verify that your DB cluster parameter group has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterParameterGroup service method.</param>
            
            <returns>The response from the ModifyDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterParameterGroup">REST API Reference for ModifyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBClusterParameterGroupAsync(Amazon.Neptune.Model.ModifyDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a DB cluster parameter group. To modify more than one
            parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB cluster associated with the parameter
            group before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you create a DB cluster parameter group, you should wait at least 5 minutes
            before creating your first DB cluster that uses that DB cluster parameter group as
            the default parameter group. This allows Amazon Neptune to fully complete the create
            action before the parameter group is used as the default for a new DB cluster. This
            is especially important for parameters that are critical when creating the default
            database for a DB cluster, such as the character set for the default database defined
            by the <code>character_set_database</code> parameter. You can use the <i>Parameter
            Groups</i> option of the Amazon Neptune console or the <a>DescribeDBClusterParameters</a>
            command to verify that your DB cluster parameter group has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterParameterGroup">REST API Reference for ModifyDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBClusterSnapshotAttribute(Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeRequest)">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            DB cluster snapshot.
            
             
            <para>
            To share a manual DB cluster snapshot with other Amazon accounts, specify <code>restore</code>
            as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to
            add a list of IDs of the Amazon accounts that are authorized to restore the manual
            DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster
            snapshot public, which means that it can be copied or restored by all Amazon accounts.
            Do not add the <code>all</code> value for any manual DB cluster snapshots that contain
            private information that you don't want available to all Amazon accounts. If a manual
            DB cluster snapshot is encrypted, it can be shared, but only by specifying a list
            of authorized Amazon account IDs for the <code>ValuesToAdd</code> parameter. You can't
            use <code>all</code> as a value for that parameter in this case.
            </para>
             
            <para>
            To view which Amazon accounts have access to copy or restore a manual DB cluster snapshot,
            or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a>
            API action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterSnapshotAttribute service method.</param>
            
            <returns>The response from the ModifyDBClusterSnapshotAttribute service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException">
            You have exceeded the maximum number of accounts that you can share a manual DB snapshot
            with.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterSnapshotAttribute">REST API Reference for ModifyDBClusterSnapshotAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBClusterSnapshotAttributeAsync(Amazon.Neptune.Model.ModifyDBClusterSnapshotAttributeRequest,System.Threading.CancellationToken)">
            <summary>
            Adds an attribute and values to, or removes an attribute and values from, a manual
            DB cluster snapshot.
            
             
            <para>
            To share a manual DB cluster snapshot with other Amazon accounts, specify <code>restore</code>
            as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to
            add a list of IDs of the Amazon accounts that are authorized to restore the manual
            DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster
            snapshot public, which means that it can be copied or restored by all Amazon accounts.
            Do not add the <code>all</code> value for any manual DB cluster snapshots that contain
            private information that you don't want available to all Amazon accounts. If a manual
            DB cluster snapshot is encrypted, it can be shared, but only by specifying a list
            of authorized Amazon account IDs for the <code>ValuesToAdd</code> parameter. You can't
            use <code>all</code> as a value for that parameter in this case.
            </para>
             
            <para>
            To view which Amazon accounts have access to copy or restore a manual DB cluster snapshot,
            or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a>
            API action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBClusterSnapshotAttribute service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBClusterSnapshotAttribute service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SharedSnapshotQuotaExceededException">
            You have exceeded the maximum number of accounts that you can share a manual DB snapshot
            with.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBClusterSnapshotAttribute">REST API Reference for ModifyDBClusterSnapshotAttribute Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBInstance(Amazon.Neptune.Model.ModifyDBInstanceRequest)">
            <summary>
            Modifies settings for a DB instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request. To learn
            what modifications you can make to your DB instance, call <a>DescribeValidDBInstanceModifications</a>
            before you call <a>ModifyDBInstance</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBInstance service method.</param>
            
            <returns>The response from the ModifyDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.AuthorizationNotFoundException">
            Specified CIDRIP or EC2 security group is not authorized for the specified DB security
            group.
            
             
            <para>
            Neptune may not also be authorized via IAM to perform necessary actions on your behalf.
            </para>
            </exception>
            <exception cref="T:Amazon.Neptune.Model.CertificateNotFoundException">
            <i>CertificateIdentifier</i> does not refer to an existing certificate.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceAlreadyExistsException">
            User already has a DB instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSecurityGroupNotFoundException">
            <i>DBSecurityGroupName</i> does not refer to an existing DB security group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBUpgradeDependencyFailureException">
            The DB upgrade failed because a resource the DB depends on could not be modified.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DomainNotFoundException">
            <i>Domain</i> does not refer to an existing Active Directory Domain.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException">
            Specified DB instance class is not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException">
            The state of the DB security group does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException">
            Provisioned IOPS not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageTypeNotSupportedException">
            <i>StorageType</i> specified cannot be associated with the DB Instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBInstance">REST API Reference for ModifyDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBInstanceAsync(Amazon.Neptune.Model.ModifyDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies settings for a DB instance. You can change one or more database configuration
            parameters by specifying these parameters and the new values in the request. To learn
            what modifications you can make to your DB instance, call <a>DescribeValidDBInstanceModifications</a>
            before you call <a>ModifyDBInstance</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.AuthorizationNotFoundException">
            Specified CIDRIP or EC2 security group is not authorized for the specified DB security
            group.
            
             
            <para>
            Neptune may not also be authorized via IAM to perform necessary actions on your behalf.
            </para>
            </exception>
            <exception cref="T:Amazon.Neptune.Model.CertificateNotFoundException">
            <i>CertificateIdentifier</i> does not refer to an existing certificate.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceAlreadyExistsException">
            User already has a DB instance with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSecurityGroupNotFoundException">
            <i>DBSecurityGroupName</i> does not refer to an existing DB security group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBUpgradeDependencyFailureException">
            The DB upgrade failed because a resource the DB depends on could not be modified.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DomainNotFoundException">
            <i>Domain</i> does not refer to an existing Active Directory Domain.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBInstanceCapacityException">
            Specified DB instance class is not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSecurityGroupStateException">
            The state of the DB security group does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.ProvisionedIopsNotAvailableInAZException">
            Provisioned IOPS not available in the specified Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageTypeNotSupportedException">
            <i>StorageType</i> specified cannot be associated with the DB Instance.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBInstance">REST API Reference for ModifyDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBParameterGroup(Amazon.Neptune.Model.ModifyDBParameterGroupRequest)">
            <summary>
            Modifies the parameters of a DB parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB instance associated with the parameter
            group before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you modify a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the modify action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBParameterGroup service method.</param>
            
            <returns>The response from the ModifyDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBParameterGroup">REST API Reference for ModifyDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBParameterGroupAsync(Amazon.Neptune.Model.ModifyDBParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a DB parameter group. To modify more than one parameter,
            submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>,
            and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
            request.
            
             <note> 
            <para>
            Changes to dynamic parameters are applied immediately. Changes to static parameters
            require a reboot without failover to the DB instance associated with the parameter
            group before the change can take effect.
            </para>
             </note> <important> 
            <para>
            After you modify a DB parameter group, you should wait at least 5 minutes before creating
            your first DB instance that uses that DB parameter group as the default parameter
            group. This allows Amazon Neptune to fully complete the modify action before the parameter
            group is used as the default for a new DB instance. This is especially important for
            parameters that are critical when creating the default database for a DB instance,
            such as the character set for the default database defined by the <code>character_set_database</code>
            parameter. You can use the <i>Parameter Groups</i> option of the Amazon Neptune console
            or the <i>DescribeDBParameters</i> command to verify that your DB parameter group
            has been created or modified.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBParameterGroup">REST API Reference for ModifyDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBSubnetGroup(Amazon.Neptune.Model.ModifyDBSubnetGroupRequest)">
            <summary>
            Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet
            in at least two AZs in the Amazon Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBSubnetGroup service method.</param>
            
            <returns>The response from the ModifyDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetQuotaExceededException">
            Request would result in user exceeding the allowed number of subnets in a DB subnet
            groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubnetAlreadyInUseException">
            The DB subnet is already in use in the Availability Zone.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBSubnetGroup">REST API Reference for ModifyDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyDBSubnetGroupAsync(Amazon.Neptune.Model.ModifyDBSubnetGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet
            in at least two AZs in the Amazon Region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyDBSubnetGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyDBSubnetGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupDoesNotCoverEnoughAZsException">
            Subnets in the DB subnet group should cover at least two Availability Zones unless
            there is only one Availability Zone.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetQuotaExceededException">
            Request would result in user exceeding the allowed number of subnets in a DB subnet
            groups.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubnetAlreadyInUseException">
            The DB subnet is already in use in the Availability Zone.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyDBSubnetGroup">REST API Reference for ModifyDBSubnetGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyEventSubscription(Amazon.Neptune.Model.ModifyEventSubscriptionRequest)">
            <summary>
            Modifies an existing event notification subscription. Note that you can't modify the
            source identifiers using this call; to change source identifiers for a subscription,
            use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a>
            calls.
            
             
            <para>
            You can see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyEventSubscription service method.</param>
            
            <returns>The response from the ModifyEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException">
            You have exceeded the number of events you can subscribe to.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSInvalidTopicException">
            The SNS topic is invalid.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSNoAuthorizationException">
            There is no SNS authorization.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSTopicArnNotFoundException">
            The ARN of the SNS topic could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException">
            The designated subscription category could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyEventSubscription">REST API Reference for ModifyEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ModifyEventSubscriptionAsync(Amazon.Neptune.Model.ModifyEventSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies an existing event notification subscription. Note that you can't modify the
            source identifiers using this call; to change source identifiers for a subscription,
            use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a>
            calls.
            
             
            <para>
            You can see a list of the event categories for a given SourceType by using the <b>DescribeEventCategories</b>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyEventSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ModifyEventSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.EventSubscriptionQuotaExceededException">
            You have exceeded the number of events you can subscribe to.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSInvalidTopicException">
            The SNS topic is invalid.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSNoAuthorizationException">
            There is no SNS authorization.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SNSTopicArnNotFoundException">
            The ARN of the SNS topic could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionCategoryNotFoundException">
            The designated subscription category could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ModifyEventSubscription">REST API Reference for ModifyEventSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.PromoteReadReplicaDBCluster(Amazon.Neptune.Model.PromoteReadReplicaDBClusterRequest)">
            <summary>
            Not supported.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PromoteReadReplicaDBCluster service method.</param>
            
            <returns>The response from the PromoteReadReplicaDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/PromoteReadReplicaDBCluster">REST API Reference for PromoteReadReplicaDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.PromoteReadReplicaDBClusterAsync(Amazon.Neptune.Model.PromoteReadReplicaDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Not supported.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PromoteReadReplicaDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PromoteReadReplicaDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/PromoteReadReplicaDBCluster">REST API Reference for PromoteReadReplicaDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RebootDBInstance(Amazon.Neptune.Model.RebootDBInstanceRequest)">
            <summary>
            You might need to reboot your DB instance, usually for maintenance reasons. For example,
            if you make certain modifications, or if you change the DB parameter group associated
            with the DB instance, you must reboot the instance for the changes to take effect.
            
             
            <para>
            Rebooting a DB instance restarts the database engine service. Rebooting a DB instance
            results in a momentary outage, during which the DB instance status is set to rebooting.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootDBInstance service method.</param>
            
            <returns>The response from the RebootDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RebootDBInstance">REST API Reference for RebootDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RebootDBInstanceAsync(Amazon.Neptune.Model.RebootDBInstanceRequest,System.Threading.CancellationToken)">
            <summary>
            You might need to reboot your DB instance, usually for maintenance reasons. For example,
            if you make certain modifications, or if you change the DB parameter group associated
            with the DB instance, you must reboot the instance for the changes to take effect.
            
             
            <para>
            Rebooting a DB instance restarts the database engine service. Rebooting a DB instance
            results in a momentary outage, during which the DB instance status is set to rebooting.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RebootDBInstance service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RebootDBInstance service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RebootDBInstance">REST API Reference for RebootDBInstance Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RemoveRoleFromDBCluster(Amazon.Neptune.Model.RemoveRoleFromDBClusterRequest)">
            <summary>
            Disassociates an Identity and Access Management (IAM) role from a DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveRoleFromDBCluster service method.</param>
            
            <returns>The response from the RemoveRoleFromDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleNotFoundException">
            The specified IAM role Amazon Resource Name (ARN) is not associated with the specified
            DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveRoleFromDBCluster">REST API Reference for RemoveRoleFromDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RemoveRoleFromDBClusterAsync(Amazon.Neptune.Model.RemoveRoleFromDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Disassociates an Identity and Access Management (IAM) role from a DB cluster.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveRoleFromDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveRoleFromDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterRoleNotFoundException">
            The specified IAM role Amazon Resource Name (ARN) is not associated with the specified
            DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveRoleFromDBCluster">REST API Reference for RemoveRoleFromDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RemoveSourceIdentifierFromSubscription(Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionRequest)">
            <summary>
            Removes a source identifier from an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveSourceIdentifierFromSubscription service method.</param>
            
            <returns>The response from the RemoveSourceIdentifierFromSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveSourceIdentifierFromSubscription">REST API Reference for RemoveSourceIdentifierFromSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RemoveSourceIdentifierFromSubscriptionAsync(Amazon.Neptune.Model.RemoveSourceIdentifierFromSubscriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Removes a source identifier from an existing event notification subscription.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveSourceIdentifierFromSubscription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveSourceIdentifierFromSubscription service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.SourceNotFoundException">
            The source could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.SubscriptionNotFoundException">
            The designated subscription could not be found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveSourceIdentifierFromSubscription">REST API Reference for RemoveSourceIdentifierFromSubscription Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RemoveTagsFromResource(Amazon.Neptune.Model.RemoveTagsFromResourceRequest)">
            <summary>
            Removes metadata tags from an Amazon Neptune resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromResource service method.</param>
            
            <returns>The response from the RemoveTagsFromResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveTagsFromResource">REST API Reference for RemoveTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RemoveTagsFromResourceAsync(Amazon.Neptune.Model.RemoveTagsFromResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes metadata tags from an Amazon Neptune resource.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RemoveTagsFromResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RemoveTagsFromResource service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBInstanceNotFoundException">
            <i>DBInstanceIdentifier</i> does not refer to an existing DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RemoveTagsFromResource">REST API Reference for RemoveTagsFromResource Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ResetDBClusterParameterGroup(Amazon.Neptune.Model.ResetDBClusterParameterGroupRequest)">
            <summary>
            Modifies the parameters of a DB cluster parameter group to the default value. To
            reset specific parameters submit a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify
            the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
             
            <para>
             When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a>
            for every DB instance in your DB cluster that you want the updated static parameter
            to apply to.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBClusterParameterGroup service method.</param>
            
            <returns>The response from the ResetDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ResetDBClusterParameterGroup">REST API Reference for ResetDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ResetDBClusterParameterGroupAsync(Amazon.Neptune.Model.ResetDBClusterParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a DB cluster parameter group to the default value. To
            reset specific parameters submit a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify
            the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters.
            
             
            <para>
             When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a>
            for every DB instance in your DB cluster that you want the updated static parameter
            to apply to.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBClusterParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResetDBClusterParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ResetDBClusterParameterGroup">REST API Reference for ResetDBClusterParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ResetDBParameterGroup(Amazon.Neptune.Model.ResetDBParameterGroupRequest)">
            <summary>
            Modifies the parameters of a DB parameter group to the engine/system default value.
            To reset specific parameters, provide a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the
            <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters.
            When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <code>RebootDBInstance</code> request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBParameterGroup service method.</param>
            
            <returns>The response from the ResetDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ResetDBParameterGroup">REST API Reference for ResetDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.ResetDBParameterGroupAsync(Amazon.Neptune.Model.ResetDBParameterGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Modifies the parameters of a DB parameter group to the engine/system default value.
            To reset specific parameters, provide a list of the following: <code>ParameterName</code>
            and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the
            <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters.
            When resetting the entire group, dynamic parameters are updated immediately and static
            parameters are set to <code>pending-reboot</code> to take effect on the next DB instance
            restart or <code>RebootDBInstance</code> request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ResetDBParameterGroup service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ResetDBParameterGroup service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBParameterGroupNotFoundException">
            <i>DBParameterGroupName</i> does not refer to an existing DB parameter group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBParameterGroupStateException">
            The DB parameter group is in use or is in an invalid state. If you are attempting
            to delete the parameter group, you cannot delete it when the parameter group is in
            this state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/ResetDBParameterGroup">REST API Reference for ResetDBParameterGroup Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RestoreDBClusterFromSnapshot(Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest)">
            <summary>
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
            
             
            <para>
            If a DB snapshot is specified, the target DB cluster is created from the source DB
            snapshot with a default configuration and default security group.
            </para>
             
            <para>
            If a DB cluster snapshot is specified, the target DB cluster is created from the source
            DB cluster restore point with the same configuration as the original source DB cluster,
            except that the new DB cluster is created with the default security group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterFromSnapshot service method.</param>
            
            <returns>The response from the RestoreDBClusterFromSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBClusterCapacityException">
            The DB cluster does not have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSnapshotStateException">
            The state of the DB snapshot does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidRestoreException">
            Cannot restore from vpc backup to non-vpc DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RestoreDBClusterFromSnapshot">REST API Reference for RestoreDBClusterFromSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RestoreDBClusterFromSnapshotAsync(Amazon.Neptune.Model.RestoreDBClusterFromSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot.
            
             
            <para>
            If a DB snapshot is specified, the target DB cluster is created from the source DB
            snapshot with a default configuration and default security group.
            </para>
             
            <para>
            If a DB cluster snapshot is specified, the target DB cluster is created from the source
            DB cluster restore point with the same configuration as the original source DB cluster,
            except that the new DB cluster is created with the default security group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterFromSnapshot service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreDBClusterFromSnapshot service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSnapshotNotFoundException">
            <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBClusterCapacityException">
            The DB cluster does not have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSnapshotStateException">
            The state of the DB snapshot does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidRestoreException">
            Cannot restore from vpc backup to non-vpc DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RestoreDBClusterFromSnapshot">REST API Reference for RestoreDBClusterFromSnapshot Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RestoreDBClusterToPointInTime(Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest)">
            <summary>
            Restores a DB cluster to an arbitrary point in time. Users can restore to any point
            in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target DB cluster is created from the source DB cluster with the same configuration
            as the original DB cluster, except that the new DB cluster is created with the default
            DB security group.
            
             <note> 
            <para>
            This action only restores the DB cluster, not the DB instances for that DB cluster.
            You must invoke the <a>CreateDBInstance</a> action to create DB instances for the
            restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.
            You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code>
            action has completed and the DB cluster is available.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterToPointInTime service method.</param>
            
            <returns>The response from the RestoreDBClusterToPointInTime service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBClusterCapacityException">
            The DB cluster does not have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSnapshotStateException">
            The state of the DB snapshot does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidRestoreException">
            Cannot restore from vpc backup to non-vpc DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RestoreDBClusterToPointInTime">REST API Reference for RestoreDBClusterToPointInTime Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.RestoreDBClusterToPointInTimeAsync(Amazon.Neptune.Model.RestoreDBClusterToPointInTimeRequest,System.Threading.CancellationToken)">
            <summary>
            Restores a DB cluster to an arbitrary point in time. Users can restore to any point
            in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code>
            days. The target DB cluster is created from the source DB cluster with the same configuration
            as the original DB cluster, except that the new DB cluster is created with the default
            DB security group.
            
             <note> 
            <para>
            This action only restores the DB cluster, not the DB instances for that DB cluster.
            You must invoke the <a>CreateDBInstance</a> action to create DB instances for the
            restored DB cluster, specifying the identifier of the restored DB cluster in <code>DBClusterIdentifier</code>.
            You can create DB instances only after the <code>RestoreDBClusterToPointInTime</code>
            action has completed and the DB cluster is available.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreDBClusterToPointInTime service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RestoreDBClusterToPointInTime service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterAlreadyExistsException">
            User already has a DB cluster with the given identifier.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterParameterGroupNotFoundException">
            <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter
            group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterQuotaExceededException">
            User attempted to create a new DB cluster and the user has already reached the maximum
            allowed DB cluster quota.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBClusterSnapshotNotFoundException">
            <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.DBSubnetGroupNotFoundException">
            <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientDBClusterCapacityException">
            The DB cluster does not have enough capacity for the current operation.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InsufficientStorageClusterCapacityException">
            There is insufficient storage available for the current action. You may be able to
            resolve this error by updating your subnet group to use different Availability Zones
            that have more storage available.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterSnapshotStateException">
            The supplied value is not a valid DB cluster snapshot state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBSnapshotStateException">
            The state of the DB snapshot does not allow deletion.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidRestoreException">
            Cannot restore from vpc backup to non-vpc DB instance.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidSubnetException">
            The requested subnet is invalid, or multiple subnets were requested that are not all
            in a common VPC.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidVPCNetworkStateException">
            DB subnet group does not cover all Availability Zones after it is created because
            users' change.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.KMSKeyNotAccessibleException">
            Error accessing KMS key.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.OptionGroupNotFoundException">
            The designated option group could not be found.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.StorageQuotaExceededException">
            Request would result in user exceeding the allowed amount of storage available across
            all DB instances.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/RestoreDBClusterToPointInTime">REST API Reference for RestoreDBClusterToPointInTime Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.StartDBCluster(Amazon.Neptune.Model.StartDBClusterRequest)">
            <summary>
            Starts an Amazon Neptune DB cluster that was stopped using the AWS console, the Amazon
            CLI stop-db-cluster command, or the StopDBCluster API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDBCluster service method.</param>
            
            <returns>The response from the StartDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/StartDBCluster">REST API Reference for StartDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.StartDBClusterAsync(Amazon.Neptune.Model.StartDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Starts an Amazon Neptune DB cluster that was stopped using the AWS console, the Amazon
            CLI stop-db-cluster command, or the StopDBCluster API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/StartDBCluster">REST API Reference for StartDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.StopDBCluster(Amazon.Neptune.Model.StopDBClusterRequest)">
            <summary>
            Stops an Amazon Neptune DB cluster. When you stop a DB cluster, Neptune retains the
            DB cluster's metadata, including its endpoints and DB parameter groups.
            
             
            <para>
            Neptune also retains the transaction logs so you can do a point-in-time restore if
            necessary.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDBCluster service method.</param>
            
            <returns>The response from the StopDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/StopDBCluster">REST API Reference for StopDBCluster Operation</seealso>
        </member>
        <member name="M:Amazon.Neptune.IAmazonNeptune.StopDBClusterAsync(Amazon.Neptune.Model.StopDBClusterRequest,System.Threading.CancellationToken)">
            <summary>
            Stops an Amazon Neptune DB cluster. When you stop a DB cluster, Neptune retains the
            DB cluster's metadata, including its endpoints and DB parameter groups.
            
             
            <para>
            Neptune also retains the transaction logs so you can do a point-in-time restore if
            necessary.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopDBCluster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StopDBCluster service method, as returned by Neptune.</returns>
            <exception cref="T:Amazon.Neptune.Model.DBClusterNotFoundException">
            <i>DBClusterIdentifier</i> does not refer to an existing DB cluster.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBClusterStateException">
            The DB cluster is not in a valid state.
            </exception>
            <exception cref="T:Amazon.Neptune.Model.InvalidDBInstanceStateException">
            The specified DB instance is not in the <i>available</i> state.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/neptune-2014-10-31/StopDBCluster">REST API Reference for StopDBCluster Operation</seealso>
        </member>
    </members>
</doc>
