<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CodeCommit</name>
    </assembly>
    <members>
        <member name="T:Amazon.CodeCommit.AmazonCodeCommitConfig">
            <summary>
            Configuration for accessing Amazon CodeCommit service
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.AmazonCodeCommitConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.AmazonCodeCommitConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.AmazonCodeCommitConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.AmazonCodeCommitException">
            <summary>
             Common exception for the CodeCommit service.
             </summary>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCodeCommitException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCodeCommitException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCodeCommitException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCodeCommitException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCodeCommitException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonCodeCommitException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Internal.AmazonCodeCommitMetadata">
            <summary>
            Service metadata for  Amazon CodeCommit service
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Internal.AmazonCodeCommitMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Internal.AmazonCodeCommitMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ActorDoesNotExistException">
            <summary>
            The specified Amazon Resource Name (ARN) does not exist in the AWS account.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ActorDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new ActorDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ActorDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ActorDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ActorDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of ActorDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ActorDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ActorDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ActorDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ActorDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ActorDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ActorDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ActorDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.Approval">
            <summary>
            Returns information about a specific approval on a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Approval.ApprovalState">
            <summary>
            Gets and sets the property ApprovalState. 
            <para>
            The state of the approval, APPROVE or REVOKE. REVOKE states are not stored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Approval.UserArn">
            <summary>
            Gets and sets the property UserArn. 
            <para>
            The Amazon Resource Name (ARN) of the user.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRule">
            <summary>
            Returns information about an approval rule.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRule.ApprovalRuleContent">
            <summary>
            Gets and sets the property ApprovalRuleContent. 
            <para>
            The content of the approval rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRule.ApprovalRuleId">
            <summary>
            Gets and sets the property ApprovalRuleId. 
            <para>
            The system-generated ID of the approval rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRule.ApprovalRuleName">
            <summary>
            Gets and sets the property ApprovalRuleName. 
            <para>
            The name of the approval rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRule.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date the approval rule was created, in timestamp format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRule.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date the approval rule was most recently changed, in timestamp format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRule.LastModifiedUser">
            <summary>
            Gets and sets the property LastModifiedUser. 
            <para>
            The Amazon Resource Name (ARN) of the user who made the most recent changes to the
            approval rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRule.OriginApprovalRuleTemplate">
            <summary>
            Gets and sets the property OriginApprovalRuleTemplate. 
            <para>
            The approval rule template used to create the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRule.RuleContentSha256">
            <summary>
            Gets and sets the property RuleContentSha256. 
            <para>
            The SHA-256 hash signature for the content of the approval rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException">
            <summary>
            The content for the approval rule is empty. You must provide some content for an approval
            rule. The content cannot be null.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ApprovalRuleContentRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ApprovalRuleContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ApprovalRuleContentRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ApprovalRuleContentRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException">
            <summary>
            The specified approval rule does not exist.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new ApprovalRuleDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ApprovalRuleDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of ApprovalRuleDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ApprovalRuleDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleEventMetadata">
            <summary>
            Returns information about an event for an approval rule.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleEventMetadata.ApprovalRuleContent">
            <summary>
            Gets and sets the property ApprovalRuleContent. 
            <para>
            The content of the approval rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleEventMetadata.ApprovalRuleId">
            <summary>
            Gets and sets the property ApprovalRuleId. 
            <para>
            The system-generated ID of the approval rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleEventMetadata.ApprovalRuleName">
            <summary>
            Gets and sets the property ApprovalRuleName. 
            <para>
            The name of the approval rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException">
            <summary>
            An approval rule with that name already exists. Approval rule names must be unique
            within the scope of a pull request.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ApprovalRuleNameAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ApprovalRuleNameAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ApprovalRuleNameAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleNameAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleNameAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ApprovalRuleNameAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            <summary>
            An approval rule name is required, but was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ApprovalRuleNameRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ApprovalRuleNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ApprovalRuleNameRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ApprovalRuleNameRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleOverriddenEventMetadata">
            <summary>
            Returns information about an override event for approval rules for a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleOverriddenEventMetadata.OverrideStatus">
            <summary>
            Gets and sets the property OverrideStatus. 
            <para>
            The status of the override event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleOverriddenEventMetadata.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The revision ID of the pull request when the override event occurred.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleTemplate">
            <summary>
            Returns information about an approval rule template.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleTemplate.ApprovalRuleTemplateContent">
            <summary>
            Gets and sets the property ApprovalRuleTemplateContent. 
            <para>
            The content of the approval rule template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleTemplate.ApprovalRuleTemplateDescription">
            <summary>
            Gets and sets the property ApprovalRuleTemplateDescription. 
            <para>
            The description of the approval rule template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleTemplate.ApprovalRuleTemplateId">
            <summary>
            Gets and sets the property ApprovalRuleTemplateId. 
            <para>
            The system-generated ID of the approval rule template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleTemplate.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the approval rule template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleTemplate.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date the approval rule template was created, in timestamp format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleTemplate.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date the approval rule template was most recently changed, in timestamp format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleTemplate.LastModifiedUser">
            <summary>
            Gets and sets the property LastModifiedUser. 
            <para>
            The Amazon Resource Name (ARN) of the user who made the most recent changes to the
            approval rule template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalRuleTemplate.RuleContentSha256">
            <summary>
            Gets and sets the property RuleContentSha256. 
            <para>
            The SHA-256 hash signature for the content of the approval rule template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException">
            <summary>
            The content for the approval rule template is empty. You must provide some content
            for an approval rule template. The content cannot be null.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ApprovalRuleTemplateContentRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ApprovalRuleTemplateContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ApprovalRuleTemplateContentRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleTemplateContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleTemplateContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ApprovalRuleTemplateContentRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            <summary>
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new ApprovalRuleTemplateDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ApprovalRuleTemplateDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of ApprovalRuleTemplateDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleTemplateDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleTemplateDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ApprovalRuleTemplateDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException">
            <summary>
            The approval rule template is associated with one or more repositories. You cannot
            delete a template that is associated with a repository. Remove all associations, and
            then try again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException.#ctor(System.String)">
            <summary>
            Constructs a new ApprovalRuleTemplateInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ApprovalRuleTemplateInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of ApprovalRuleTemplateInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleTemplateInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleTemplateInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ApprovalRuleTemplateInUseException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException">
            <summary>
            You cannot create an approval rule template with that name because a template with
            that name already exists in this AWS Region for your AWS account. Approval rule template
            names must be unique.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ApprovalRuleTemplateNameAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ApprovalRuleTemplateNameAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ApprovalRuleTemplateNameAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleTemplateNameAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleTemplateNameAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ApprovalRuleTemplateNameAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            <summary>
            An approval rule template name is required, but was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ApprovalRuleTemplateNameRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ApprovalRuleTemplateNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ApprovalRuleTemplateNameRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleTemplateNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalRuleTemplateNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ApprovalRuleTemplateNameRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalStateChangedEventMetadata">
            <summary>
            Returns information about a change in the approval state for a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalStateChangedEventMetadata.ApprovalStatus">
            <summary>
            Gets and sets the property ApprovalStatus. 
            <para>
            The approval status for the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ApprovalStateChangedEventMetadata.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The revision ID of the pull request when the approval state changed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ApprovalStateRequiredException">
            <summary>
            An approval state is required, but was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalStateRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ApprovalStateRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalStateRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ApprovalStateRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalStateRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ApprovalStateRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalStateRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalStateRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalStateRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ApprovalStateRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalStateRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ApprovalStateRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ApprovalStateRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.AssociateApprovalRuleTemplateWithRepositoryRequest">
            <summary>
            Container for the parameters to the AssociateApprovalRuleTemplateWithRepository operation.
            Creates an association between an approval rule template and a specified repository.
            Then, the next time a pull request is created in the repository where the destination
            reference (if specified) matches the destination reference (branch) for the pull request,
            an approval rule that matches the template conditions is automatically created for
            that pull request. If no destination references are specified in the template, an
            approval rule that matches the template contents is created for all pull requests
            in that repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.AssociateApprovalRuleTemplateWithRepositoryRequest.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name for the approval rule template. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.AssociateApprovalRuleTemplateWithRepositoryRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that you want to associate with the template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.AssociateApprovalRuleTemplateWithRepositoryResponse">
            <summary>
            This is the response object from the AssociateApprovalRuleTemplateWithRepository operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.AuthorDoesNotExistException">
            <summary>
            The specified Amazon Resource Name (ARN) does not exist in the AWS account.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.AuthorDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new AuthorDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.AuthorDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AuthorDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.AuthorDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of AuthorDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.AuthorDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthorDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.AuthorDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthorDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.AuthorDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AuthorDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.AuthorDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesError">
            <summary>
            Returns information about errors in a BatchAssociateApprovalRuleTemplateWithRepositories
            operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesError.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            An error code that specifies whether the repository name was not valid or not found.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesError.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            An error message that provides details about why the repository name was not found
            or not valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesError.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where the association was not made.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesRequest">
            <summary>
            Container for the parameters to the BatchAssociateApprovalRuleTemplateWithRepositories operation.
            Creates an association between an approval rule template and one or more specified
            repositories.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesRequest.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the template you want to associate with one or more repositories.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesRequest.RepositoryNames">
            <summary>
            Gets and sets the property RepositoryNames. 
            <para>
            The names of the repositories you want to associate with the template.
            </para>
             <note> 
            <para>
            The length constraint limit is for each string in the array. The array itself can
            be empty.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesResponse">
            <summary>
            This is the response object from the BatchAssociateApprovalRuleTemplateWithRepositories operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesResponse.AssociatedRepositoryNames">
            <summary>
            Gets and sets the property AssociatedRepositoryNames. 
            <para>
            A list of names of the repositories that have been associated with the template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesResponse.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            A list of any errors that might have occurred while attempting to create the association
            between the template and the repositories.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsError">
            <summary>
            Returns information about errors in a BatchDescribeMergeConflicts operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsError.ExceptionName">
            <summary>
            Gets and sets the property ExceptionName. 
            <para>
            The name of the exception.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsError.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The path to the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsError.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The message provided by the exception.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest">
            <summary>
            Container for the parameters to the BatchDescribeMergeConflicts operation.
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest.ConflictDetailLevel">
            <summary>
            Gets and sets the property ConflictDetailLevel. 
            <para>
            The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest.ConflictResolutionStrategy">
            <summary>
            Gets and sets the property ConflictResolutionStrategy. 
            <para>
            Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest.DestinationCommitSpecifier">
            <summary>
            Gets and sets the property DestinationCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest.FilePaths">
            <summary>
            Gets and sets the property FilePaths. 
            <para>
            The path of the target files used to describe the conflicts. If not specified, the
            default is all conflict files.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest.MaxConflictFiles">
            <summary>
            Gets and sets the property MaxConflictFiles. 
            <para>
            The maximum number of files to include in the output.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest.MaxMergeHunks">
            <summary>
            Gets and sets the property MaxMergeHunks. 
            <para>
            The maximum number of merge hunks to include in the output.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest.MergeOption">
            <summary>
            Gets and sets the property MergeOption. 
            <para>
            The merge option or strategy you want to use to merge the code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the merge conflicts you want to review.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest.SourceCommitSpecifier">
            <summary>
            Gets and sets the property SourceCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsResponse">
            <summary>
            This is the response object from the BatchDescribeMergeConflicts operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsResponse.BaseCommitId">
            <summary>
            Gets and sets the property BaseCommitId. 
            <para>
            The commit ID of the merge base.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsResponse.Conflicts">
            <summary>
            Gets and sets the property Conflicts. 
            <para>
            A list of conflicts for each file, including the conflict metadata and the hunks of
            the differences between the files.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsResponse.DestinationCommitId">
            <summary>
            Gets and sets the property DestinationCommitId. 
            <para>
            The commit ID of the destination commit specifier that was used in the merge evaluation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsResponse.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            A list of any errors returned while describing the merge conflicts for each file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that can be used in a request to return the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDescribeMergeConflictsResponse.SourceCommitId">
            <summary>
            Gets and sets the property SourceCommitId. 
            <para>
            The commit ID of the source commit specifier that was used in the merge evaluation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesError">
            <summary>
            Returns information about errors in a BatchDisassociateApprovalRuleTemplateFromRepositories
            operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesError.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            An error code that specifies whether the repository name was not valid or not found.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesError.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            An error message that provides details about why the repository name was either not
            found or not valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesError.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where the association with the template was not able to
            be removed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequest">
            <summary>
            Container for the parameters to the BatchDisassociateApprovalRuleTemplateFromRepositories operation.
            Removes the association between an approval rule template and one or more specified
            repositories.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequest.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the template that you want to disassociate from one or more repositories.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequest.RepositoryNames">
            <summary>
            Gets and sets the property RepositoryNames. 
            <para>
            The repository names that you want to disassociate from the approval rule template.
            </para>
             <note> 
            <para>
            The length constraint limit is for each string in the array. The array itself can
            be empty.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse">
            <summary>
            This is the response object from the BatchDisassociateApprovalRuleTemplateFromRepositories operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse.DisassociatedRepositoryNames">
            <summary>
            Gets and sets the property DisassociatedRepositoryNames. 
            <para>
            A list of repository names that have had their association with the template removed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            A list of any errors that might have occurred while attempting to remove the association
            between the template and the repositories.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchGetCommitsError">
            <summary>
            Returns information about errors in a BatchGetCommits operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchGetCommitsError.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            A commit ID that either could not be found or was not in a valid format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchGetCommitsError.ErrorCode">
            <summary>
            Gets and sets the property ErrorCode. 
            <para>
            An error code that specifies whether the commit ID was not valid or not found.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchGetCommitsError.ErrorMessage">
            <summary>
            Gets and sets the property ErrorMessage. 
            <para>
            An error message that provides detail about why the commit ID either was not found
            or was not valid.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchGetCommitsRequest">
            <summary>
            Container for the parameters to the BatchGetCommits operation.
            Returns information about the contents of one or more commits in a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchGetCommitsRequest.CommitIds">
            <summary>
            Gets and sets the property CommitIds. 
            <para>
            The full commit IDs of the commits to get information about.
            </para>
             <note> 
            <para>
            You must supply the full SHA IDs of each commit. You cannot use shortened SHA IDs.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchGetCommitsRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the commits.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchGetCommitsResponse">
            <summary>
            This is the response object from the BatchGetCommits operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchGetCommitsResponse.Commits">
            <summary>
            Gets and sets the property Commits. 
            <para>
            An array of commit data type objects, each of which contains information about a specified
            commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchGetCommitsResponse.Errors">
            <summary>
            Gets and sets the property Errors. 
            <para>
            Returns any commit IDs for which information could not be found. For example, if one
            of the commit IDs was a shortened SHA ID or that commit was not found in the specified
            repository, the ID returns an error object with more information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchGetRepositoriesRequest">
            <summary>
            Container for the parameters to the BatchGetRepositories operation.
            Returns information about one or more repositories.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchGetRepositoriesRequest.RepositoryNames">
            <summary>
            Gets and sets the property RepositoryNames. 
            <para>
            The names of the repositories to get information about.
            </para>
             <note> 
            <para>
            The length constraint limit is for each string in the array. The array itself can
            be empty.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BatchGetRepositoriesResponse">
            <summary>
            Represents the output of a batch get repositories operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchGetRepositoriesResponse.Repositories">
            <summary>
            Gets and sets the property Repositories. 
            <para>
            A list of repositories returned by the batch get repositories operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BatchGetRepositoriesResponse.RepositoriesNotFound">
            <summary>
            Gets and sets the property RepositoriesNotFound. 
            <para>
            Returns a list of repository names for which information could not be found.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException">
            <summary>
            The before commit ID and the after commit ID are the same, which is not valid. The
            before commit ID and the after commit ID must be different commit IDs.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException.#ctor(System.String)">
            <summary>
            Constructs a new BeforeCommitIdAndAfterCommitIdAreSameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BeforeCommitIdAndAfterCommitIdAreSameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException.#ctor(System.Exception)">
            <summary>
            Construct instance of BeforeCommitIdAndAfterCommitIdAreSameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BeforeCommitIdAndAfterCommitIdAreSameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BeforeCommitIdAndAfterCommitIdAreSameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BeforeCommitIdAndAfterCommitIdAreSameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BlobIdDoesNotExistException">
            <summary>
            The specified blob does not exist.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new BlobIdDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BlobIdDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of BlobIdDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BlobIdDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BlobIdDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BlobIdDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BlobIdRequiredException">
            <summary>
            A blob ID is required, but was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new BlobIdRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BlobIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of BlobIdRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BlobIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BlobIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BlobIdRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BlobIdRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BlobMetadata">
            <summary>
            Returns information about a specific Git blob object.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BlobMetadata.BlobId">
            <summary>
            Gets and sets the property BlobId. 
            <para>
            The full ID of the blob.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BlobMetadata.Mode">
            <summary>
            Gets and sets the property Mode. 
            <para>
            The file mode permissions of the blob. File mode permission codes include:
            </para>
             <ul> <li> 
            <para>
             <code>100644</code> indicates read/write
            </para>
             </li> <li> 
            <para>
             <code>100755</code> indicates read/write/execute
            </para>
             </li> <li> 
            <para>
             <code>160000</code> indicates a submodule
            </para>
             </li> <li> 
            <para>
             <code>120000</code> indicates a symlink
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BlobMetadata.Path">
            <summary>
            Gets and sets the property Path. 
            <para>
            The path to the blob and associated file name, if any.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            <summary>
            The specified branch does not exist.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new BranchDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BranchDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of BranchDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BranchDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BranchDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BranchDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BranchInfo">
            <summary>
            Returns information about a branch.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BranchInfo.BranchName">
            <summary>
            Gets and sets the property BranchName. 
            <para>
            The name of the branch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.BranchInfo.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The ID of the last commit made to the branch.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BranchNameExistsException">
            <summary>
            Cannot create the branch with the specified name because the commit conflicts with
            an existing branch with the same name. Branch names must be unique.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameExistsException.#ctor(System.String)">
            <summary>
            Constructs a new BranchNameExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BranchNameExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of BranchNameExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BranchNameExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BranchNameExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BranchNameExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            <summary>
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameIsTagNameException.#ctor(System.String)">
            <summary>
            Constructs a new BranchNameIsTagNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameIsTagNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BranchNameIsTagNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameIsTagNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of BranchNameIsTagNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameIsTagNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BranchNameIsTagNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameIsTagNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BranchNameIsTagNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameIsTagNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BranchNameIsTagNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameIsTagNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            <summary>
            A branch name is required, but was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new BranchNameRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BranchNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of BranchNameRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BranchNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BranchNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the BranchNameRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.BranchNameRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException">
            <summary>
            The approval rule cannot be deleted from the pull request because it was created by
            an approval rule template and applied to the pull request automatically.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException.#ctor(System.String)">
            <summary>
            Constructs a new CannotDeleteApprovalRuleFromTemplateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CannotDeleteApprovalRuleFromTemplateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException.#ctor(System.Exception)">
            <summary>
            Construct instance of CannotDeleteApprovalRuleFromTemplateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CannotDeleteApprovalRuleFromTemplateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CannotDeleteApprovalRuleFromTemplateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CannotDeleteApprovalRuleFromTemplateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException">
            <summary>
            The approval rule cannot be modified for the pull request because it was created by
            an approval rule template and applied to the pull request automatically.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException.#ctor(System.String)">
            <summary>
            Constructs a new CannotModifyApprovalRuleFromTemplateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CannotModifyApprovalRuleFromTemplateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException.#ctor(System.Exception)">
            <summary>
            Construct instance of CannotModifyApprovalRuleFromTemplateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CannotModifyApprovalRuleFromTemplateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CannotModifyApprovalRuleFromTemplateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CannotModifyApprovalRuleFromTemplateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            <summary>
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ClientRequestTokenRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientRequestTokenRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientRequestTokenRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientRequestTokenRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientRequestTokenRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClientRequestTokenRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.Comment">
            <summary>
            Returns information about a specific comment.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Comment.AuthorArn">
            <summary>
            Gets and sets the property AuthorArn. 
            <para>
            The Amazon Resource Name (ARN) of the person who posted the comment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Comment.CallerReactions">
            <summary>
            Gets and sets the property CallerReactions. 
            <para>
            The emoji reactions to a comment, if any, submitted by the user whose credentials
            are associated with the call to the API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Comment.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            A unique, client-generated idempotency token that, when provided in a request, ensures
            the request cannot be repeated with a changed parameter. If a request is received
            with the same parameters and a token is included, the request returns information
            about the initial request that used that token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Comment.CommentId">
            <summary>
            Gets and sets the property CommentId. 
            <para>
            The system-generated comment ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Comment.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The content of the comment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Comment.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date and time the comment was created, in timestamp format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Comment.Deleted">
            <summary>
            Gets and sets the property Deleted. 
            <para>
            A Boolean value indicating whether the comment has been deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Comment.InReplyTo">
            <summary>
            Gets and sets the property InReplyTo. 
            <para>
            The ID of the comment for which this comment is a reply, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Comment.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date and time the comment was most recently modified, in timestamp format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Comment.ReactionCounts">
            <summary>
            Gets and sets the property ReactionCounts. 
            <para>
            A string to integer map that represents the number of individual users who have responded
            to a comment with the specified reactions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            <summary>
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new CommentContentRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommentContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommentContentRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommentContentRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            <summary>
            The comment is too large. Comments are limited to 1,000 characters.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new CommentContentSizeLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommentContentSizeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommentContentSizeLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentContentSizeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentContentSizeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommentContentSizeLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommentDeletedException">
            <summary>
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDeletedException.#ctor(System.String)">
            <summary>
            Constructs a new CommentDeletedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDeletedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommentDeletedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDeletedException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommentDeletedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDeletedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentDeletedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDeletedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentDeletedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommentDeletedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDeletedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            <summary>
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new CommentDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommentDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommentDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommentDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            <summary>
            The comment ID is missing or null. A comment ID is required.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentIdRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new CommentIdRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentIdRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommentIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentIdRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommentIdRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentIdRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentIdRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentIdRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommentIdRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentIdRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException">
            <summary>
            You cannot modify or delete this comment. Only comment authors can modify or delete
            their comments.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException.#ctor(System.String)">
            <summary>
            Constructs a new CommentNotCreatedByCallerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommentNotCreatedByCallerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommentNotCreatedByCallerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentNotCreatedByCallerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommentNotCreatedByCallerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommentNotCreatedByCallerException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommentsForComparedCommit">
            <summary>
            Returns information about comments on the comparison between two commits.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForComparedCommit.AfterBlobId">
            <summary>
            Gets and sets the property AfterBlobId. 
            <para>
            The full blob ID of the commit used to establish the after of the comparison.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForComparedCommit.AfterCommitId">
            <summary>
            Gets and sets the property AfterCommitId. 
            <para>
            The full commit ID of the commit used to establish the after of the comparison.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForComparedCommit.BeforeBlobId">
            <summary>
            Gets and sets the property BeforeBlobId. 
            <para>
            The full blob ID of the commit used to establish the before of the comparison.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForComparedCommit.BeforeCommitId">
            <summary>
            Gets and sets the property BeforeCommitId. 
            <para>
            The full commit ID of the commit used to establish the before of the comparison.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForComparedCommit.Comments">
            <summary>
            Gets and sets the property Comments. 
            <para>
            An array of comment objects. Each comment object contains information about a comment
            on the comparison between commits.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForComparedCommit.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            Location information about the comment on the comparison, including the file name,
            line number, and whether the version of the file where the comment was made is BEFORE
            or AFTER.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForComparedCommit.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the compared commits.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommentsForPullRequest">
            <summary>
            Returns information about comments on a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForPullRequest.AfterBlobId">
            <summary>
            Gets and sets the property AfterBlobId. 
            <para>
            The full blob ID of the file on which you want to comment on the source commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForPullRequest.AfterCommitId">
            <summary>
            Gets and sets the property AfterCommitId. 
            <para>
            The full commit ID of the commit that was the tip of the source branch at the time
            the comment was made. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForPullRequest.BeforeBlobId">
            <summary>
            Gets and sets the property BeforeBlobId. 
            <para>
            The full blob ID of the file on which you want to comment on the destination commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForPullRequest.BeforeCommitId">
            <summary>
            Gets and sets the property BeforeCommitId. 
            <para>
            The full commit ID of the commit that was the tip of the destination branch when the
            pull request was created. This commit is superceded by the after commit in the source
            branch when and if you merge the source branch into the destination branch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForPullRequest.Comments">
            <summary>
            Gets and sets the property Comments. 
            <para>
            An array of comment objects. Each comment object contains information about a comment
            on the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForPullRequest.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            Location information about the comment on the pull request, including the file name,
            line number, and whether the version of the file where the comment was made is BEFORE
            (destination branch) or AFTER (source branch).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForPullRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CommentsForPullRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.Commit">
            <summary>
            Returns information about a specific commit.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Commit.AdditionalData">
            <summary>
            Gets and sets the property AdditionalData. 
            <para>
            Any other data associated with the specified commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Commit.Author">
            <summary>
            Gets and sets the property Author. 
            <para>
            Information about the author of the specified commit. Information includes the date
            in timestamp format with GMT offset, the name of the author, and the email address
            for the author, as configured in Git.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Commit.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The full SHA ID of the specified commit. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Commit.Committer">
            <summary>
            Gets and sets the property Committer. 
            <para>
            Information about the person who committed the specified commit, also known as the
            committer. Information includes the date in timestamp format with GMT offset, the
            name of the committer, and the email address for the committer, as configured in Git.
            </para>
             
            <para>
            For more information about the difference between an author and a committer in Git,
            see <a href="http://git-scm.com/book/ch2-3.html">Viewing the Commit History</a> in
            Pro Git by Scott Chacon and Ben Straub.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Commit.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The commit message associated with the specified commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Commit.Parents">
            <summary>
            Gets and sets the property Parents. 
            <para>
            A list of parent commits for the specified commit. Each parent commit ID is the full
            commit ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Commit.TreeId">
            <summary>
            Gets and sets the property TreeId. 
            <para>
            Tree information for the specified commit.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            <summary>
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new CommitDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommitDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommitDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommitDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommitIdDoesNotExistException">
            <summary>
            The specified commit ID does not exist.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new CommitIdDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommitIdDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommitIdDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitIdDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitIdDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommitIdDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            <summary>
            A commit ID was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new CommitIdRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommitIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommitIdRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommitIdRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommitIdsLimitExceededException">
            <summary>
            The maximum number of allowed commit IDs in a batch request is 100. Verify that your
            batch requests contains no more than 100 commit IDs, and then try again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new CommitIdsLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommitIdsLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommitIdsLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitIdsLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitIdsLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommitIdsLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommitIdsListRequiredException">
            <summary>
            A list of commit IDs is required, but was either not specified or the list was empty.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsListRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new CommitIdsListRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsListRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommitIdsListRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsListRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommitIdsListRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsListRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitIdsListRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsListRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitIdsListRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsListRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommitIdsListRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitIdsListRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            <summary>
            The commit message is too long. Provide a shorter string.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitMessageLengthExceededException.#ctor(System.String)">
            <summary>
            Constructs a new CommitMessageLengthExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitMessageLengthExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommitMessageLengthExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitMessageLengthExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommitMessageLengthExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitMessageLengthExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitMessageLengthExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitMessageLengthExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitMessageLengthExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitMessageLengthExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommitMessageLengthExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitMessageLengthExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CommitRequiredException">
            <summary>
            A commit was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new CommitRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CommitRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of CommitRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CommitRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the CommitRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CommitRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            <summary>
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException.#ctor(System.String)">
            <summary>
            Constructs a new ConcurrentReferenceUpdateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConcurrentReferenceUpdateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConcurrentReferenceUpdateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentReferenceUpdateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConcurrentReferenceUpdateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConcurrentReferenceUpdateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.Conflict">
            <summary>
            Information about conflicts in a merge operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Conflict.ConflictMetadata">
            <summary>
            Gets and sets the property ConflictMetadata. 
            <para>
            Metadata about a conflict in a merge operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Conflict.MergeHunks">
            <summary>
            Gets and sets the property MergeHunks. 
            <para>
            A list of hunks that contain the differences between files or lines causing the conflict.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ConflictMetadata">
            <summary>
            Information about the metadata for a conflict in a merge operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictMetadata.ContentConflict">
            <summary>
            Gets and sets the property ContentConflict. 
            <para>
            A boolean value indicating whether there are conflicts in the content of a file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictMetadata.FileModeConflict">
            <summary>
            Gets and sets the property FileModeConflict. 
            <para>
            A boolean value indicating whether there are conflicts in the file mode of a file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictMetadata.FileModes">
            <summary>
            Gets and sets the property FileModes. 
            <para>
            The file modes of the file in the source, destination, and base of the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictMetadata.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The path of the file that contains conflicts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictMetadata.FileSizes">
            <summary>
            Gets and sets the property FileSizes. 
            <para>
            The file sizes of the file in the source, destination, and base of the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictMetadata.IsBinaryFile">
            <summary>
            Gets and sets the property IsBinaryFile. 
            <para>
            A boolean value (true or false) indicating whether the file is binary or textual in
            the source, destination, and base of the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictMetadata.MergeOperations">
            <summary>
            Gets and sets the property MergeOperations. 
            <para>
            Whether an add, modify, or delete operation caused the conflict between the source
            and destination of the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictMetadata.NumberOfConflicts">
            <summary>
            Gets and sets the property NumberOfConflicts. 
            <para>
            The number of conflicts, including both hunk conflicts and metadata conflicts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictMetadata.ObjectTypeConflict">
            <summary>
            Gets and sets the property ObjectTypeConflict. 
            <para>
            A boolean value (true or false) indicating whether there are conflicts between the
            branches in the object type of a file, folder, or submodule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictMetadata.ObjectTypes">
            <summary>
            Gets and sets the property ObjectTypes. 
            <para>
            Information about any object type conflicts in a merge operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ConflictResolution">
            <summary>
            If AUTOMERGE is the conflict resolution strategy, a list of inputs to use when resolving
            conflicts during a merge.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictResolution.DeleteFiles">
            <summary>
            Gets and sets the property DeleteFiles. 
            <para>
            Files to be deleted as part of the merge conflict resolution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictResolution.ReplaceContents">
            <summary>
            Gets and sets the property ReplaceContents. 
            <para>
            Files to have content replaced as part of the merge conflict resolution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ConflictResolution.SetFileModes">
            <summary>
            Gets and sets the property SetFileModes. 
            <para>
            File modes that are set as part of the merge conflict resolution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreateApprovalRuleTemplateRequest">
            <summary>
            Container for the parameters to the CreateApprovalRuleTemplate operation.
            Creates a template for approval rules that can then be associated with one or more
            repositories in your AWS account. When you associate a template with a repository,
            AWS CodeCommit creates an approval rule that matches the conditions of the template
            for all pull requests that meet the conditions of the template. For more information,
            see <a>AssociateApprovalRuleTemplateWithRepository</a>.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateApprovalRuleTemplateRequest.ApprovalRuleTemplateContent">
            <summary>
            Gets and sets the property ApprovalRuleTemplateContent. 
            <para>
            The content of the approval rule that is created on pull requests in associated repositories.
            If you specify one or more destination references (branches), approval rules are created
            in an associated repository only if their destination references (branches) match
            those specified in the template.
            </para>
             <note> 
            <para>
            When you create the content of the approval rule template, you can specify approvers
            in an approval pool in one of two ways:
            </para>
             <ul> <li> 
            <para>
             <b>CodeCommitApprovers</b>: This option only requires an AWS account and a resource.
            It can be used for both IAM users and federated access users whose name matches the
            provided resource name. This is a very powerful option that offers a great deal of
            flexibility. For example, if you specify the AWS account <i>123456789012</i> and <i>Mary_Major</i>,
            all of the following are counted as approvals coming from that user:
            </para>
             <ul> <li> 
            <para>
            An IAM user in the account (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)
            </para>
             </li> <li> 
            <para>
            A federated user identified in IAM as Mary_Major (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)
            </para>
             </li> </ul> 
            <para>
            This option does not recognize an active session of someone assuming the role of CodeCommitReview
            with a role session name of <i>Mary_Major</i> (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
            unless you include a wildcard (*Mary_Major).
            </para>
             </li> <li> 
            <para>
             <b>Fully qualified ARN</b>: This option allows you to specify the fully qualified
            Amazon Resource Name (ARN) of the IAM user or role. 
            </para>
             </li> </ul> 
            <para>
            For more information about IAM ARNs, wildcards, and formats, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
            Identifiers</a> in the <i>IAM User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateApprovalRuleTemplateRequest.ApprovalRuleTemplateDescription">
            <summary>
            Gets and sets the property ApprovalRuleTemplateDescription. 
            <para>
            The description of the approval rule template. Consider providing a description that
            explains what this template does and when it might be appropriate to associate it
            with repositories.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateApprovalRuleTemplateRequest.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the approval rule template. Provide descriptive names, because this name
            is applied to the approval rules created automatically in associated repositories.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreateApprovalRuleTemplateResponse">
            <summary>
            This is the response object from the CreateApprovalRuleTemplate operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateApprovalRuleTemplateResponse.ApprovalRuleTemplate">
            <summary>
            Gets and sets the property ApprovalRuleTemplate. 
            <para>
            The content and structure of the created approval rule template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreateBranchRequest">
            <summary>
            Container for the parameters to the CreateBranch operation.
            Creates a branch in a repository and points the branch to a commit.
            
             <note> 
            <para>
            Calling the create branch operation does not set a repository's default branch. To
            do this, call the update default branch operation.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateBranchRequest.BranchName">
            <summary>
            Gets and sets the property BranchName. 
            <para>
            The name of the new branch to create.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateBranchRequest.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The ID of the commit to point the new branch to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateBranchRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository in which you want to create the new branch.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreateBranchResponse">
            <summary>
            This is the response object from the CreateBranch operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreateCommitRequest">
            <summary>
            Container for the parameters to the CreateCommit operation.
            Creates a commit for a repository on the tip of a specified branch.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitRequest.AuthorName">
            <summary>
            Gets and sets the property AuthorName. 
            <para>
            The name of the author who created the commit. This information is used as both the
            author and committer for the commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitRequest.BranchName">
            <summary>
            Gets and sets the property BranchName. 
            <para>
            The name of the branch where you create the commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitRequest.CommitMessage">
            <summary>
            Gets and sets the property CommitMessage. 
            <para>
            The commit message you want to include in the commit. Commit messages are limited
            to 256 KB. If no message is specified, a default message is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitRequest.DeleteFiles">
            <summary>
            Gets and sets the property DeleteFiles. 
            <para>
            The files to delete in this commit. These files still exist in earlier commits.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitRequest.Email">
            <summary>
            Gets and sets the property Email. 
            <para>
            The email address of the person who created the commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitRequest.KeepEmptyFolders">
            <summary>
            Gets and sets the property KeepEmptyFolders. 
            <para>
            If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If true, a ..gitkeep file is created for empty
            folders. The default is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitRequest.ParentCommitId">
            <summary>
            Gets and sets the property ParentCommitId. 
            <para>
            The ID of the commit that is the parent of the commit you create. Not required if
            this is an empty repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitRequest.PutFiles">
            <summary>
            Gets and sets the property PutFiles. 
            <para>
            The files to add or update in this commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you create the commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitRequest.SetFileModes">
            <summary>
            Gets and sets the property SetFileModes. 
            <para>
            The file modes to update for files in this commit.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreateCommitResponse">
            <summary>
            This is the response object from the CreateCommit operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitResponse.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The full commit ID of the commit that contains your committed file changes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitResponse.FilesAdded">
            <summary>
            Gets and sets the property FilesAdded. 
            <para>
            The files added as part of the committed file changes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitResponse.FilesDeleted">
            <summary>
            Gets and sets the property FilesDeleted. 
            <para>
            The files deleted as part of the committed file changes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitResponse.FilesUpdated">
            <summary>
            Gets and sets the property FilesUpdated. 
            <para>
            The files updated as part of the commited file changes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateCommitResponse.TreeId">
            <summary>
            Gets and sets the property TreeId. 
            <para>
            The full SHA-1 pointer of the tree information for the commit that contains the commited
            file changes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleRequest">
            <summary>
            Container for the parameters to the CreatePullRequestApprovalRule operation.
            Creates an approval rule for a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleRequest.ApprovalRuleContent">
            <summary>
            Gets and sets the property ApprovalRuleContent. 
            <para>
            The content of the approval rule, including the number of approvals needed and the
            structure of an approval pool defined for approvals, if any. For more information
            about approval pools, see the AWS CodeCommit User Guide.
            </para>
             <note> 
            <para>
            When you create the content of the approval rule, you can specify approvers in an
            approval pool in one of two ways:
            </para>
             <ul> <li> 
            <para>
             <b>CodeCommitApprovers</b>: This option only requires an AWS account and a resource.
            It can be used for both IAM users and federated access users whose name matches the
            provided resource name. This is a very powerful option that offers a great deal of
            flexibility. For example, if you specify the AWS account <i>123456789012</i> and <i>Mary_Major</i>,
            all of the following would be counted as approvals coming from that user:
            </para>
             <ul> <li> 
            <para>
            An IAM user in the account (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)
            </para>
             </li> <li> 
            <para>
            A federated user identified in IAM as Mary_Major (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)
            </para>
             </li> </ul> 
            <para>
            This option does not recognize an active session of someone assuming the role of CodeCommitReview
            with a role session name of <i>Mary_Major</i> (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
            unless you include a wildcard (*Mary_Major).
            </para>
             </li> <li> 
            <para>
             <b>Fully qualified ARN</b>: This option allows you to specify the fully qualified
            Amazon Resource Name (ARN) of the IAM user or role. 
            </para>
             </li> </ul> 
            <para>
            For more information about IAM ARNs, wildcards, and formats, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
            Identifiers</a> in the <i>IAM User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleRequest.ApprovalRuleName">
            <summary>
            Gets and sets the property ApprovalRuleName. 
            <para>
            The name for the approval rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request for which you want to create the approval
            rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleResponse">
            <summary>
            This is the response object from the CreatePullRequestApprovalRule operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleResponse.ApprovalRule">
            <summary>
            Gets and sets the property ApprovalRule. 
            <para>
            Information about the created approval rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreatePullRequestRequest">
            <summary>
            Container for the parameters to the CreatePullRequest operation.
            Creates a pull request in the specified repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreatePullRequestRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            A unique, client-generated idempotency token that, when provided in a request, ensures
            the request cannot be repeated with a changed parameter. If a request is received
            with the same parameters and a token is included, the request returns information
            about the initial request that used that token.
            </para>
             <note> 
            <para>
            The AWS SDKs prepopulate client request tokens. If you are using an AWS SDK, an idempotency
            token is created for you.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreatePullRequestRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreatePullRequestRequest.Targets">
            <summary>
            Gets and sets the property Targets. 
            <para>
            The targets for the pull request, including the source of the code to be reviewed
            (the source branch) and the destination where the creator of the pull request intends
            the code to be merged after the pull request is closed (the destination branch).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreatePullRequestRequest.Title">
            <summary>
            Gets and sets the property Title. 
            <para>
            The title of the pull request. This title is used to identify the pull request to
            other users in the repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreatePullRequestResponse">
            <summary>
            This is the response object from the CreatePullRequest operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreatePullRequestResponse.PullRequest">
            <summary>
            Gets and sets the property PullRequest. 
            <para>
            Information about the newly created pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreateRepositoryRequest">
            <summary>
            Container for the parameters to the CreateRepository operation.
            Creates a new, empty repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateRepositoryRequest.RepositoryDescription">
            <summary>
            Gets and sets the property RepositoryDescription. 
            <para>
            A comment or description about the new repository.
            </para>
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateRepositoryRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the new repository to be created.
            </para>
             <note> 
            <para>
            The repository name must be unique across the calling AWS account. Repository names
            are limited to 100 alphanumeric, dash, and underscore characters, and cannot include
            certain characters. For more information about the limits on repository names, see
            <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">Limits</a>
            in the <i>AWS CodeCommit User Guide</i>. The suffix .git is prohibited.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateRepositoryRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            One or more tag key-value pairs to use when tagging this repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreateRepositoryResponse">
            <summary>
            Represents the output of a create repository operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateRepositoryResponse.RepositoryMetadata">
            <summary>
            Gets and sets the property RepositoryMetadata. 
            <para>
            Information about the newly created repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest">
            <summary>
            Container for the parameters to the CreateUnreferencedMergeCommit operation.
            Creates an unreferenced commit that represents the result of merging two branches
            using a specified merge strategy. This can help you determine the outcome of a potential
            merge. This API cannot be used with the fast-forward merge strategy because that strategy
            does not create a merge commit.
            
             <note> 
            <para>
            This unreferenced merge commit can only be accessed using the GetCommit API or through
            git commands such as git fetch. To retrieve this commit, you must specify its commit
            ID or otherwise reference it.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.AuthorName">
            <summary>
            Gets and sets the property AuthorName. 
            <para>
            The name of the author who created the unreferenced commit. This information is used
            as both the author and committer for the commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.CommitMessage">
            <summary>
            Gets and sets the property CommitMessage. 
            <para>
            The commit message for the unreferenced commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.ConflictDetailLevel">
            <summary>
            Gets and sets the property ConflictDetailLevel. 
            <para>
            The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.ConflictResolution">
            <summary>
            Gets and sets the property ConflictResolution. 
            <para>
            If AUTOMERGE is the conflict resolution strategy, a list of inputs to use when resolving
            conflicts during a merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.ConflictResolutionStrategy">
            <summary>
            Gets and sets the property ConflictResolutionStrategy. 
            <para>
            Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.DestinationCommitSpecifier">
            <summary>
            Gets and sets the property DestinationCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.Email">
            <summary>
            Gets and sets the property Email. 
            <para>
            The email address for the person who created the unreferenced commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.KeepEmptyFolders">
            <summary>
            Gets and sets the property KeepEmptyFolders. 
            <para>
            If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If this is specified as true, a .gitkeep file
            is created for empty folders. The default is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.MergeOption">
            <summary>
            Gets and sets the property MergeOption. 
            <para>
            The merge option or strategy you want to use to merge the code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to create the unreferenced merge commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest.SourceCommitSpecifier">
            <summary>
            Gets and sets the property SourceCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitResponse">
            <summary>
            This is the response object from the CreateUnreferencedMergeCommit operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitResponse.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The full commit ID of the commit that contains your merge results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitResponse.TreeId">
            <summary>
            Gets and sets the property TreeId. 
            <para>
            The full SHA-1 pointer of the tree information for the commit that contains the merge
            results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException">
            <summary>
            The specified branch is the default branch for the repository, and cannot be deleted.
            To delete this branch, you must first set another branch as the default branch.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException.#ctor(System.String)">
            <summary>
            Constructs a new DefaultBranchCannotBeDeletedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DefaultBranchCannotBeDeletedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException.#ctor(System.Exception)">
            <summary>
            Construct instance of DefaultBranchCannotBeDeletedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DefaultBranchCannotBeDeletedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DefaultBranchCannotBeDeletedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DefaultBranchCannotBeDeletedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateRequest">
            <summary>
            Container for the parameters to the DeleteApprovalRuleTemplate operation.
            Deletes a specified approval rule template. Deleting a template does not remove approval
            rules on pull requests already created with the template.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateRequest.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the approval rule template to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateResponse">
            <summary>
            This is the response object from the DeleteApprovalRuleTemplate operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateResponse.ApprovalRuleTemplateId">
            <summary>
            Gets and sets the property ApprovalRuleTemplateId. 
            <para>
            The system-generated ID of the deleted approval rule template. If the template has
            been previously deleted, the only response is a 200 OK.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteBranchRequest">
            <summary>
            Container for the parameters to the DeleteBranch operation.
            Deletes a branch from a repository, unless that branch is the default branch for the
            repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteBranchRequest.BranchName">
            <summary>
            Gets and sets the property BranchName. 
            <para>
            The name of the branch to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteBranchRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the branch to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteBranchResponse">
            <summary>
            Represents the output of a delete branch operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteBranchResponse.DeletedBranch">
            <summary>
            Gets and sets the property DeletedBranch. 
            <para>
            Information about the branch deleted by the operation, including the branch name and
            the commit ID that was the tip of the branch.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteCommentContentRequest">
            <summary>
            Container for the parameters to the DeleteCommentContent operation.
            Deletes the content of a comment made on a change, file, or commit in a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteCommentContentRequest.CommentId">
            <summary>
            Gets and sets the property CommentId. 
            <para>
            The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a>
            or <a>GetCommentsForPullRequest</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteCommentContentResponse">
            <summary>
            This is the response object from the DeleteCommentContent operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteCommentContentResponse.Comment">
            <summary>
            Gets and sets the property Comment. 
            <para>
            Information about the comment you just deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteFileEntry">
            <summary>
            A file that is deleted as part of a commit.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileEntry.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The full path of the file to be deleted, including the name of the file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteFileRequest">
            <summary>
            Container for the parameters to the DeleteFile operation.
            Deletes a specified file from a specified branch. A commit is created on the branch
            that contains the revision. The file still exists in the commits earlier to the commit
            that contains the deletion.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileRequest.BranchName">
            <summary>
            Gets and sets the property BranchName. 
            <para>
            The name of the branch where the commit that deletes the file is made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileRequest.CommitMessage">
            <summary>
            Gets and sets the property CommitMessage. 
            <para>
            The commit message you want to include as part of deleting the file. Commit messages
            are limited to 256 KB. If no message is specified, a default message is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileRequest.Email">
            <summary>
            Gets and sets the property Email. 
            <para>
            The email address for the commit that deletes the file. If no email address is specified,
            the email address is left blank.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileRequest.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The fully qualified path to the file that to be deleted, including the full name and
            extension of that file. For example, /examples/file.md is a fully qualified path to
            a file named file.md in a folder named examples.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileRequest.KeepEmptyFolders">
            <summary>
            Gets and sets the property KeepEmptyFolders. 
            <para>
            If a file is the only object in the folder or directory, specifies whether to delete
            the folder or directory that contains the file. By default, empty folders are deleted.
            This includes empty folders that are part of the directory structure. For example,
            if the path to a file is dir1/dir2/dir3/dir4, and dir2 and dir3 are empty, deleting
            the last file in dir4 also deletes the empty folders dir4, dir3, and dir2.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the author of the commit that deletes the file. If no name is specified,
            the user's ARN is used as the author name and committer name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileRequest.ParentCommitId">
            <summary>
            Gets and sets the property ParentCommitId. 
            <para>
            The ID of the commit that is the tip of the branch where you want to create the commit
            that deletes the file. This must be the HEAD commit for the branch. The commit that
            deletes the file is created from this commit ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the file to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteFileResponse">
            <summary>
            This is the response object from the DeleteFile operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileResponse.BlobId">
            <summary>
            Gets and sets the property BlobId. 
            <para>
            The blob ID removed from the tree as part of deleting the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileResponse.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The full commit ID of the commit that contains the change that deletes the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileResponse.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The fully qualified path to the file to be deleted, including the full name and extension
            of that file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteFileResponse.TreeId">
            <summary>
            Gets and sets the property TreeId. 
            <para>
            The full SHA-1 pointer of the tree information for the commit that contains the delete
            file change.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleRequest">
            <summary>
            Container for the parameters to the DeletePullRequestApprovalRule operation.
            Deletes an approval rule from a specified pull request. Approval rules can be deleted
            from a pull request only if the pull request is open, and if the approval rule was
            created specifically for a pull request and not generated from an approval rule template
            associated with the repository where the pull request was created. You cannot delete
            an approval rule from a merged or closed pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleRequest.ApprovalRuleName">
            <summary>
            Gets and sets the property ApprovalRuleName. 
            <para>
            The name of the approval rule you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request that contains the approval rule you want
            to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleResponse">
            <summary>
            This is the response object from the DeletePullRequestApprovalRule operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleResponse.ApprovalRuleId">
            <summary>
            Gets and sets the property ApprovalRuleId. 
            <para>
            The ID of the deleted approval rule. 
            </para>
             <note> 
            <para>
            If the approval rule was deleted in an earlier API call, the response is 200 OK without
            content.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteRepositoryRequest">
            <summary>
            Container for the parameters to the DeleteRepository operation.
            Deletes a repository. If a specified repository was already deleted, a null repository
            ID is returned.
            
             <important> 
            <para>
            Deleting a repository also deletes all associated objects and metadata. After a repository
            is deleted, all future push calls to the deleted repository fail.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteRepositoryRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DeleteRepositoryResponse">
            <summary>
            Represents the output of a delete repository operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DeleteRepositoryResponse.RepositoryId">
            <summary>
            Gets and sets the property RepositoryId. 
            <para>
            The ID of the repository that was deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DescribeMergeConflictsRequest">
            <summary>
            Container for the parameters to the DescribeMergeConflicts operation.
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy. If the merge option
            for the attempted merge is specified as FAST_FORWARD_MERGE, an exception is thrown.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsRequest.ConflictDetailLevel">
            <summary>
            Gets and sets the property ConflictDetailLevel. 
            <para>
            The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsRequest.ConflictResolutionStrategy">
            <summary>
            Gets and sets the property ConflictResolutionStrategy. 
            <para>
            Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsRequest.DestinationCommitSpecifier">
            <summary>
            Gets and sets the property DestinationCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsRequest.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The path of the target files used to describe the conflicts. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsRequest.MaxMergeHunks">
            <summary>
            Gets and sets the property MaxMergeHunks. 
            <para>
            The maximum number of merge hunks to include in the output.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsRequest.MergeOption">
            <summary>
            Gets and sets the property MergeOption. 
            <para>
            The merge option or strategy you want to use to merge the code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to get information about a merge conflict.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsRequest.SourceCommitSpecifier">
            <summary>
            Gets and sets the property SourceCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DescribeMergeConflictsResponse">
            <summary>
            This is the response object from the DescribeMergeConflicts operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsResponse.BaseCommitId">
            <summary>
            Gets and sets the property BaseCommitId. 
            <para>
            The commit ID of the merge base.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsResponse.ConflictMetadata">
            <summary>
            Gets and sets the property ConflictMetadata. 
            <para>
            Contains metadata about the conflicts found in the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsResponse.DestinationCommitId">
            <summary>
            Gets and sets the property DestinationCommitId. 
            <para>
            The commit ID of the destination commit specifier that was used in the merge evaluation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsResponse.MergeHunks">
            <summary>
            Gets and sets the property MergeHunks. 
            <para>
            A list of merge hunks of the differences between the files or lines.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that can be used in a request to return the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsResponse.SourceCommitId">
            <summary>
            Gets and sets the property SourceCommitId. 
            <para>
            The commit ID of the source commit specifier that was used in the merge evaluation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DescribePullRequestEventsRequest">
            <summary>
            Container for the parameters to the DescribePullRequestEvents operation.
            Returns information about one or more pull request events.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribePullRequestEventsRequest.ActorArn">
            <summary>
            Gets and sets the property ActorArn. 
            <para>
            The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples
            include updating the pull request with more commits or changing the status of a pull
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribePullRequestEventsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            A non-zero, non-negative integer used to limit the number of returned results. The
            default is 100 events, which is also the maximum number of events that can be returned
            in a result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribePullRequestEventsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribePullRequestEventsRequest.PullRequestEventType">
            <summary>
            Gets and sets the property PullRequestEventType. 
            <para>
            Optional. The pull request event type about which you want to return information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribePullRequestEventsRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DescribePullRequestEventsResponse">
            <summary>
            This is the response object from the DescribePullRequestEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribePullRequestEventsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that can be used in a request to return the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribePullRequestEventsResponse.PullRequestEvents">
            <summary>
            Gets and sets the property PullRequestEvents. 
            <para>
            Information about the pull request events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.Difference">
            <summary>
            Returns information about a set of differences for a commit specifier.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Difference.AfterBlob">
            <summary>
            Gets and sets the property AfterBlob. 
            <para>
            Information about an <code>afterBlob</code> data type object, including the ID, the
            file mode permission code, and the path.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Difference.BeforeBlob">
            <summary>
            Gets and sets the property BeforeBlob. 
            <para>
            Information about a <code>beforeBlob</code> data type object, including the ID, the
            file mode permission code, and the path.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Difference.ChangeType">
            <summary>
            Gets and sets the property ChangeType. 
            <para>
            Whether the change type of the difference is an addition (A), deletion (D), or modification
            (M).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException">
            <summary>
            A file cannot be added to the repository because the specified path name has the same
            name as a file that already exists in this repository. Either provide a different
            name for the file, or specify a different path for the file.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException.#ctor(System.String)">
            <summary>
            Constructs a new DirectoryNameConflictsWithFileNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DirectoryNameConflictsWithFileNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of DirectoryNameConflictsWithFileNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DirectoryNameConflictsWithFileNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DirectoryNameConflictsWithFileNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DirectoryNameConflictsWithFileNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DisassociateApprovalRuleTemplateFromRepositoryRequest">
            <summary>
            Container for the parameters to the DisassociateApprovalRuleTemplateFromRepository operation.
            Removes the association between a template and a repository so that approval rules
            based on the template are not automatically created when pull requests are created
            in the specified repository. This does not delete any approval rules previously created
            for pull requests through the template association.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DisassociateApprovalRuleTemplateFromRepositoryRequest.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the approval rule template to disassociate from a specified repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DisassociateApprovalRuleTemplateFromRepositoryRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository you want to disassociate from the template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DisassociateApprovalRuleTemplateFromRepositoryResponse">
            <summary>
            This is the response object from the DisassociateApprovalRuleTemplateFromRepository operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            <summary>
            An encryption integrity check failed.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException.#ctor(System.String)">
            <summary>
            Constructs a new EncryptionIntegrityChecksFailedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EncryptionIntegrityChecksFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException.#ctor(System.Exception)">
            <summary>
            Construct instance of EncryptionIntegrityChecksFailedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionIntegrityChecksFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionIntegrityChecksFailedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EncryptionIntegrityChecksFailedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            <summary>
            An encryption key could not be accessed.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException.#ctor(System.String)">
            <summary>
            Constructs a new EncryptionKeyAccessDeniedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EncryptionKeyAccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException.#ctor(System.Exception)">
            <summary>
            Construct instance of EncryptionKeyAccessDeniedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionKeyAccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionKeyAccessDeniedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EncryptionKeyAccessDeniedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            <summary>
            The encryption key is disabled.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyDisabledException.#ctor(System.String)">
            <summary>
            Constructs a new EncryptionKeyDisabledException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyDisabledException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EncryptionKeyDisabledException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyDisabledException.#ctor(System.Exception)">
            <summary>
            Construct instance of EncryptionKeyDisabledException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyDisabledException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionKeyDisabledException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyDisabledException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionKeyDisabledException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EncryptionKeyDisabledException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyDisabledException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            <summary>
            No encryption key was found.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new EncryptionKeyNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EncryptionKeyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of EncryptionKeyNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionKeyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionKeyNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EncryptionKeyNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            <summary>
            The encryption key is not available.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new EncryptionKeyUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EncryptionKeyUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of EncryptionKeyUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionKeyUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EncryptionKeyUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the EncryptionKeyUnavailableException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesRequest">
            <summary>
            Container for the parameters to the EvaluatePullRequestApprovalRules operation.
            Evaluates whether a pull request has met all the conditions specified in its associated
            approval rules.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request you want to evaluate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesRequest.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The system-generated ID for the pull request revision. To retrieve the most recent
            revision ID for a pull request, use <a>GetPullRequest</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesResponse">
            <summary>
            This is the response object from the EvaluatePullRequestApprovalRules operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesResponse.Evaluation">
            <summary>
            Gets and sets the property Evaluation. 
            <para>
            The result of the evaluation, including the names of the rules whose conditions have
            been met (if any), the names of the rules whose conditions have not been met (if any),
            whether the pull request is in the approved state, and whether the pull request approval
            rule has been set aside by an override. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.Evaluation">
            <summary>
            Returns information about the approval rules applied to a pull request and whether
            conditions have been met.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Evaluation.ApprovalRulesNotSatisfied">
            <summary>
            Gets and sets the property ApprovalRulesNotSatisfied. 
            <para>
            The names of the approval rules that have not had their conditions met.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Evaluation.ApprovalRulesSatisfied">
            <summary>
            Gets and sets the property ApprovalRulesSatisfied. 
            <para>
            The names of the approval rules that have had their conditions met.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Evaluation.Approved">
            <summary>
            Gets and sets the property Approved. 
            <para>
            Whether the state of the pull request is approved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Evaluation.Overridden">
            <summary>
            Gets and sets the property Overridden. 
            <para>
            Whether the approval rule requirements for the pull request have been overridden and
            no longer need to be met.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.File">
            <summary>
            Returns information about a file in a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.File.AbsolutePath">
            <summary>
            Gets and sets the property AbsolutePath. 
            <para>
            The fully qualified path to the file in the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.File.BlobId">
            <summary>
            Gets and sets the property BlobId. 
            <para>
            The blob ID that contains the file information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.File.FileMode">
            <summary>
            Gets and sets the property FileMode. 
            <para>
            The extrapolated file mode permissions for the file. Valid values include EXECUTABLE
            and NORMAL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.File.RelativePath">
            <summary>
            Gets and sets the property RelativePath. 
            <para>
            The relative path of the file from the folder where the query originated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException">
            <summary>
            The commit cannot be created because both a source file and file content have been
            specified for the same file. You cannot provide both. Either specify a source file
            or provide the file content directly.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException.#ctor(System.String)">
            <summary>
            Constructs a new FileContentAndSourceFileSpecifiedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileContentAndSourceFileSpecifiedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileContentAndSourceFileSpecifiedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileContentAndSourceFileSpecifiedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileContentAndSourceFileSpecifiedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FileContentAndSourceFileSpecifiedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileContentRequiredException">
            <summary>
            The file cannot be added because it is empty. Empty files cannot be added to the repository
            with this API.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new FileContentRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileContentRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FileContentRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            <summary>
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new FileContentSizeLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileContentSizeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileContentSizeLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileContentSizeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileContentSizeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FileContentSizeLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            <summary>
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new FileDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FileDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileEntryRequiredException">
            <summary>
            The commit cannot be created because no files have been specified as added, updated,
            or changed (PutFile or DeleteFile) for the commit.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileEntryRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new FileEntryRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileEntryRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileEntryRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileEntryRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileEntryRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileEntryRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileEntryRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileEntryRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileEntryRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileEntryRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FileEntryRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileEntryRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileMetadata">
            <summary>
            A file to be added, updated, or deleted as part of a commit.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.FileMetadata.AbsolutePath">
            <summary>
            Gets and sets the property AbsolutePath. 
            <para>
            The full path to the file to be added or updated, including the name of the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.FileMetadata.BlobId">
            <summary>
            Gets and sets the property BlobId. 
            <para>
            The blob ID that contains the file information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.FileMetadata.FileMode">
            <summary>
            Gets and sets the property FileMode. 
            <para>
            The extrapolated file mode permissions for the file. Valid values include EXECUTABLE
            and NORMAL.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            <summary>
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileModeRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new FileModeRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileModeRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileModeRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileModeRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileModeRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileModeRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileModeRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileModeRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileModeRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileModeRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FileModeRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileModeRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileModes">
            <summary>
            Information about file modes in a merge or pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.FileModes.Base">
            <summary>
            Gets and sets the property Base. 
            <para>
            The file mode of a file in the base of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.FileModes.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The file mode of a file in the destination of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.FileModes.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The file mode of a file in the source of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException">
            <summary>
            A file cannot be added to the repository because the specified file name has the same
            name as a directory in this repository. Either provide another name for the file,
            or add the file in a directory that does not match the file name.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException.#ctor(System.String)">
            <summary>
            Constructs a new FileNameConflictsWithDirectoryNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileNameConflictsWithDirectoryNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileNameConflictsWithDirectoryNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileNameConflictsWithDirectoryNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileNameConflictsWithDirectoryNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FileNameConflictsWithDirectoryNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException">
            <summary>
            The commit cannot be created because a specified file path points to a submodule.
            Verify that the destination files have valid file paths that do not point to a submodule.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException.#ctor(System.String)">
            <summary>
            Constructs a new FilePathConflictsWithSubmodulePathException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FilePathConflictsWithSubmodulePathException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException.#ctor(System.Exception)">
            <summary>
            Construct instance of FilePathConflictsWithSubmodulePathException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FilePathConflictsWithSubmodulePathException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FilePathConflictsWithSubmodulePathException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FilePathConflictsWithSubmodulePathException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileSizes">
            <summary>
            Information about the size of files in a merge or pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.FileSizes.Base">
            <summary>
            Gets and sets the property Base. 
            <para>
            The size of a file in the base of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.FileSizes.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The size of a file in the destination of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.FileSizes.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The size of a file in the source of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FileTooLargeException">
            <summary>
            The specified file exceeds the file size limit for AWS CodeCommit. For more information
            about limits in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileTooLargeException.#ctor(System.String)">
            <summary>
            Constructs a new FileTooLargeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileTooLargeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileTooLargeException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileTooLargeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileTooLargeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileTooLargeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileTooLargeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileTooLargeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileTooLargeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FileTooLargeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FileTooLargeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.Folder">
            <summary>
            Returns information about a folder in a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Folder.AbsolutePath">
            <summary>
            Gets and sets the property AbsolutePath. 
            <para>
            The fully qualified path of the folder in the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Folder.RelativePath">
            <summary>
            Gets and sets the property RelativePath. 
            <para>
            The relative path of the specified folder from the folder where the query originated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Folder.TreeId">
            <summary>
            Gets and sets the property TreeId. 
            <para>
            The full SHA-1 pointer of the tree information for the commit that contains the folder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            <summary>
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new FolderContentSizeLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FolderContentSizeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of FolderContentSizeLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FolderContentSizeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FolderContentSizeLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FolderContentSizeLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.FolderDoesNotExistException">
            <summary>
            The specified folder does not exist. Either the folder name is not correct, or you
            did not enter the full path to the folder.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new FolderDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FolderDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of FolderDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FolderDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FolderDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the FolderDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.FolderDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetApprovalRuleTemplateRequest">
            <summary>
            Container for the parameters to the GetApprovalRuleTemplate operation.
            Returns information about a specified approval rule template.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetApprovalRuleTemplateRequest.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the approval rule template for which you want to get information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetApprovalRuleTemplateResponse">
            <summary>
            This is the response object from the GetApprovalRuleTemplate operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetApprovalRuleTemplateResponse.ApprovalRuleTemplate">
            <summary>
            Gets and sets the property ApprovalRuleTemplate. 
            <para>
            The content and structure of the approval rule template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetBlobRequest">
            <summary>
            Container for the parameters to the GetBlob operation.
            Returns the base-64 encoded content of an individual blob in a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetBlobRequest.BlobId">
            <summary>
            Gets and sets the property BlobId. 
            <para>
            The ID of the blob, which is its SHA-1 pointer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetBlobRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the blob.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetBlobResponse">
            <summary>
            Represents the output of a get blob operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetBlobResponse.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The content of the blob, usually a file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetBranchRequest">
            <summary>
            Container for the parameters to the GetBranch operation.
            Returns information about a repository branch, including its name and the last commit
            ID.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetBranchRequest.BranchName">
            <summary>
            Gets and sets the property BranchName. 
            <para>
            The name of the branch for which you want to retrieve information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetBranchRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the branch for which you want to retrieve
            information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetBranchResponse">
            <summary>
            Represents the output of a get branch operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetBranchResponse.Branch">
            <summary>
            Gets and sets the property Branch. 
            <para>
            The name of the branch.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentReactionsRequest">
            <summary>
            Container for the parameters to the GetCommentReactions operation.
            Returns information about reactions to a specified comment ID. Reactions from users
            who have been deleted will not be included in the count.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentReactionsRequest.CommentId">
            <summary>
            Gets and sets the property CommentId. 
            <para>
            The ID of the comment for which you want to get reactions information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentReactionsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            A non-zero, non-negative integer used to limit the number of returned results. The
            default is the same as the allowed maximum, 1,000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentReactionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentReactionsRequest.ReactionUserArn">
            <summary>
            Gets and sets the property ReactionUserArn. 
            <para>
            Optional. The Amazon Resource Name (ARN) of the user or identity for which you want
            to get reaction information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentReactionsResponse">
            <summary>
            This is the response object from the GetCommentReactions operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentReactionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that can be used in a request to return the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentReactionsResponse.ReactionsForComment">
            <summary>
            Gets and sets the property ReactionsForComment. 
            <para>
            An array of reactions to the specified comment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentRequest">
            <summary>
            Container for the parameters to the GetComment operation.
            Returns the content of a comment made on a change, file, or commit in a repository.
            
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentRequest.CommentId">
            <summary>
            Gets and sets the property CommentId. 
            <para>
            The unique, system-generated ID of the comment. To get this ID, use <a>GetCommentsForComparedCommit</a>
            or <a>GetCommentsForPullRequest</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentResponse">
            <summary>
            This is the response object from the GetComment operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentResponse.Comment">
            <summary>
            Gets and sets the property Comment. 
            <para>
            The contents of the comment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest">
            <summary>
            Container for the parameters to the GetCommentsForComparedCommit operation.
            Returns information about comments made on the comparison between two commits.
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest.AfterCommitId">
            <summary>
            Gets and sets the property AfterCommitId. 
            <para>
            To establish the directionality of the comparison, the full commit ID of the after
            commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest.BeforeCommitId">
            <summary>
            Gets and sets the property BeforeCommitId. 
            <para>
            To establish the directionality of the comparison, the full commit ID of the before
            commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            A non-zero, non-negative integer used to limit the number of returned results. The
            default is 100 comments, but you can configure up to 500.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that when provided in a request, returns the next batch of the
            results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to compare commits.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentsForComparedCommitResponse">
            <summary>
            This is the response object from the GetCommentsForComparedCommit operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForComparedCommitResponse.CommentsForComparedCommitData">
            <summary>
            Gets and sets the property CommentsForComparedCommitData. 
            <para>
            A list of comment objects on the compared commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForComparedCommitResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that can be used in a request to return the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest">
            <summary>
            Container for the parameters to the GetCommentsForPullRequest operation.
            Returns comments made on a pull request.
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest.AfterCommitId">
            <summary>
            Gets and sets the property AfterCommitId. 
            <para>
            The full commit ID of the commit in the source branch that was the tip of the branch
            at the time the comment was made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest.BeforeCommitId">
            <summary>
            Gets and sets the property BeforeCommitId. 
            <para>
            The full commit ID of the commit in the destination branch that was the tip of the
            branch at the time the pull request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            A non-zero, non-negative integer used to limit the number of returned results. The
            default is 100 comments. You can return up to 500 comments with a single request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentsForPullRequestResponse">
            <summary>
            This is the response object from the GetCommentsForPullRequest operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForPullRequestResponse.CommentsForPullRequestData">
            <summary>
            Gets and sets the property CommentsForPullRequestData. 
            <para>
            An array of comment objects on the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForPullRequestResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that can be used in a request to return the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommitRequest">
            <summary>
            Container for the parameters to the GetCommit operation.
            Returns information about a commit, including commit message and committer information.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommitRequest.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The commit ID. Commit IDs are the full SHA ID of the commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommitRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to which the commit was made.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommitResponse">
            <summary>
            Represents the output of a get commit operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommitResponse.Commit">
            <summary>
            Gets and sets the property Commit. 
            <para>
            A commit data type object that contains information about the specified commit.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetDifferencesRequest">
            <summary>
            Container for the parameters to the GetDifferences operation.
            Returns information about the differences in a valid commit specifier (such as a branch,
            tag, HEAD, commit ID, or other fully qualified reference). Results can be limited
            to a specified path.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetDifferencesRequest.AfterCommitSpecifier">
            <summary>
            Gets and sets the property AfterCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetDifferencesRequest.AfterPath">
            <summary>
            Gets and sets the property AfterPath. 
            <para>
            The file path in which to check differences. Limits the results to this path. Can
            also be used to specify the changed name of a directory or folder, if it has changed.
            If not specified, differences are shown for all paths.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetDifferencesRequest.BeforeCommitSpecifier">
            <summary>
            Gets and sets the property BeforeCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, the full commit ID). Optional. If not specified, all changes before
            the <code>afterCommitSpecifier</code> value are shown. If you do not use <code>beforeCommitSpecifier</code>
            in your request, consider limiting the results with <code>maxResults</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetDifferencesRequest.BeforePath">
            <summary>
            Gets and sets the property BeforePath. 
            <para>
            The file path in which to check for differences. Limits the results to this path.
            Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code>
            and <code>afterPath</code> are not specified, differences are shown for all paths.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetDifferencesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            A non-zero, non-negative integer used to limit the number of returned results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetDifferencesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetDifferencesRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to get differences.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetDifferencesResponse">
            <summary>
            This is the response object from the GetDifferences operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetDifferencesResponse.Differences">
            <summary>
            Gets and sets the property Differences. 
            <para>
            A data type object that contains information about the differences, including whether
            the difference is added, modified, or deleted (A, D, M).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetDifferencesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that can be used in a request to return the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetFileRequest">
            <summary>
            Container for the parameters to the GetFile operation.
            Returns the base-64 encoded contents of a specified file and its metadata.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFileRequest.CommitSpecifier">
            <summary>
            Gets and sets the property CommitSpecifier. 
            <para>
            The fully quaified reference that identifies the commit that contains the file. For
            example, you can specify a full commit ID, a tag, a branch name, or a reference such
            as refs/heads/master. If none is provided, the head commit is used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFileRequest.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The fully qualified path to the file, including the full name and extension of the
            file. For example, /examples/file.md is the fully qualified path to a file named file.md
            in a folder named examples.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFileRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetFileResponse">
            <summary>
            This is the response object from the GetFile operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFileResponse.BlobId">
            <summary>
            Gets and sets the property BlobId. 
            <para>
            The blob ID of the object that represents the file content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFileResponse.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The full commit ID of the commit that contains the content returned by GetFile.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFileResponse.FileContent">
            <summary>
            Gets and sets the property FileContent. 
            <para>
            The base-64 encoded binary data object that represents the content of the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFileResponse.FileMode">
            <summary>
            Gets and sets the property FileMode. 
            <para>
            The extrapolated file mode permissions of the blob. Valid values include strings such
            as EXECUTABLE and not numeric values.
            </para>
             <note> 
            <para>
            The file mode permissions returned by this API are not the standard file mode permission
            values, such as 100644, but rather extrapolated values. See the supported return values.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFileResponse.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The fully qualified path to the specified file. Returns the name and extension of
            the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFileResponse.FileSize">
            <summary>
            Gets and sets the property FileSize. 
            <para>
            The size of the contents of the file, in bytes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetFolderRequest">
            <summary>
            Container for the parameters to the GetFolder operation.
            Returns the contents of a specified folder in a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFolderRequest.CommitSpecifier">
            <summary>
            Gets and sets the property CommitSpecifier. 
            <para>
            A fully qualified reference used to identify a commit that contains the version of
            the folder's content to return. A fully qualified reference can be a commit ID, branch
            name, tag, or reference such as HEAD. If no specifier is provided, the folder content
            is returned as it exists in the HEAD commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFolderRequest.FolderPath">
            <summary>
            Gets and sets the property FolderPath. 
            <para>
            The fully qualified path to the folder whose contents are returned, including the
            folder name. For example, /examples is a fully-qualified path to a folder named examples
            that was created off of the root directory (/) of a repository. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFolderRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetFolderResponse">
            <summary>
            This is the response object from the GetFolder operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFolderResponse.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The full commit ID used as a reference for the returned version of the folder content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFolderResponse.Files">
            <summary>
            Gets and sets the property Files. 
            <para>
            The list of files in the specified folder, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFolderResponse.FolderPath">
            <summary>
            Gets and sets the property FolderPath. 
            <para>
            The fully qualified path of the folder whose contents are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFolderResponse.SubFolders">
            <summary>
            Gets and sets the property SubFolders. 
            <para>
            The list of folders that exist under the specified folder, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFolderResponse.SubModules">
            <summary>
            Gets and sets the property SubModules. 
            <para>
            The list of submodules in the specified folder, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFolderResponse.SymbolicLinks">
            <summary>
            Gets and sets the property SymbolicLinks. 
            <para>
            The list of symbolic links to other files and folders in the specified folder, if
            any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetFolderResponse.TreeId">
            <summary>
            Gets and sets the property TreeId. 
            <para>
            The full SHA-1 pointer of the tree information for the commit that contains the folder.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetMergeCommitRequest">
            <summary>
            Container for the parameters to the GetMergeCommit operation.
            Returns information about a specified merge commit.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeCommitRequest.ConflictDetailLevel">
            <summary>
            Gets and sets the property ConflictDetailLevel. 
            <para>
            The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeCommitRequest.ConflictResolutionStrategy">
            <summary>
            Gets and sets the property ConflictResolutionStrategy. 
            <para>
            Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeCommitRequest.DestinationCommitSpecifier">
            <summary>
            Gets and sets the property DestinationCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeCommitRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the merge commit about which you want to
            get information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeCommitRequest.SourceCommitSpecifier">
            <summary>
            Gets and sets the property SourceCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetMergeCommitResponse">
            <summary>
            This is the response object from the GetMergeCommit operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeCommitResponse.BaseCommitId">
            <summary>
            Gets and sets the property BaseCommitId. 
            <para>
            The commit ID of the merge base.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeCommitResponse.DestinationCommitId">
            <summary>
            Gets and sets the property DestinationCommitId. 
            <para>
            The commit ID of the destination commit specifier that was used in the merge evaluation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeCommitResponse.MergedCommitId">
            <summary>
            Gets and sets the property MergedCommitId. 
            <para>
            The commit ID for the merge commit created when the source branch was merged into
            the destination branch. If the fast-forward merge strategy was used, there is no merge
            commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeCommitResponse.SourceCommitId">
            <summary>
            Gets and sets the property SourceCommitId. 
            <para>
            The commit ID of the source commit specifier that was used in the merge evaluation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetMergeConflictsRequest">
            <summary>
            Container for the parameters to the GetMergeConflicts operation.
            Returns information about merge conflicts between the before and after commit IDs
            for a pull request in a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsRequest.ConflictDetailLevel">
            <summary>
            Gets and sets the property ConflictDetailLevel. 
            <para>
            The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsRequest.ConflictResolutionStrategy">
            <summary>
            Gets and sets the property ConflictResolutionStrategy. 
            <para>
            Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsRequest.DestinationCommitSpecifier">
            <summary>
            Gets and sets the property DestinationCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsRequest.MaxConflictFiles">
            <summary>
            Gets and sets the property MaxConflictFiles. 
            <para>
            The maximum number of files to include in the output.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsRequest.MergeOption">
            <summary>
            Gets and sets the property MergeOption. 
            <para>
            The merge option or strategy you want to use to merge the code. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where the pull request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsRequest.SourceCommitSpecifier">
            <summary>
            Gets and sets the property SourceCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetMergeConflictsResponse">
            <summary>
            This is the response object from the GetMergeConflicts operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsResponse.BaseCommitId">
            <summary>
            Gets and sets the property BaseCommitId. 
            <para>
            The commit ID of the merge base.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsResponse.ConflictMetadataList">
            <summary>
            Gets and sets the property ConflictMetadataList. 
            <para>
            A list of metadata for any conflicting files. If the specified merge strategy is FAST_FORWARD_MERGE,
            this list is always empty.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsResponse.DestinationCommitId">
            <summary>
            Gets and sets the property DestinationCommitId. 
            <para>
            The commit ID of the destination commit specifier that was used in the merge evaluation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsResponse.Mergeable">
            <summary>
            Gets and sets the property Mergeable. 
            <para>
            A Boolean value that indicates whether the code is mergeable by the specified merge
            option.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that can be used in a request to return the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsResponse.SourceCommitId">
            <summary>
            Gets and sets the property SourceCommitId. 
            <para>
            The commit ID of the source commit specifier that was used in the merge evaluation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetMergeOptionsRequest">
            <summary>
            Container for the parameters to the GetMergeOptions operation.
            Returns information about the merge options available for merging two specified branches.
            For details about why a merge option is not available, use GetMergeConflicts or DescribeMergeConflicts.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeOptionsRequest.ConflictDetailLevel">
            <summary>
            Gets and sets the property ConflictDetailLevel. 
            <para>
            The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeOptionsRequest.ConflictResolutionStrategy">
            <summary>
            Gets and sets the property ConflictResolutionStrategy. 
            <para>
            Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeOptionsRequest.DestinationCommitSpecifier">
            <summary>
            Gets and sets the property DestinationCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeOptionsRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the commits about which you want to get merge
            options.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeOptionsRequest.SourceCommitSpecifier">
            <summary>
            Gets and sets the property SourceCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetMergeOptionsResponse">
            <summary>
            This is the response object from the GetMergeOptions operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeOptionsResponse.BaseCommitId">
            <summary>
            Gets and sets the property BaseCommitId. 
            <para>
            The commit ID of the merge base.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeOptionsResponse.DestinationCommitId">
            <summary>
            Gets and sets the property DestinationCommitId. 
            <para>
            The commit ID of the destination commit specifier that was used in the merge evaluation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeOptionsResponse.MergeOptions">
            <summary>
            Gets and sets the property MergeOptions. 
            <para>
            The merge option or strategy used to merge the code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeOptionsResponse.SourceCommitId">
            <summary>
            Gets and sets the property SourceCommitId. 
            <para>
            The commit ID of the source commit specifier that was used in the merge evaluation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetPullRequestApprovalStatesRequest">
            <summary>
            Container for the parameters to the GetPullRequestApprovalStates operation.
            Gets information about the approval states for a specified pull request. Approval
            states only apply to pull requests that have one or more approval rules applied to
            them.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetPullRequestApprovalStatesRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID for the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetPullRequestApprovalStatesRequest.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The system-generated ID for the pull request revision.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetPullRequestApprovalStatesResponse">
            <summary>
            This is the response object from the GetPullRequestApprovalStates operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetPullRequestApprovalStatesResponse.Approvals">
            <summary>
            Gets and sets the property Approvals. 
            <para>
            Information about users who have approved the pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetPullRequestOverrideStateRequest">
            <summary>
            Container for the parameters to the GetPullRequestOverrideState operation.
            Returns information about whether approval rules have been set aside (overridden)
            for a pull request, and if so, the Amazon Resource Name (ARN) of the user or identity
            that overrode the rules and their requirements for the pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetPullRequestOverrideStateRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The ID of the pull request for which you want to get information about whether approval
            rules have been set aside (overridden).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetPullRequestOverrideStateRequest.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The system-generated ID of the revision for the pull request. To retrieve the most
            recent revision ID, use <a>GetPullRequest</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetPullRequestOverrideStateResponse">
            <summary>
            This is the response object from the GetPullRequestOverrideState operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetPullRequestOverrideStateResponse.Overridden">
            <summary>
            Gets and sets the property Overridden. 
            <para>
            A Boolean value that indicates whether a pull request has had its rules set aside
            (TRUE) or whether all approval rules still apply (FALSE).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetPullRequestOverrideStateResponse.Overrider">
            <summary>
            Gets and sets the property Overrider. 
            <para>
            The Amazon Resource Name (ARN) of the user or identity that overrode the rules and
            their requirements for the pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetPullRequestRequest">
            <summary>
            Container for the parameters to the GetPullRequest operation.
            Gets information about a pull request in a specified repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetPullRequestRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetPullRequestResponse">
            <summary>
            This is the response object from the GetPullRequest operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetPullRequestResponse.PullRequest">
            <summary>
            Gets and sets the property PullRequest. 
            <para>
            Information about the specified pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetRepositoryRequest">
            <summary>
            Container for the parameters to the GetRepository operation.
            Returns information about a repository.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetRepositoryRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to get information about.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetRepositoryResponse">
            <summary>
            Represents the output of a get repository operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetRepositoryResponse.RepositoryMetadata">
            <summary>
            Gets and sets the property RepositoryMetadata. 
            <para>
            Information about the repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetRepositoryTriggersRequest">
            <summary>
            Container for the parameters to the GetRepositoryTriggers operation.
            Gets information about triggers configured for a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetRepositoryTriggersRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository for which the trigger is configured.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetRepositoryTriggersResponse">
            <summary>
            Represents the output of a get repository triggers operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetRepositoryTriggersResponse.ConfigurationId">
            <summary>
            Gets and sets the property ConfigurationId. 
            <para>
            The system-generated unique ID for the trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetRepositoryTriggersResponse.Triggers">
            <summary>
            Gets and sets the property Triggers. 
            <para>
            The JSON block of configuration information for each trigger.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            <summary>
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new IdempotencyParameterMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IdempotencyParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of IdempotencyParameterMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotencyParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotencyParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the IdempotencyParameterMismatchException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ActorDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ActorDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ActorDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ActorDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ActorDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleContentRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleContentRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleContentRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleEventMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleEventMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleEventMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#ApprovalRuleEventMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleEventMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleEventMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleNameAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleNameAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleNameAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleNameAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleNameAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleNameRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleNameRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleNameRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleOverriddenEventMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleOverriddenEventMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleOverriddenEventMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#ApprovalRuleOverriddenEventMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleOverriddenEventMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleOverriddenEventMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateContentRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleTemplateContentRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateContentRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleTemplateDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateInUseExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleTemplateInUseException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateInUseExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateInUseExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateNameAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleTemplateNameAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateNameAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateNameAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateNameAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateNameRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleTemplateNameRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateNameRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRuleTemplate Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#ApprovalRuleTemplate,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleTemplateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalRule Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#ApprovalRule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalRuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalStateChangedEventMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalStateChangedEventMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalStateChangedEventMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#ApprovalStateChangedEventMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalStateChangedEventMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalStateChangedEventMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalStateRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ApprovalStateRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalStateRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalStateRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalStateRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalUnmarshaller">
            <summary>
            Response Unmarshaller for Approval Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#Approval,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ApprovalUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AssociateApprovalRuleTemplateWithRepositoryRequestMarshaller">
            <summary>
            AssociateApprovalRuleTemplateWithRepository Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AssociateApprovalRuleTemplateWithRepositoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AssociateApprovalRuleTemplateWithRepositoryRequestMarshaller.Marshall(Amazon.CodeCommit.Model.AssociateApprovalRuleTemplateWithRepositoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AssociateApprovalRuleTemplateWithRepositoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AssociateApprovalRuleTemplateWithRepositoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateApprovalRuleTemplateWithRepository operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AssociateApprovalRuleTemplateWithRepositoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AssociateApprovalRuleTemplateWithRepositoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AssociateApprovalRuleTemplateWithRepositoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AuthorDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for AuthorDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AuthorDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AuthorDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.AuthorDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesErrorUnmarshaller">
            <summary>
            Response Unmarshaller for BatchAssociateApprovalRuleTemplateWithRepositoriesError Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesErrorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#BatchAssociateApprovalRuleTemplateWithRepositoriesError,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesRequestMarshaller">
            <summary>
            BatchAssociateApprovalRuleTemplateWithRepositories Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesRequestMarshaller.Marshall(Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchAssociateApprovalRuleTemplateWithRepositories operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchAssociateApprovalRuleTemplateWithRepositoriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsErrorUnmarshaller">
            <summary>
            Response Unmarshaller for BatchDescribeMergeConflictsError Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsErrorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#BatchDescribeMergeConflictsError,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsRequestMarshaller">
            <summary>
            BatchDescribeMergeConflicts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsRequestMarshaller.Marshall(Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchDescribeMergeConflicts operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDescribeMergeConflictsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesErrorUnmarshaller">
            <summary>
            Response Unmarshaller for BatchDisassociateApprovalRuleTemplateFromRepositoriesError Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesErrorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#BatchDisassociateApprovalRuleTemplateFromRepositoriesError,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequestMarshaller">
            <summary>
            BatchDisassociateApprovalRuleTemplateFromRepositories Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequestMarshaller.Marshall(Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchDisassociateApprovalRuleTemplateFromRepositories operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsErrorUnmarshaller">
            <summary>
            Response Unmarshaller for BatchGetCommitsError Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsErrorUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#BatchGetCommitsError,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsErrorUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsErrorUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsRequestMarshaller">
            <summary>
            BatchGetCommits Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsRequestMarshaller.Marshall(Amazon.CodeCommit.Model.BatchGetCommitsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchGetCommits operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetCommitsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetRepositoriesRequestMarshaller">
            <summary>
            BatchGetRepositories Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetRepositoriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetRepositoriesRequestMarshaller.Marshall(Amazon.CodeCommit.Model.BatchGetRepositoriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetRepositoriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetRepositoriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for BatchGetRepositories operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetRepositoriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetRepositoriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BatchGetRepositoriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BeforeCommitIdAndAfterCommitIdAreSameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BeforeCommitIdAndAfterCommitIdAreSameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BeforeCommitIdAndAfterCommitIdAreSameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BeforeCommitIdAndAfterCommitIdAreSameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BeforeCommitIdAndAfterCommitIdAreSameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobIdDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BlobIdDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobIdDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobIdDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobIdDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobIdRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BlobIdRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobIdRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for BlobMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#BlobMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BlobMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BranchDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchInfoUnmarshaller">
            <summary>
            Response Unmarshaller for BranchInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#BranchInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BranchNameExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameIsTagNameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BranchNameIsTagNameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameIsTagNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameIsTagNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameIsTagNameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for BranchNameRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.BranchNameRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CannotDeleteApprovalRuleFromTemplateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CannotDeleteApprovalRuleFromTemplateException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CannotDeleteApprovalRuleFromTemplateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CannotDeleteApprovalRuleFromTemplateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CannotDeleteApprovalRuleFromTemplateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CannotModifyApprovalRuleFromTemplateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CannotModifyApprovalRuleFromTemplateException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CannotModifyApprovalRuleFromTemplateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CannotModifyApprovalRuleFromTemplateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CannotModifyApprovalRuleFromTemplateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ClientRequestTokenRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClientRequestTokenRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ClientRequestTokenRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ClientRequestTokenRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ClientRequestTokenRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentContentRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommentContentRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentContentRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentContentSizeLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommentContentSizeLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentContentSizeLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentContentSizeLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentContentSizeLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentDeletedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommentDeletedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentDeletedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentDeletedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentDeletedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommentDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentIdRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommentIdRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentIdRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentNotCreatedByCallerExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommentNotCreatedByCallerException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentNotCreatedByCallerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentNotCreatedByCallerExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentNotCreatedByCallerExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentsForComparedCommitUnmarshaller">
            <summary>
            Response Unmarshaller for CommentsForComparedCommit Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentsForComparedCommitUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#CommentsForComparedCommit,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentsForComparedCommitUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentsForComparedCommitUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentsForPullRequestUnmarshaller">
            <summary>
            Response Unmarshaller for CommentsForPullRequest Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentsForPullRequestUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#CommentsForPullRequest,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentsForPullRequestUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentsForPullRequestUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentUnmarshaller">
            <summary>
            Response Unmarshaller for Comment Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#Comment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommitDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommitIdDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommitIdRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdsLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommitIdsLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdsLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdsLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdsLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdsListRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommitIdsListRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdsListRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdsListRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitIdsListRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitMessageLengthExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommitMessageLengthExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitMessageLengthExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitMessageLengthExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitMessageLengthExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for CommitRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitUnmarshaller">
            <summary>
            Response Unmarshaller for Commit Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#Commit,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CommitUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConcurrentReferenceUpdateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConcurrentReferenceUpdateException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConcurrentReferenceUpdateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConcurrentReferenceUpdateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConcurrentReferenceUpdateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for ConflictMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#ConflictMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictResolutionMarshaller">
            <summary>
            ConflictResolution Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictResolutionMarshaller.Marshall(Amazon.CodeCommit.Model.ConflictResolution,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictResolutionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictUnmarshaller">
            <summary>
            Response Unmarshaller for Conflict Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#Conflict,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ConflictUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateApprovalRuleTemplateRequestMarshaller">
            <summary>
            CreateApprovalRuleTemplate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateApprovalRuleTemplateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateApprovalRuleTemplateRequestMarshaller.Marshall(Amazon.CodeCommit.Model.CreateApprovalRuleTemplateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateApprovalRuleTemplateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateApprovalRuleTemplateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateApprovalRuleTemplate operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateApprovalRuleTemplateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateApprovalRuleTemplateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateApprovalRuleTemplateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateBranchRequestMarshaller">
            <summary>
            CreateBranch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateBranchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateBranchRequestMarshaller.Marshall(Amazon.CodeCommit.Model.CreateBranchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateBranchRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateBranchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateBranch operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateBranchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateBranchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateBranchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateCommitRequestMarshaller">
            <summary>
            CreateCommit Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateCommitRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateCommitRequestMarshaller.Marshall(Amazon.CodeCommit.Model.CreateCommitRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateCommitRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateCommitResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCommit operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateCommitResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateCommitResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateCommitResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestApprovalRuleRequestMarshaller">
            <summary>
            CreatePullRequestApprovalRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestApprovalRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestApprovalRuleRequestMarshaller.Marshall(Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestApprovalRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestApprovalRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePullRequestApprovalRule operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestApprovalRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestApprovalRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestApprovalRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestRequestMarshaller">
            <summary>
            CreatePullRequest Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestRequestMarshaller.Marshall(Amazon.CodeCommit.Model.CreatePullRequestRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePullRequest operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreatePullRequestResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateRepositoryRequestMarshaller">
            <summary>
            CreateRepository Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateRepositoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateRepositoryRequestMarshaller.Marshall(Amazon.CodeCommit.Model.CreateRepositoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateRepositoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateRepositoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateRepository operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateRepositoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateRepositoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateRepositoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateUnreferencedMergeCommitRequestMarshaller">
            <summary>
            CreateUnreferencedMergeCommit Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateUnreferencedMergeCommitRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateUnreferencedMergeCommitRequestMarshaller.Marshall(Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateUnreferencedMergeCommitRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateUnreferencedMergeCommitResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUnreferencedMergeCommit operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateUnreferencedMergeCommitResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateUnreferencedMergeCommitResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.CreateUnreferencedMergeCommitResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DefaultBranchCannotBeDeletedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DefaultBranchCannotBeDeletedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DefaultBranchCannotBeDeletedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DefaultBranchCannotBeDeletedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DefaultBranchCannotBeDeletedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteApprovalRuleTemplateRequestMarshaller">
            <summary>
            DeleteApprovalRuleTemplate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteApprovalRuleTemplateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteApprovalRuleTemplateRequestMarshaller.Marshall(Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteApprovalRuleTemplateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteApprovalRuleTemplateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteApprovalRuleTemplate operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteApprovalRuleTemplateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteApprovalRuleTemplateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteApprovalRuleTemplateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteBranchRequestMarshaller">
            <summary>
            DeleteBranch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteBranchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteBranchRequestMarshaller.Marshall(Amazon.CodeCommit.Model.DeleteBranchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteBranchRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteBranchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBranch operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteBranchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteBranchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteBranchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteCommentContentRequestMarshaller">
            <summary>
            DeleteCommentContent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteCommentContentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteCommentContentRequestMarshaller.Marshall(Amazon.CodeCommit.Model.DeleteCommentContentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteCommentContentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteCommentContentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCommentContent operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteCommentContentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteCommentContentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteCommentContentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileEntryMarshaller">
            <summary>
            DeleteFileEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileEntryMarshaller.Marshall(Amazon.CodeCommit.Model.DeleteFileEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileRequestMarshaller">
            <summary>
            DeleteFile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileRequestMarshaller.Marshall(Amazon.CodeCommit.Model.DeleteFileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteFile operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteFileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeletePullRequestApprovalRuleRequestMarshaller">
            <summary>
            DeletePullRequestApprovalRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeletePullRequestApprovalRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeletePullRequestApprovalRuleRequestMarshaller.Marshall(Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeletePullRequestApprovalRuleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeletePullRequestApprovalRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePullRequestApprovalRule operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeletePullRequestApprovalRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeletePullRequestApprovalRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeletePullRequestApprovalRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteRepositoryRequestMarshaller">
            <summary>
            DeleteRepository Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteRepositoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteRepositoryRequestMarshaller.Marshall(Amazon.CodeCommit.Model.DeleteRepositoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteRepositoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteRepositoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRepository operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteRepositoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteRepositoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DeleteRepositoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribeMergeConflictsRequestMarshaller">
            <summary>
            DescribeMergeConflicts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribeMergeConflictsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribeMergeConflictsRequestMarshaller.Marshall(Amazon.CodeCommit.Model.DescribeMergeConflictsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribeMergeConflictsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribeMergeConflictsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMergeConflicts operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribeMergeConflictsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribeMergeConflictsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribeMergeConflictsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribePullRequestEventsRequestMarshaller">
            <summary>
            DescribePullRequestEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribePullRequestEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribePullRequestEventsRequestMarshaller.Marshall(Amazon.CodeCommit.Model.DescribePullRequestEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribePullRequestEventsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribePullRequestEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribePullRequestEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribePullRequestEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribePullRequestEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DescribePullRequestEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DifferenceUnmarshaller">
            <summary>
            Response Unmarshaller for Difference Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DifferenceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#Difference,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DifferenceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DifferenceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DirectoryNameConflictsWithFileNameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DirectoryNameConflictsWithFileNameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DirectoryNameConflictsWithFileNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DirectoryNameConflictsWithFileNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DirectoryNameConflictsWithFileNameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DisassociateApprovalRuleTemplateFromRepositoryRequestMarshaller">
            <summary>
            DisassociateApprovalRuleTemplateFromRepository Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DisassociateApprovalRuleTemplateFromRepositoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DisassociateApprovalRuleTemplateFromRepositoryRequestMarshaller.Marshall(Amazon.CodeCommit.Model.DisassociateApprovalRuleTemplateFromRepositoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DisassociateApprovalRuleTemplateFromRepositoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DisassociateApprovalRuleTemplateFromRepositoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateApprovalRuleTemplateFromRepository operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DisassociateApprovalRuleTemplateFromRepositoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DisassociateApprovalRuleTemplateFromRepositoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.DisassociateApprovalRuleTemplateFromRepositoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionIntegrityChecksFailedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionIntegrityChecksFailedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionIntegrityChecksFailedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionIntegrityChecksFailedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionIntegrityChecksFailedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyAccessDeniedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionKeyAccessDeniedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyAccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyAccessDeniedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyAccessDeniedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyDisabledExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionKeyDisabledException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyDisabledExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyDisabledExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyDisabledExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionKeyNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyUnavailableExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for EncryptionKeyUnavailableException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyUnavailableExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EncryptionKeyUnavailableExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluatePullRequestApprovalRulesRequestMarshaller">
            <summary>
            EvaluatePullRequestApprovalRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluatePullRequestApprovalRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluatePullRequestApprovalRulesRequestMarshaller.Marshall(Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluatePullRequestApprovalRulesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluatePullRequestApprovalRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EvaluatePullRequestApprovalRules operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluatePullRequestApprovalRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluatePullRequestApprovalRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluatePullRequestApprovalRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluationUnmarshaller">
            <summary>
            Response Unmarshaller for Evaluation Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#Evaluation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.EvaluationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentAndSourceFileSpecifiedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FileContentAndSourceFileSpecifiedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentAndSourceFileSpecifiedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentAndSourceFileSpecifiedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentAndSourceFileSpecifiedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FileContentRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentSizeLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FileContentSizeLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentSizeLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentSizeLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileContentSizeLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FileDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileEntryRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FileEntryRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileEntryRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileEntryRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileEntryRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for FileMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#FileMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileModeRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FileModeRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileModeRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileModeRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileModeRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileModesUnmarshaller">
            <summary>
            Response Unmarshaller for FileModes Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileModesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#FileModes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileModesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileModesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileNameConflictsWithDirectoryNameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FileNameConflictsWithDirectoryNameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileNameConflictsWithDirectoryNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileNameConflictsWithDirectoryNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileNameConflictsWithDirectoryNameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FilePathConflictsWithSubmodulePathExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FilePathConflictsWithSubmodulePathException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FilePathConflictsWithSubmodulePathExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FilePathConflictsWithSubmodulePathExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FilePathConflictsWithSubmodulePathExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileSizesUnmarshaller">
            <summary>
            Response Unmarshaller for FileSizes Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileSizesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#FileSizes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileSizesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileSizesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileTooLargeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FileTooLargeException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileTooLargeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileTooLargeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileTooLargeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileUnmarshaller">
            <summary>
            Response Unmarshaller for File Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#File,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderContentSizeLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FolderContentSizeLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderContentSizeLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderContentSizeLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderContentSizeLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for FolderDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderUnmarshaller">
            <summary>
            Response Unmarshaller for Folder Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#Folder,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.FolderUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetApprovalRuleTemplateRequestMarshaller">
            <summary>
            GetApprovalRuleTemplate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetApprovalRuleTemplateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetApprovalRuleTemplateRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetApprovalRuleTemplateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetApprovalRuleTemplateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetApprovalRuleTemplateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetApprovalRuleTemplate operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetApprovalRuleTemplateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetApprovalRuleTemplateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetApprovalRuleTemplateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBlobRequestMarshaller">
            <summary>
            GetBlob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBlobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBlobRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetBlobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBlobRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBlobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBlob operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBlobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBlobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBlobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBranchRequestMarshaller">
            <summary>
            GetBranch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBranchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBranchRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetBranchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBranchRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBranchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBranch operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBranchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBranchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetBranchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentReactionsRequestMarshaller">
            <summary>
            GetCommentReactions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentReactionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentReactionsRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetCommentReactionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentReactionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentReactionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCommentReactions operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentReactionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentReactionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentReactionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentRequestMarshaller">
            <summary>
            GetComment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetCommentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetComment operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForComparedCommitRequestMarshaller">
            <summary>
            GetCommentsForComparedCommit Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForComparedCommitRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForComparedCommitRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForComparedCommitRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForComparedCommitResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCommentsForComparedCommit operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForComparedCommitResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForComparedCommitResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForComparedCommitResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForPullRequestRequestMarshaller">
            <summary>
            GetCommentsForPullRequest Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForPullRequestRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForPullRequestRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForPullRequestRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForPullRequestResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCommentsForPullRequest operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForPullRequestResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForPullRequestResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommentsForPullRequestResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommitRequestMarshaller">
            <summary>
            GetCommit Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommitRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommitRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetCommitRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommitRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommitResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetCommit operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommitResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommitResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetCommitResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetDifferencesRequestMarshaller">
            <summary>
            GetDifferences Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetDifferencesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetDifferencesRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetDifferencesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetDifferencesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetDifferencesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDifferences operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetDifferencesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetDifferencesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetDifferencesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFileRequestMarshaller">
            <summary>
            GetFile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFileRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetFileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetFile operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFolderRequestMarshaller">
            <summary>
            GetFolder Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFolderRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFolderRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetFolderRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFolderRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFolderResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetFolder operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFolderResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFolderResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetFolderResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeCommitRequestMarshaller">
            <summary>
            GetMergeCommit Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeCommitRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeCommitRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetMergeCommitRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeCommitRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeCommitResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMergeCommit operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeCommitResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeCommitResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeCommitResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeConflictsRequestMarshaller">
            <summary>
            GetMergeConflicts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeConflictsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeConflictsRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetMergeConflictsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeConflictsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeConflictsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMergeConflicts operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeConflictsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeConflictsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeConflictsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeOptionsRequestMarshaller">
            <summary>
            GetMergeOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeOptionsRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetMergeOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeOptionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMergeOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetMergeOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestApprovalStatesRequestMarshaller">
            <summary>
            GetPullRequestApprovalStates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestApprovalStatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestApprovalStatesRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetPullRequestApprovalStatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestApprovalStatesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestApprovalStatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPullRequestApprovalStates operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestApprovalStatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestApprovalStatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestApprovalStatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestOverrideStateRequestMarshaller">
            <summary>
            GetPullRequestOverrideState Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestOverrideStateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestOverrideStateRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetPullRequestOverrideStateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestOverrideStateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestOverrideStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPullRequestOverrideState operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestOverrideStateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestOverrideStateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestOverrideStateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestRequestMarshaller">
            <summary>
            GetPullRequest Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetPullRequestRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPullRequest operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetPullRequestResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryRequestMarshaller">
            <summary>
            GetRepository Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetRepositoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetRepository operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryTriggersRequestMarshaller">
            <summary>
            GetRepositoryTriggers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryTriggersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryTriggersRequestMarshaller.Marshall(Amazon.CodeCommit.Model.GetRepositoryTriggersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryTriggersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryTriggersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetRepositoryTriggers operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryTriggersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryTriggersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.GetRepositoryTriggersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.IdempotencyParameterMismatchExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for IdempotencyParameterMismatchException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.IdempotencyParameterMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.IdempotencyParameterMismatchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.IdempotencyParameterMismatchExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidActorArnExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidActorArnException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidActorArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidActorArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidActorArnExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleContentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidApprovalRuleContentException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleContentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleContentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleContentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleNameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidApprovalRuleNameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleNameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateContentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidApprovalRuleTemplateContentException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateContentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateContentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateContentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateDescriptionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidApprovalRuleTemplateDescriptionException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateDescriptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateDescriptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateDescriptionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateNameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidApprovalRuleTemplateNameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalRuleTemplateNameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalStateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidApprovalStateException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalStateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidApprovalStateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidAuthorArnExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidAuthorArnException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidAuthorArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidAuthorArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidAuthorArnExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidBlobIdExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidBlobIdException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidBlobIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidBlobIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidBlobIdExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidBranchNameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidBranchNameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidBranchNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidBranchNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidBranchNameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidClientRequestTokenExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidClientRequestTokenException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidClientRequestTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidClientRequestTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidClientRequestTokenExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommentIdExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidCommentIdException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommentIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommentIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommentIdExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommitExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidCommitException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommitExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommitExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommitExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommitIdExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidCommitIdException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommitIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommitIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidCommitIdExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictDetailLevelExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidConflictDetailLevelException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictDetailLevelExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictDetailLevelExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictDetailLevelExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictResolutionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidConflictResolutionException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictResolutionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictResolutionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictResolutionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictResolutionStrategyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidConflictResolutionStrategyException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictResolutionStrategyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictResolutionStrategyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidConflictResolutionStrategyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidContinuationTokenExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidContinuationTokenException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidContinuationTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidContinuationTokenExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidContinuationTokenExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDeletionParameterExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDeletionParameterException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDeletionParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDeletionParameterExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDeletionParameterExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDescriptionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDescriptionException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDescriptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDescriptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDescriptionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDestinationCommitSpecifierExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidDestinationCommitSpecifierException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDestinationCommitSpecifierExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDestinationCommitSpecifierExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidDestinationCommitSpecifierExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidEmailExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidEmailException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidEmailExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidEmailExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidEmailExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFileLocationExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidFileLocationException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFileLocationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFileLocationExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFileLocationExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFileModeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidFileModeException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFileModeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFileModeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFileModeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFilePositionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidFilePositionException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFilePositionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFilePositionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidFilePositionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxConflictFilesExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidMaxConflictFilesException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxConflictFilesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxConflictFilesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxConflictFilesExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxMergeHunksExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidMaxMergeHunksException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxMergeHunksExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxMergeHunksExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxMergeHunksExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxResultsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidMaxResultsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxResultsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxResultsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMaxResultsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMergeOptionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidMergeOptionException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMergeOptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMergeOptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidMergeOptionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidOrderExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidOrderException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidOrderExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidOrderExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidOrderExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidOverrideStatusExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidOverrideStatusException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidOverrideStatusExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidOverrideStatusExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidOverrideStatusExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidParentCommitIdExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidParentCommitIdException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidParentCommitIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidParentCommitIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidParentCommitIdExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPathExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidPathException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPathExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPathExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPathExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestEventTypeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidPullRequestEventTypeException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestEventTypeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestEventTypeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestEventTypeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestIdExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidPullRequestIdException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestIdExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestStatusExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidPullRequestStatusException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestStatusExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestStatusExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestStatusExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestStatusUpdateExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidPullRequestStatusUpdateException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestStatusUpdateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestStatusUpdateExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidPullRequestStatusUpdateExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReactionUserArnExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidReactionUserArnException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReactionUserArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReactionUserArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReactionUserArnExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReactionValueExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidReactionValueException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReactionValueExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReactionValueExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReactionValueExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReferenceNameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidReferenceNameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReferenceNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReferenceNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReferenceNameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRelativeFileVersionEnumExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRelativeFileVersionEnumException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRelativeFileVersionEnumExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRelativeFileVersionEnumExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRelativeFileVersionEnumExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReplacementContentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidReplacementContentException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReplacementContentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReplacementContentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReplacementContentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReplacementTypeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidReplacementTypeException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReplacementTypeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReplacementTypeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidReplacementTypeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryDescriptionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRepositoryDescriptionException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryDescriptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryDescriptionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryDescriptionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryNameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRepositoryNameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryNameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerBranchNameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRepositoryTriggerBranchNameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerBranchNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerBranchNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerBranchNameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerCustomDataExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRepositoryTriggerCustomDataException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerCustomDataExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerCustomDataExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerCustomDataExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerDestinationArnExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRepositoryTriggerDestinationArnException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerDestinationArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerDestinationArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerDestinationArnExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerEventsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRepositoryTriggerEventsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerEventsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerEventsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerEventsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerNameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRepositoryTriggerNameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerNameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerNameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerRegionExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRepositoryTriggerRegionException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerRegionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerRegionExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRepositoryTriggerRegionExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidResourceArnExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidResourceArnException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidResourceArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidResourceArnExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidResourceArnExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRevisionIdExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRevisionIdException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRevisionIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRevisionIdExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRevisionIdExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRuleContentSha256ExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidRuleContentSha256Exception Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRuleContentSha256ExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRuleContentSha256ExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidRuleContentSha256ExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSortByExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidSortByException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSortByExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSortByExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSortByExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSourceCommitSpecifierExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidSourceCommitSpecifierException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSourceCommitSpecifierExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSourceCommitSpecifierExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSourceCommitSpecifierExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSystemTagUsageExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidSystemTagUsageException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSystemTagUsageExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSystemTagUsageExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidSystemTagUsageExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTagKeysListExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidTagKeysListException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTagKeysListExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTagKeysListExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTagKeysListExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTagsMapExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidTagsMapException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTagsMapExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTagsMapExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTagsMapExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetBranchExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidTargetBranchException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetBranchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetBranchExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetBranchExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidTargetException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidTargetsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTargetsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTitleExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidTitleException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTitleExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTitleExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.InvalidTitleExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.IsBinaryFileUnmarshaller">
            <summary>
            Response Unmarshaller for IsBinaryFile Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.IsBinaryFileUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#IsBinaryFile,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.IsBinaryFileUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.IsBinaryFileUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListApprovalRuleTemplatesRequestMarshaller">
            <summary>
            ListApprovalRuleTemplates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListApprovalRuleTemplatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListApprovalRuleTemplatesRequestMarshaller.Marshall(Amazon.CodeCommit.Model.ListApprovalRuleTemplatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListApprovalRuleTemplatesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListApprovalRuleTemplatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListApprovalRuleTemplates operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListApprovalRuleTemplatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListApprovalRuleTemplatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListApprovalRuleTemplatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListAssociatedApprovalRuleTemplatesForRepositoryRequestMarshaller">
            <summary>
            ListAssociatedApprovalRuleTemplatesForRepository Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListAssociatedApprovalRuleTemplatesForRepositoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListAssociatedApprovalRuleTemplatesForRepositoryRequestMarshaller.Marshall(Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListAssociatedApprovalRuleTemplatesForRepositoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListAssociatedApprovalRuleTemplatesForRepositoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListAssociatedApprovalRuleTemplatesForRepository operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListAssociatedApprovalRuleTemplatesForRepositoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListAssociatedApprovalRuleTemplatesForRepositoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListAssociatedApprovalRuleTemplatesForRepositoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListBranchesRequestMarshaller">
            <summary>
            ListBranches Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListBranchesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListBranchesRequestMarshaller.Marshall(Amazon.CodeCommit.Model.ListBranchesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListBranchesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListBranchesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListBranches operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListBranchesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListBranchesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListBranchesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListPullRequestsRequestMarshaller">
            <summary>
            ListPullRequests Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListPullRequestsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListPullRequestsRequestMarshaller.Marshall(Amazon.CodeCommit.Model.ListPullRequestsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListPullRequestsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListPullRequestsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPullRequests operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListPullRequestsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListPullRequestsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListPullRequestsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesForApprovalRuleTemplateRequestMarshaller">
            <summary>
            ListRepositoriesForApprovalRuleTemplate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesForApprovalRuleTemplateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesForApprovalRuleTemplateRequestMarshaller.Marshall(Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesForApprovalRuleTemplateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesForApprovalRuleTemplateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListRepositoriesForApprovalRuleTemplate operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesForApprovalRuleTemplateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesForApprovalRuleTemplateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesForApprovalRuleTemplateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesRequestMarshaller">
            <summary>
            ListRepositories Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesRequestMarshaller.Marshall(Amazon.CodeCommit.Model.ListRepositoriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListRepositories operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListRepositoriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.CodeCommit.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.LocationMarshaller">
            <summary>
            Location Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.LocationMarshaller.Marshall(Amazon.CodeCommit.Model.Location,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CodeCommit.Model.Internal.MarshallTransformations.LocationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.LocationUnmarshaller">
            <summary>
            Response Unmarshaller for Location Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.LocationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#Location,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.LocationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.LocationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ManualMergeRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ManualMergeRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ManualMergeRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ManualMergeRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ManualMergeRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumBranchesExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MaximumBranchesExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumBranchesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumBranchesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumBranchesExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumConflictResolutionEntriesExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MaximumConflictResolutionEntriesExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumConflictResolutionEntriesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumConflictResolutionEntriesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumConflictResolutionEntriesExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumFileContentToLoadExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MaximumFileContentToLoadExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumFileContentToLoadExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumFileContentToLoadExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumFileContentToLoadExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumFileEntriesExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MaximumFileEntriesExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumFileEntriesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumFileEntriesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumFileEntriesExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumItemsToCompareExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MaximumItemsToCompareExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumItemsToCompareExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumItemsToCompareExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumItemsToCompareExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumNumberOfApprovalsExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MaximumNumberOfApprovalsExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumNumberOfApprovalsExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumNumberOfApprovalsExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumNumberOfApprovalsExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumOpenPullRequestsExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MaximumOpenPullRequestsExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumOpenPullRequestsExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumOpenPullRequestsExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumOpenPullRequestsExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRepositoryNamesExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MaximumRepositoryNamesExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRepositoryNamesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRepositoryNamesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRepositoryNamesExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRepositoryTriggersExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MaximumRepositoryTriggersExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRepositoryTriggersExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRepositoryTriggersExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRepositoryTriggersExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRuleTemplatesAssociatedWithRepositoryExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MaximumRuleTemplatesAssociatedWithRepositoryException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRuleTemplatesAssociatedWithRepositoryExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRuleTemplatesAssociatedWithRepositoryExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MaximumRuleTemplatesAssociatedWithRepositoryExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByFastForwardRequestMarshaller">
            <summary>
            MergeBranchesByFastForward Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByFastForwardRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByFastForwardRequestMarshaller.Marshall(Amazon.CodeCommit.Model.MergeBranchesByFastForwardRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByFastForwardRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByFastForwardResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MergeBranchesByFastForward operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByFastForwardResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByFastForwardResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByFastForwardResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesBySquashRequestMarshaller">
            <summary>
            MergeBranchesBySquash Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesBySquashRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesBySquashRequestMarshaller.Marshall(Amazon.CodeCommit.Model.MergeBranchesBySquashRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesBySquashRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesBySquashResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MergeBranchesBySquash operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesBySquashResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesBySquashResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesBySquashResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByThreeWayRequestMarshaller">
            <summary>
            MergeBranchesByThreeWay Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByThreeWayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByThreeWayRequestMarshaller.Marshall(Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByThreeWayRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByThreeWayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MergeBranchesByThreeWay operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByThreeWayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByThreeWayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeBranchesByThreeWayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeHunkDetailUnmarshaller">
            <summary>
            Response Unmarshaller for MergeHunkDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeHunkDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#MergeHunkDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeHunkDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeHunkDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeHunkUnmarshaller">
            <summary>
            Response Unmarshaller for MergeHunk Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeHunkUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#MergeHunk,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeHunkUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeHunkUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for MergeMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#MergeMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeOperationsUnmarshaller">
            <summary>
            Response Unmarshaller for MergeOperations Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeOperationsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#MergeOperations,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeOperationsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeOperationsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeOptionRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MergeOptionRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeOptionRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeOptionRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergeOptionRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByFastForwardRequestMarshaller">
            <summary>
            MergePullRequestByFastForward Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByFastForwardRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByFastForwardRequestMarshaller.Marshall(Amazon.CodeCommit.Model.MergePullRequestByFastForwardRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByFastForwardRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByFastForwardResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MergePullRequestByFastForward operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByFastForwardResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByFastForwardResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByFastForwardResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestBySquashRequestMarshaller">
            <summary>
            MergePullRequestBySquash Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestBySquashRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestBySquashRequestMarshaller.Marshall(Amazon.CodeCommit.Model.MergePullRequestBySquashRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestBySquashRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestBySquashResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MergePullRequestBySquash operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestBySquashResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestBySquashResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestBySquashResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByThreeWayRequestMarshaller">
            <summary>
            MergePullRequestByThreeWay Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByThreeWayRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByThreeWayRequestMarshaller.Marshall(Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByThreeWayRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByThreeWayResponseUnmarshaller">
            <summary>
            Response Unmarshaller for MergePullRequestByThreeWay operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByThreeWayResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByThreeWayResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MergePullRequestByThreeWayResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MultipleConflictResolutionEntriesExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MultipleConflictResolutionEntriesException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MultipleConflictResolutionEntriesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MultipleConflictResolutionEntriesExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MultipleConflictResolutionEntriesExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MultipleRepositoriesInPullRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for MultipleRepositoriesInPullRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MultipleRepositoriesInPullRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MultipleRepositoriesInPullRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.MultipleRepositoriesInPullRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NameLengthExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NameLengthExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NameLengthExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NameLengthExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NameLengthExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NoChangeExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NoChangeException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NoChangeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NoChangeExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NoChangeExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NumberOfRulesExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NumberOfRulesExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NumberOfRulesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NumberOfRulesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NumberOfRulesExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NumberOfRuleTemplatesExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NumberOfRuleTemplatesExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NumberOfRuleTemplatesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NumberOfRuleTemplatesExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.NumberOfRuleTemplatesExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ObjectTypesUnmarshaller">
            <summary>
            Response Unmarshaller for ObjectTypes Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ObjectTypesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#ObjectTypes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ObjectTypesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ObjectTypesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OriginApprovalRuleTemplateUnmarshaller">
            <summary>
            Response Unmarshaller for OriginApprovalRuleTemplate Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OriginApprovalRuleTemplateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#OriginApprovalRuleTemplate,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OriginApprovalRuleTemplateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OriginApprovalRuleTemplateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverrideAlreadySetExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for OverrideAlreadySetException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverrideAlreadySetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverrideAlreadySetExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverrideAlreadySetExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverridePullRequestApprovalRulesRequestMarshaller">
            <summary>
            OverridePullRequestApprovalRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverridePullRequestApprovalRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverridePullRequestApprovalRulesRequestMarshaller.Marshall(Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverridePullRequestApprovalRulesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverridePullRequestApprovalRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for OverridePullRequestApprovalRules operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverridePullRequestApprovalRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverridePullRequestApprovalRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverridePullRequestApprovalRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverrideStatusRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for OverrideStatusRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverrideStatusRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverrideStatusRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.OverrideStatusRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ParentCommitDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitIdOutdatedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ParentCommitIdOutdatedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitIdOutdatedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitIdOutdatedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitIdOutdatedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitIdRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ParentCommitIdRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ParentCommitIdRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PathDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PathDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PathDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PathDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PathDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PathRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PathRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PathRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PathRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PathRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForComparedCommitRequestMarshaller">
            <summary>
            PostCommentForComparedCommit Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForComparedCommitRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForComparedCommitRequestMarshaller.Marshall(Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForComparedCommitRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForComparedCommitResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PostCommentForComparedCommit operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForComparedCommitResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForComparedCommitResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForComparedCommitResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForPullRequestRequestMarshaller">
            <summary>
            PostCommentForPullRequest Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForPullRequestRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForPullRequestRequestMarshaller.Marshall(Amazon.CodeCommit.Model.PostCommentForPullRequestRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForPullRequestRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForPullRequestResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PostCommentForPullRequest operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForPullRequestResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForPullRequestResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentForPullRequestResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentReplyRequestMarshaller">
            <summary>
            PostCommentReply Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentReplyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentReplyRequestMarshaller.Marshall(Amazon.CodeCommit.Model.PostCommentReplyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentReplyRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentReplyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PostCommentReply operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentReplyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentReplyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PostCommentReplyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestAlreadyClosedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestAlreadyClosedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestAlreadyClosedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestAlreadyClosedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestAlreadyClosedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestApprovalRulesNotSatisfiedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestApprovalRulesNotSatisfiedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestApprovalRulesNotSatisfiedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestApprovalRulesNotSatisfiedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestApprovalRulesNotSatisfiedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestCannotBeApprovedByAuthorExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestCannotBeApprovedByAuthorException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestCannotBeApprovedByAuthorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestCannotBeApprovedByAuthorExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestCannotBeApprovedByAuthorExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestCreatedEventMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestCreatedEventMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestCreatedEventMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#PullRequestCreatedEventMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestCreatedEventMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestCreatedEventMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestEventUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#PullRequestEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestIdRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestIdRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestIdRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestMergedStateChangedEventMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestMergedStateChangedEventMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestMergedStateChangedEventMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#PullRequestMergedStateChangedEventMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestMergedStateChangedEventMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestMergedStateChangedEventMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestSourceReferenceUpdatedEventMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestSourceReferenceUpdatedEventMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestSourceReferenceUpdatedEventMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#PullRequestSourceReferenceUpdatedEventMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestSourceReferenceUpdatedEventMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestSourceReferenceUpdatedEventMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestStatusChangedEventMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestStatusChangedEventMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestStatusChangedEventMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#PullRequestStatusChangedEventMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestStatusChangedEventMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestStatusChangedEventMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestStatusRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestStatusRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestStatusRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestStatusRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestStatusRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestTargetUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequestTarget Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestTargetUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#PullRequestTarget,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestTargetUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestTargetUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestUnmarshaller">
            <summary>
            Response Unmarshaller for PullRequest Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#PullRequest,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PullRequestUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutCommentReactionRequestMarshaller">
            <summary>
            PutCommentReaction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutCommentReactionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutCommentReactionRequestMarshaller.Marshall(Amazon.CodeCommit.Model.PutCommentReactionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutCommentReactionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutCommentReactionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutCommentReaction operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutCommentReactionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutCommentReactionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutCommentReactionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileEntryConflictExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for PutFileEntryConflictException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileEntryConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileEntryConflictExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileEntryConflictExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileEntryMarshaller">
            <summary>
            PutFileEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileEntryMarshaller.Marshall(Amazon.CodeCommit.Model.PutFileEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileRequestMarshaller">
            <summary>
            PutFile Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileRequestMarshaller.Marshall(Amazon.CodeCommit.Model.PutFileRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutFile operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutFileResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutRepositoryTriggersRequestMarshaller">
            <summary>
            PutRepositoryTriggers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutRepositoryTriggersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutRepositoryTriggersRequestMarshaller.Marshall(Amazon.CodeCommit.Model.PutRepositoryTriggersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutRepositoryTriggersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutRepositoryTriggersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRepositoryTriggers operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutRepositoryTriggersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutRepositoryTriggersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.PutRepositoryTriggersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionForCommentUnmarshaller">
            <summary>
            Response Unmarshaller for ReactionForComment Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionForCommentUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#ReactionForComment,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionForCommentUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionForCommentUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ReactionLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionValueFormatsUnmarshaller">
            <summary>
            Response Unmarshaller for ReactionValueFormats Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionValueFormatsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#ReactionValueFormats,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionValueFormatsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionValueFormatsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionValueRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ReactionValueRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionValueRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionValueRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReactionValueRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ReferenceDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceNameRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ReferenceNameRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceNameRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceTypeNotSupportedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ReferenceTypeNotSupportedException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceTypeNotSupportedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceTypeNotSupportedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReferenceTypeNotSupportedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplaceContentEntryMarshaller">
            <summary>
            ReplaceContentEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplaceContentEntryMarshaller.Marshall(Amazon.CodeCommit.Model.ReplaceContentEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplaceContentEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplacementContentRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ReplacementContentRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplacementContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplacementContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplacementContentRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplacementTypeRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ReplacementTypeRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplacementTypeRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplacementTypeRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ReplacementTypeRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryDoesNotExistExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryDoesNotExistException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryDoesNotExistExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryDoesNotExistExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#RepositoryMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryNameExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameIdPairUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryNameIdPair Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameIdPairUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#RepositoryNameIdPair,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameIdPairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameIdPairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryNameRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNameRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNamesRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryNamesRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNamesRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNamesRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNamesRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNotAssociatedWithPullRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryNotAssociatedWithPullRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNotAssociatedWithPullRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNotAssociatedWithPullRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryNotAssociatedWithPullRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerBranchNameListRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryTriggerBranchNameListRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerBranchNameListRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerBranchNameListRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerBranchNameListRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerDestinationArnRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryTriggerDestinationArnRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerDestinationArnRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerDestinationArnRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerDestinationArnRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerEventsListRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryTriggerEventsListRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerEventsListRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerEventsListRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerEventsListRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerExecutionFailureUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryTriggerExecutionFailure Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerExecutionFailureUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#RepositoryTriggerExecutionFailure,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerExecutionFailureUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerExecutionFailureUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerMarshaller">
            <summary>
            RepositoryTrigger Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerMarshaller.Marshall(Amazon.CodeCommit.Model.RepositoryTrigger,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerNameRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryTriggerNameRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerNameRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerNameRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggersListRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryTriggersListRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggersListRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggersListRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggersListRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerUnmarshaller">
            <summary>
            Response Unmarshaller for RepositoryTrigger Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#RepositoryTrigger,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RepositoryTriggerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ResourceArnRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceArnRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ResourceArnRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ResourceArnRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.ResourceArnRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RestrictedSourceFileExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RestrictedSourceFileException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RestrictedSourceFileExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RestrictedSourceFileExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RestrictedSourceFileExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RevisionIdRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RevisionIdRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RevisionIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RevisionIdRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RevisionIdRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RevisionNotCurrentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for RevisionNotCurrentException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RevisionNotCurrentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RevisionNotCurrentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.RevisionNotCurrentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SameFileContentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SameFileContentException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SameFileContentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SameFileContentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SameFileContentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SamePathRequestExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SamePathRequestException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SamePathRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SamePathRequestExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SamePathRequestExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SetFileModeEntryMarshaller">
            <summary>
            SetFileModeEntry Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SetFileModeEntryMarshaller.Marshall(Amazon.CodeCommit.Model.SetFileModeEntry,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SetFileModeEntryMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceAndDestinationAreSameExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SourceAndDestinationAreSameException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceAndDestinationAreSameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceAndDestinationAreSameExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceAndDestinationAreSameExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceFileOrContentRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SourceFileOrContentRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceFileOrContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceFileOrContentRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceFileOrContentRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceFileSpecifierMarshaller">
            <summary>
            SourceFileSpecifier Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceFileSpecifierMarshaller.Marshall(Amazon.CodeCommit.Model.SourceFileSpecifier,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SourceFileSpecifierMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SubModuleUnmarshaller">
            <summary>
            Response Unmarshaller for SubModule Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SubModuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#SubModule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SubModuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SubModuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SymbolicLinkUnmarshaller">
            <summary>
            Response Unmarshaller for SymbolicLink Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SymbolicLinkUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#SymbolicLink,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SymbolicLinkUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.SymbolicLinkUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagKeysListRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagKeysListRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagKeysListRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagKeysListRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagKeysListRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagPolicyExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagPolicyException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagPolicyExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagPolicyExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.CodeCommit.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagsMapRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TagsMapRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagsMapRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagsMapRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TagsMapRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetMarshaller">
            <summary>
            Target Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetMarshaller.Marshall(Amazon.CodeCommit.Model.Target,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TargetRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetsRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TargetsRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetsRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetsRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TargetsRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TestRepositoryTriggersRequestMarshaller">
            <summary>
            TestRepositoryTriggers Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TestRepositoryTriggersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TestRepositoryTriggersRequestMarshaller.Marshall(Amazon.CodeCommit.Model.TestRepositoryTriggersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TestRepositoryTriggersRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TestRepositoryTriggersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TestRepositoryTriggers operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TestRepositoryTriggersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TestRepositoryTriggersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TestRepositoryTriggersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TipOfSourceReferenceIsDifferentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TipOfSourceReferenceIsDifferentException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TipOfSourceReferenceIsDifferentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TipOfSourceReferenceIsDifferentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TipOfSourceReferenceIsDifferentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TipsDivergenceExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TipsDivergenceExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TipsDivergenceExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TipsDivergenceExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TipsDivergenceExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TitleRequiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TitleRequiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TitleRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TitleRequiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TitleRequiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TooManyTagsException Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateContentRequestMarshaller">
            <summary>
            UpdateApprovalRuleTemplateContent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateContentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateContentRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateContentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateContentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateApprovalRuleTemplateContent operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateContentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateContentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateContentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateDescriptionRequestMarshaller">
            <summary>
            UpdateApprovalRuleTemplateDescription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateDescriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateDescriptionRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateDescriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateDescriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateApprovalRuleTemplateDescription operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateDescriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateDescriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateDescriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateNameRequestMarshaller">
            <summary>
            UpdateApprovalRuleTemplateName Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateNameRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateNameRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateNameRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateNameResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateApprovalRuleTemplateName operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateNameResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateNameResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateApprovalRuleTemplateNameResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateCommentRequestMarshaller">
            <summary>
            UpdateComment Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateCommentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateCommentRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdateCommentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateCommentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateCommentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateComment operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateCommentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateCommentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateCommentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateDefaultBranchRequestMarshaller">
            <summary>
            UpdateDefaultBranch Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateDefaultBranchRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateDefaultBranchRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdateDefaultBranchRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateDefaultBranchRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateDefaultBranchResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDefaultBranch operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateDefaultBranchResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateDefaultBranchResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateDefaultBranchResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalRuleContentRequestMarshaller">
            <summary>
            UpdatePullRequestApprovalRuleContent Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalRuleContentRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalRuleContentRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalRuleContentRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalRuleContentResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdatePullRequestApprovalRuleContent operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalRuleContentResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalRuleContentResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalRuleContentResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalStateRequestMarshaller">
            <summary>
            UpdatePullRequestApprovalState Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalStateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalStateRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalStateRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalStateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdatePullRequestApprovalState operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalStateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalStateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestApprovalStateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestDescriptionRequestMarshaller">
            <summary>
            UpdatePullRequestDescription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestDescriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestDescriptionRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdatePullRequestDescriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestDescriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestDescriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdatePullRequestDescription operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestDescriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestDescriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestDescriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestStatusRequestMarshaller">
            <summary>
            UpdatePullRequestStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestStatusRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdatePullRequestStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestStatusRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdatePullRequestStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestTitleRequestMarshaller">
            <summary>
            UpdatePullRequestTitle Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestTitleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestTitleRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdatePullRequestTitleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestTitleRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestTitleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdatePullRequestTitle operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestTitleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestTitleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdatePullRequestTitleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryDescriptionRequestMarshaller">
            <summary>
            UpdateRepositoryDescription Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryDescriptionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryDescriptionRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdateRepositoryDescriptionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryDescriptionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryDescriptionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateRepositoryDescription operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryDescriptionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryDescriptionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryDescriptionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryNameRequestMarshaller">
            <summary>
            UpdateRepositoryName Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryNameRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryNameRequestMarshaller.Marshall(Amazon.CodeCommit.Model.UpdateRepositoryNameRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryNameRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryNameResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateRepositoryName operation
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryNameResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryNameResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UpdateRepositoryNameResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UserInfoUnmarshaller">
            <summary>
            Response Unmarshaller for UserInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UserInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CodeCommit#Model#UserInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UserInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Internal.MarshallTransformations.UserInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidActorArnException">
            <summary>
            The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the
            full ARN for the user who initiated the change for the pull request, and then try
            again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidActorArnException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidActorArnException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidActorArnException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidActorArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidActorArnException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidActorArnException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidActorArnException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidActorArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidActorArnException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidActorArnException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidActorArnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidActorArnException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidActorArnException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException">
            <summary>
            The content for the approval rule is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidApprovalRuleContentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidApprovalRuleContentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidApprovalRuleContentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalRuleContentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalRuleContentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidApprovalRuleContentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            <summary>
            The name for the approval rule is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidApprovalRuleNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidApprovalRuleNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidApprovalRuleNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalRuleNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalRuleNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidApprovalRuleNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException">
            <summary>
            The content of the approval rule template is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidApprovalRuleTemplateContentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateContentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateContentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateContentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateContentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidApprovalRuleTemplateContentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException">
            <summary>
            The description for the approval rule template is not valid because it exceeds the
            maximum characters allowed for a description. For more information about limits in
            AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidApprovalRuleTemplateDescriptionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateDescriptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateDescriptionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateDescriptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateDescriptionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidApprovalRuleTemplateDescriptionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            <summary>
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidApprovalRuleTemplateNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalRuleTemplateNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidApprovalRuleTemplateNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidApprovalStateException">
            <summary>
            The state for the approval is not valid. Valid values include APPROVE and REVOKE.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalStateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidApprovalStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidApprovalStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidApprovalStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidApprovalStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidApprovalStateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidApprovalStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidAuthorArnException">
            <summary>
            The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the
            full ARN for the author of the pull request, and then try again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidAuthorArnException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidAuthorArnException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidAuthorArnException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidAuthorArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidAuthorArnException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidAuthorArnException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidAuthorArnException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidAuthorArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidAuthorArnException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidAuthorArnException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidAuthorArnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidAuthorArnException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidAuthorArnException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidBlobIdException">
            <summary>
            The specified blob is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBlobIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidBlobIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBlobIdException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidBlobIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBlobIdException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidBlobIdException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBlobIdException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidBlobIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBlobIdException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidBlobIdException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBlobIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidBlobIdException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBlobIdException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            <summary>
            The specified reference name is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBranchNameException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidBranchNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBranchNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidBranchNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBranchNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidBranchNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBranchNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidBranchNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBranchNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidBranchNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBranchNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidBranchNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidBranchNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            <summary>
            The client request token is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidClientRequestTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidClientRequestTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidClientRequestTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidClientRequestTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidClientRequestTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidClientRequestTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidClientRequestTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidClientRequestTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidClientRequestTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidClientRequestTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidClientRequestTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidClientRequestTokenException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidClientRequestTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            <summary>
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommentIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidCommentIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommentIdException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidCommentIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommentIdException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidCommentIdException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommentIdException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidCommentIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommentIdException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidCommentIdException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommentIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidCommentIdException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommentIdException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidCommitException">
            <summary>
            The specified commit is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidCommitException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidCommitException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidCommitException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidCommitException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidCommitException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidCommitException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            <summary>
            The specified commit ID is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidCommitIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitIdException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidCommitIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitIdException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidCommitIdException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitIdException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidCommitIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitIdException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidCommitIdException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidCommitIdException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidCommitIdException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            <summary>
            The specified conflict detail level is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidConflictDetailLevelException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidConflictDetailLevelException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidConflictDetailLevelException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidConflictDetailLevelException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidConflictDetailLevelException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidConflictDetailLevelException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            <summary>
            The specified conflict resolution list is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidConflictResolutionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidConflictResolutionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidConflictResolutionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidConflictResolutionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidConflictResolutionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidConflictResolutionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            <summary>
            The specified conflict resolution strategy is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidConflictResolutionStrategyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidConflictResolutionStrategyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidConflictResolutionStrategyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidConflictResolutionStrategyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidConflictResolutionStrategyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidConflictResolutionStrategyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            <summary>
            The specified continuation token is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidContinuationTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidContinuationTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidContinuationTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidContinuationTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidContinuationTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidContinuationTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidContinuationTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidContinuationTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidContinuationTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidContinuationTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidContinuationTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidContinuationTokenException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidContinuationTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidDeletionParameterException">
            <summary>
            The specified deletion parameter is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDeletionParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDeletionParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDeletionParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDeletionParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDeletionParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDeletionParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDeletionParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDeletionParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDeletionParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDeletionParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDeletionParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDeletionParameterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDeletionParameterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidDescriptionException">
            <summary>
            The pull request description is not valid. Descriptions cannot be more than 1,000
            characters.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDescriptionException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDescriptionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDescriptionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDescriptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDescriptionException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDescriptionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDescriptionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDescriptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDescriptionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDescriptionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDescriptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDescriptionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDescriptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException">
            <summary>
            The destination commit specifier is not valid. You must provide a valid branch name,
            tag, or full commit ID.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidDestinationCommitSpecifierException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidDestinationCommitSpecifierException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidDestinationCommitSpecifierException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDestinationCommitSpecifierException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidDestinationCommitSpecifierException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidDestinationCommitSpecifierException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidEmailException">
            <summary>
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidEmailException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidEmailException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidEmailException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidEmailException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidEmailException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidEmailException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidEmailException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEmailException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidEmailException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEmailException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidEmailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidEmailException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidEmailException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidFileLocationException">
            <summary>
            The location of the file is not valid. Make sure that you include the file name and
            extension.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileLocationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidFileLocationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileLocationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidFileLocationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileLocationException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidFileLocationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileLocationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFileLocationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileLocationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFileLocationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileLocationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidFileLocationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileLocationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            <summary>
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileModeException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidFileModeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileModeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidFileModeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileModeException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidFileModeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileModeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFileModeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileModeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFileModeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileModeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidFileModeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFileModeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidFilePositionException">
            <summary>
            The position is not valid. Make sure that the line number exists in the version of
            the file you want to comment on.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFilePositionException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidFilePositionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFilePositionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidFilePositionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFilePositionException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidFilePositionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFilePositionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFilePositionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFilePositionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidFilePositionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFilePositionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidFilePositionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidFilePositionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException">
            <summary>
            The specified value for the number of conflict files to return is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidMaxConflictFilesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidMaxConflictFilesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidMaxConflictFilesException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidMaxConflictFilesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidMaxConflictFilesException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidMaxConflictFilesException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException">
            <summary>
            The specified value for the number of merge hunks to return is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidMaxMergeHunksException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidMaxMergeHunksException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidMaxMergeHunksException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidMaxMergeHunksException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidMaxMergeHunksException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidMaxMergeHunksException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            <summary>
            The specified number of maximum results is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxResultsException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidMaxResultsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxResultsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidMaxResultsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxResultsException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidMaxResultsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxResultsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidMaxResultsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxResultsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidMaxResultsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxResultsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidMaxResultsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMaxResultsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            <summary>
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMergeOptionException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidMergeOptionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMergeOptionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidMergeOptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMergeOptionException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidMergeOptionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMergeOptionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidMergeOptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMergeOptionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidMergeOptionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMergeOptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidMergeOptionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidMergeOptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidOrderException">
            <summary>
            The specified sort order is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOrderException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidOrderException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOrderException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidOrderException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOrderException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidOrderException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOrderException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidOrderException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOrderException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidOrderException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOrderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidOrderException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOrderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidOverrideStatusException">
            <summary>
            The override status is not valid. Valid statuses are OVERRIDE and REVOKE.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOverrideStatusException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidOverrideStatusException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOverrideStatusException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidOverrideStatusException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOverrideStatusException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidOverrideStatusException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOverrideStatusException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidOverrideStatusException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOverrideStatusException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidOverrideStatusException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOverrideStatusException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidOverrideStatusException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidOverrideStatusException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            <summary>
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidParentCommitIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParentCommitIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidParentCommitIdException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParentCommitIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidParentCommitIdException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParentCommitIdException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidParentCommitIdException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParentCommitIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidParentCommitIdException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParentCommitIdException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidParentCommitIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParentCommitIdException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidParentCommitIdException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidPathException">
            <summary>
            The specified path is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPathException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPathException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPathException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPathException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPathException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPathException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPathException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPathException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPathException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPathException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidPathException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPathException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException">
            <summary>
            The pull request event type is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPullRequestEventTypeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPullRequestEventTypeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPullRequestEventTypeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPullRequestEventTypeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPullRequestEventTypeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidPullRequestEventTypeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            <summary>
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPullRequestIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestIdException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPullRequestIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestIdException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPullRequestIdException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestIdException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPullRequestIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestIdException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPullRequestIdException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidPullRequestIdException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestIdException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusException">
            <summary>
            The pull request status is not valid. The only valid values are <code>OPEN</code>
            and <code>CLOSED</code>.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPullRequestStatusException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPullRequestStatusException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPullRequestStatusException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPullRequestStatusException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPullRequestStatusException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidPullRequestStatusException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException">
            <summary>
            The pull request status update is not valid. The only valid update is from <code>OPEN</code>
            to <code>CLOSED</code>.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidPullRequestStatusUpdateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidPullRequestStatusUpdateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidPullRequestStatusUpdateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPullRequestStatusUpdateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidPullRequestStatusUpdateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidPullRequestStatusUpdateException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidReactionUserArnException">
            <summary>
            The Amazon Resource Name (ARN) of the user or identity is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionUserArnException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidReactionUserArnException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionUserArnException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidReactionUserArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionUserArnException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidReactionUserArnException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionUserArnException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidReactionUserArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionUserArnException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidReactionUserArnException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionUserArnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidReactionUserArnException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionUserArnException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidReactionValueException">
            <summary>
            The value of the reaction is not valid. For more information, see the <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS
            CodeCommit User Guide</a>.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionValueException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidReactionValueException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionValueException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidReactionValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionValueException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidReactionValueException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionValueException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidReactionValueException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionValueException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidReactionValueException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidReactionValueException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReactionValueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidReferenceNameException">
            <summary>
            The specified reference name format is not valid. Reference names must conform to
            the Git references format (for example, refs/heads/master). For more information,
            see <a href="https://git-scm.com/book/en/v2/Git-Internals-Git-References">Git Internals
            - Git References</a> or consult your Git documentation.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReferenceNameException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidReferenceNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReferenceNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidReferenceNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReferenceNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidReferenceNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReferenceNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidReferenceNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReferenceNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidReferenceNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReferenceNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidReferenceNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReferenceNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException">
            <summary>
            Either the enum is not in a valid format, or the specified file version enum is not
            valid in respect to the current file version.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRelativeFileVersionEnumException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRelativeFileVersionEnumException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRelativeFileVersionEnumException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRelativeFileVersionEnumException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRelativeFileVersionEnumException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRelativeFileVersionEnumException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            <summary>
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementContentException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidReplacementContentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementContentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidReplacementContentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementContentException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidReplacementContentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementContentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidReplacementContentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementContentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidReplacementContentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidReplacementContentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementContentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            <summary>
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementTypeException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidReplacementTypeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidReplacementTypeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementTypeException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidReplacementTypeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementTypeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidReplacementTypeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementTypeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidReplacementTypeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidReplacementTypeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidReplacementTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException">
            <summary>
            The specified repository description is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRepositoryDescriptionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryDescriptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryDescriptionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryDescriptionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryDescriptionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRepositoryDescriptionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            <summary>
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryNameException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRepositoryNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRepositoryNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException">
            <summary>
            One or more branch names specified for the trigger is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRepositoryTriggerBranchNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerBranchNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerBranchNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerBranchNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerBranchNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRepositoryTriggerBranchNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException">
            <summary>
            The custom data provided for the trigger is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRepositoryTriggerCustomDataException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerCustomDataException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerCustomDataException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerCustomDataException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerCustomDataException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRepositoryTriggerCustomDataException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException">
            <summary>
            The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination.
            The most common reason for this error is that the ARN does not meet the requirements
            for the service type.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRepositoryTriggerDestinationArnException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerDestinationArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerDestinationArnException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerDestinationArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerDestinationArnException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRepositoryTriggerDestinationArnException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException">
            <summary>
            One or more events specified for the trigger is not valid. Check to make sure that
            all events specified match the requirements for allowed events.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRepositoryTriggerEventsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerEventsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerEventsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerEventsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerEventsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRepositoryTriggerEventsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException">
            <summary>
            The name of the trigger is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRepositoryTriggerNameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerNameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerNameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerNameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRepositoryTriggerNameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException">
            <summary>
            The AWS Region for the trigger target does not match the AWS Region for the repository.
            Triggers must be created in the same Region as the target for the trigger.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRepositoryTriggerRegionException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerRegionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRepositoryTriggerRegionException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerRegionException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRepositoryTriggerRegionException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRepositoryTriggerRegionException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            <summary>
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidResourceArnException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidResourceArnException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidResourceArnException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidResourceArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidResourceArnException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidResourceArnException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidResourceArnException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidResourceArnException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidResourceArnException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidResourceArnException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidResourceArnException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidResourceArnException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidResourceArnException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            <summary>
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRevisionIdException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRevisionIdException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRevisionIdException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRevisionIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRevisionIdException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRevisionIdException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRevisionIdException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRevisionIdException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRevisionIdException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRevisionIdException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRevisionIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRevisionIdException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRevisionIdException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception">
            <summary>
            The SHA-256 hash signature for the rule content is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRuleContentSha256Exception with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRuleContentSha256Exception
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRuleContentSha256Exception
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRuleContentSha256Exception
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRuleContentSha256Exception
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidRuleContentSha256Exception class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidSortByException">
            <summary>
            The specified sort by value is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSortByException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSortByException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSortByException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSortByException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSortByException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSortByException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSortByException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSortByException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSortByException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSortByException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSortByException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSortByException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSortByException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException">
            <summary>
            The source commit specifier is not valid. You must provide a valid branch name, tag,
            or full commit ID.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSourceCommitSpecifierException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSourceCommitSpecifierException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSourceCommitSpecifierException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSourceCommitSpecifierException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSourceCommitSpecifierException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSourceCommitSpecifierException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            <summary>
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSystemTagUsageException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSystemTagUsageException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSystemTagUsageException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSystemTagUsageException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSystemTagUsageException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSystemTagUsageException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSystemTagUsageException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSystemTagUsageException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSystemTagUsageException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSystemTagUsageException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSystemTagUsageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSystemTagUsageException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidSystemTagUsageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidTagKeysListException">
            <summary>
            The list of tags is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagKeysListException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidTagKeysListException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagKeysListException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidTagKeysListException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagKeysListException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidTagKeysListException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagKeysListException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagKeysListException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagKeysListException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagKeysListException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagKeysListException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidTagKeysListException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagKeysListException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidTagsMapException">
            <summary>
            The map of tags is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagsMapException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidTagsMapException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagsMapException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidTagsMapException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagsMapException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidTagsMapException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagsMapException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagsMapException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagsMapException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTagsMapException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagsMapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidTagsMapException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTagsMapException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            <summary>
            The specified target branch is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetBranchException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidTargetBranchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetBranchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidTargetBranchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetBranchException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidTargetBranchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetBranchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTargetBranchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetBranchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTargetBranchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetBranchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidTargetBranchException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetBranchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidTargetException">
            <summary>
            The target for the pull request is not valid. A target must contain the full values
            for the repository name, source branch, and destination branch for the pull request.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidTargetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidTargetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidTargetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTargetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTargetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidTargetException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidTargetsException">
            <summary>
            The targets for the pull request is not valid or not in a valid format. Targets are
            a list of target objects. Each target object must contain the full values for the
            repository name, source branch, and destination branch for a pull request.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetsException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidTargetsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidTargetsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetsException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidTargetsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTargetsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTargetsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidTargetsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTargetsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.InvalidTitleException">
            <summary>
            The title of the pull request is not valid. Pull request titles cannot exceed 100
            characters in length.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTitleException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidTitleException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTitleException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidTitleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTitleException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidTitleException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTitleException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTitleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTitleException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidTitleException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTitleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidTitleException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.InvalidTitleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IsBinaryFile">
            <summary>
            Information about whether a file is binary or textual in a merge or pull request operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IsBinaryFile.Base">
            <summary>
            Gets and sets the property Base. 
            <para>
            The binary or non-binary status of a file in the base of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IsBinaryFile.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The binary or non-binary status of a file in the destination of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IsBinaryFile.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The binary or non-binary status of file in the source of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListApprovalRuleTemplatesRequest">
            <summary>
            Container for the parameters to the ListApprovalRuleTemplates operation.
            Lists all approval rule templates in the specified AWS Region in your AWS account.
            If an AWS Region is not specified, the AWS Region where you are signed in is used.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListApprovalRuleTemplatesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            A non-zero, non-negative integer used to limit the number of returned results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListApprovalRuleTemplatesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListApprovalRuleTemplatesResponse">
            <summary>
            This is the response object from the ListApprovalRuleTemplates operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListApprovalRuleTemplatesResponse.ApprovalRuleTemplateNames">
            <summary>
            Gets and sets the property ApprovalRuleTemplateNames. 
            <para>
            The names of all the approval rule templates found in the AWS Region for your AWS
            account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListApprovalRuleTemplatesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that allows the operation to batch the next results of the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest">
            <summary>
            Container for the parameters to the ListAssociatedApprovalRuleTemplatesForRepository operation.
            Lists all approval rule templates that are associated with a specified repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            A non-zero, non-negative integer used to limit the number of returned results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository for which you want to list all associated approval rule
            templates.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryResponse">
            <summary>
            This is the response object from the ListAssociatedApprovalRuleTemplatesForRepository operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryResponse.ApprovalRuleTemplateNames">
            <summary>
            Gets and sets the property ApprovalRuleTemplateNames. 
            <para>
            The names of all approval rule templates associated with the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that allows the operation to batch the next results of the operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListBranchesRequest">
            <summary>
            Container for the parameters to the ListBranches operation.
            Gets information about one or more branches in a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListBranchesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that allows the operation to batch the results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListBranchesRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the branches.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListBranchesResponse">
            <summary>
            Represents the output of a list branches operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListBranchesResponse.Branches">
            <summary>
            Gets and sets the property Branches. 
            <para>
            The list of branch names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListBranchesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that returns the batch of the results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListPullRequestsRequest">
            <summary>
            Container for the parameters to the ListPullRequests operation.
            Returns a list of pull requests for a specified repository. The return list can be
            refined by pull request status or pull request author ARN.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListPullRequestsRequest.AuthorArn">
            <summary>
            Gets and sets the property AuthorArn. 
            <para>
            Optional. The Amazon Resource Name (ARN) of the user who created the pull request.
            If used, this filters the results to pull requests created by that user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListPullRequestsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            A non-zero, non-negative integer used to limit the number of returned results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListPullRequestsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListPullRequestsRequest.PullRequestStatus">
            <summary>
            Gets and sets the property PullRequestStatus. 
            <para>
            Optional. The status of the pull request. If used, this refines the results to the
            pull requests that match the specified status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListPullRequestsRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository for which you want to list pull requests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListPullRequestsResponse">
            <summary>
            This is the response object from the ListPullRequests operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListPullRequestsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that allows the operation to batch the next results of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListPullRequestsResponse.PullRequestIds">
            <summary>
            Gets and sets the property PullRequestIds. 
            <para>
            The system-generated IDs of the pull requests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest">
            <summary>
            Container for the parameters to the ListRepositoriesForApprovalRuleTemplate operation.
            Lists all repositories associated with the specified approval rule template.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the approval rule template for which you want to list repositories that
            are associated with that template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            A non-zero, non-negative integer used to limit the number of returned results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateResponse">
            <summary>
            This is the response object from the ListRepositoriesForApprovalRuleTemplate operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that allows the operation to batch the next results of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateResponse.RepositoryNames">
            <summary>
            Gets and sets the property RepositoryNames. 
            <para>
            A list of repository names that are associated with the specified approval rule template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListRepositoriesRequest">
            <summary>
            Container for the parameters to the ListRepositories operation.
            Gets information about one or more repositories.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that allows the operation to batch the results of the operation.
            Batch sizes are 1,000 for list repository operations. When the client sends the token
            back to AWS CodeCommit, another page of 1,000 records is retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesRequest.Order">
            <summary>
            Gets and sets the property Order. 
            <para>
            The order in which to sort the results of a list repositories operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesRequest.SortBy">
            <summary>
            Gets and sets the property SortBy. 
            <para>
            The criteria used to sort the results of a list repositories operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListRepositoriesResponse">
            <summary>
            Represents the output of a list repositories operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that allows the operation to batch the results of the operation.
            Batch sizes are 1,000 for list repository operations. When the client sends the token
            back to AWS CodeCommit, another page of 1,000 records is retrieved.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesResponse.Repositories">
            <summary>
            Gets and sets the property Repositories. 
            <para>
            Lists the repositories called by the list repositories operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            Gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS
            CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the<i> AWS CodeCommit User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListTagsForResourceRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that, when provided in a request, returns the next batch of the
            results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource for which you want to get information
            about tags, if any.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListTagsForResourceResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An enumeration token that allows the operation to batch the next results of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            A list of tag key and value pairs associated with the specified resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.Location">
            <summary>
            Returns information about the location of a change or comment in the comparison between
            two commits or a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Location.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The name of the file being compared, including its extension and subdirectory, if
            any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Location.FilePosition">
            <summary>
            Gets and sets the property FilePosition. 
            <para>
            The position of a change in a compared file, in line number format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Location.RelativeFileVersion">
            <summary>
            Gets and sets the property RelativeFileVersion. 
            <para>
            In a comparison of commits or a pull request, whether the change is in the before
            or after of that comparison.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            <summary>
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ManualMergeRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ManualMergeRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ManualMergeRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ManualMergeRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ManualMergeRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ManualMergeRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ManualMergeRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ManualMergeRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ManualMergeRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ManualMergeRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ManualMergeRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ManualMergeRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ManualMergeRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MaximumBranchesExceededException">
            <summary>
            The number of branches for the trigger was exceeded.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumBranchesExceededException.#ctor(System.String)">
            <summary>
            Constructs a new MaximumBranchesExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumBranchesExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MaximumBranchesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumBranchesExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of MaximumBranchesExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumBranchesExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumBranchesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumBranchesExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumBranchesExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumBranchesExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MaximumBranchesExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumBranchesExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            <summary>
            The number of allowed conflict resolution entries was exceeded.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException.#ctor(System.String)">
            <summary>
            Constructs a new MaximumConflictResolutionEntriesExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MaximumConflictResolutionEntriesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of MaximumConflictResolutionEntriesExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumConflictResolutionEntriesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumConflictResolutionEntriesExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MaximumConflictResolutionEntriesExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            <summary>
            The number of files to load exceeds the allowed limit.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException.#ctor(System.String)">
            <summary>
            Constructs a new MaximumFileContentToLoadExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MaximumFileContentToLoadExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of MaximumFileContentToLoadExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumFileContentToLoadExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumFileContentToLoadExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MaximumFileContentToLoadExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException">
            <summary>
            The number of specified files to change as part of this commit exceeds the maximum
            number of files that can be changed in a single commit. Consider using a Git client
            for these changes.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException.#ctor(System.String)">
            <summary>
            Constructs a new MaximumFileEntriesExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MaximumFileEntriesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of MaximumFileEntriesExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumFileEntriesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumFileEntriesExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MaximumFileEntriesExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            <summary>
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException.#ctor(System.String)">
            <summary>
            Constructs a new MaximumItemsToCompareExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MaximumItemsToCompareExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of MaximumItemsToCompareExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumItemsToCompareExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumItemsToCompareExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MaximumItemsToCompareExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException">
            <summary>
            The number of approvals required for the approval rule exceeds the maximum number
            allowed.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException.#ctor(System.String)">
            <summary>
            Constructs a new MaximumNumberOfApprovalsExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MaximumNumberOfApprovalsExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of MaximumNumberOfApprovalsExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumNumberOfApprovalsExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumNumberOfApprovalsExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MaximumNumberOfApprovalsExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException">
            <summary>
            You cannot create the pull request because the repository has too many open pull requests.
            The maximum number of open pull requests for a repository is 1,000. Close one or more
            open pull requests, and then try again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException.#ctor(System.String)">
            <summary>
            Constructs a new MaximumOpenPullRequestsExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MaximumOpenPullRequestsExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of MaximumOpenPullRequestsExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumOpenPullRequestsExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumOpenPullRequestsExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MaximumOpenPullRequestsExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            <summary>
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException.#ctor(System.String)">
            <summary>
            Constructs a new MaximumRepositoryNamesExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MaximumRepositoryNamesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of MaximumRepositoryNamesExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumRepositoryNamesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumRepositoryNamesExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MaximumRepositoryNamesExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException">
            <summary>
            The number of triggers allowed for the repository was exceeded.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException.#ctor(System.String)">
            <summary>
            Constructs a new MaximumRepositoryTriggersExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MaximumRepositoryTriggersExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of MaximumRepositoryTriggersExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumRepositoryTriggersExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumRepositoryTriggersExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MaximumRepositoryTriggersExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException">
            <summary>
            The maximum number of approval rule templates for a repository has been exceeded.
            You cannot associate more than 25 approval rule templates with a repository.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException.#ctor(System.String)">
            <summary>
            Constructs a new MaximumRuleTemplatesAssociatedWithRepositoryException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MaximumRuleTemplatesAssociatedWithRepositoryException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException.#ctor(System.Exception)">
            <summary>
            Construct instance of MaximumRuleTemplatesAssociatedWithRepositoryException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumRuleTemplatesAssociatedWithRepositoryException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MaximumRuleTemplatesAssociatedWithRepositoryException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MaximumRuleTemplatesAssociatedWithRepositoryException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeBranchesByFastForwardRequest">
            <summary>
            Container for the parameters to the MergeBranchesByFastForward operation.
            Merges two branches using the fast-forward merge strategy.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByFastForwardRequest.DestinationCommitSpecifier">
            <summary>
            Gets and sets the property DestinationCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByFastForwardRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to merge two branches.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByFastForwardRequest.SourceCommitSpecifier">
            <summary>
            Gets and sets the property SourceCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByFastForwardRequest.TargetBranch">
            <summary>
            Gets and sets the property TargetBranch. 
            <para>
            The branch where the merge is applied.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeBranchesByFastForwardResponse">
            <summary>
            This is the response object from the MergeBranchesByFastForward operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByFastForwardResponse.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The commit ID of the merge in the destination or target branch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByFastForwardResponse.TreeId">
            <summary>
            Gets and sets the property TreeId. 
            <para>
            The tree ID of the merge in the destination or target branch.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest">
            <summary>
            Container for the parameters to the MergeBranchesBySquash operation.
            Merges two branches using the squash merge strategy.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.AuthorName">
            <summary>
            Gets and sets the property AuthorName. 
            <para>
            The name of the author who created the commit. This information is used as both the
            author and committer for the commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.CommitMessage">
            <summary>
            Gets and sets the property CommitMessage. 
            <para>
            The commit message for the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.ConflictDetailLevel">
            <summary>
            Gets and sets the property ConflictDetailLevel. 
            <para>
            The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.ConflictResolution">
            <summary>
            Gets and sets the property ConflictResolution. 
            <para>
            If AUTOMERGE is the conflict resolution strategy, a list of inputs to use when resolving
            conflicts during a merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.ConflictResolutionStrategy">
            <summary>
            Gets and sets the property ConflictResolutionStrategy. 
            <para>
            Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.DestinationCommitSpecifier">
            <summary>
            Gets and sets the property DestinationCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.Email">
            <summary>
            Gets and sets the property Email. 
            <para>
            The email address of the person merging the branches. This information is used in
            the commit information for the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.KeepEmptyFolders">
            <summary>
            Gets and sets the property KeepEmptyFolders. 
            <para>
            If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If this is specified as true, a .gitkeep file
            is created for empty folders. The default is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to merge two branches.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.SourceCommitSpecifier">
            <summary>
            Gets and sets the property SourceCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashRequest.TargetBranch">
            <summary>
            Gets and sets the property TargetBranch. 
            <para>
            The branch where the merge is applied. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeBranchesBySquashResponse">
            <summary>
            This is the response object from the MergeBranchesBySquash operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashResponse.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The commit ID of the merge in the destination or target branch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesBySquashResponse.TreeId">
            <summary>
            Gets and sets the property TreeId. 
            <para>
            The tree ID of the merge in the destination or target branch.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest">
            <summary>
            Container for the parameters to the MergeBranchesByThreeWay operation.
            Merges two specified branches using the three-way merge strategy.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.AuthorName">
            <summary>
            Gets and sets the property AuthorName. 
            <para>
            The name of the author who created the commit. This information is used as both the
            author and committer for the commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.CommitMessage">
            <summary>
            Gets and sets the property CommitMessage. 
            <para>
            The commit message to include in the commit information for the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.ConflictDetailLevel">
            <summary>
            Gets and sets the property ConflictDetailLevel. 
            <para>
            The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.ConflictResolution">
            <summary>
            Gets and sets the property ConflictResolution. 
            <para>
            If AUTOMERGE is the conflict resolution strategy, a list of inputs to use when resolving
            conflicts during a merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.ConflictResolutionStrategy">
            <summary>
            Gets and sets the property ConflictResolutionStrategy. 
            <para>
            Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.DestinationCommitSpecifier">
            <summary>
            Gets and sets the property DestinationCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.Email">
            <summary>
            Gets and sets the property Email. 
            <para>
            The email address of the person merging the branches. This information is used in
            the commit information for the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.KeepEmptyFolders">
            <summary>
            Gets and sets the property KeepEmptyFolders. 
            <para>
            If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If true, a .gitkeep file is created for empty
            folders. The default is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to merge two branches.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.SourceCommitSpecifier">
            <summary>
            Gets and sets the property SourceCommitSpecifier. 
            <para>
            The branch, tag, HEAD, or other fully qualified reference used to identify a commit
            (for example, a branch name or a full commit ID).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest.TargetBranch">
            <summary>
            Gets and sets the property TargetBranch. 
            <para>
            The branch where the merge is applied. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeBranchesByThreeWayResponse">
            <summary>
            This is the response object from the MergeBranchesByThreeWay operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayResponse.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The commit ID of the merge in the destination or target branch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeBranchesByThreeWayResponse.TreeId">
            <summary>
            Gets and sets the property TreeId. 
            <para>
            The tree ID of the merge in the destination or target branch.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeHunk">
            <summary>
            Information about merge hunks in a merge or pull request operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeHunk.Base">
            <summary>
            Gets and sets the property Base. 
            <para>
            Information about the merge hunk in the base of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeHunk.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            Information about the merge hunk in the destination of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeHunk.IsConflict">
            <summary>
            Gets and sets the property IsConflict. 
            <para>
            A Boolean value indicating whether a combination of hunks contains a conflict. Conflicts
            occur when the same file or the same lines in a file were modified in both the source
            and destination of a merge or pull request. Valid values include true, false, and
            null. True when the hunk represents a conflict and one or more files contains a line
            conflict. File mode conflicts in a merge do not set this to true.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeHunk.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            Information about the merge hunk in the source of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeHunkDetail">
            <summary>
            Information about the details of a merge hunk that contains a conflict in a merge
            or pull request operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeHunkDetail.EndLine">
            <summary>
            Gets and sets the property EndLine. 
            <para>
            The end position of the hunk in the merge result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeHunkDetail.HunkContent">
            <summary>
            Gets and sets the property HunkContent. 
            <para>
            The base-64 encoded content of the hunk merged region that might contain a conflict.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeHunkDetail.StartLine">
            <summary>
            Gets and sets the property StartLine. 
            <para>
            The start position of the hunk in the merge result.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeMetadata">
            <summary>
            Returns information about a merge or potential merge between a source reference and
            a destination reference in a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeMetadata.IsMerged">
            <summary>
            Gets and sets the property IsMerged. 
            <para>
            A Boolean value indicating whether the merge has been made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeMetadata.MergeCommitId">
            <summary>
            Gets and sets the property MergeCommitId. 
            <para>
            The commit ID for the merge commit, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeMetadata.MergedBy">
            <summary>
            Gets and sets the property MergedBy. 
            <para>
            The Amazon Resource Name (ARN) of the user who merged the branches.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeMetadata.MergeOption">
            <summary>
            Gets and sets the property MergeOption. 
            <para>
            The merge strategy used in the merge.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeOperations">
            <summary>
            Information about the file operation conflicts in a merge operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeOperations.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The operation on a file in the destination of a merge or pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergeOperations.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The operation (add, modify, or delete) on a file in the source of a merge or pull
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            <summary>
            A merge option or stategy is required, and none was provided.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MergeOptionRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new MergeOptionRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MergeOptionRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MergeOptionRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MergeOptionRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of MergeOptionRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MergeOptionRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MergeOptionRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MergeOptionRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MergeOptionRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MergeOptionRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MergeOptionRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MergeOptionRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergePullRequestByFastForwardRequest">
            <summary>
            Container for the parameters to the MergePullRequestByFastForward operation.
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the fast-forward merge
            strategy. If the merge is successful, it closes the pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByFastForwardRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByFastForwardRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where the pull request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByFastForwardRequest.SourceCommitId">
            <summary>
            Gets and sets the property SourceCommitId. 
            <para>
            The full commit ID of the original or updated commit in the pull request source branch.
            Pass this value if you want an exception thrown if the current commit ID of the tip
            of the source branch does not match this commit ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergePullRequestByFastForwardResponse">
            <summary>
            This is the response object from the MergePullRequestByFastForward operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByFastForwardResponse.PullRequest">
            <summary>
            Gets and sets the property PullRequest. 
            <para>
            Information about the specified pull request, including the merge.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest">
            <summary>
            Container for the parameters to the MergePullRequestBySquash operation.
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the squash merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest.AuthorName">
            <summary>
            Gets and sets the property AuthorName. 
            <para>
            The name of the author who created the commit. This information is used as both the
            author and committer for the commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest.CommitMessage">
            <summary>
            Gets and sets the property CommitMessage. 
            <para>
            The commit message to include in the commit information for the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest.ConflictDetailLevel">
            <summary>
            Gets and sets the property ConflictDetailLevel. 
            <para>
            The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest.ConflictResolution">
            <summary>
            Gets and sets the property ConflictResolution. 
            <para>
            If AUTOMERGE is the conflict resolution strategy, a list of inputs to use when resolving
            conflicts during a merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest.ConflictResolutionStrategy">
            <summary>
            Gets and sets the property ConflictResolutionStrategy. 
            <para>
            Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest.Email">
            <summary>
            Gets and sets the property Email. 
            <para>
            The email address of the person merging the branches. This information is used in
            the commit information for the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest.KeepEmptyFolders">
            <summary>
            Gets and sets the property KeepEmptyFolders. 
            <para>
            If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If true, a .gitkeep file is created for empty
            folders. The default is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where the pull request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashRequest.SourceCommitId">
            <summary>
            Gets and sets the property SourceCommitId. 
            <para>
            The full commit ID of the original or updated commit in the pull request source branch.
            Pass this value if you want an exception thrown if the current commit ID of the tip
            of the source branch does not match this commit ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergePullRequestBySquashResponse">
            <summary>
            This is the response object from the MergePullRequestBySquash operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestBySquashResponse.PullRequest">
            <summary>
            Gets and sets the property PullRequest.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest">
            <summary>
            Container for the parameters to the MergePullRequestByThreeWay operation.
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the three-way merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest.AuthorName">
            <summary>
            Gets and sets the property AuthorName. 
            <para>
            The name of the author who created the commit. This information is used as both the
            author and committer for the commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest.CommitMessage">
            <summary>
            Gets and sets the property CommitMessage. 
            <para>
            The commit message to include in the commit information for the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest.ConflictDetailLevel">
            <summary>
            Gets and sets the property ConflictDetailLevel. 
            <para>
            The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used,
            which returns a not-mergeable result if the same file has differences in both branches.
            If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file
            in both branches has differences on the same line.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest.ConflictResolution">
            <summary>
            Gets and sets the property ConflictResolution. 
            <para>
            If AUTOMERGE is the conflict resolution strategy, a list of inputs to use when resolving
            conflicts during a merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest.ConflictResolutionStrategy">
            <summary>
            Gets and sets the property ConflictResolutionStrategy. 
            <para>
            Specifies which branch to use when resolving conflicts, or whether to attempt automatically
            merging two versions of a file. The default is NONE, which requires any conflicts
            to be resolved manually before the merge operation is successful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest.Email">
            <summary>
            Gets and sets the property Email. 
            <para>
            The email address of the person merging the branches. This information is used in
            the commit information for the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest.KeepEmptyFolders">
            <summary>
            Gets and sets the property KeepEmptyFolders. 
            <para>
            If the commit contains deletions, whether to keep a folder or folder structure if
            the changes leave the folders empty. If true, a .gitkeep file is created for empty
            folders. The default is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where the pull request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest.SourceCommitId">
            <summary>
            Gets and sets the property SourceCommitId. 
            <para>
            The full commit ID of the original or updated commit in the pull request source branch.
            Pass this value if you want an exception thrown if the current commit ID of the tip
            of the source branch does not match this commit ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MergePullRequestByThreeWayResponse">
            <summary>
            This is the response object from the MergePullRequestByThreeWay operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.MergePullRequestByThreeWayResponse.PullRequest">
            <summary>
            Gets and sets the property PullRequest.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            <summary>
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException.#ctor(System.String)">
            <summary>
            Constructs a new MultipleConflictResolutionEntriesException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MultipleConflictResolutionEntriesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException.#ctor(System.Exception)">
            <summary>
            Construct instance of MultipleConflictResolutionEntriesException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MultipleConflictResolutionEntriesException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MultipleConflictResolutionEntriesException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MultipleConflictResolutionEntriesException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException">
            <summary>
            You cannot include more than one repository in a pull request. Make sure you have
            specified only one repository name in your request, and then try again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException.#ctor(System.String)">
            <summary>
            Constructs a new MultipleRepositoriesInPullRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MultipleRepositoriesInPullRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of MultipleRepositoriesInPullRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MultipleRepositoriesInPullRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MultipleRepositoriesInPullRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the MultipleRepositoriesInPullRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            <summary>
            The user name is not valid because it has exceeded the character limit for author
            names.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NameLengthExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NameLengthExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NameLengthExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NameLengthExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NameLengthExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of NameLengthExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NameLengthExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NameLengthExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NameLengthExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NameLengthExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NameLengthExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NameLengthExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NameLengthExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.NoChangeException">
            <summary>
            The commit cannot be created because no changes will be made to the repository as
            a result of this commit. A commit must contain at least one change.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NoChangeException.#ctor(System.String)">
            <summary>
            Constructs a new NoChangeException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NoChangeException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NoChangeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NoChangeException.#ctor(System.Exception)">
            <summary>
            Construct instance of NoChangeException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NoChangeException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoChangeException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NoChangeException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoChangeException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NoChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NoChangeException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NoChangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.NumberOfRulesExceededException">
            <summary>
            The approval rule cannot be added. The pull request has the maximum number of approval
            rules associated with it.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRulesExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NumberOfRulesExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRulesExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NumberOfRulesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRulesExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of NumberOfRulesExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRulesExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NumberOfRulesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRulesExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NumberOfRulesExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRulesExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NumberOfRulesExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRulesExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException">
            <summary>
            The maximum number of approval rule templates has been exceeded for this AWS Region.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NumberOfRuleTemplatesExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NumberOfRuleTemplatesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of NumberOfRuleTemplatesExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NumberOfRuleTemplatesExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NumberOfRuleTemplatesExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NumberOfRuleTemplatesExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ObjectTypes">
            <summary>
            Information about the type of an object in a merge operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ObjectTypes.Base">
            <summary>
            Gets and sets the property Base. 
            <para>
            The type of the object in the base commit of the merge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ObjectTypes.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The type of the object in the destination branch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ObjectTypes.Source">
            <summary>
            Gets and sets the property Source. 
            <para>
            The type of the object in the source branch.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.OriginApprovalRuleTemplate">
            <summary>
            Returns information about the template that created the approval rule for a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.OriginApprovalRuleTemplate.ApprovalRuleTemplateId">
            <summary>
            Gets and sets the property ApprovalRuleTemplateId. 
            <para>
            The ID of the template that created the approval rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.OriginApprovalRuleTemplate.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the template that created the approval rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.OverrideAlreadySetException">
            <summary>
            The pull request has already had its approval rules set to override.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideAlreadySetException.#ctor(System.String)">
            <summary>
            Constructs a new OverrideAlreadySetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideAlreadySetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of OverrideAlreadySetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideAlreadySetException.#ctor(System.Exception)">
            <summary>
            Construct instance of OverrideAlreadySetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideAlreadySetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OverrideAlreadySetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideAlreadySetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OverrideAlreadySetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideAlreadySetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the OverrideAlreadySetException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideAlreadySetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesRequest">
            <summary>
            Container for the parameters to the OverridePullRequestApprovalRules operation.
            Sets aside (overrides) all approval rule requirements for a specified pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesRequest.OverrideStatus">
            <summary>
            Gets and sets the property OverrideStatus. 
            <para>
            Whether you want to set aside approval rule requirements for the pull request (OVERRIDE)
            or revoke a previous override and apply approval rule requirements (REVOKE). REVOKE
            status is not stored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request for which you want to override all approval
            rule requirements. To get this information, use <a>GetPullRequest</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesRequest.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The system-generated ID of the most recent revision of the pull request. You cannot
            override approval rules for anything but the most recent revision of a pull request.
            To get the revision ID, use GetPullRequest.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesResponse">
            <summary>
            This is the response object from the OverridePullRequestApprovalRules operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.OverrideStatusRequiredException">
            <summary>
            An override status is required, but no value was provided. Valid values include OVERRIDE
            and REVOKE.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideStatusRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new OverrideStatusRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideStatusRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of OverrideStatusRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideStatusRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of OverrideStatusRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideStatusRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OverrideStatusRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideStatusRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OverrideStatusRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideStatusRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the OverrideStatusRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.OverrideStatusRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            <summary>
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new ParentCommitDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ParentCommitDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of ParentCommitDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParentCommitDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParentCommitDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ParentCommitDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            <summary>
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException.#ctor(System.String)">
            <summary>
            Constructs a new ParentCommitIdOutdatedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ParentCommitIdOutdatedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException.#ctor(System.Exception)">
            <summary>
            Construct instance of ParentCommitIdOutdatedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParentCommitIdOutdatedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParentCommitIdOutdatedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ParentCommitIdOutdatedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            <summary>
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ParentCommitIdRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ParentCommitIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ParentCommitIdRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParentCommitIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ParentCommitIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ParentCommitIdRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ParentCommitIdRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            <summary>
            The specified path does not exist.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new PathDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PathDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of PathDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PathDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PathDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PathDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PathRequiredException">
            <summary>
            The folderPath for a location cannot be null.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new PathRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PathRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of PathRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PathRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PathRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PathRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PathRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest">
            <summary>
            Container for the parameters to the PostCommentForComparedCommit operation.
            Posts a comment on the comparison between two commits.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest.AfterCommitId">
            <summary>
            Gets and sets the property AfterCommitId. 
            <para>
            To establish the directionality of the comparison, the full commit ID of the after
            commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest.BeforeCommitId">
            <summary>
            Gets and sets the property BeforeCommitId. 
            <para>
            To establish the directionality of the comparison, the full commit ID of the before
            commit. Required for commenting on any commit unless that commit is the initial commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            A unique, client-generated idempotency token that, when provided in a request, ensures
            the request cannot be repeated with a changed parameter. If a request is received
            with the same parameters and a token is included, the request returns information
            about the initial request that used that token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The content of the comment you want to make.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            The location of the comparison where you want to comment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to post a comment on the comparison between
            commits.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PostCommentForComparedCommitResponse">
            <summary>
            This is the response object from the PostCommentForComparedCommit operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitResponse.AfterBlobId">
            <summary>
            Gets and sets the property AfterBlobId. 
            <para>
            In the directionality you established, the blob ID of the after blob.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitResponse.AfterCommitId">
            <summary>
            Gets and sets the property AfterCommitId. 
            <para>
            In the directionality you established, the full commit ID of the after commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitResponse.BeforeBlobId">
            <summary>
            Gets and sets the property BeforeBlobId. 
            <para>
            In the directionality you established, the blob ID of the before blob.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitResponse.BeforeCommitId">
            <summary>
            Gets and sets the property BeforeCommitId. 
            <para>
            In the directionality you established, the full commit ID of the before commit.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitResponse.Comment">
            <summary>
            Gets and sets the property Comment. 
            <para>
            The content of the comment you posted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitResponse.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            The location of the comment in the comparison between the two commits.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForComparedCommitResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you posted a comment on the comparison between commits.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PostCommentForPullRequestRequest">
            <summary>
            Container for the parameters to the PostCommentForPullRequest operation.
            Posts a comment on a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestRequest.AfterCommitId">
            <summary>
            Gets and sets the property AfterCommitId. 
            <para>
            The full commit ID of the commit in the source branch that is the current tip of the
            branch for the pull request when you post the comment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestRequest.BeforeCommitId">
            <summary>
            Gets and sets the property BeforeCommitId. 
            <para>
            The full commit ID of the commit in the destination branch that was the tip of the
            branch at the time the pull request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            A unique, client-generated idempotency token that, when provided in a request, ensures
            the request cannot be repeated with a changed parameter. If a request is received
            with the same parameters and a token is included, the request returns information
            about the initial request that used that token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestRequest.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The content of your comment on the change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestRequest.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            The location of the change where you want to post your comment. If no location is
            provided, the comment is posted as a general comment on the pull request difference
            between the before commit ID and the after commit ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to post a comment on a pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PostCommentForPullRequestResponse">
            <summary>
            This is the response object from the PostCommentForPullRequest operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestResponse.AfterBlobId">
            <summary>
            Gets and sets the property AfterBlobId. 
            <para>
            In the directionality of the pull request, the blob ID of the after blob.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestResponse.AfterCommitId">
            <summary>
            Gets and sets the property AfterCommitId. 
            <para>
            The full commit ID of the commit in the destination branch where the pull request
            is merged.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestResponse.BeforeBlobId">
            <summary>
            Gets and sets the property BeforeBlobId. 
            <para>
            In the directionality of the pull request, the blob ID of the before blob.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestResponse.BeforeCommitId">
            <summary>
            Gets and sets the property BeforeCommitId. 
            <para>
            The full commit ID of the commit in the source branch used to create the pull request,
            or in the case of an updated pull request, the full commit ID of the commit used to
            update the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestResponse.Comment">
            <summary>
            Gets and sets the property Comment. 
            <para>
            The content of the comment you posted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestResponse.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            The location of the change where you posted your comment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestResponse.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentForPullRequestResponse.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you posted a comment on a pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PostCommentReplyRequest">
            <summary>
            Container for the parameters to the PostCommentReply operation.
            Posts a comment in reply to an existing comment on a comparison between commits or
            a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentReplyRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            A unique, client-generated idempotency token that, when provided in a request, ensures
            the request cannot be repeated with a changed parameter. If a request is received
            with the same parameters and a token is included, the request returns information
            about the initial request that used that token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentReplyRequest.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The contents of your reply to a comment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentReplyRequest.InReplyTo">
            <summary>
            Gets and sets the property InReplyTo. 
            <para>
            The system-generated ID of the comment to which you want to reply. To get this ID,
            use <a>GetCommentsForComparedCommit</a> or <a>GetCommentsForPullRequest</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PostCommentReplyResponse">
            <summary>
            This is the response object from the PostCommentReply operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PostCommentReplyResponse.Comment">
            <summary>
            Gets and sets the property Comment. 
            <para>
            Information about the reply to a comment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequest">
            <summary>
            Returns information about a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.ApprovalRules">
            <summary>
            Gets and sets the property ApprovalRules. 
            <para>
            The approval rules applied to the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.AuthorArn">
            <summary>
            Gets and sets the property AuthorArn. 
            <para>
            The Amazon Resource Name (ARN) of the user who created the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.ClientRequestToken">
            <summary>
            Gets and sets the property ClientRequestToken. 
            <para>
            A unique, client-generated idempotency token that, when provided in a request, ensures
            the request cannot be repeated with a changed parameter. If a request is received
            with the same parameters and a token is included, the request returns information
            about the initial request that used that token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date and time the pull request was originally created, in timestamp format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The user-defined description of the pull request. This description can be used to
            clarify what should be reviewed and other details of the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.LastActivityDate">
            <summary>
            Gets and sets the property LastActivityDate. 
            <para>
            The day and time of the last user or system activity on the pull request, in timestamp
            format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.PullRequestStatus">
            <summary>
            Gets and sets the property PullRequestStatus. 
            <para>
            The status of the pull request. Pull request status can only change from <code>OPEN</code>
            to <code>CLOSED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.PullRequestTargets">
            <summary>
            Gets and sets the property PullRequestTargets. 
            <para>
            The targets of the pull request, including the source branch and destination branch
            for the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The system-generated revision ID for the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequest.Title">
            <summary>
            Gets and sets the property Title. 
            <para>
            The user-defined title of the pull request. This title is displayed in the list of
            pull requests to other repository users.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            <summary>
            The pull request status cannot be updated because it is already closed.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException.#ctor(System.String)">
            <summary>
            Constructs a new PullRequestAlreadyClosedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PullRequestAlreadyClosedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException.#ctor(System.Exception)">
            <summary>
            Construct instance of PullRequestAlreadyClosedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestAlreadyClosedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestAlreadyClosedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PullRequestAlreadyClosedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            <summary>
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException.#ctor(System.String)">
            <summary>
            Constructs a new PullRequestApprovalRulesNotSatisfiedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PullRequestApprovalRulesNotSatisfiedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException.#ctor(System.Exception)">
            <summary>
            Construct instance of PullRequestApprovalRulesNotSatisfiedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestApprovalRulesNotSatisfiedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestApprovalRulesNotSatisfiedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PullRequestApprovalRulesNotSatisfiedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException">
            <summary>
            The approval cannot be applied because the user approving the pull request matches
            the user who created the pull request. You cannot approve a pull request that you
            created.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException.#ctor(System.String)">
            <summary>
            Constructs a new PullRequestCannotBeApprovedByAuthorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PullRequestCannotBeApprovedByAuthorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException.#ctor(System.Exception)">
            <summary>
            Construct instance of PullRequestCannotBeApprovedByAuthorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestCannotBeApprovedByAuthorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestCannotBeApprovedByAuthorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PullRequestCannotBeApprovedByAuthorException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestCreatedEventMetadata">
            <summary>
            Metadata about the pull request that is used when comparing the pull request source
            with its destination.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestCreatedEventMetadata.DestinationCommitId">
            <summary>
            Gets and sets the property DestinationCommitId. 
            <para>
            The commit ID of the tip of the branch specified as the destination branch when the
            pull request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestCreatedEventMetadata.MergeBase">
            <summary>
            Gets and sets the property MergeBase. 
            <para>
            The commit ID of the most recent commit that the source branch and the destination
            branch have in common.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestCreatedEventMetadata.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where the pull request was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestCreatedEventMetadata.SourceCommitId">
            <summary>
            Gets and sets the property SourceCommitId. 
            <para>
            The commit ID on the source branch used when the pull request was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            <summary>
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new PullRequestDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PullRequestDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of PullRequestDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PullRequestDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestEvent">
            <summary>
            Returns information about a pull request event.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.ActorArn">
            <summary>
            Gets and sets the property ActorArn. 
            <para>
            The Amazon Resource Name (ARN) of the user whose actions resulted in the event. Examples
            include updating the pull request with more commits or changing the status of a pull
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.ApprovalRuleEventMetadata">
            <summary>
            Gets and sets the property ApprovalRuleEventMetadata. 
            <para>
            Information about a pull request event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.ApprovalRuleOverriddenEventMetadata">
            <summary>
            Gets and sets the property ApprovalRuleOverriddenEventMetadata. 
            <para>
            Information about an approval rule override event for a pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.ApprovalStateChangedEventMetadata">
            <summary>
            Gets and sets the property ApprovalStateChangedEventMetadata. 
            <para>
            Information about an approval state change for a pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.EventDate">
            <summary>
            Gets and sets the property EventDate. 
            <para>
            The day and time of the pull request event, in timestamp format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.PullRequestCreatedEventMetadata">
            <summary>
            Gets and sets the property PullRequestCreatedEventMetadata. 
            <para>
            Information about the source and destination branches for the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.PullRequestEventType">
            <summary>
            Gets and sets the property PullRequestEventType. 
            <para>
            The type of the pull request event (for example, a status change event (PULL_REQUEST_STATUS_CHANGED)
            or update event (PULL_REQUEST_SOURCE_REFERENCE_UPDATED)).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.PullRequestMergedStateChangedEventMetadata">
            <summary>
            Gets and sets the property PullRequestMergedStateChangedEventMetadata. 
            <para>
            Information about the change in mergability state for the pull request event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.PullRequestSourceReferenceUpdatedEventMetadata">
            <summary>
            Gets and sets the property PullRequestSourceReferenceUpdatedEventMetadata. 
            <para>
            Information about the updated source branch for the pull request event. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestEvent.PullRequestStatusChangedEventMetadata">
            <summary>
            Gets and sets the property PullRequestStatusChangedEventMetadata. 
            <para>
            Information about the change in status for the pull request event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            <summary>
            A pull request ID is required, but none was provided.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestIdRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new PullRequestIdRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestIdRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PullRequestIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestIdRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of PullRequestIdRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestIdRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestIdRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestIdRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PullRequestIdRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestIdRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestMergedStateChangedEventMetadata">
            <summary>
            Returns information about the change in the merge state for a pull request event.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestMergedStateChangedEventMetadata.DestinationReference">
            <summary>
            Gets and sets the property DestinationReference. 
            <para>
            The name of the branch that the pull request is merged into.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestMergedStateChangedEventMetadata.MergeMetadata">
            <summary>
            Gets and sets the property MergeMetadata. 
            <para>
            Information about the merge state change event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestMergedStateChangedEventMetadata.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where the pull request was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestSourceReferenceUpdatedEventMetadata">
            <summary>
            Information about an update to the source branch of a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestSourceReferenceUpdatedEventMetadata.AfterCommitId">
            <summary>
            Gets and sets the property AfterCommitId. 
            <para>
            The full commit ID of the commit in the source branch that was the tip of the branch
            at the time the pull request was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestSourceReferenceUpdatedEventMetadata.BeforeCommitId">
            <summary>
            Gets and sets the property BeforeCommitId. 
            <para>
            The full commit ID of the commit in the destination branch that was the tip of the
            branch at the time the pull request was updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestSourceReferenceUpdatedEventMetadata.MergeBase">
            <summary>
            Gets and sets the property MergeBase. 
            <para>
            The commit ID of the most recent commit that the source branch and the destination
            branch have in common.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestSourceReferenceUpdatedEventMetadata.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where the pull request was updated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestStatusChangedEventMetadata">
            <summary>
            Information about a change to the status of a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestStatusChangedEventMetadata.PullRequestStatus">
            <summary>
            Gets and sets the property PullRequestStatus. 
            <para>
            The changed status of the pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestStatusRequiredException">
            <summary>
            A pull request status is required, but none was provided.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestStatusRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new PullRequestStatusRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestStatusRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PullRequestStatusRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestStatusRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of PullRequestStatusRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestStatusRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestStatusRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestStatusRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PullRequestStatusRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestStatusRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PullRequestStatusRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PullRequestStatusRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PullRequestTarget">
            <summary>
            Returns information about a pull request target.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestTarget.DestinationCommit">
            <summary>
            Gets and sets the property DestinationCommit. 
            <para>
            The full commit ID that is the tip of the destination branch. This is the commit where
            the pull request was or will be merged.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestTarget.DestinationReference">
            <summary>
            Gets and sets the property DestinationReference. 
            <para>
            The branch of the repository where the pull request changes are merged. Also known
            as the destination branch. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestTarget.MergeBase">
            <summary>
            Gets and sets the property MergeBase. 
            <para>
            The commit ID of the most recent commit that the source branch and the destination
            branch have in common.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestTarget.MergeMetadata">
            <summary>
            Gets and sets the property MergeMetadata. 
            <para>
            Returns metadata about the state of the merge, including whether the merge has been
            made.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestTarget.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the pull request source and destination branches.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestTarget.SourceCommit">
            <summary>
            Gets and sets the property SourceCommit. 
            <para>
            The full commit ID of the tip of the source branch used to create the pull request.
            If the pull request branch is updated by a push while the pull request is open, the
            commit ID changes to reflect the new tip of the branch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PullRequestTarget.SourceReference">
            <summary>
            Gets and sets the property SourceReference. 
            <para>
            The branch of the repository that contains the changes for the pull request. Also
            known as the source branch.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PutCommentReactionRequest">
            <summary>
            Container for the parameters to the PutCommentReaction operation.
            Adds or updates a reaction to a specified comment for the user whose identity is used
            to make the request. You can only add or update a reaction for yourself. You cannot
            add, modify, or delete a reaction for another user.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutCommentReactionRequest.CommentId">
            <summary>
            Gets and sets the property CommentId. 
            <para>
            The ID of the comment to which you want to add or update a reaction.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutCommentReactionRequest.ReactionValue">
            <summary>
            Gets and sets the property ReactionValue. 
            <para>
            The emoji reaction you want to add or update. To remove a reaction, provide a value
            of blank or null. You can also provide the value of none. For information about emoji
            reaction values supported in AWS CodeCommit, see the <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/how-to-commit-comment.html#emoji-reaction-table">AWS
            CodeCommit User Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PutCommentReactionResponse">
            <summary>
            This is the response object from the PutCommentReaction operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PutFileEntry">
            <summary>
            Information about a file added or updated as part of a commit.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileEntry.FileContent">
            <summary>
            Gets and sets the property FileContent. 
            <para>
            The content of the file, if a source file is not specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileEntry.FileMode">
            <summary>
            Gets and sets the property FileMode. 
            <para>
            The extrapolated file mode permissions for the file. Valid values include EXECUTABLE
            and NORMAL.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileEntry.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The full path to the file in the repository, including the name of the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileEntry.SourceFile">
            <summary>
            Gets and sets the property SourceFile. 
            <para>
            The name and full path of the file that contains the changes you want to make as part
            of the commit, if you are not providing the file content directly.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PutFileEntryConflictException">
            <summary>
            The commit cannot be created because one or more files specified in the commit reference
            both a file and a folder.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PutFileEntryConflictException.#ctor(System.String)">
            <summary>
            Constructs a new PutFileEntryConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PutFileEntryConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PutFileEntryConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PutFileEntryConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of PutFileEntryConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PutFileEntryConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PutFileEntryConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PutFileEntryConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PutFileEntryConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PutFileEntryConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the PutFileEntryConflictException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.PutFileEntryConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PutFileRequest">
            <summary>
            Container for the parameters to the PutFile operation.
            Adds or updates a file in a branch in an AWS CodeCommit repository, and generates
            a commit for the addition in the specified branch.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileRequest.BranchName">
            <summary>
            Gets and sets the property BranchName. 
            <para>
            The name of the branch where you want to add or update the file. If this is an empty
            repository, this branch is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileRequest.CommitMessage">
            <summary>
            Gets and sets the property CommitMessage. 
            <para>
            A message about why this file was added or updated. Although it is optional, a message
            makes the commit history for your repository more useful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileRequest.Email">
            <summary>
            Gets and sets the property Email. 
            <para>
            An email address for the person adding or updating the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileRequest.FileContent">
            <summary>
            Gets and sets the property FileContent. 
            <para>
            The content of the file, in binary object format. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileRequest.FileMode">
            <summary>
            Gets and sets the property FileMode. 
            <para>
            The file mode permissions of the blob. Valid file mode permissions are listed here.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileRequest.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The name of the file you want to add or update, including the relative path to the
            file in the repository.
            </para>
             <note> 
            <para>
            If the path does not currently exist in the repository, the path is created as part
            of adding the file.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the person adding or updating the file. Although it is optional, a name
            makes the commit history for your repository more useful.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileRequest.ParentCommitId">
            <summary>
            Gets and sets the property ParentCommitId. 
            <para>
            The full commit ID of the head commit in the branch where you want to add or update
            the file. If this is an empty repository, no commit ID is required. If this is not
            an empty repository, a commit ID is required. 
            </para>
             
            <para>
            The commit ID must match the ID of the head commit at the time of the operation. Otherwise,
            an error occurs, and the file is not added or updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to add or update the file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PutFileResponse">
            <summary>
            This is the response object from the PutFile operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileResponse.BlobId">
            <summary>
            Gets and sets the property BlobId. 
            <para>
            The ID of the blob, which is its SHA-1 pointer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileResponse.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The full SHA ID of the commit that contains this file change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutFileResponse.TreeId">
            <summary>
            Gets and sets the property TreeId. 
            <para>
            The full SHA-1 pointer of the tree information for the commit that contains this file
            change.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PutRepositoryTriggersRequest">
            <summary>
            Container for the parameters to the PutRepositoryTriggers operation.
            Replaces all triggers for a repository. Used to create or delete triggers.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutRepositoryTriggersRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository where you want to create or update the trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutRepositoryTriggersRequest.Triggers">
            <summary>
            Gets and sets the property Triggers. 
            <para>
            The JSON block of configuration information for each trigger.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.PutRepositoryTriggersResponse">
            <summary>
            Represents the output of a put repository triggers operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.PutRepositoryTriggersResponse.ConfigurationId">
            <summary>
            Gets and sets the property ConfigurationId. 
            <para>
            The system-generated unique ID for the create or update operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ReactionForComment">
            <summary>
            Information about the reaction values provided by users on a comment.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ReactionForComment.Reaction">
            <summary>
            Gets and sets the property Reaction. 
            <para>
            The reaction for a specified comment.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ReactionForComment.ReactionsFromDeletedUsersCount">
            <summary>
            Gets and sets the property ReactionsFromDeletedUsersCount. 
            <para>
            A numerical count of users who reacted with the specified emoji whose identities have
            been subsequently deleted from IAM. While these IAM users or roles no longer exist,
            the reactions might still appear in total reaction counts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ReactionForComment.ReactionUsers">
            <summary>
            Gets and sets the property ReactionUsers. 
            <para>
            The Amazon Resource Names (ARNs) of users who have provided reactions to the comment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ReactionLimitExceededException">
            <summary>
            The number of reactions has been exceeded. Reactions are limited to one reaction per
            user for each individual comment ID.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ReactionLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ReactionLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ReactionLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReactionLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReactionLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ReactionLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ReactionValueFormats">
            <summary>
            Information about the values for reactions to a comment. AWS CodeCommit supports a
            limited set of reactions.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ReactionValueFormats.Emoji">
            <summary>
            Gets and sets the property Emoji. 
            <para>
            The Emoji Version 1.0 graphic of the reaction. These graphics are interpreted slightly
            differently on different operating systems.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ReactionValueFormats.ShortCode">
            <summary>
            Gets and sets the property ShortCode. 
            <para>
            The emoji short code for the reaction. Short codes are interpreted slightly differently
            on different operating systems. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ReactionValueFormats.Unicode">
            <summary>
            Gets and sets the property Unicode. 
            <para>
            The Unicode codepoint for the reaction.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ReactionValueRequiredException">
            <summary>
            A reaction value is required.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionValueRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ReactionValueRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionValueRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ReactionValueRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionValueRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ReactionValueRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionValueRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReactionValueRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionValueRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReactionValueRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionValueRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ReactionValueRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReactionValueRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ReferenceDoesNotExistException">
            <summary>
            The specified reference does not exist. You must provide a full commit ID.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new ReferenceDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ReferenceDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of ReferenceDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReferenceDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReferenceDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ReferenceDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ReferenceNameRequiredException">
            <summary>
            A reference name is required, but none was provided.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceNameRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ReferenceNameRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceNameRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ReferenceNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceNameRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ReferenceNameRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceNameRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReferenceNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceNameRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReferenceNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceNameRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ReferenceNameRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceNameRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException">
            <summary>
            The specified reference is not a supported type.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException.#ctor(System.String)">
            <summary>
            Constructs a new ReferenceTypeNotSupportedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ReferenceTypeNotSupportedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException.#ctor(System.Exception)">
            <summary>
            Construct instance of ReferenceTypeNotSupportedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReferenceTypeNotSupportedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReferenceTypeNotSupportedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ReferenceTypeNotSupportedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ReplaceContentEntry">
            <summary>
            Information about a replacement content entry in the conflict of a merge or pull request
            operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ReplaceContentEntry.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The base-64 encoded content to use when the replacement type is USE_NEW_CONTENT.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ReplaceContentEntry.FileMode">
            <summary>
            Gets and sets the property FileMode. 
            <para>
            The file mode to apply during conflict resoltion.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ReplaceContentEntry.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The path of the conflicting file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ReplaceContentEntry.ReplacementType">
            <summary>
            Gets and sets the property ReplacementType. 
            <para>
            The replacement type to use when determining how to resolve the conflict.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            <summary>
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementContentRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ReplacementContentRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementContentRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ReplacementContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementContentRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ReplacementContentRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementContentRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReplacementContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementContentRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReplacementContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementContentRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ReplacementContentRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementContentRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            <summary>
            A replacement type is required.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementTypeRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ReplacementTypeRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementTypeRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ReplacementTypeRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementTypeRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ReplacementTypeRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementTypeRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReplacementTypeRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementTypeRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ReplacementTypeRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementTypeRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ReplacementTypeRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ReplacementTypeRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            <summary>
            The specified repository does not exist.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryDoesNotExistException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryDoesNotExistException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryLimitExceededException">
            <summary>
            A repository resource limit was exceeded.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryMetadata">
            <summary>
            Information about a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryMetadata.AccountId">
            <summary>
            Gets and sets the property AccountId. 
            <para>
            The ID of the AWS account associated with the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryMetadata.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryMetadata.CloneUrlHttp">
            <summary>
            Gets and sets the property CloneUrlHttp. 
            <para>
            The URL to use for cloning the repository over HTTPS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryMetadata.CloneUrlSsh">
            <summary>
            Gets and sets the property CloneUrlSsh. 
            <para>
            The URL to use for cloning the repository over SSH.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryMetadata.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date and time the repository was created, in timestamp format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryMetadata.DefaultBranch">
            <summary>
            Gets and sets the property DefaultBranch. 
            <para>
            The repository's default branch name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryMetadata.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date and time the repository was last modified, in timestamp format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryMetadata.RepositoryDescription">
            <summary>
            Gets and sets the property RepositoryDescription. 
            <para>
            A comment or description about the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryMetadata.RepositoryId">
            <summary>
            Gets and sets the property RepositoryId. 
            <para>
            The ID of the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryMetadata.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The repository's name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryNameExistsException">
            <summary>
            The specified repository name already exists.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameExistsException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryNameExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryNameExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryNameExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNameExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNameExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryNameExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryNameIdPair">
            <summary>
            Information about a repository name and ID.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryNameIdPair.RepositoryId">
            <summary>
            Gets and sets the property RepositoryId. 
            <para>
            The ID associated with the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryNameIdPair.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name associated with the repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            <summary>
            A repository name is required, but was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryNameRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryNameRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryNameRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNameRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            <summary>
            At least one repository name object is required, but was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNamesRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryNamesRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNamesRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryNamesRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNamesRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryNamesRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNamesRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNamesRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNamesRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNamesRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNamesRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryNamesRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNamesRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            <summary>
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryNotAssociatedWithPullRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryNotAssociatedWithPullRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryNotAssociatedWithPullRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNotAssociatedWithPullRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryNotAssociatedWithPullRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryNotAssociatedWithPullRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryTrigger">
            <summary>
            Information about a trigger for a repository.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryTrigger.Branches">
            <summary>
            Gets and sets the property Branches. 
            <para>
            The branches to be included in the trigger configuration. If you specify an empty
            array, the trigger applies to all branches.
            </para>
             <note> 
            <para>
            Although no content is required in the array, you must include the array itself.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryTrigger.CustomData">
            <summary>
            Gets and sets the property CustomData. 
            <para>
            Any custom data associated with the trigger to be included in the information sent
            to the target of the trigger.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryTrigger.DestinationArn">
            <summary>
            Gets and sets the property DestinationArn. 
            <para>
            The ARN of the resource that is the target for a trigger (for example, the ARN of
            a topic in Amazon SNS).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryTrigger.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            The repository events that cause the trigger to run actions in another service, such
            as sending a notification through Amazon SNS. 
            </para>
             <note> 
            <para>
            The valid value "all" cannot be used with any other values.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryTrigger.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the trigger.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException">
            <summary>
            At least one branch name is required, but was not specified in the trigger configuration.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryTriggerBranchNameListRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryTriggerBranchNameListRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryTriggerBranchNameListRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryTriggerBranchNameListRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryTriggerBranchNameListRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryTriggerBranchNameListRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException">
            <summary>
            A destination ARN for the target service for the trigger is required, but was not
            specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryTriggerDestinationArnRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryTriggerDestinationArnRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryTriggerDestinationArnRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryTriggerDestinationArnRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryTriggerDestinationArnRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryTriggerDestinationArnRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException">
            <summary>
            At least one event for the trigger is required, but was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryTriggerEventsListRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryTriggerEventsListRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryTriggerEventsListRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryTriggerEventsListRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryTriggerEventsListRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryTriggerEventsListRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryTriggerExecutionFailure">
            <summary>
            A trigger failed to run.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryTriggerExecutionFailure.FailureMessage">
            <summary>
            Gets and sets the property FailureMessage. 
            <para>
            Message information about the trigger that did not run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.RepositoryTriggerExecutionFailure.Trigger">
            <summary>
            Gets and sets the property Trigger. 
            <para>
            The name of the trigger that did not run.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException">
            <summary>
            A name for the trigger is required, but was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryTriggerNameRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryTriggerNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryTriggerNameRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryTriggerNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryTriggerNameRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryTriggerNameRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException">
            <summary>
            The list of triggers for the repository is required, but was not specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new RepositoryTriggersListRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RepositoryTriggersListRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of RepositoryTriggersListRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryTriggersListRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RepositoryTriggersListRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RepositoryTriggersListRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            <summary>
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ResourceArnRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceArnRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ResourceArnRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceArnRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ResourceArnRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceArnRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ResourceArnRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceArnRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ResourceArnRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceArnRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ResourceArnRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceArnRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ResourceArnRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RestrictedSourceFileException">
            <summary>
            The commit cannot be created because one of the changes specifies copying or moving
            a .gitkeep file.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RestrictedSourceFileException.#ctor(System.String)">
            <summary>
            Constructs a new RestrictedSourceFileException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RestrictedSourceFileException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RestrictedSourceFileException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RestrictedSourceFileException.#ctor(System.Exception)">
            <summary>
            Construct instance of RestrictedSourceFileException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RestrictedSourceFileException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RestrictedSourceFileException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RestrictedSourceFileException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RestrictedSourceFileException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RestrictedSourceFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RestrictedSourceFileException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RestrictedSourceFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            <summary>
            A revision ID is required, but was not provided.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionIdRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new RevisionIdRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionIdRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RevisionIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionIdRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of RevisionIdRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionIdRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RevisionIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionIdRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RevisionIdRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionIdRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RevisionIdRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionIdRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            <summary>
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionNotCurrentException.#ctor(System.String)">
            <summary>
            Constructs a new RevisionNotCurrentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionNotCurrentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of RevisionNotCurrentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionNotCurrentException.#ctor(System.Exception)">
            <summary>
            Construct instance of RevisionNotCurrentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionNotCurrentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RevisionNotCurrentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionNotCurrentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of RevisionNotCurrentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionNotCurrentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the RevisionNotCurrentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.RevisionNotCurrentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.SameFileContentException">
            <summary>
            The file was not added or updated because the content of the file is exactly the same
            as the content of that file in the repository and branch that you specified.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SameFileContentException.#ctor(System.String)">
            <summary>
            Constructs a new SameFileContentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SameFileContentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SameFileContentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SameFileContentException.#ctor(System.Exception)">
            <summary>
            Construct instance of SameFileContentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SameFileContentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SameFileContentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SameFileContentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SameFileContentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SameFileContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SameFileContentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SameFileContentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.SamePathRequestException">
            <summary>
            The commit cannot be created because one or more changes in this commit duplicate
            actions in the same file path. For example, you cannot make the same delete request
            to the same file in the same file path twice, or make a delete request and a move
            request to the same file as part of the same commit.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SamePathRequestException.#ctor(System.String)">
            <summary>
            Constructs a new SamePathRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SamePathRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SamePathRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SamePathRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of SamePathRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SamePathRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SamePathRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SamePathRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SamePathRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SamePathRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SamePathRequestException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SamePathRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.SetFileModeEntry">
            <summary>
            Information about the file mode changes.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SetFileModeEntry.FileMode">
            <summary>
            Gets and sets the property FileMode. 
            <para>
            The file mode for the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SetFileModeEntry.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The full path to the file, including the name of the file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException">
            <summary>
            The source branch and destination branch for the pull request are the same. You must
            specify different branches for the source and destination.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException.#ctor(System.String)">
            <summary>
            Constructs a new SourceAndDestinationAreSameException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SourceAndDestinationAreSameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException.#ctor(System.Exception)">
            <summary>
            Construct instance of SourceAndDestinationAreSameException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SourceAndDestinationAreSameException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SourceAndDestinationAreSameException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SourceAndDestinationAreSameException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException">
            <summary>
            The commit cannot be created because no source files or file content have been specified
            for the commit.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new SourceFileOrContentRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SourceFileOrContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of SourceFileOrContentRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SourceFileOrContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SourceFileOrContentRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SourceFileOrContentRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.SourceFileSpecifier">
            <summary>
            Information about a source file that is part of changes made in a commit.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SourceFileSpecifier.FilePath">
            <summary>
            Gets and sets the property FilePath. 
            <para>
            The full path to the file, including the name of the file.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SourceFileSpecifier.IsMove">
            <summary>
            Gets and sets the property IsMove. 
            <para>
            Whether to remove the source file from the parent commit.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.SubModule">
            <summary>
            Returns information about a submodule reference in a repository folder.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SubModule.AbsolutePath">
            <summary>
            Gets and sets the property AbsolutePath. 
            <para>
            The fully qualified path to the folder that contains the reference to the submodule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SubModule.CommitId">
            <summary>
            Gets and sets the property CommitId. 
            <para>
            The commit ID that contains the reference to the submodule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SubModule.RelativePath">
            <summary>
            Gets and sets the property RelativePath. 
            <para>
            The relative path of the submodule from the folder where the query originated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.SymbolicLink">
            <summary>
            Returns information about a symbolic link in a repository folder.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SymbolicLink.AbsolutePath">
            <summary>
            Gets and sets the property AbsolutePath. 
            <para>
            The fully qualified path to the folder that contains the symbolic link.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SymbolicLink.BlobId">
            <summary>
            Gets and sets the property BlobId. 
            <para>
            The blob ID that contains the information about the symbolic link.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SymbolicLink.FileMode">
            <summary>
            Gets and sets the property FileMode. 
            <para>
            The file mode permissions of the blob that cotains information about the symbolic
            link.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.SymbolicLink.RelativePath">
            <summary>
            Gets and sets the property RelativePath. 
            <para>
            The relative path of the symbolic link from the folder where the query originated.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TagKeysListRequiredException">
            <summary>
            A list of tag keys is required. The list cannot be empty or null.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagKeysListRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new TagKeysListRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagKeysListRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TagKeysListRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagKeysListRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of TagKeysListRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagKeysListRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagKeysListRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagKeysListRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagKeysListRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagKeysListRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TagKeysListRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagKeysListRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TagPolicyException">
            <summary>
            The tag policy is not valid.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new TagPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TagPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of TagPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagPolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TagPolicyException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagPolicyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Adds or updates tags for a resource in AWS CodeCommit. For a list of valid resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to which you want to add or update
            tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pair to use when tagging this repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TagsMapRequiredException">
            <summary>
            A map of tags is required.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagsMapRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new TagsMapRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagsMapRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TagsMapRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagsMapRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of TagsMapRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagsMapRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagsMapRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagsMapRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TagsMapRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagsMapRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TagsMapRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TagsMapRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.Target">
            <summary>
            Returns information about a target for a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Target.DestinationReference">
            <summary>
            Gets and sets the property DestinationReference. 
            <para>
            The branch of the repository where the pull request changes are merged. Also known
            as the destination branch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Target.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository that contains the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.Target.SourceReference">
            <summary>
            Gets and sets the property SourceReference. 
            <para>
            The branch of the repository that contains the changes for the pull request. Also
            known as the source branch.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TargetRequiredException">
            <summary>
            A pull request target is required. It cannot be empty or null. A pull request target
            must contain the full values for the repository name, source branch, and destination
            branch for the pull request.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new TargetRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TargetRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of TargetRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TargetRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TargetsRequiredException">
            <summary>
            An array of target objects is required. It cannot be empty or null.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetsRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new TargetsRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetsRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TargetsRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetsRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of TargetsRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetsRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetsRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetsRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TargetsRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetsRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TargetsRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TargetsRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TestRepositoryTriggersRequest">
            <summary>
            Container for the parameters to the TestRepositoryTriggers operation.
            Tests the functionality of repository triggers by sending information to the trigger
            target. If real data is available in the repository, the test sends data from the
            last commit. If no data is available, sample data is generated.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.TestRepositoryTriggersRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository in which to test the triggers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.TestRepositoryTriggersRequest.Triggers">
            <summary>
            Gets and sets the property Triggers. 
            <para>
            The list of triggers to test.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TestRepositoryTriggersResponse">
            <summary>
            Represents the output of a test repository triggers operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.TestRepositoryTriggersResponse.FailedExecutions">
            <summary>
            Gets and sets the property FailedExecutions. 
            <para>
            The list of triggers that were not tested. This list provides the names of the triggers
            that could not be tested, separated by commas.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.TestRepositoryTriggersResponse.SuccessfulExecutions">
            <summary>
            Gets and sets the property SuccessfulExecutions. 
            <para>
            The list of triggers that were successfully tested. This list provides the names of
            the triggers that were successfully tested, separated by commas.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            <summary>
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException.#ctor(System.String)">
            <summary>
            Constructs a new TipOfSourceReferenceIsDifferentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TipOfSourceReferenceIsDifferentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException.#ctor(System.Exception)">
            <summary>
            Construct instance of TipOfSourceReferenceIsDifferentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TipOfSourceReferenceIsDifferentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TipOfSourceReferenceIsDifferentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TipOfSourceReferenceIsDifferentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            <summary>
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipsDivergenceExceededException.#ctor(System.String)">
            <summary>
            Constructs a new TipsDivergenceExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipsDivergenceExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TipsDivergenceExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipsDivergenceExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of TipsDivergenceExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipsDivergenceExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TipsDivergenceExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipsDivergenceExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TipsDivergenceExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipsDivergenceExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TipsDivergenceExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TipsDivergenceExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TitleRequiredException">
            <summary>
            A pull request title is required. It cannot be empty or null.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TitleRequiredException.#ctor(System.String)">
            <summary>
            Constructs a new TitleRequiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TitleRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TitleRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TitleRequiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of TitleRequiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TitleRequiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TitleRequiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TitleRequiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TitleRequiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TitleRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TitleRequiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TitleRequiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.TooManyTagsException">
            <summary>
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TooManyTagsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyTagsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TooManyTagsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TooManyTagsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TooManyTagsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TooManyTagsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TooManyTagsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TooManyTagsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.CodeCommit.Model.TooManyTagsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Removes tags for a resource in AWS CodeCommit. For a list of valid resources in AWS
            CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) of the resource to which you want to remove tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The tag key for each tag that you want to remove from the resource.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentRequest">
            <summary>
            Container for the parameters to the UpdateApprovalRuleTemplateContent operation.
            Updates the content of an approval rule template. You can change the number of required
            approvals, the membership of the approval rule, and whether an approval pool is defined.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentRequest.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the approval rule template where you want to update the content of the
            rule. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentRequest.ExistingRuleContentSha256">
            <summary>
            Gets and sets the property ExistingRuleContentSha256. 
            <para>
            The SHA-256 hash signature for the content of the approval rule. You can retrieve
            this information by using <a>GetPullRequest</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentRequest.NewRuleContent">
            <summary>
            Gets and sets the property NewRuleContent. 
            <para>
            The content that replaces the existing content of the rule. Content statements must
            be complete. You cannot provide only the changes.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentResponse">
            <summary>
            This is the response object from the UpdateApprovalRuleTemplateContent operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentResponse.ApprovalRuleTemplate">
            <summary>
            Gets and sets the property ApprovalRuleTemplate.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionRequest">
            <summary>
            Container for the parameters to the UpdateApprovalRuleTemplateDescription operation.
            Updates the description for a specified approval rule template.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionRequest.ApprovalRuleTemplateDescription">
            <summary>
            Gets and sets the property ApprovalRuleTemplateDescription. 
            <para>
            The updated description of the approval rule template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionRequest.ApprovalRuleTemplateName">
            <summary>
            Gets and sets the property ApprovalRuleTemplateName. 
            <para>
            The name of the template for which you want to update the description.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionResponse">
            <summary>
            This is the response object from the UpdateApprovalRuleTemplateDescription operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionResponse.ApprovalRuleTemplate">
            <summary>
            Gets and sets the property ApprovalRuleTemplate. 
            <para>
            The structure and content of the updated approval rule template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameRequest">
            <summary>
            Container for the parameters to the UpdateApprovalRuleTemplateName operation.
            Updates the name of a specified approval rule template.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameRequest.NewApprovalRuleTemplateName">
            <summary>
            Gets and sets the property NewApprovalRuleTemplateName. 
            <para>
            The new name you want to apply to the approval rule template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameRequest.OldApprovalRuleTemplateName">
            <summary>
            Gets and sets the property OldApprovalRuleTemplateName. 
            <para>
            The current name of the approval rule template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameResponse">
            <summary>
            This is the response object from the UpdateApprovalRuleTemplateName operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameResponse.ApprovalRuleTemplate">
            <summary>
            Gets and sets the property ApprovalRuleTemplate. 
            <para>
            The structure and content of the updated approval rule template.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateCommentRequest">
            <summary>
            Container for the parameters to the UpdateComment operation.
            Replaces the contents of a comment.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateCommentRequest.CommentId">
            <summary>
            Gets and sets the property CommentId. 
            <para>
            The system-generated ID of the comment you want to update. To get this ID, use <a>GetCommentsForComparedCommit</a>
            or <a>GetCommentsForPullRequest</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateCommentRequest.Content">
            <summary>
            Gets and sets the property Content. 
            <para>
            The updated content to replace the existing content of the comment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateCommentResponse">
            <summary>
            This is the response object from the UpdateComment operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateCommentResponse.Comment">
            <summary>
            Gets and sets the property Comment. 
            <para>
            Information about the updated comment.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateDefaultBranchRequest">
            <summary>
            Container for the parameters to the UpdateDefaultBranch operation.
            Sets or changes the default branch name for the specified repository.
            
             <note> 
            <para>
            If you use this operation to change the default branch name to the current default
            branch name, a success message is returned even though the default branch did not
            change.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateDefaultBranchRequest.DefaultBranchName">
            <summary>
            Gets and sets the property DefaultBranchName. 
            <para>
            The name of the branch to set as the default.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateDefaultBranchRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to set or change the default branch for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateDefaultBranchResponse">
            <summary>
            This is the response object from the UpdateDefaultBranch operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentRequest">
            <summary>
            Container for the parameters to the UpdatePullRequestApprovalRuleContent operation.
            Updates the structure of an approval rule created specifically for a pull request.
            For example, you can change the number of required approvers and the approval pool
            for approvers.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentRequest.ApprovalRuleName">
            <summary>
            Gets and sets the property ApprovalRuleName. 
            <para>
            The name of the approval rule you want to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentRequest.ExistingRuleContentSha256">
            <summary>
            Gets and sets the property ExistingRuleContentSha256. 
            <para>
            The SHA-256 hash signature for the content of the approval rule. You can retrieve
            this information by using <a>GetPullRequest</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentRequest.NewRuleContent">
            <summary>
            Gets and sets the property NewRuleContent. 
            <para>
            The updated content for the approval rule.
            </para>
             <note> 
            <para>
            When you update the content of the approval rule, you can specify approvers in an
            approval pool in one of two ways:
            </para>
             <ul> <li> 
            <para>
             <b>CodeCommitApprovers</b>: This option only requires an AWS account and a resource.
            It can be used for both IAM users and federated access users whose name matches the
            provided resource name. This is a very powerful option that offers a great deal of
            flexibility. For example, if you specify the AWS account <i>123456789012</i> and <i>Mary_Major</i>,
            all of the following are counted as approvals coming from that user:
            </para>
             <ul> <li> 
            <para>
            An IAM user in the account (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)
            </para>
             </li> <li> 
            <para>
            A federated user identified in IAM as Mary_Major (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)
            </para>
             </li> </ul> 
            <para>
            This option does not recognize an active session of someone assuming the role of CodeCommitReview
            with a role session name of <i>Mary_Major</i> (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
            unless you include a wildcard (*Mary_Major).
            </para>
             </li> <li> 
            <para>
             <b>Fully qualified ARN</b>: This option allows you to specify the fully qualified
            Amazon Resource Name (ARN) of the IAM user or role. 
            </para>
             </li> </ul> 
            <para>
            For more information about IAM ARNs, wildcards, and formats, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM
            Identifiers</a> in the <i>IAM User Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentResponse">
            <summary>
            This is the response object from the UpdatePullRequestApprovalRuleContent operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentResponse.ApprovalRule">
            <summary>
            Gets and sets the property ApprovalRule. 
            <para>
            Information about the updated approval rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateRequest">
            <summary>
            Container for the parameters to the UpdatePullRequestApprovalState operation.
            Updates the state of a user's approval on a pull request. The user is derived from
            the signed-in account when the request is made.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateRequest.ApprovalState">
            <summary>
            Gets and sets the property ApprovalState. 
            <para>
            The approval state to associate with the user on the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateRequest.RevisionId">
            <summary>
            Gets and sets the property RevisionId. 
            <para>
            The system-generated ID of the revision.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateResponse">
            <summary>
            This is the response object from the UpdatePullRequestApprovalState operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdatePullRequestDescriptionRequest">
            <summary>
            Container for the parameters to the UpdatePullRequestDescription operation.
            Replaces the contents of the description of a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestDescriptionRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The updated content of the description for the pull request. This content replaces
            the existing description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestDescriptionRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdatePullRequestDescriptionResponse">
            <summary>
            This is the response object from the UpdatePullRequestDescription operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestDescriptionResponse.PullRequest">
            <summary>
            Gets and sets the property PullRequest. 
            <para>
            Information about the updated pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdatePullRequestStatusRequest">
            <summary>
            Container for the parameters to the UpdatePullRequestStatus operation.
            Updates the status of a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestStatusRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestStatusRequest.PullRequestStatus">
            <summary>
            Gets and sets the property PullRequestStatus. 
            <para>
            The status of the pull request. The only valid operations are to update the status
            from <code>OPEN</code> to <code>OPEN</code>, <code>OPEN</code> to <code>CLOSED</code>
            or from <code>CLOSED</code> to <code>CLOSED</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdatePullRequestStatusResponse">
            <summary>
            This is the response object from the UpdatePullRequestStatus operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestStatusResponse.PullRequest">
            <summary>
            Gets and sets the property PullRequest. 
            <para>
            Information about the pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdatePullRequestTitleRequest">
            <summary>
            Container for the parameters to the UpdatePullRequestTitle operation.
            Replaces the title of a pull request.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestTitleRequest.PullRequestId">
            <summary>
            Gets and sets the property PullRequestId. 
            <para>
            The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestTitleRequest.Title">
            <summary>
            Gets and sets the property Title. 
            <para>
            The updated title of the pull request. This replaces the existing title.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdatePullRequestTitleResponse">
            <summary>
            This is the response object from the UpdatePullRequestTitle operation.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdatePullRequestTitleResponse.PullRequest">
            <summary>
            Gets and sets the property PullRequest. 
            <para>
            Information about the updated pull request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateRepositoryDescriptionRequest">
            <summary>
            Container for the parameters to the UpdateRepositoryDescription operation.
            Sets or changes the comment or description for a repository.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateRepositoryDescriptionRequest.RepositoryDescription">
            <summary>
            Gets and sets the property RepositoryDescription. 
            <para>
            The new comment or description for the specified repository. Repository descriptions
            are limited to 1,000 characters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateRepositoryDescriptionRequest.RepositoryName">
            <summary>
            Gets and sets the property RepositoryName. 
            <para>
            The name of the repository to set or change the comment or description for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateRepositoryDescriptionResponse">
            <summary>
            This is the response object from the UpdateRepositoryDescription operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateRepositoryNameRequest">
            <summary>
            Container for the parameters to the UpdateRepositoryName operation.
            Renames a repository. The repository name must be unique across the calling AWS account.
            Repository names are limited to 100 alphanumeric, dash, and underscore characters,
            and cannot include certain characters. The suffix .git is prohibited. For more information
            about the limits on repository names, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">Limits</a>
            in the AWS CodeCommit User Guide.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateRepositoryNameRequest.NewName">
            <summary>
            Gets and sets the property NewName. 
            <para>
            The new name for the repository.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UpdateRepositoryNameRequest.OldName">
            <summary>
            Gets and sets the property OldName. 
            <para>
            The current name of the repository.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UpdateRepositoryNameResponse">
            <summary>
            This is the response object from the UpdateRepositoryName operation.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.UserInfo">
            <summary>
            Information about the user who made a specified commit.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UserInfo.Date">
            <summary>
            Gets and sets the property Date. 
            <para>
            The date when the specified commit was commited, in timestamp format with GMT offset.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UserInfo.Email">
            <summary>
            Gets and sets the property Email. 
            <para>
            The email address associated with the user who made the commit, if any.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.UserInfo.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the user who made the specified commit.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory">
             <summary>
             Paginators for the CodeCommit service
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.DescribeMergeConflicts(Amazon.CodeCommit.Model.DescribeMergeConflictsRequest)">
             <summary>
             Paginator for DescribeMergeConflicts operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.DescribePullRequestEvents(Amazon.CodeCommit.Model.DescribePullRequestEventsRequest)">
             <summary>
             Paginator for DescribePullRequestEvents operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.GetCommentReactions(Amazon.CodeCommit.Model.GetCommentReactionsRequest)">
             <summary>
             Paginator for GetCommentReactions operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.GetCommentsForComparedCommit(Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest)">
             <summary>
             Paginator for GetCommentsForComparedCommit operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.GetCommentsForPullRequest(Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest)">
             <summary>
             Paginator for GetCommentsForPullRequest operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.GetDifferences(Amazon.CodeCommit.Model.GetDifferencesRequest)">
             <summary>
             Paginator for GetDifferences operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.GetMergeConflicts(Amazon.CodeCommit.Model.GetMergeConflictsRequest)">
             <summary>
             Paginator for GetMergeConflicts operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.ListApprovalRuleTemplates(Amazon.CodeCommit.Model.ListApprovalRuleTemplatesRequest)">
             <summary>
             Paginator for ListApprovalRuleTemplates operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.ListAssociatedApprovalRuleTemplatesForRepository(Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest)">
             <summary>
             Paginator for ListAssociatedApprovalRuleTemplatesForRepository operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.ListBranches(Amazon.CodeCommit.Model.ListBranchesRequest)">
             <summary>
             Paginator for ListBranches operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.ListPullRequests(Amazon.CodeCommit.Model.ListPullRequestsRequest)">
             <summary>
             Paginator for ListPullRequests operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.ListRepositories(Amazon.CodeCommit.Model.ListRepositoriesRequest)">
             <summary>
             Paginator for ListRepositories operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.CodeCommitPaginatorFactory.ListRepositoriesForApprovalRuleTemplate(Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest)">
             <summary>
             Paginator for ListRepositoriesForApprovalRuleTemplate operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DescribeMergeConflictsPaginator">
            <summary>
            Base class for DescribeMergeConflicts paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribeMergeConflictsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.DescribePullRequestEventsPaginator">
            <summary>
            Base class for DescribePullRequestEvents paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.DescribePullRequestEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentReactionsPaginator">
            <summary>
            Base class for GetCommentReactions paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentReactionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentsForComparedCommitPaginator">
            <summary>
            Base class for GetCommentsForComparedCommit paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForComparedCommitPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetCommentsForPullRequestPaginator">
            <summary>
            Base class for GetCommentsForPullRequest paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetCommentsForPullRequestPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetDifferencesPaginator">
            <summary>
            Base class for GetDifferences paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetDifferencesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.GetMergeConflictsPaginator">
            <summary>
            Base class for GetMergeConflicts paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.GetMergeConflictsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory">
             <summary>
             Paginators for the CodeCommit service
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.DescribeMergeConflicts(Amazon.CodeCommit.Model.DescribeMergeConflictsRequest)">
             <summary>
             Paginator for DescribeMergeConflicts operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.DescribePullRequestEvents(Amazon.CodeCommit.Model.DescribePullRequestEventsRequest)">
             <summary>
             Paginator for DescribePullRequestEvents operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.GetCommentReactions(Amazon.CodeCommit.Model.GetCommentReactionsRequest)">
             <summary>
             Paginator for GetCommentReactions operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.GetCommentsForComparedCommit(Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest)">
             <summary>
             Paginator for GetCommentsForComparedCommit operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.GetCommentsForPullRequest(Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest)">
             <summary>
             Paginator for GetCommentsForPullRequest operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.GetDifferences(Amazon.CodeCommit.Model.GetDifferencesRequest)">
             <summary>
             Paginator for GetDifferences operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.GetMergeConflicts(Amazon.CodeCommit.Model.GetMergeConflictsRequest)">
             <summary>
             Paginator for GetMergeConflicts operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.ListApprovalRuleTemplates(Amazon.CodeCommit.Model.ListApprovalRuleTemplatesRequest)">
             <summary>
             Paginator for ListApprovalRuleTemplates operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.ListAssociatedApprovalRuleTemplatesForRepository(Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest)">
             <summary>
             Paginator for ListAssociatedApprovalRuleTemplatesForRepository operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.ListBranches(Amazon.CodeCommit.Model.ListBranchesRequest)">
             <summary>
             Paginator for ListBranches operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.ListPullRequests(Amazon.CodeCommit.Model.ListPullRequestsRequest)">
             <summary>
             Paginator for ListPullRequests operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.ListRepositories(Amazon.CodeCommit.Model.ListRepositoriesRequest)">
             <summary>
             Paginator for ListRepositories operation
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.Model.ICodeCommitPaginatorFactory.ListRepositoriesForApprovalRuleTemplate(Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest)">
             <summary>
             Paginator for ListRepositoriesForApprovalRuleTemplate operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IDescribeMergeConflictsPaginator">
             <summary>
             Paginator for the DescribeMergeConflicts operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IDescribeMergeConflictsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IDescribePullRequestEventsPaginator">
             <summary>
             Paginator for the DescribePullRequestEvents operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IDescribePullRequestEventsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IGetCommentReactionsPaginator">
             <summary>
             Paginator for the GetCommentReactions operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IGetCommentReactionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IGetCommentsForComparedCommitPaginator">
             <summary>
             Paginator for the GetCommentsForComparedCommit operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IGetCommentsForComparedCommitPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IGetCommentsForPullRequestPaginator">
             <summary>
             Paginator for the GetCommentsForPullRequest operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IGetCommentsForPullRequestPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IGetDifferencesPaginator">
             <summary>
             Paginator for the GetDifferences operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IGetDifferencesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IGetMergeConflictsPaginator">
             <summary>
             Paginator for the GetMergeConflicts operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IGetMergeConflictsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IListApprovalRuleTemplatesPaginator">
             <summary>
             Paginator for the ListApprovalRuleTemplates operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IListApprovalRuleTemplatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IListAssociatedApprovalRuleTemplatesForRepositoryPaginator">
             <summary>
             Paginator for the ListAssociatedApprovalRuleTemplatesForRepository operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IListAssociatedApprovalRuleTemplatesForRepositoryPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IListBranchesPaginator">
             <summary>
             Paginator for the ListBranches operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IListBranchesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IListBranchesPaginator.Branches">
            <summary>
            Enumerable containing all of the Branches
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IListPullRequestsPaginator">
             <summary>
             Paginator for the ListPullRequests operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IListPullRequestsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IListRepositoriesForApprovalRuleTemplatePaginator">
             <summary>
             Paginator for the ListRepositoriesForApprovalRuleTemplate operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IListRepositoriesForApprovalRuleTemplatePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.IListRepositoriesPaginator">
             <summary>
             Paginator for the ListRepositories operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IListRepositoriesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.IListRepositoriesPaginator.Repositories">
            <summary>
            Enumerable containing all of the Repositories
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListApprovalRuleTemplatesPaginator">
            <summary>
            Base class for ListApprovalRuleTemplates paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListApprovalRuleTemplatesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryPaginator">
            <summary>
            Base class for ListAssociatedApprovalRuleTemplatesForRepository paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListBranchesPaginator">
            <summary>
            Base class for ListBranches paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListBranchesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListBranchesPaginator.Branches">
            <summary>
            Enumerable containing all of the Branches
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListPullRequestsPaginator">
            <summary>
            Base class for ListPullRequests paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListPullRequestsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplatePaginator">
            <summary>
            Base class for ListRepositoriesForApprovalRuleTemplate paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplatePaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.Model.ListRepositoriesPaginator">
            <summary>
            Base class for ListRepositories paginators.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.Model.ListRepositoriesPaginator.Repositories">
            <summary>
            Enumerable containing all of the Repositories
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.AmazonCodeCommitRequest">
            <summary>
            Base class for CodeCommit operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CodeCommit.ApprovalState">
            <summary>
            Constants used for properties of type ApprovalState.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ApprovalState.APPROVE">
            <summary>
            Constant APPROVE for ApprovalState
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ApprovalState.REVOKE">
            <summary>
            Constant REVOKE for ApprovalState
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ApprovalState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ApprovalState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.ApprovalState.op_Implicit(System.String)~Amazon.CodeCommit.ApprovalState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.ChangeTypeEnum">
            <summary>
            Constants used for properties of type ChangeTypeEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ChangeTypeEnum.A">
            <summary>
            Constant A for ChangeTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ChangeTypeEnum.D">
            <summary>
            Constant D for ChangeTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ChangeTypeEnum.M">
            <summary>
            Constant M for ChangeTypeEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ChangeTypeEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ChangeTypeEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.ChangeTypeEnum.op_Implicit(System.String)~Amazon.CodeCommit.ChangeTypeEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.ConflictDetailLevelTypeEnum">
            <summary>
            Constants used for properties of type ConflictDetailLevelTypeEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ConflictDetailLevelTypeEnum.FILE_LEVEL">
            <summary>
            Constant FILE_LEVEL for ConflictDetailLevelTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ConflictDetailLevelTypeEnum.LINE_LEVEL">
            <summary>
            Constant LINE_LEVEL for ConflictDetailLevelTypeEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ConflictDetailLevelTypeEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ConflictDetailLevelTypeEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.ConflictDetailLevelTypeEnum.op_Implicit(System.String)~Amazon.CodeCommit.ConflictDetailLevelTypeEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.ConflictResolutionStrategyTypeEnum">
            <summary>
            Constants used for properties of type ConflictResolutionStrategyTypeEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ConflictResolutionStrategyTypeEnum.ACCEPT_DESTINATION">
            <summary>
            Constant ACCEPT_DESTINATION for ConflictResolutionStrategyTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ConflictResolutionStrategyTypeEnum.ACCEPT_SOURCE">
            <summary>
            Constant ACCEPT_SOURCE for ConflictResolutionStrategyTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ConflictResolutionStrategyTypeEnum.AUTOMERGE">
            <summary>
            Constant AUTOMERGE for ConflictResolutionStrategyTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ConflictResolutionStrategyTypeEnum.NONE">
            <summary>
            Constant NONE for ConflictResolutionStrategyTypeEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ConflictResolutionStrategyTypeEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ConflictResolutionStrategyTypeEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.ConflictResolutionStrategyTypeEnum.op_Implicit(System.String)~Amazon.CodeCommit.ConflictResolutionStrategyTypeEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.FileModeTypeEnum">
            <summary>
            Constants used for properties of type FileModeTypeEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.FileModeTypeEnum.EXECUTABLE">
            <summary>
            Constant EXECUTABLE for FileModeTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.FileModeTypeEnum.NORMAL">
            <summary>
            Constant NORMAL for FileModeTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.FileModeTypeEnum.SYMLINK">
            <summary>
            Constant SYMLINK for FileModeTypeEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.FileModeTypeEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.FileModeTypeEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.FileModeTypeEnum.op_Implicit(System.String)~Amazon.CodeCommit.FileModeTypeEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.MergeOptionTypeEnum">
            <summary>
            Constants used for properties of type MergeOptionTypeEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.MergeOptionTypeEnum.FAST_FORWARD_MERGE">
            <summary>
            Constant FAST_FORWARD_MERGE for MergeOptionTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.MergeOptionTypeEnum.SQUASH_MERGE">
            <summary>
            Constant SQUASH_MERGE for MergeOptionTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.MergeOptionTypeEnum.THREE_WAY_MERGE">
            <summary>
            Constant THREE_WAY_MERGE for MergeOptionTypeEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.MergeOptionTypeEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.MergeOptionTypeEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.MergeOptionTypeEnum.op_Implicit(System.String)~Amazon.CodeCommit.MergeOptionTypeEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.ObjectTypeEnum">
            <summary>
            Constants used for properties of type ObjectTypeEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ObjectTypeEnum.DIRECTORY">
            <summary>
            Constant DIRECTORY for ObjectTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ObjectTypeEnum.FILE">
            <summary>
            Constant FILE for ObjectTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ObjectTypeEnum.GIT_LINK">
            <summary>
            Constant GIT_LINK for ObjectTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ObjectTypeEnum.SYMBOLIC_LINK">
            <summary>
            Constant SYMBOLIC_LINK for ObjectTypeEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ObjectTypeEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ObjectTypeEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.ObjectTypeEnum.op_Implicit(System.String)~Amazon.CodeCommit.ObjectTypeEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.OrderEnum">
            <summary>
            Constants used for properties of type OrderEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.OrderEnum.Ascending">
            <summary>
            Constant Ascending for OrderEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.OrderEnum.Descending">
            <summary>
            Constant Descending for OrderEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.OrderEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.OrderEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.OrderEnum.op_Implicit(System.String)~Amazon.CodeCommit.OrderEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.OverrideStatus">
            <summary>
            Constants used for properties of type OverrideStatus.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.OverrideStatus.OVERRIDE">
            <summary>
            Constant OVERRIDE for OverrideStatus
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.OverrideStatus.REVOKE">
            <summary>
            Constant REVOKE for OverrideStatus
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.OverrideStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.OverrideStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.OverrideStatus.op_Implicit(System.String)~Amazon.CodeCommit.OverrideStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.PullRequestEventType">
            <summary>
            Constants used for properties of type PullRequestEventType.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestEventType.PULL_REQUEST_APPROVAL_RULE_CREATED">
            <summary>
            Constant PULL_REQUEST_APPROVAL_RULE_CREATED for PullRequestEventType
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestEventType.PULL_REQUEST_APPROVAL_RULE_DELETED">
            <summary>
            Constant PULL_REQUEST_APPROVAL_RULE_DELETED for PullRequestEventType
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestEventType.PULL_REQUEST_APPROVAL_RULE_OVERRIDDEN">
            <summary>
            Constant PULL_REQUEST_APPROVAL_RULE_OVERRIDDEN for PullRequestEventType
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestEventType.PULL_REQUEST_APPROVAL_RULE_UPDATED">
            <summary>
            Constant PULL_REQUEST_APPROVAL_RULE_UPDATED for PullRequestEventType
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestEventType.PULL_REQUEST_APPROVAL_STATE_CHANGED">
            <summary>
            Constant PULL_REQUEST_APPROVAL_STATE_CHANGED for PullRequestEventType
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestEventType.PULL_REQUEST_CREATED">
            <summary>
            Constant PULL_REQUEST_CREATED for PullRequestEventType
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestEventType.PULL_REQUEST_MERGE_STATE_CHANGED">
            <summary>
            Constant PULL_REQUEST_MERGE_STATE_CHANGED for PullRequestEventType
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestEventType.PULL_REQUEST_SOURCE_REFERENCE_UPDATED">
            <summary>
            Constant PULL_REQUEST_SOURCE_REFERENCE_UPDATED for PullRequestEventType
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestEventType.PULL_REQUEST_STATUS_CHANGED">
            <summary>
            Constant PULL_REQUEST_STATUS_CHANGED for PullRequestEventType
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.PullRequestEventType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.PullRequestEventType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.PullRequestEventType.op_Implicit(System.String)~Amazon.CodeCommit.PullRequestEventType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.PullRequestStatusEnum">
            <summary>
            Constants used for properties of type PullRequestStatusEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestStatusEnum.CLOSED">
            <summary>
            Constant CLOSED for PullRequestStatusEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.PullRequestStatusEnum.OPEN">
            <summary>
            Constant OPEN for PullRequestStatusEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.PullRequestStatusEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.PullRequestStatusEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.PullRequestStatusEnum.op_Implicit(System.String)~Amazon.CodeCommit.PullRequestStatusEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.RelativeFileVersionEnum">
            <summary>
            Constants used for properties of type RelativeFileVersionEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.RelativeFileVersionEnum.AFTER">
            <summary>
            Constant AFTER for RelativeFileVersionEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.RelativeFileVersionEnum.BEFORE">
            <summary>
            Constant BEFORE for RelativeFileVersionEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.RelativeFileVersionEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.RelativeFileVersionEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.RelativeFileVersionEnum.op_Implicit(System.String)~Amazon.CodeCommit.RelativeFileVersionEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.ReplacementTypeEnum">
            <summary>
            Constants used for properties of type ReplacementTypeEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ReplacementTypeEnum.KEEP_BASE">
            <summary>
            Constant KEEP_BASE for ReplacementTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ReplacementTypeEnum.KEEP_DESTINATION">
            <summary>
            Constant KEEP_DESTINATION for ReplacementTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ReplacementTypeEnum.KEEP_SOURCE">
            <summary>
            Constant KEEP_SOURCE for ReplacementTypeEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.ReplacementTypeEnum.USE_NEW_CONTENT">
            <summary>
            Constant USE_NEW_CONTENT for ReplacementTypeEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ReplacementTypeEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.ReplacementTypeEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.ReplacementTypeEnum.op_Implicit(System.String)~Amazon.CodeCommit.ReplacementTypeEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.RepositoryTriggerEventEnum">
            <summary>
            Constants used for properties of type RepositoryTriggerEventEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.RepositoryTriggerEventEnum.All">
            <summary>
            Constant All for RepositoryTriggerEventEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.RepositoryTriggerEventEnum.CreateReference">
            <summary>
            Constant CreateReference for RepositoryTriggerEventEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.RepositoryTriggerEventEnum.DeleteReference">
            <summary>
            Constant DeleteReference for RepositoryTriggerEventEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.RepositoryTriggerEventEnum.UpdateReference">
            <summary>
            Constant UpdateReference for RepositoryTriggerEventEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.RepositoryTriggerEventEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.RepositoryTriggerEventEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.RepositoryTriggerEventEnum.op_Implicit(System.String)~Amazon.CodeCommit.RepositoryTriggerEventEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.SortByEnum">
            <summary>
            Constants used for properties of type SortByEnum.
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.SortByEnum.LastModifiedDate">
            <summary>
            Constant LastModifiedDate for SortByEnum
            </summary>
        </member>
        <member name="F:Amazon.CodeCommit.SortByEnum.RepositoryName">
            <summary>
            Constant RepositoryName for SortByEnum
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.SortByEnum.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.SortByEnum.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CodeCommit.SortByEnum.op_Implicit(System.String)~Amazon.CodeCommit.SortByEnum">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CodeCommit.AmazonCodeCommitClient">
             <summary>
             Implementation for accessing CodeCommit
            
             AWS CodeCommit 
             <para>
             This is the <i>AWS CodeCommit API Reference</i>. This reference provides descriptions
             of the operations and data types for AWS CodeCommit API along with usage examples.
             </para>
              
             <para>
             You can use the AWS CodeCommit API to work with the following objects:
             </para>
              
             <para>
             Repositories, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>BatchGetRepositories</a>, which returns information about one or more repositories
             associated with your AWS account.
             </para>
              </li> <li> 
             <para>
              <a>CreateRepository</a>, which creates an AWS CodeCommit repository.
             </para>
              </li> <li> 
             <para>
              <a>DeleteRepository</a>, which deletes an AWS CodeCommit repository.
             </para>
              </li> <li> 
             <para>
              <a>GetRepository</a>, which returns information about a specified repository.
             </para>
              </li> <li> 
             <para>
              <a>ListRepositories</a>, which lists all AWS CodeCommit repositories associated with
             your AWS account.
             </para>
              </li> <li> 
             <para>
              <a>UpdateRepositoryDescription</a>, which sets or updates the description of the
             repository.
             </para>
              </li> <li> 
             <para>
              <a>UpdateRepositoryName</a>, which changes the name of the repository. If you change
             the name of a repository, no other users of that repository can access it until you
             send them the new HTTPS or SSH URL to use.
             </para>
              </li> </ul> 
             <para>
             Branches, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>CreateBranch</a>, which creates a branch in a specified repository.
             </para>
              </li> <li> 
             <para>
              <a>DeleteBranch</a>, which deletes the specified branch in a repository unless it
             is the default branch.
             </para>
              </li> <li> 
             <para>
              <a>GetBranch</a>, which returns information about a specified branch.
             </para>
              </li> <li> 
             <para>
              <a>ListBranches</a>, which lists all branches for a specified repository.
             </para>
              </li> <li> 
             <para>
              <a>UpdateDefaultBranch</a>, which changes the default branch for a repository.
             </para>
              </li> </ul> 
             <para>
             Files, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>DeleteFile</a>, which deletes the content of a specified file from a specified
             branch.
             </para>
              </li> <li> 
             <para>
              <a>GetBlob</a>, which returns the base-64 encoded content of an individual Git blob
             object in a repository.
             </para>
              </li> <li> 
             <para>
              <a>GetFile</a>, which returns the base-64 encoded content of a specified file.
             </para>
              </li> <li> 
             <para>
              <a>GetFolder</a>, which returns the contents of a specified folder or directory.
             </para>
              </li> <li> 
             <para>
              <a>PutFile</a>, which adds or modifies a single file in a specified repository and
             branch.
             </para>
              </li> </ul> 
             <para>
             Commits, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>BatchGetCommits</a>, which returns information about one or more commits in a
             repository.
             </para>
              </li> <li> 
             <para>
              <a>CreateCommit</a>, which creates a commit for changes to a repository.
             </para>
              </li> <li> 
             <para>
              <a>GetCommit</a>, which returns information about a commit, including commit messages
             and author and committer information.
             </para>
              </li> <li> 
             <para>
              <a>GetDifferences</a>, which returns information about the differences in a valid
             commit specifier (such as a branch, tag, HEAD, commit ID, or other fully qualified
             reference).
             </para>
              </li> </ul> 
             <para>
             Merges, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>BatchDescribeMergeConflicts</a>, which returns information about conflicts in
             a merge between commits in a repository.
             </para>
              </li> <li> 
             <para>
              <a>CreateUnreferencedMergeCommit</a>, which creates an unreferenced commit between
             two branches or commits for the purpose of comparing them and identifying any potential
             conflicts.
             </para>
              </li> <li> 
             <para>
              <a>DescribeMergeConflicts</a>, which returns information about merge conflicts between
             the base, source, and destination versions of a file in a potential merge.
             </para>
              </li> <li> 
             <para>
              <a>GetMergeCommit</a>, which returns information about the merge between a source
             and destination commit. 
             </para>
              </li> <li> 
             <para>
              <a>GetMergeConflicts</a>, which returns information about merge conflicts between
             the source and destination branch in a pull request.
             </para>
              </li> <li> 
             <para>
              <a>GetMergeOptions</a>, which returns information about the available merge options
             between two branches or commit specifiers.
             </para>
              </li> <li> 
             <para>
              <a>MergeBranchesByFastForward</a>, which merges two branches using the fast-forward
             merge option.
             </para>
              </li> <li> 
             <para>
              <a>MergeBranchesBySquash</a>, which merges two branches using the squash merge option.
             </para>
              </li> <li> 
             <para>
              <a>MergeBranchesByThreeWay</a>, which merges two branches using the three-way merge
             option.
             </para>
              </li> </ul> 
             <para>
             Pull requests, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>CreatePullRequest</a>, which creates a pull request in a specified repository.
             </para>
              </li> <li> 
             <para>
              <a>CreatePullRequestApprovalRule</a>, which creates an approval rule for a specified
             pull request.
             </para>
              </li> <li> 
             <para>
              <a>DeletePullRequestApprovalRule</a>, which deletes an approval rule for a specified
             pull request.
             </para>
              </li> <li> 
             <para>
              <a>DescribePullRequestEvents</a>, which returns information about one or more pull
             request events.
             </para>
              </li> <li> 
             <para>
              <a>EvaluatePullRequestApprovalRules</a>, which evaluates whether a pull request has
             met all the conditions specified in its associated approval rules.
             </para>
              </li> <li> 
             <para>
              <a>GetCommentsForPullRequest</a>, which returns information about comments on a specified
             pull request.
             </para>
              </li> <li> 
             <para>
              <a>GetPullRequest</a>, which returns information about a specified pull request.
             </para>
              </li> <li> 
             <para>
              <a>GetPullRequestApprovalStates</a>, which returns information about the approval
             states for a specified pull request.
             </para>
              </li> <li> 
             <para>
              <a>GetPullRequestOverrideState</a>, which returns information about whether approval
             rules have been set aside (overriden) for a pull request, and if so, the Amazon Resource
             Name (ARN) of the user or identity that overrode the rules and their requirements
             for the pull request.
             </para>
              </li> <li> 
             <para>
              <a>ListPullRequests</a>, which lists all pull requests for a repository.
             </para>
              </li> <li> 
             <para>
              <a>MergePullRequestByFastForward</a>, which merges the source destination branch
             of a pull request into the specified destination branch for that pull request using
             the fast-forward merge option.
             </para>
              </li> <li> 
             <para>
              <a>MergePullRequestBySquash</a>, which merges the source destination branch of a
             pull request into the specified destination branch for that pull request using the
             squash merge option.
             </para>
              </li> <li> 
             <para>
              <a>MergePullRequestByThreeWay</a>. which merges the source destination branch of
             a pull request into the specified destination branch for that pull request using the
             three-way merge option.
             </para>
              </li> <li> 
             <para>
              <a>OverridePullRequestApprovalRules</a>, which sets aside all approval rule requirements
             for a pull request.
             </para>
              </li> <li> 
             <para>
              <a>PostCommentForPullRequest</a>, which posts a comment to a pull request at the
             specified line, file, or request.
             </para>
              </li> <li> 
             <para>
              <a>UpdatePullRequestApprovalRuleContent</a>, which updates the structure of an approval
             rule for a pull request.
             </para>
              </li> <li> 
             <para>
              <a>UpdatePullRequestApprovalState</a>, which updates the state of an approval on
             a pull request.
             </para>
              </li> <li> 
             <para>
              <a>UpdatePullRequestDescription</a>, which updates the description of a pull request.
             </para>
              </li> <li> 
             <para>
              <a>UpdatePullRequestStatus</a>, which updates the status of a pull request.
             </para>
              </li> <li> 
             <para>
              <a>UpdatePullRequestTitle</a>, which updates the title of a pull request.
             </para>
              </li> </ul> 
             <para>
             Approval rule templates, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>AssociateApprovalRuleTemplateWithRepository</a>, which associates a template with
             a specified repository. After the template is associated with a repository, AWS CodeCommit
             creates approval rules that match the template conditions on every pull request created
             in the specified repository.
             </para>
              </li> <li> 
             <para>
              <a>BatchAssociateApprovalRuleTemplateWithRepositories</a>, which associates a template
             with one or more specified repositories. After the template is associated with a repository,
             AWS CodeCommit creates approval rules that match the template conditions on every
             pull request created in the specified repositories.
             </para>
              </li> <li> 
             <para>
              <a>BatchDisassociateApprovalRuleTemplateFromRepositories</a>, which removes the association
             between a template and specified repositories so that approval rules based on the
             template are not automatically created when pull requests are created in those repositories.
             </para>
              </li> <li> 
             <para>
              <a>CreateApprovalRuleTemplate</a>, which creates a template for approval rules that
             can then be associated with one or more repositories in your AWS account.
             </para>
              </li> <li> 
             <para>
              <a>DeleteApprovalRuleTemplate</a>, which deletes the specified template. It does
             not remove approval rules on pull requests already created with the template.
             </para>
              </li> <li> 
             <para>
              <a>DisassociateApprovalRuleTemplateFromRepository</a>, which removes the association
             between a template and a repository so that approval rules based on the template are
             not automatically created when pull requests are created in the specified repository.
             </para>
              </li> <li> 
             <para>
              <a>GetApprovalRuleTemplate</a>, which returns information about an approval rule
             template.
             </para>
              </li> <li> 
             <para>
              <a>ListApprovalRuleTemplates</a>, which lists all approval rule templates in the
             AWS Region in your AWS account.
             </para>
              </li> <li> 
             <para>
              <a>ListAssociatedApprovalRuleTemplatesForRepository</a>, which lists all approval
             rule templates that are associated with a specified repository.
             </para>
              </li> <li> 
             <para>
              <a>ListRepositoriesForApprovalRuleTemplate</a>, which lists all repositories associated
             with the specified approval rule template.
             </para>
              </li> <li> 
             <para>
              <a>UpdateApprovalRuleTemplateDescription</a>, which updates the description of an
             approval rule template.
             </para>
              </li> <li> 
             <para>
              <a>UpdateApprovalRuleTemplateName</a>, which updates the name of an approval rule
             template.
             </para>
              </li> <li> 
             <para>
              <a>UpdateApprovalRuleTemplateContent</a>, which updates the content of an approval
             rule template.
             </para>
              </li> </ul> 
             <para>
             Comments in a repository, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>DeleteCommentContent</a>, which deletes the content of a comment on a commit in
             a repository.
             </para>
              </li> <li> 
             <para>
              <a>GetComment</a>, which returns information about a comment on a commit.
             </para>
              </li> <li> 
             <para>
              <a>GetCommentReactions</a>, which returns information about emoji reactions to comments.
             </para>
              </li> <li> 
             <para>
              <a>GetCommentsForComparedCommit</a>, which returns information about comments on
             the comparison between two commit specifiers in a repository.
             </para>
              </li> <li> 
             <para>
              <a>PostCommentForComparedCommit</a>, which creates a comment on the comparison between
             two commit specifiers in a repository.
             </para>
              </li> <li> 
             <para>
              <a>PostCommentReply</a>, which creates a reply to a comment.
             </para>
              </li> <li> 
             <para>
              <a>PutCommentReaction</a>, which creates or updates an emoji reaction to a comment.
             </para>
              </li> <li> 
             <para>
              <a>UpdateComment</a>, which updates the content of a comment on a commit in a repository.
             </para>
              </li> </ul> 
             <para>
             Tags used to tag resources in AWS CodeCommit (not Git tags), by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>ListTagsForResource</a>, which gets information about AWS tags for a specified
             Amazon Resource Name (ARN) in AWS CodeCommit.
             </para>
              </li> <li> 
             <para>
              <a>TagResource</a>, which adds or updates tags for a resource in AWS CodeCommit.
             </para>
              </li> <li> 
             <para>
              <a>UntagResource</a>, which removes tags for a resource in AWS CodeCommit.
             </para>
              </li> </ul> 
             <para>
             Triggers, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>GetRepositoryTriggers</a>, which returns information about triggers configured
             for a repository.
             </para>
              </li> <li> 
             <para>
              <a>PutRepositoryTriggers</a>, which replaces all triggers for a repository and can
             be used to create or delete triggers.
             </para>
              </li> <li> 
             <para>
              <a>TestRepositoryTriggers</a>, which tests the functionality of a repository trigger
             by sending data to the trigger target.
             </para>
              </li> </ul> 
             <para>
             For information about how to use AWS CodeCommit, see the <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS
             CodeCommit User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.CodeCommit.AmazonCodeCommitClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor">
             <summary>
             Constructs AmazonCodeCommitClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonCodeCommitClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(Amazon.CodeCommit.AmazonCodeCommitConfig)">
             <summary>
             Constructs AmazonCodeCommitClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCodeCommitClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCodeCommitClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCodeCommitClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CodeCommit.AmazonCodeCommitConfig)">
            <summary>
            Constructs AmazonCodeCommitClient with AWS Credentials and an
            AmazonCodeCommitClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCodeCommitClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCodeCommitClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCodeCommitClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(System.String,System.String,Amazon.CodeCommit.AmazonCodeCommitConfig)">
            <summary>
            Constructs AmazonCodeCommitClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCodeCommitClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCodeCommitClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCodeCommitClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCodeCommitClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.#ctor(System.String,System.String,System.String,Amazon.CodeCommit.AmazonCodeCommitConfig)">
            <summary>
            Constructs AmazonCodeCommitClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCodeCommitClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCodeCommitClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.CodeCommit.AmazonCodeCommitClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.AssociateApprovalRuleTemplateWithRepository(Amazon.CodeCommit.Model.AssociateApprovalRuleTemplateWithRepositoryRequest)">
            <summary>
            Creates an association between an approval rule template and a specified repository.
            Then, the next time a pull request is created in the repository where the destination
            reference (if specified) matches the destination reference (branch) for the pull request,
            an approval rule that matches the template conditions is automatically created for
            that pull request. If no destination references are specified in the template, an
            approval rule that matches the template contents is created for all pull requests
            in that repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateApprovalRuleTemplateWithRepository service method.</param>
            
            <returns>The response from the AssociateApprovalRuleTemplateWithRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException">
            The maximum number of approval rule templates for a repository has been exceeded.
            You cannot associate more than 25 approval rule templates with a repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/AssociateApprovalRuleTemplateWithRepository">REST API Reference for AssociateApprovalRuleTemplateWithRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.AssociateApprovalRuleTemplateWithRepositoryAsync(Amazon.CodeCommit.Model.AssociateApprovalRuleTemplateWithRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an association between an approval rule template and a specified repository.
            Then, the next time a pull request is created in the repository where the destination
            reference (if specified) matches the destination reference (branch) for the pull request,
            an approval rule that matches the template conditions is automatically created for
            that pull request. If no destination references are specified in the template, an
            approval rule that matches the template contents is created for all pull requests
            in that repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateApprovalRuleTemplateWithRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateApprovalRuleTemplateWithRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException">
            The maximum number of approval rule templates for a repository has been exceeded.
            You cannot associate more than 25 approval rule templates with a repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/AssociateApprovalRuleTemplateWithRepository">REST API Reference for AssociateApprovalRuleTemplateWithRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.BatchAssociateApprovalRuleTemplateWithRepositories(Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesRequest)">
            <summary>
            Creates an association between an approval rule template and one or more specified
            repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchAssociateApprovalRuleTemplateWithRepositories service method.</param>
            
            <returns>The response from the BatchAssociateApprovalRuleTemplateWithRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchAssociateApprovalRuleTemplateWithRepositories">REST API Reference for BatchAssociateApprovalRuleTemplateWithRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.BatchAssociateApprovalRuleTemplateWithRepositoriesAsync(Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an association between an approval rule template and one or more specified
            repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchAssociateApprovalRuleTemplateWithRepositories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchAssociateApprovalRuleTemplateWithRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchAssociateApprovalRuleTemplateWithRepositories">REST API Reference for BatchAssociateApprovalRuleTemplateWithRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.BatchDescribeMergeConflicts(Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest)">
            <summary>
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDescribeMergeConflicts service method.</param>
            
            <returns>The response from the BatchDescribeMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException">
            The specified value for the number of conflict files to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException">
            The specified value for the number of merge hunks to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchDescribeMergeConflicts">REST API Reference for BatchDescribeMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.BatchDescribeMergeConflictsAsync(Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDescribeMergeConflicts service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchDescribeMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException">
            The specified value for the number of conflict files to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException">
            The specified value for the number of merge hunks to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchDescribeMergeConflicts">REST API Reference for BatchDescribeMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.BatchDisassociateApprovalRuleTemplateFromRepositories(Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequest)">
            <summary>
            Removes the association between an approval rule template and one or more specified
            repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDisassociateApprovalRuleTemplateFromRepositories service method.</param>
            
            <returns>The response from the BatchDisassociateApprovalRuleTemplateFromRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchDisassociateApprovalRuleTemplateFromRepositories">REST API Reference for BatchDisassociateApprovalRuleTemplateFromRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.BatchDisassociateApprovalRuleTemplateFromRepositoriesAsync(Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the association between an approval rule template and one or more specified
            repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDisassociateApprovalRuleTemplateFromRepositories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchDisassociateApprovalRuleTemplateFromRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchDisassociateApprovalRuleTemplateFromRepositories">REST API Reference for BatchDisassociateApprovalRuleTemplateFromRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.BatchGetCommits(Amazon.CodeCommit.Model.BatchGetCommitsRequest)">
            <summary>
            Returns information about the contents of one or more commits in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetCommits service method.</param>
            
            <returns>The response from the BatchGetCommits service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdsLimitExceededException">
            The maximum number of allowed commit IDs in a batch request is 100. Verify that your
            batch requests contains no more than 100 commit IDs, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdsListRequiredException">
            A list of commit IDs is required, but was either not specified or the list was empty.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchGetCommits">REST API Reference for BatchGetCommits Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.BatchGetCommitsAsync(Amazon.CodeCommit.Model.BatchGetCommitsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the contents of one or more commits in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetCommits service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGetCommits service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdsLimitExceededException">
            The maximum number of allowed commit IDs in a batch request is 100. Verify that your
            batch requests contains no more than 100 commit IDs, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdsListRequiredException">
            A list of commit IDs is required, but was either not specified or the list was empty.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchGetCommits">REST API Reference for BatchGetCommits Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.BatchGetRepositories(Amazon.CodeCommit.Model.BatchGetRepositoriesRequest)">
            <summary>
            Returns information about one or more repositories.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetRepositories service method.</param>
            
            <returns>The response from the BatchGetRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchGetRepositories">REST API Reference for BatchGetRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.BatchGetRepositoriesAsync(Amazon.CodeCommit.Model.BatchGetRepositoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about one or more repositories.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetRepositories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGetRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchGetRepositories">REST API Reference for BatchGetRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateApprovalRuleTemplate(Amazon.CodeCommit.Model.CreateApprovalRuleTemplateRequest)">
            <summary>
            Creates a template for approval rules that can then be associated with one or more
            repositories in your AWS account. When you associate a template with a repository,
            AWS CodeCommit creates an approval rule that matches the conditions of the template
            for all pull requests that meet the conditions of the template. For more information,
            see <a>AssociateApprovalRuleTemplateWithRepository</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateApprovalRuleTemplate service method.</param>
            
            <returns>The response from the CreateApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException">
            The content for the approval rule template is empty. You must provide some content
            for an approval rule template. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException">
            You cannot create an approval rule template with that name because a template with
            that name already exists in this AWS Region for your AWS account. Approval rule template
            names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException">
            The content of the approval rule template is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException">
            The description for the approval rule template is not valid because it exceeds the
            maximum characters allowed for a description. For more information about limits in
            AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException">
            The maximum number of approval rule templates has been exceeded for this AWS Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateApprovalRuleTemplate">REST API Reference for CreateApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateApprovalRuleTemplateAsync(Amazon.CodeCommit.Model.CreateApprovalRuleTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a template for approval rules that can then be associated with one or more
            repositories in your AWS account. When you associate a template with a repository,
            AWS CodeCommit creates an approval rule that matches the conditions of the template
            for all pull requests that meet the conditions of the template. For more information,
            see <a>AssociateApprovalRuleTemplateWithRepository</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateApprovalRuleTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException">
            The content for the approval rule template is empty. You must provide some content
            for an approval rule template. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException">
            You cannot create an approval rule template with that name because a template with
            that name already exists in this AWS Region for your AWS account. Approval rule template
            names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException">
            The content of the approval rule template is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException">
            The description for the approval rule template is not valid because it exceeds the
            maximum characters allowed for a description. For more information about limits in
            AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException">
            The maximum number of approval rule templates has been exceeded for this AWS Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateApprovalRuleTemplate">REST API Reference for CreateApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateBranch(Amazon.CodeCommit.Model.CreateBranchRequest)">
            <summary>
            Creates a branch in a repository and points the branch to a commit.
            
             <note> 
            <para>
            Calling the create branch operation does not set a repository's default branch. To
            do this, call the update default branch operation.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBranch service method.</param>
            
            <returns>The response from the CreateBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameExistsException">
            Cannot create the branch with the specified name because the commit conflicts with
            an existing branch with the same name. Branch names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateBranch">REST API Reference for CreateBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateBranchAsync(Amazon.CodeCommit.Model.CreateBranchRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a branch in a repository and points the branch to a commit.
            
             <note> 
            <para>
            Calling the create branch operation does not set a repository's default branch. To
            do this, call the update default branch operation.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBranch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameExistsException">
            Cannot create the branch with the specified name because the commit conflicts with
            an existing branch with the same name. Branch names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateBranch">REST API Reference for CreateBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateCommit(Amazon.CodeCommit.Model.CreateCommitRequest)">
            <summary>
            Creates a commit for a repository on the tip of a specified branch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCommit service method.</param>
            
            <returns>The response from the CreateCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException">
            A file cannot be added to the repository because the specified path name has the same
            name as a file that already exists in this repository. Either provide a different
            name for the file, or specify a different path for the file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException">
            The commit cannot be created because both a source file and file content have been
            specified for the same file. You cannot provide both. Either specify a source file
            or provide the file content directly.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileEntryRequiredException">
            The commit cannot be created because no files have been specified as added, updated,
            or changed (PutFile or DeleteFile) for the commit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException">
            A file cannot be added to the repository because the specified file name has the same
            name as a directory in this repository. Either provide another name for the file,
            or add the file in a directory that does not match the file name.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException">
            The commit cannot be created because a specified file path points to a submodule.
            Verify that the destination files have valid file paths that do not point to a submodule.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDeletionParameterException">
            The specified deletion parameter is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException">
            The number of specified files to change as part of this commit exceeds the maximum
            number of files that can be changed in a single commit. Consider using a Git client
            for these changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NoChangeException">
            The commit cannot be created because no changes will be made to the repository as
            a result of this commit. A commit must contain at least one change.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PutFileEntryConflictException">
            The commit cannot be created because one or more files specified in the commit reference
            both a file and a folder.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RestrictedSourceFileException">
            The commit cannot be created because one of the changes specifies copying or moving
            a .gitkeep file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SamePathRequestException">
            The commit cannot be created because one or more changes in this commit duplicate
            actions in the same file path. For example, you cannot make the same delete request
            to the same file in the same file path twice, or make a delete request and a move
            request to the same file as part of the same commit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException">
            The commit cannot be created because no source files or file content have been specified
            for the commit.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateCommit">REST API Reference for CreateCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateCommitAsync(Amazon.CodeCommit.Model.CreateCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a commit for a repository on the tip of a specified branch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException">
            A file cannot be added to the repository because the specified path name has the same
            name as a file that already exists in this repository. Either provide a different
            name for the file, or specify a different path for the file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException">
            The commit cannot be created because both a source file and file content have been
            specified for the same file. You cannot provide both. Either specify a source file
            or provide the file content directly.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileEntryRequiredException">
            The commit cannot be created because no files have been specified as added, updated,
            or changed (PutFile or DeleteFile) for the commit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException">
            A file cannot be added to the repository because the specified file name has the same
            name as a directory in this repository. Either provide another name for the file,
            or add the file in a directory that does not match the file name.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException">
            The commit cannot be created because a specified file path points to a submodule.
            Verify that the destination files have valid file paths that do not point to a submodule.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDeletionParameterException">
            The specified deletion parameter is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException">
            The number of specified files to change as part of this commit exceeds the maximum
            number of files that can be changed in a single commit. Consider using a Git client
            for these changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NoChangeException">
            The commit cannot be created because no changes will be made to the repository as
            a result of this commit. A commit must contain at least one change.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PutFileEntryConflictException">
            The commit cannot be created because one or more files specified in the commit reference
            both a file and a folder.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RestrictedSourceFileException">
            The commit cannot be created because one of the changes specifies copying or moving
            a .gitkeep file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SamePathRequestException">
            The commit cannot be created because one or more changes in this commit duplicate
            actions in the same file path. For example, you cannot make the same delete request
            to the same file in the same file path twice, or make a delete request and a move
            request to the same file as part of the same commit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException">
            The commit cannot be created because no source files or file content have been specified
            for the commit.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateCommit">REST API Reference for CreateCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreatePullRequest(Amazon.CodeCommit.Model.CreatePullRequestRequest)">
            <summary>
            Creates a pull request in the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePullRequest service method.</param>
            
            <returns>The response from the CreatePullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDescriptionException">
            The pull request description is not valid. Descriptions cannot be more than 1,000
            characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReferenceNameException">
            The specified reference name format is not valid. Reference names must conform to
            the Git references format (for example, refs/heads/master). For more information,
            see <a href="https://git-scm.com/book/en/v2/Git-Internals-Git-References">Git Internals
            - Git References</a> or consult your Git documentation.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetException">
            The target for the pull request is not valid. A target must contain the full values
            for the repository name, source branch, and destination branch for the pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetsException">
            The targets for the pull request is not valid or not in a valid format. Targets are
            a list of target objects. Each target object must contain the full values for the
            repository name, source branch, and destination branch for a pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTitleException">
            The title of the pull request is not valid. Pull request titles cannot exceed 100
            characters in length.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException">
            You cannot create the pull request because the repository has too many open pull requests.
            The maximum number of open pull requests for a repository is 1,000. Close one or more
            open pull requests, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException">
            You cannot include more than one repository in a pull request. Make sure you have
            specified only one repository name in your request, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceDoesNotExistException">
            The specified reference does not exist. You must provide a full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceNameRequiredException">
            A reference name is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException">
            The specified reference is not a supported type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException">
            The source branch and destination branch for the pull request are the same. You must
            specify different branches for the source and destination.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TargetRequiredException">
            A pull request target is required. It cannot be empty or null. A pull request target
            must contain the full values for the repository name, source branch, and destination
            branch for the pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TargetsRequiredException">
            An array of target objects is required. It cannot be empty or null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TitleRequiredException">
            A pull request title is required. It cannot be empty or null.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreatePullRequest">REST API Reference for CreatePullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreatePullRequestAsync(Amazon.CodeCommit.Model.CreatePullRequestRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a pull request in the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePullRequest service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDescriptionException">
            The pull request description is not valid. Descriptions cannot be more than 1,000
            characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReferenceNameException">
            The specified reference name format is not valid. Reference names must conform to
            the Git references format (for example, refs/heads/master). For more information,
            see <a href="https://git-scm.com/book/en/v2/Git-Internals-Git-References">Git Internals
            - Git References</a> or consult your Git documentation.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetException">
            The target for the pull request is not valid. A target must contain the full values
            for the repository name, source branch, and destination branch for the pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetsException">
            The targets for the pull request is not valid or not in a valid format. Targets are
            a list of target objects. Each target object must contain the full values for the
            repository name, source branch, and destination branch for a pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTitleException">
            The title of the pull request is not valid. Pull request titles cannot exceed 100
            characters in length.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException">
            You cannot create the pull request because the repository has too many open pull requests.
            The maximum number of open pull requests for a repository is 1,000. Close one or more
            open pull requests, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException">
            You cannot include more than one repository in a pull request. Make sure you have
            specified only one repository name in your request, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceDoesNotExistException">
            The specified reference does not exist. You must provide a full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceNameRequiredException">
            A reference name is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException">
            The specified reference is not a supported type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException">
            The source branch and destination branch for the pull request are the same. You must
            specify different branches for the source and destination.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TargetRequiredException">
            A pull request target is required. It cannot be empty or null. A pull request target
            must contain the full values for the repository name, source branch, and destination
            branch for the pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TargetsRequiredException">
            An array of target objects is required. It cannot be empty or null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TitleRequiredException">
            A pull request title is required. It cannot be empty or null.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreatePullRequest">REST API Reference for CreatePullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreatePullRequestApprovalRule(Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleRequest)">
            <summary>
            Creates an approval rule for a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePullRequestApprovalRule service method.</param>
            
            <returns>The response from the CreatePullRequestApprovalRule service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException">
            The content for the approval rule is empty. You must provide some content for an approval
            rule. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException">
            An approval rule with that name already exists. Approval rule names must be unique
            within the scope of a pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException">
            The content for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NumberOfRulesExceededException">
            The approval rule cannot be added. The pull request has the maximum number of approval
            rules associated with it.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreatePullRequestApprovalRule">REST API Reference for CreatePullRequestApprovalRule Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreatePullRequestApprovalRuleAsync(Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an approval rule for a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePullRequestApprovalRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePullRequestApprovalRule service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException">
            The content for the approval rule is empty. You must provide some content for an approval
            rule. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException">
            An approval rule with that name already exists. Approval rule names must be unique
            within the scope of a pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException">
            The content for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NumberOfRulesExceededException">
            The approval rule cannot be added. The pull request has the maximum number of approval
            rules associated with it.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreatePullRequestApprovalRule">REST API Reference for CreatePullRequestApprovalRule Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateRepository(Amazon.CodeCommit.Model.CreateRepositoryRequest)">
            <summary>
            Creates a new, empty repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRepository service method.</param>
            
            <returns>The response from the CreateRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException">
            The specified repository description is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagsMapException">
            The map of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryLimitExceededException">
            A repository resource limit was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameExistsException">
            The specified repository name already exists.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateRepository">REST API Reference for CreateRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateRepositoryAsync(Amazon.CodeCommit.Model.CreateRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new, empty repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException">
            The specified repository description is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagsMapException">
            The map of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryLimitExceededException">
            A repository resource limit was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameExistsException">
            The specified repository name already exists.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateRepository">REST API Reference for CreateRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateUnreferencedMergeCommit(Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest)">
            <summary>
            Creates an unreferenced commit that represents the result of merging two branches
            using a specified merge strategy. This can help you determine the outcome of a potential
            merge. This API cannot be used with the fast-forward merge strategy because that strategy
            does not create a merge commit.
            
             <note> 
            <para>
            This unreferenced merge commit can only be accessed using the GetCommit API or through
            git commands such as git fetch. To retrieve this commit, you must specify its commit
            ID or otherwise reference it.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUnreferencedMergeCommit service method.</param>
            
            <returns>The response from the CreateUnreferencedMergeCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateUnreferencedMergeCommit">REST API Reference for CreateUnreferencedMergeCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.CreateUnreferencedMergeCommitAsync(Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an unreferenced commit that represents the result of merging two branches
            using a specified merge strategy. This can help you determine the outcome of a potential
            merge. This API cannot be used with the fast-forward merge strategy because that strategy
            does not create a merge commit.
            
             <note> 
            <para>
            This unreferenced merge commit can only be accessed using the GetCommit API or through
            git commands such as git fetch. To retrieve this commit, you must specify its commit
            ID or otherwise reference it.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUnreferencedMergeCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUnreferencedMergeCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateUnreferencedMergeCommit">REST API Reference for CreateUnreferencedMergeCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeleteApprovalRuleTemplate(Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateRequest)">
            <summary>
            Deletes a specified approval rule template. Deleting a template does not remove approval
            rules on pull requests already created with the template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteApprovalRuleTemplate service method.</param>
            
            <returns>The response from the DeleteApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException">
            The approval rule template is associated with one or more repositories. You cannot
            delete a template that is associated with a repository. Remove all associations, and
            then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteApprovalRuleTemplate">REST API Reference for DeleteApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeleteApprovalRuleTemplateAsync(Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified approval rule template. Deleting a template does not remove approval
            rules on pull requests already created with the template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteApprovalRuleTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException">
            The approval rule template is associated with one or more repositories. You cannot
            delete a template that is associated with a repository. Remove all associations, and
            then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteApprovalRuleTemplate">REST API Reference for DeleteApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeleteBranch(Amazon.CodeCommit.Model.DeleteBranchRequest)">
            <summary>
            Deletes a branch from a repository, unless that branch is the default branch for the
            repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBranch service method.</param>
            
            <returns>The response from the DeleteBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException">
            The specified branch is the default branch for the repository, and cannot be deleted.
            To delete this branch, you must first set another branch as the default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteBranch">REST API Reference for DeleteBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeleteBranchAsync(Amazon.CodeCommit.Model.DeleteBranchRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a branch from a repository, unless that branch is the default branch for the
            repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBranch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException">
            The specified branch is the default branch for the repository, and cannot be deleted.
            To delete this branch, you must first set another branch as the default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteBranch">REST API Reference for DeleteBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeleteCommentContent(Amazon.CodeCommit.Model.DeleteCommentContentRequest)">
            <summary>
            Deletes the content of a comment made on a change, file, or commit in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCommentContent service method.</param>
            
            <returns>The response from the DeleteCommentContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteCommentContent">REST API Reference for DeleteCommentContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeleteCommentContentAsync(Amazon.CodeCommit.Model.DeleteCommentContentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the content of a comment made on a change, file, or commit in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCommentContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCommentContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteCommentContent">REST API Reference for DeleteCommentContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeleteFile(Amazon.CodeCommit.Model.DeleteFileRequest)">
            <summary>
            Deletes a specified file from a specified branch. A commit is created on the branch
            that contains the revision. The file still exists in the commits earlier to the commit
            that contains the deletion.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFile service method.</param>
            
            <returns>The response from the DeleteFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteFile">REST API Reference for DeleteFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeleteFileAsync(Amazon.CodeCommit.Model.DeleteFileRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified file from a specified branch. A commit is created on the branch
            that contains the revision. The file still exists in the commits earlier to the commit
            that contains the deletion.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteFile">REST API Reference for DeleteFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeletePullRequestApprovalRule(Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleRequest)">
            <summary>
            Deletes an approval rule from a specified pull request. Approval rules can be deleted
            from a pull request only if the pull request is open, and if the approval rule was
            created specifically for a pull request and not generated from an approval rule template
            associated with the repository where the pull request was created. You cannot delete
            an approval rule from a merged or closed pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePullRequestApprovalRule service method.</param>
            
            <returns>The response from the DeletePullRequestApprovalRule service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException">
            The approval rule cannot be deleted from the pull request because it was created by
            an approval rule template and applied to the pull request automatically.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeletePullRequestApprovalRule">REST API Reference for DeletePullRequestApprovalRule Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeletePullRequestApprovalRuleAsync(Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an approval rule from a specified pull request. Approval rules can be deleted
            from a pull request only if the pull request is open, and if the approval rule was
            created specifically for a pull request and not generated from an approval rule template
            associated with the repository where the pull request was created. You cannot delete
            an approval rule from a merged or closed pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePullRequestApprovalRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePullRequestApprovalRule service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException">
            The approval rule cannot be deleted from the pull request because it was created by
            an approval rule template and applied to the pull request automatically.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeletePullRequestApprovalRule">REST API Reference for DeletePullRequestApprovalRule Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeleteRepository(Amazon.CodeCommit.Model.DeleteRepositoryRequest)">
            <summary>
            Deletes a repository. If a specified repository was already deleted, a null repository
            ID is returned.
            
             <important> 
            <para>
            Deleting a repository also deletes all associated objects and metadata. After a repository
            is deleted, all future push calls to the deleted repository fail.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRepository service method.</param>
            
            <returns>The response from the DeleteRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteRepository">REST API Reference for DeleteRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DeleteRepositoryAsync(Amazon.CodeCommit.Model.DeleteRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a repository. If a specified repository was already deleted, a null repository
            ID is returned.
            
             <important> 
            <para>
            Deleting a repository also deletes all associated objects and metadata. After a repository
            is deleted, all future push calls to the deleted repository fail.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteRepository">REST API Reference for DeleteRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DescribeMergeConflicts(Amazon.CodeCommit.Model.DescribeMergeConflictsRequest)">
            <summary>
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy. If the merge option
            for the attempted merge is specified as FAST_FORWARD_MERGE, an exception is thrown.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMergeConflicts service method.</param>
            
            <returns>The response from the DescribeMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException">
            The specified value for the number of merge hunks to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DescribeMergeConflicts">REST API Reference for DescribeMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DescribeMergeConflictsAsync(Amazon.CodeCommit.Model.DescribeMergeConflictsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy. If the merge option
            for the attempted merge is specified as FAST_FORWARD_MERGE, an exception is thrown.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMergeConflicts service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException">
            The specified value for the number of merge hunks to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DescribeMergeConflicts">REST API Reference for DescribeMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DescribePullRequestEvents(Amazon.CodeCommit.Model.DescribePullRequestEventsRequest)">
            <summary>
            Returns information about one or more pull request events.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePullRequestEvents service method.</param>
            
            <returns>The response from the DescribePullRequestEvents service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ActorDoesNotExistException">
            The specified Amazon Resource Name (ARN) does not exist in the AWS account.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidActorArnException">
            The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the
            full ARN for the user who initiated the change for the pull request, and then try
            again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException">
            The pull request event type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DescribePullRequestEvents">REST API Reference for DescribePullRequestEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DescribePullRequestEventsAsync(Amazon.CodeCommit.Model.DescribePullRequestEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about one or more pull request events.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePullRequestEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePullRequestEvents service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ActorDoesNotExistException">
            The specified Amazon Resource Name (ARN) does not exist in the AWS account.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidActorArnException">
            The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the
            full ARN for the user who initiated the change for the pull request, and then try
            again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException">
            The pull request event type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DescribePullRequestEvents">REST API Reference for DescribePullRequestEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DisassociateApprovalRuleTemplateFromRepository(Amazon.CodeCommit.Model.DisassociateApprovalRuleTemplateFromRepositoryRequest)">
            <summary>
            Removes the association between a template and a repository so that approval rules
            based on the template are not automatically created when pull requests are created
            in the specified repository. This does not delete any approval rules previously created
            for pull requests through the template association.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateApprovalRuleTemplateFromRepository service method.</param>
            
            <returns>The response from the DisassociateApprovalRuleTemplateFromRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DisassociateApprovalRuleTemplateFromRepository">REST API Reference for DisassociateApprovalRuleTemplateFromRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.DisassociateApprovalRuleTemplateFromRepositoryAsync(Amazon.CodeCommit.Model.DisassociateApprovalRuleTemplateFromRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the association between a template and a repository so that approval rules
            based on the template are not automatically created when pull requests are created
            in the specified repository. This does not delete any approval rules previously created
            for pull requests through the template association.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateApprovalRuleTemplateFromRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateApprovalRuleTemplateFromRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DisassociateApprovalRuleTemplateFromRepository">REST API Reference for DisassociateApprovalRuleTemplateFromRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.EvaluatePullRequestApprovalRules(Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesRequest)">
            <summary>
            Evaluates whether a pull request has met all the conditions specified in its associated
            approval rules.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EvaluatePullRequestApprovalRules service method.</param>
            
            <returns>The response from the EvaluatePullRequestApprovalRules service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/EvaluatePullRequestApprovalRules">REST API Reference for EvaluatePullRequestApprovalRules Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.EvaluatePullRequestApprovalRulesAsync(Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Evaluates whether a pull request has met all the conditions specified in its associated
            approval rules.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EvaluatePullRequestApprovalRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the EvaluatePullRequestApprovalRules service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/EvaluatePullRequestApprovalRules">REST API Reference for EvaluatePullRequestApprovalRules Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetApprovalRuleTemplate(Amazon.CodeCommit.Model.GetApprovalRuleTemplateRequest)">
            <summary>
            Returns information about a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetApprovalRuleTemplate service method.</param>
            
            <returns>The response from the GetApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetApprovalRuleTemplate">REST API Reference for GetApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetApprovalRuleTemplateAsync(Amazon.CodeCommit.Model.GetApprovalRuleTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetApprovalRuleTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetApprovalRuleTemplate">REST API Reference for GetApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetBlob(Amazon.CodeCommit.Model.GetBlobRequest)">
            <summary>
            Returns the base-64 encoded content of an individual blob in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBlob service method.</param>
            
            <returns>The response from the GetBlob service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BlobIdDoesNotExistException">
            The specified blob does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BlobIdRequiredException">
            A blob ID is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileTooLargeException">
            The specified file exceeds the file size limit for AWS CodeCommit. For more information
            about limits in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBlobIdException">
            The specified blob is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetBlob">REST API Reference for GetBlob Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetBlobAsync(Amazon.CodeCommit.Model.GetBlobRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the base-64 encoded content of an individual blob in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBlob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBlob service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BlobIdDoesNotExistException">
            The specified blob does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BlobIdRequiredException">
            A blob ID is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileTooLargeException">
            The specified file exceeds the file size limit for AWS CodeCommit. For more information
            about limits in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBlobIdException">
            The specified blob is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetBlob">REST API Reference for GetBlob Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetBranch(Amazon.CodeCommit.Model.GetBranchRequest)">
            <summary>
            Returns information about a repository branch, including its name and the last commit
            ID.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBranch service method.</param>
            
            <returns>The response from the GetBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetBranch">REST API Reference for GetBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetBranchAsync(Amazon.CodeCommit.Model.GetBranchRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a repository branch, including its name and the last commit
            ID.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBranch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetBranch">REST API Reference for GetBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetComment(Amazon.CodeCommit.Model.GetCommentRequest)">
            <summary>
            Returns the content of a comment made on a change, file, or commit in a repository.
            
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComment service method.</param>
            
            <returns>The response from the GetComment service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetComment">REST API Reference for GetComment Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetCommentAsync(Amazon.CodeCommit.Model.GetCommentRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the content of a comment made on a change, file, or commit in a repository.
            
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetComment service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetComment">REST API Reference for GetComment Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetCommentReactions(Amazon.CodeCommit.Model.GetCommentReactionsRequest)">
            <summary>
            Returns information about reactions to a specified comment ID. Reactions from users
            who have been deleted will not be included in the count.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentReactions service method.</param>
            
            <returns>The response from the GetCommentReactions service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReactionUserArnException">
            The Amazon Resource Name (ARN) of the user or identity is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentReactions">REST API Reference for GetCommentReactions Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetCommentReactionsAsync(Amazon.CodeCommit.Model.GetCommentReactionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about reactions to a specified comment ID. Reactions from users
            who have been deleted will not be included in the count.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentReactions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCommentReactions service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReactionUserArnException">
            The Amazon Resource Name (ARN) of the user or identity is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentReactions">REST API Reference for GetCommentReactions Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetCommentsForComparedCommit(Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest)">
            <summary>
            Returns information about comments made on the comparison between two commits.
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentsForComparedCommit service method.</param>
            
            <returns>The response from the GetCommentsForComparedCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentsForComparedCommit">REST API Reference for GetCommentsForComparedCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetCommentsForComparedCommitAsync(Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about comments made on the comparison between two commits.
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentsForComparedCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCommentsForComparedCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentsForComparedCommit">REST API Reference for GetCommentsForComparedCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetCommentsForPullRequest(Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest)">
            <summary>
            Returns comments made on a pull request.
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentsForPullRequest service method.</param>
            
            <returns>The response from the GetCommentsForPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentsForPullRequest">REST API Reference for GetCommentsForPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetCommentsForPullRequestAsync(Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest,System.Threading.CancellationToken)">
            <summary>
            Returns comments made on a pull request.
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentsForPullRequest service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCommentsForPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentsForPullRequest">REST API Reference for GetCommentsForPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetCommit(Amazon.CodeCommit.Model.GetCommitRequest)">
            <summary>
            Returns information about a commit, including commit message and committer information.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommit service method.</param>
            
            <returns>The response from the GetCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdDoesNotExistException">
            The specified commit ID does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommit">REST API Reference for GetCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetCommitAsync(Amazon.CodeCommit.Model.GetCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a commit, including commit message and committer information.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdDoesNotExistException">
            The specified commit ID does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommit">REST API Reference for GetCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetDifferences(Amazon.CodeCommit.Model.GetDifferencesRequest)">
            <summary>
            Returns information about the differences in a valid commit specifier (such as a branch,
            tag, HEAD, commit ID, or other fully qualified reference). Results can be limited
            to a specified path.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDifferences service method.</param>
            
            <returns>The response from the GetDifferences service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetDifferences">REST API Reference for GetDifferences Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetDifferencesAsync(Amazon.CodeCommit.Model.GetDifferencesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the differences in a valid commit specifier (such as a branch,
            tag, HEAD, commit ID, or other fully qualified reference). Results can be limited
            to a specified path.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDifferences service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDifferences service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetDifferences">REST API Reference for GetDifferences Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetFile(Amazon.CodeCommit.Model.GetFileRequest)">
            <summary>
            Returns the base-64 encoded contents of a specified file and its metadata.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFile service method.</param>
            
            <returns>The response from the GetFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileTooLargeException">
            The specified file exceeds the file size limit for AWS CodeCommit. For more information
            about limits in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetFile">REST API Reference for GetFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetFileAsync(Amazon.CodeCommit.Model.GetFileRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the base-64 encoded contents of a specified file and its metadata.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileTooLargeException">
            The specified file exceeds the file size limit for AWS CodeCommit. For more information
            about limits in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetFile">REST API Reference for GetFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetFolder(Amazon.CodeCommit.Model.GetFolderRequest)">
            <summary>
            Returns the contents of a specified folder in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFolder service method.</param>
            
            <returns>The response from the GetFolder service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderDoesNotExistException">
            The specified folder does not exist. Either the folder name is not correct, or you
            did not enter the full path to the folder.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetFolder">REST API Reference for GetFolder Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetFolderAsync(Amazon.CodeCommit.Model.GetFolderRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the contents of a specified folder in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFolder service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetFolder service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderDoesNotExistException">
            The specified folder does not exist. Either the folder name is not correct, or you
            did not enter the full path to the folder.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetFolder">REST API Reference for GetFolder Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetMergeCommit(Amazon.CodeCommit.Model.GetMergeCommitRequest)">
            <summary>
            Returns information about a specified merge commit.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeCommit service method.</param>
            
            <returns>The response from the GetMergeCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeCommit">REST API Reference for GetMergeCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetMergeCommitAsync(Amazon.CodeCommit.Model.GetMergeCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a specified merge commit.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMergeCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeCommit">REST API Reference for GetMergeCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetMergeConflicts(Amazon.CodeCommit.Model.GetMergeConflictsRequest)">
            <summary>
            Returns information about merge conflicts between the before and after commit IDs
            for a pull request in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeConflicts service method.</param>
            
            <returns>The response from the GetMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException">
            The destination commit specifier is not valid. You must provide a valid branch name,
            tag, or full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException">
            The specified value for the number of conflict files to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException">
            The source commit specifier is not valid. You must provide a valid branch name, tag,
            or full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeConflicts">REST API Reference for GetMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetMergeConflictsAsync(Amazon.CodeCommit.Model.GetMergeConflictsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about merge conflicts between the before and after commit IDs
            for a pull request in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeConflicts service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException">
            The destination commit specifier is not valid. You must provide a valid branch name,
            tag, or full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException">
            The specified value for the number of conflict files to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException">
            The source commit specifier is not valid. You must provide a valid branch name, tag,
            or full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeConflicts">REST API Reference for GetMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetMergeOptions(Amazon.CodeCommit.Model.GetMergeOptionsRequest)">
            <summary>
            Returns information about the merge options available for merging two specified branches.
            For details about why a merge option is not available, use GetMergeConflicts or DescribeMergeConflicts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeOptions service method.</param>
            
            <returns>The response from the GetMergeOptions service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeOptions">REST API Reference for GetMergeOptions Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetMergeOptionsAsync(Amazon.CodeCommit.Model.GetMergeOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the merge options available for merging two specified branches.
            For details about why a merge option is not available, use GetMergeConflicts or DescribeMergeConflicts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeOptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMergeOptions service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeOptions">REST API Reference for GetMergeOptions Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetPullRequest(Amazon.CodeCommit.Model.GetPullRequestRequest)">
            <summary>
            Gets information about a pull request in a specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequest service method.</param>
            
            <returns>The response from the GetPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequest">REST API Reference for GetPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetPullRequestAsync(Amazon.CodeCommit.Model.GetPullRequestRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about a pull request in a specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequest service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequest">REST API Reference for GetPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetPullRequestApprovalStates(Amazon.CodeCommit.Model.GetPullRequestApprovalStatesRequest)">
            <summary>
            Gets information about the approval states for a specified pull request. Approval
            states only apply to pull requests that have one or more approval rules applied to
            them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequestApprovalStates service method.</param>
            
            <returns>The response from the GetPullRequestApprovalStates service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequestApprovalStates">REST API Reference for GetPullRequestApprovalStates Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetPullRequestApprovalStatesAsync(Amazon.CodeCommit.Model.GetPullRequestApprovalStatesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about the approval states for a specified pull request. Approval
            states only apply to pull requests that have one or more approval rules applied to
            them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequestApprovalStates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPullRequestApprovalStates service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequestApprovalStates">REST API Reference for GetPullRequestApprovalStates Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetPullRequestOverrideState(Amazon.CodeCommit.Model.GetPullRequestOverrideStateRequest)">
            <summary>
            Returns information about whether approval rules have been set aside (overridden)
            for a pull request, and if so, the Amazon Resource Name (ARN) of the user or identity
            that overrode the rules and their requirements for the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequestOverrideState service method.</param>
            
            <returns>The response from the GetPullRequestOverrideState service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequestOverrideState">REST API Reference for GetPullRequestOverrideState Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetPullRequestOverrideStateAsync(Amazon.CodeCommit.Model.GetPullRequestOverrideStateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about whether approval rules have been set aside (overridden)
            for a pull request, and if so, the Amazon Resource Name (ARN) of the user or identity
            that overrode the rules and their requirements for the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequestOverrideState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPullRequestOverrideState service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequestOverrideState">REST API Reference for GetPullRequestOverrideState Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetRepository(Amazon.CodeCommit.Model.GetRepositoryRequest)">
            <summary>
            Returns information about a repository.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRepository service method.</param>
            
            <returns>The response from the GetRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetRepository">REST API Reference for GetRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetRepositoryAsync(Amazon.CodeCommit.Model.GetRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a repository.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetRepository">REST API Reference for GetRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetRepositoryTriggers(Amazon.CodeCommit.Model.GetRepositoryTriggersRequest)">
            <summary>
            Gets information about triggers configured for a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRepositoryTriggers service method.</param>
            
            <returns>The response from the GetRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetRepositoryTriggers">REST API Reference for GetRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.GetRepositoryTriggersAsync(Amazon.CodeCommit.Model.GetRepositoryTriggersRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about triggers configured for a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRepositoryTriggers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetRepositoryTriggers">REST API Reference for GetRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListApprovalRuleTemplates(Amazon.CodeCommit.Model.ListApprovalRuleTemplatesRequest)">
            <summary>
            Lists all approval rule templates in the specified AWS Region in your AWS account.
            If an AWS Region is not specified, the AWS Region where you are signed in is used.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListApprovalRuleTemplates service method.</param>
            
            <returns>The response from the ListApprovalRuleTemplates service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListApprovalRuleTemplates">REST API Reference for ListApprovalRuleTemplates Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListApprovalRuleTemplatesAsync(Amazon.CodeCommit.Model.ListApprovalRuleTemplatesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all approval rule templates in the specified AWS Region in your AWS account.
            If an AWS Region is not specified, the AWS Region where you are signed in is used.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListApprovalRuleTemplates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListApprovalRuleTemplates service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListApprovalRuleTemplates">REST API Reference for ListApprovalRuleTemplates Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListAssociatedApprovalRuleTemplatesForRepository(Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest)">
            <summary>
            Lists all approval rule templates that are associated with a specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAssociatedApprovalRuleTemplatesForRepository service method.</param>
            
            <returns>The response from the ListAssociatedApprovalRuleTemplatesForRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListAssociatedApprovalRuleTemplatesForRepository">REST API Reference for ListAssociatedApprovalRuleTemplatesForRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListAssociatedApprovalRuleTemplatesForRepositoryAsync(Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all approval rule templates that are associated with a specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAssociatedApprovalRuleTemplatesForRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAssociatedApprovalRuleTemplatesForRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListAssociatedApprovalRuleTemplatesForRepository">REST API Reference for ListAssociatedApprovalRuleTemplatesForRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListBranches(Amazon.CodeCommit.Model.ListBranchesRequest)">
            <summary>
            Gets information about one or more branches in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListBranches service method.</param>
            
            <returns>The response from the ListBranches service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListBranches">REST API Reference for ListBranches Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListBranchesAsync(Amazon.CodeCommit.Model.ListBranchesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about one or more branches in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListBranches service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListBranches service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListBranches">REST API Reference for ListBranches Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListPullRequests(Amazon.CodeCommit.Model.ListPullRequestsRequest)">
            <summary>
            Returns a list of pull requests for a specified repository. The return list can be
            refined by pull request status or pull request author ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPullRequests service method.</param>
            
            <returns>The response from the ListPullRequests service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.AuthorDoesNotExistException">
            The specified Amazon Resource Name (ARN) does not exist in the AWS account.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidAuthorArnException">
            The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the
            full ARN for the author of the pull request, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusException">
            The pull request status is not valid. The only valid values are <code>OPEN</code>
            and <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListPullRequests">REST API Reference for ListPullRequests Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListPullRequestsAsync(Amazon.CodeCommit.Model.ListPullRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of pull requests for a specified repository. The return list can be
            refined by pull request status or pull request author ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPullRequests service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPullRequests service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.AuthorDoesNotExistException">
            The specified Amazon Resource Name (ARN) does not exist in the AWS account.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidAuthorArnException">
            The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the
            full ARN for the author of the pull request, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusException">
            The pull request status is not valid. The only valid values are <code>OPEN</code>
            and <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListPullRequests">REST API Reference for ListPullRequests Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListRepositories(Amazon.CodeCommit.Model.ListRepositoriesRequest)">
            <summary>
            Gets information about one or more repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRepositories service method.</param>
            
            <returns>The response from the ListRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidOrderException">
            The specified sort order is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSortByException">
            The specified sort by value is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListRepositories">REST API Reference for ListRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListRepositoriesAsync(Amazon.CodeCommit.Model.ListRepositoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about one or more repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRepositories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidOrderException">
            The specified sort order is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSortByException">
            The specified sort by value is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListRepositories">REST API Reference for ListRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListRepositoriesForApprovalRuleTemplate(Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest)">
            <summary>
            Lists all repositories associated with the specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRepositoriesForApprovalRuleTemplate service method.</param>
            
            <returns>The response from the ListRepositoriesForApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListRepositoriesForApprovalRuleTemplate">REST API Reference for ListRepositoriesForApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListRepositoriesForApprovalRuleTemplateAsync(Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all repositories associated with the specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRepositoriesForApprovalRuleTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRepositoriesForApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListRepositoriesForApprovalRuleTemplate">REST API Reference for ListRepositoriesForApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListTagsForResource(Amazon.CodeCommit.Model.ListTagsForResourceRequest)">
            <summary>
            Gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS
            CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the<i> AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.ListTagsForResourceAsync(Amazon.CodeCommit.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS
            CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the<i> AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergeBranchesByFastForward(Amazon.CodeCommit.Model.MergeBranchesByFastForwardRequest)">
            <summary>
            Merges two branches using the fast-forward merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesByFastForward service method.</param>
            
            <returns>The response from the MergeBranchesByFastForward service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesByFastForward">REST API Reference for MergeBranchesByFastForward Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergeBranchesByFastForwardAsync(Amazon.CodeCommit.Model.MergeBranchesByFastForwardRequest,System.Threading.CancellationToken)">
            <summary>
            Merges two branches using the fast-forward merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesByFastForward service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergeBranchesByFastForward service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesByFastForward">REST API Reference for MergeBranchesByFastForward Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergeBranchesBySquash(Amazon.CodeCommit.Model.MergeBranchesBySquashRequest)">
            <summary>
            Merges two branches using the squash merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesBySquash service method.</param>
            
            <returns>The response from the MergeBranchesBySquash service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesBySquash">REST API Reference for MergeBranchesBySquash Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergeBranchesBySquashAsync(Amazon.CodeCommit.Model.MergeBranchesBySquashRequest,System.Threading.CancellationToken)">
            <summary>
            Merges two branches using the squash merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesBySquash service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergeBranchesBySquash service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesBySquash">REST API Reference for MergeBranchesBySquash Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergeBranchesByThreeWay(Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest)">
            <summary>
            Merges two specified branches using the three-way merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesByThreeWay service method.</param>
            
            <returns>The response from the MergeBranchesByThreeWay service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesByThreeWay">REST API Reference for MergeBranchesByThreeWay Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergeBranchesByThreeWayAsync(Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest,System.Threading.CancellationToken)">
            <summary>
            Merges two specified branches using the three-way merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesByThreeWay service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergeBranchesByThreeWay service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesByThreeWay">REST API Reference for MergeBranchesByThreeWay Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergePullRequestByFastForward(Amazon.CodeCommit.Model.MergePullRequestByFastForwardRequest)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the fast-forward merge
            strategy. If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestByFastForward service method.</param>
            
            <returns>The response from the MergePullRequestByFastForward service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceDoesNotExistException">
            The specified reference does not exist. You must provide a full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestByFastForward">REST API Reference for MergePullRequestByFastForward Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergePullRequestByFastForwardAsync(Amazon.CodeCommit.Model.MergePullRequestByFastForwardRequest,System.Threading.CancellationToken)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the fast-forward merge
            strategy. If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestByFastForward service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergePullRequestByFastForward service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceDoesNotExistException">
            The specified reference does not exist. You must provide a full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestByFastForward">REST API Reference for MergePullRequestByFastForward Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergePullRequestBySquash(Amazon.CodeCommit.Model.MergePullRequestBySquashRequest)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the squash merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestBySquash service method.</param>
            
            <returns>The response from the MergePullRequestBySquash service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestBySquash">REST API Reference for MergePullRequestBySquash Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergePullRequestBySquashAsync(Amazon.CodeCommit.Model.MergePullRequestBySquashRequest,System.Threading.CancellationToken)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the squash merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestBySquash service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergePullRequestBySquash service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestBySquash">REST API Reference for MergePullRequestBySquash Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergePullRequestByThreeWay(Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the three-way merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestByThreeWay service method.</param>
            
            <returns>The response from the MergePullRequestByThreeWay service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestByThreeWay">REST API Reference for MergePullRequestByThreeWay Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.MergePullRequestByThreeWayAsync(Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest,System.Threading.CancellationToken)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the three-way merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestByThreeWay service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergePullRequestByThreeWay service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestByThreeWay">REST API Reference for MergePullRequestByThreeWay Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.OverridePullRequestApprovalRules(Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesRequest)">
            <summary>
            Sets aside (overrides) all approval rule requirements for a specified pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the OverridePullRequestApprovalRules service method.</param>
            
            <returns>The response from the OverridePullRequestApprovalRules service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidOverrideStatusException">
            The override status is not valid. Valid statuses are OVERRIDE and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.OverrideAlreadySetException">
            The pull request has already had its approval rules set to override.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.OverrideStatusRequiredException">
            An override status is required, but no value was provided. Valid values include OVERRIDE
            and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/OverridePullRequestApprovalRules">REST API Reference for OverridePullRequestApprovalRules Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.OverridePullRequestApprovalRulesAsync(Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Sets aside (overrides) all approval rule requirements for a specified pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the OverridePullRequestApprovalRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the OverridePullRequestApprovalRules service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidOverrideStatusException">
            The override status is not valid. Valid statuses are OVERRIDE and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.OverrideAlreadySetException">
            The pull request has already had its approval rules set to override.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.OverrideStatusRequiredException">
            An override status is required, but no value was provided. Valid values include OVERRIDE
            and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/OverridePullRequestApprovalRules">REST API Reference for OverridePullRequestApprovalRules Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PostCommentForComparedCommit(Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest)">
            <summary>
            Posts a comment on the comparison between two commits.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentForComparedCommit service method.</param>
            
            <returns>The response from the PostCommentForComparedCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException">
            The before commit ID and the after commit ID are the same, which is not valid. The
            before commit ID and the after commit ID must be different commit IDs.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileLocationException">
            The location of the file is not valid. Make sure that you include the file name and
            extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFilePositionException">
            The position is not valid. Make sure that the line number exists in the version of
            the file you want to comment on.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException">
            Either the enum is not in a valid format, or the specified file version enum is not
            valid in respect to the current file version.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentForComparedCommit">REST API Reference for PostCommentForComparedCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PostCommentForComparedCommitAsync(Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Posts a comment on the comparison between two commits.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentForComparedCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PostCommentForComparedCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException">
            The before commit ID and the after commit ID are the same, which is not valid. The
            before commit ID and the after commit ID must be different commit IDs.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileLocationException">
            The location of the file is not valid. Make sure that you include the file name and
            extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFilePositionException">
            The position is not valid. Make sure that the line number exists in the version of
            the file you want to comment on.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException">
            Either the enum is not in a valid format, or the specified file version enum is not
            valid in respect to the current file version.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentForComparedCommit">REST API Reference for PostCommentForComparedCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PostCommentForPullRequest(Amazon.CodeCommit.Model.PostCommentForPullRequestRequest)">
            <summary>
            Posts a comment on a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentForPullRequest service method.</param>
            
            <returns>The response from the PostCommentForPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException">
            The before commit ID and the after commit ID are the same, which is not valid. The
            before commit ID and the after commit ID must be different commit IDs.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileLocationException">
            The location of the file is not valid. Make sure that you include the file name and
            extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFilePositionException">
            The position is not valid. Make sure that the line number exists in the version of
            the file you want to comment on.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException">
            Either the enum is not in a valid format, or the specified file version enum is not
            valid in respect to the current file version.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentForPullRequest">REST API Reference for PostCommentForPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PostCommentForPullRequestAsync(Amazon.CodeCommit.Model.PostCommentForPullRequestRequest,System.Threading.CancellationToken)">
            <summary>
            Posts a comment on a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentForPullRequest service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PostCommentForPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException">
            The before commit ID and the after commit ID are the same, which is not valid. The
            before commit ID and the after commit ID must be different commit IDs.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileLocationException">
            The location of the file is not valid. Make sure that you include the file name and
            extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFilePositionException">
            The position is not valid. Make sure that the line number exists in the version of
            the file you want to comment on.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException">
            Either the enum is not in a valid format, or the specified file version enum is not
            valid in respect to the current file version.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentForPullRequest">REST API Reference for PostCommentForPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PostCommentReply(Amazon.CodeCommit.Model.PostCommentReplyRequest)">
            <summary>
            Posts a comment in reply to an existing comment on a comparison between commits or
            a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentReply service method.</param>
            
            <returns>The response from the PostCommentReply service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentReply">REST API Reference for PostCommentReply Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PostCommentReplyAsync(Amazon.CodeCommit.Model.PostCommentReplyRequest,System.Threading.CancellationToken)">
            <summary>
            Posts a comment in reply to an existing comment on a comparison between commits or
            a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentReply service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PostCommentReply service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentReply">REST API Reference for PostCommentReply Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PutCommentReaction(Amazon.CodeCommit.Model.PutCommentReactionRequest)">
            <summary>
            Adds or updates a reaction to a specified comment for the user whose identity is used
            to make the request. You can only add or update a reaction for yourself. You cannot
            add, modify, or delete a reaction for another user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutCommentReaction service method.</param>
            
            <returns>The response from the PutCommentReaction service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReactionValueException">
            The value of the reaction is not valid. For more information, see the <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReactionLimitExceededException">
            The number of reactions has been exceeded. Reactions are limited to one reaction per
            user for each individual comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReactionValueRequiredException">
            A reaction value is required.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutCommentReaction">REST API Reference for PutCommentReaction Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PutCommentReactionAsync(Amazon.CodeCommit.Model.PutCommentReactionRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates a reaction to a specified comment for the user whose identity is used
            to make the request. You can only add or update a reaction for yourself. You cannot
            add, modify, or delete a reaction for another user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutCommentReaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutCommentReaction service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReactionValueException">
            The value of the reaction is not valid. For more information, see the <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReactionLimitExceededException">
            The number of reactions has been exceeded. Reactions are limited to one reaction per
            user for each individual comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReactionValueRequiredException">
            A reaction value is required.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutCommentReaction">REST API Reference for PutCommentReaction Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PutFile(Amazon.CodeCommit.Model.PutFileRequest)">
            <summary>
            Adds or updates a file in a branch in an AWS CodeCommit repository, and generates
            a commit for the addition in the specified branch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutFile service method.</param>
            
            <returns>The response from the PutFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException">
            A file cannot be added to the repository because the specified path name has the same
            name as a file that already exists in this repository. Either provide a different
            name for the file, or specify a different path for the file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentRequiredException">
            The file cannot be added because it is empty. Empty files cannot be added to the repository
            with this API.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException">
            A file cannot be added to the repository because the specified file name has the same
            name as a directory in this repository. Either provide another name for the file,
            or add the file in a directory that does not match the file name.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException">
            The commit cannot be created because a specified file path points to a submodule.
            Verify that the destination files have valid file paths that do not point to a submodule.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDeletionParameterException">
            The specified deletion parameter is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SameFileContentException">
            The file was not added or updated because the content of the file is exactly the same
            as the content of that file in the repository and branch that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutFile">REST API Reference for PutFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PutFileAsync(Amazon.CodeCommit.Model.PutFileRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates a file in a branch in an AWS CodeCommit repository, and generates
            a commit for the addition in the specified branch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutFile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException">
            A file cannot be added to the repository because the specified path name has the same
            name as a file that already exists in this repository. Either provide a different
            name for the file, or specify a different path for the file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentRequiredException">
            The file cannot be added because it is empty. Empty files cannot be added to the repository
            with this API.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException">
            A file cannot be added to the repository because the specified file name has the same
            name as a directory in this repository. Either provide another name for the file,
            or add the file in a directory that does not match the file name.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException">
            The commit cannot be created because a specified file path points to a submodule.
            Verify that the destination files have valid file paths that do not point to a submodule.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDeletionParameterException">
            The specified deletion parameter is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SameFileContentException">
            The file was not added or updated because the content of the file is exactly the same
            as the content of that file in the repository and branch that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutFile">REST API Reference for PutFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PutRepositoryTriggers(Amazon.CodeCommit.Model.PutRepositoryTriggersRequest)">
            <summary>
            Replaces all triggers for a repository. Used to create or delete triggers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRepositoryTriggers service method.</param>
            
            <returns>The response from the PutRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException">
            One or more branch names specified for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException">
            The custom data provided for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException">
            The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination.
            The most common reason for this error is that the ARN does not meet the requirements
            for the service type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException">
            One or more events specified for the trigger is not valid. Check to make sure that
            all events specified match the requirements for allowed events.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException">
            The name of the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException">
            The AWS Region for the trigger target does not match the AWS Region for the repository.
            Triggers must be created in the same Region as the target for the trigger.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumBranchesExceededException">
            The number of branches for the trigger was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException">
            The number of triggers allowed for the repository was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException">
            At least one branch name is required, but was not specified in the trigger configuration.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException">
            A destination ARN for the target service for the trigger is required, but was not
            specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException">
            At least one event for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException">
            A name for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException">
            The list of triggers for the repository is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutRepositoryTriggers">REST API Reference for PutRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.PutRepositoryTriggersAsync(Amazon.CodeCommit.Model.PutRepositoryTriggersRequest,System.Threading.CancellationToken)">
            <summary>
            Replaces all triggers for a repository. Used to create or delete triggers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRepositoryTriggers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException">
            One or more branch names specified for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException">
            The custom data provided for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException">
            The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination.
            The most common reason for this error is that the ARN does not meet the requirements
            for the service type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException">
            One or more events specified for the trigger is not valid. Check to make sure that
            all events specified match the requirements for allowed events.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException">
            The name of the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException">
            The AWS Region for the trigger target does not match the AWS Region for the repository.
            Triggers must be created in the same Region as the target for the trigger.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumBranchesExceededException">
            The number of branches for the trigger was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException">
            The number of triggers allowed for the repository was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException">
            At least one branch name is required, but was not specified in the trigger configuration.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException">
            A destination ARN for the target service for the trigger is required, but was not
            specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException">
            At least one event for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException">
            A name for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException">
            The list of triggers for the repository is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutRepositoryTriggers">REST API Reference for PutRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.TagResource(Amazon.CodeCommit.Model.TagResourceRequest)">
            <summary>
            Adds or updates tags for a resource in AWS CodeCommit. For a list of valid resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagsMapException">
            The map of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagsMapRequiredException">
            A map of tags is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.TagResourceAsync(Amazon.CodeCommit.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates tags for a resource in AWS CodeCommit. For a list of valid resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagsMapException">
            The map of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagsMapRequiredException">
            A map of tags is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.TestRepositoryTriggers(Amazon.CodeCommit.Model.TestRepositoryTriggersRequest)">
            <summary>
            Tests the functionality of repository triggers by sending information to the trigger
            target. If real data is available in the repository, the test sends data from the
            last commit. If no data is available, sample data is generated.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestRepositoryTriggers service method.</param>
            
            <returns>The response from the TestRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException">
            One or more branch names specified for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException">
            The custom data provided for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException">
            The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination.
            The most common reason for this error is that the ARN does not meet the requirements
            for the service type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException">
            One or more events specified for the trigger is not valid. Check to make sure that
            all events specified match the requirements for allowed events.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException">
            The name of the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException">
            The AWS Region for the trigger target does not match the AWS Region for the repository.
            Triggers must be created in the same Region as the target for the trigger.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumBranchesExceededException">
            The number of branches for the trigger was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException">
            The number of triggers allowed for the repository was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException">
            At least one branch name is required, but was not specified in the trigger configuration.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException">
            A destination ARN for the target service for the trigger is required, but was not
            specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException">
            At least one event for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException">
            A name for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException">
            The list of triggers for the repository is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/TestRepositoryTriggers">REST API Reference for TestRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.TestRepositoryTriggersAsync(Amazon.CodeCommit.Model.TestRepositoryTriggersRequest,System.Threading.CancellationToken)">
            <summary>
            Tests the functionality of repository triggers by sending information to the trigger
            target. If real data is available in the repository, the test sends data from the
            last commit. If no data is available, sample data is generated.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestRepositoryTriggers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException">
            One or more branch names specified for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException">
            The custom data provided for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException">
            The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination.
            The most common reason for this error is that the ARN does not meet the requirements
            for the service type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException">
            One or more events specified for the trigger is not valid. Check to make sure that
            all events specified match the requirements for allowed events.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException">
            The name of the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException">
            The AWS Region for the trigger target does not match the AWS Region for the repository.
            Triggers must be created in the same Region as the target for the trigger.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumBranchesExceededException">
            The number of branches for the trigger was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException">
            The number of triggers allowed for the repository was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException">
            At least one branch name is required, but was not specified in the trigger configuration.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException">
            A destination ARN for the target service for the trigger is required, but was not
            specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException">
            At least one event for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException">
            A name for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException">
            The list of triggers for the repository is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/TestRepositoryTriggers">REST API Reference for TestRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UntagResource(Amazon.CodeCommit.Model.UntagResourceRequest)">
            <summary>
            Removes tags for a resource in AWS CodeCommit. For a list of valid resources in AWS
            CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagKeysListException">
            The list of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagKeysListRequiredException">
            A list of tag keys is required. The list cannot be empty or null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UntagResourceAsync(Amazon.CodeCommit.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags for a resource in AWS CodeCommit. For a list of valid resources in AWS
            CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagKeysListException">
            The list of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagKeysListRequiredException">
            A list of tag keys is required. The list cannot be empty or null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateApprovalRuleTemplateContent(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentRequest)">
            <summary>
            Updates the content of an approval rule template. You can change the number of required
            approvals, the membership of the approval rule, and whether an approval pool is defined.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateContent service method.</param>
            
            <returns>The response from the UpdateApprovalRuleTemplateContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException">
            The content for the approval rule template is empty. You must provide some content
            for an approval rule template. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException">
            The content of the approval rule template is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception">
            The SHA-256 hash signature for the rule content is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateContent">REST API Reference for UpdateApprovalRuleTemplateContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateApprovalRuleTemplateContentAsync(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the content of an approval rule template. You can change the number of required
            approvals, the membership of the approval rule, and whether an approval pool is defined.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateApprovalRuleTemplateContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException">
            The content for the approval rule template is empty. You must provide some content
            for an approval rule template. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException">
            The content of the approval rule template is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception">
            The SHA-256 hash signature for the rule content is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateContent">REST API Reference for UpdateApprovalRuleTemplateContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateApprovalRuleTemplateDescription(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionRequest)">
            <summary>
            Updates the description for a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateDescription service method.</param>
            
            <returns>The response from the UpdateApprovalRuleTemplateDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException">
            The description for the approval rule template is not valid because it exceeds the
            maximum characters allowed for a description. For more information about limits in
            AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateDescription">REST API Reference for UpdateApprovalRuleTemplateDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateApprovalRuleTemplateDescriptionAsync(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the description for a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateDescription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateApprovalRuleTemplateDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException">
            The description for the approval rule template is not valid because it exceeds the
            maximum characters allowed for a description. For more information about limits in
            AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateDescription">REST API Reference for UpdateApprovalRuleTemplateDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateApprovalRuleTemplateName(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameRequest)">
            <summary>
            Updates the name of a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateName service method.</param>
            
            <returns>The response from the UpdateApprovalRuleTemplateName service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException">
            You cannot create an approval rule template with that name because a template with
            that name already exists in this AWS Region for your AWS account. Approval rule template
            names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateName">REST API Reference for UpdateApprovalRuleTemplateName Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateApprovalRuleTemplateNameAsync(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the name of a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateName service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateApprovalRuleTemplateName service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException">
            You cannot create an approval rule template with that name because a template with
            that name already exists in this AWS Region for your AWS account. Approval rule template
            names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateName">REST API Reference for UpdateApprovalRuleTemplateName Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateComment(Amazon.CodeCommit.Model.UpdateCommentRequest)">
            <summary>
            Replaces the contents of a comment.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateComment service method.</param>
            
            <returns>The response from the UpdateComment service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException">
            You cannot modify or delete this comment. Only comment authors can modify or delete
            their comments.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateComment">REST API Reference for UpdateComment Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateCommentAsync(Amazon.CodeCommit.Model.UpdateCommentRequest,System.Threading.CancellationToken)">
            <summary>
            Replaces the contents of a comment.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateComment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateComment service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException">
            You cannot modify or delete this comment. Only comment authors can modify or delete
            their comments.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateComment">REST API Reference for UpdateComment Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateDefaultBranch(Amazon.CodeCommit.Model.UpdateDefaultBranchRequest)">
            <summary>
            Sets or changes the default branch name for the specified repository.
            
             <note> 
            <para>
            If you use this operation to change the default branch name to the current default
            branch name, a success message is returned even though the default branch did not
            change.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDefaultBranch service method.</param>
            
            <returns>The response from the UpdateDefaultBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateDefaultBranch">REST API Reference for UpdateDefaultBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateDefaultBranchAsync(Amazon.CodeCommit.Model.UpdateDefaultBranchRequest,System.Threading.CancellationToken)">
            <summary>
            Sets or changes the default branch name for the specified repository.
            
             <note> 
            <para>
            If you use this operation to change the default branch name to the current default
            branch name, a success message is returned even though the default branch did not
            change.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDefaultBranch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDefaultBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateDefaultBranch">REST API Reference for UpdateDefaultBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdatePullRequestApprovalRuleContent(Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentRequest)">
            <summary>
            Updates the structure of an approval rule created specifically for a pull request.
            For example, you can change the number of required approvers and the approval pool
            for approvers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestApprovalRuleContent service method.</param>
            
            <returns>The response from the UpdatePullRequestApprovalRuleContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException">
            The content for the approval rule is empty. You must provide some content for an approval
            rule. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException">
            The specified approval rule does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException">
            The approval rule cannot be modified for the pull request because it was created by
            an approval rule template and applied to the pull request automatically.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException">
            The content for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception">
            The SHA-256 hash signature for the rule content is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestApprovalRuleContent">REST API Reference for UpdatePullRequestApprovalRuleContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdatePullRequestApprovalRuleContentAsync(Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the structure of an approval rule created specifically for a pull request.
            For example, you can change the number of required approvers and the approval pool
            for approvers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestApprovalRuleContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullRequestApprovalRuleContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException">
            The content for the approval rule is empty. You must provide some content for an approval
            rule. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException">
            The specified approval rule does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException">
            The approval rule cannot be modified for the pull request because it was created by
            an approval rule template and applied to the pull request automatically.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException">
            The content for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception">
            The SHA-256 hash signature for the rule content is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestApprovalRuleContent">REST API Reference for UpdatePullRequestApprovalRuleContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdatePullRequestApprovalState(Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateRequest)">
            <summary>
            Updates the state of a user's approval on a pull request. The user is derived from
            the signed-in account when the request is made.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestApprovalState service method.</param>
            
            <returns>The response from the UpdatePullRequestApprovalState service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalStateRequiredException">
            An approval state is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalStateException">
            The state for the approval is not valid. Valid values include APPROVE and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException">
            The number of approvals required for the approval rule exceeds the maximum number
            allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException">
            The approval cannot be applied because the user approving the pull request matches
            the user who created the pull request. You cannot approve a pull request that you
            created.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestApprovalState">REST API Reference for UpdatePullRequestApprovalState Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdatePullRequestApprovalStateAsync(Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the state of a user's approval on a pull request. The user is derived from
            the signed-in account when the request is made.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestApprovalState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullRequestApprovalState service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalStateRequiredException">
            An approval state is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalStateException">
            The state for the approval is not valid. Valid values include APPROVE and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException">
            The number of approvals required for the approval rule exceeds the maximum number
            allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException">
            The approval cannot be applied because the user approving the pull request matches
            the user who created the pull request. You cannot approve a pull request that you
            created.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestApprovalState">REST API Reference for UpdatePullRequestApprovalState Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdatePullRequestDescription(Amazon.CodeCommit.Model.UpdatePullRequestDescriptionRequest)">
            <summary>
            Replaces the contents of the description of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestDescription service method.</param>
            
            <returns>The response from the UpdatePullRequestDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDescriptionException">
            The pull request description is not valid. Descriptions cannot be more than 1,000
            characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestDescription">REST API Reference for UpdatePullRequestDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdatePullRequestDescriptionAsync(Amazon.CodeCommit.Model.UpdatePullRequestDescriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Replaces the contents of the description of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestDescription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullRequestDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDescriptionException">
            The pull request description is not valid. Descriptions cannot be more than 1,000
            characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestDescription">REST API Reference for UpdatePullRequestDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdatePullRequestStatus(Amazon.CodeCommit.Model.UpdatePullRequestStatusRequest)">
            <summary>
            Updates the status of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestStatus service method.</param>
            
            <returns>The response from the UpdatePullRequestStatus service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusException">
            The pull request status is not valid. The only valid values are <code>OPEN</code>
            and <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException">
            The pull request status update is not valid. The only valid update is from <code>OPEN</code>
            to <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestStatusRequiredException">
            A pull request status is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestStatus">REST API Reference for UpdatePullRequestStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdatePullRequestStatusAsync(Amazon.CodeCommit.Model.UpdatePullRequestStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the status of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestStatus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullRequestStatus service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusException">
            The pull request status is not valid. The only valid values are <code>OPEN</code>
            and <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException">
            The pull request status update is not valid. The only valid update is from <code>OPEN</code>
            to <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestStatusRequiredException">
            A pull request status is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestStatus">REST API Reference for UpdatePullRequestStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdatePullRequestTitle(Amazon.CodeCommit.Model.UpdatePullRequestTitleRequest)">
            <summary>
            Replaces the title of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestTitle service method.</param>
            
            <returns>The response from the UpdatePullRequestTitle service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTitleException">
            The title of the pull request is not valid. Pull request titles cannot exceed 100
            characters in length.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TitleRequiredException">
            A pull request title is required. It cannot be empty or null.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestTitle">REST API Reference for UpdatePullRequestTitle Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdatePullRequestTitleAsync(Amazon.CodeCommit.Model.UpdatePullRequestTitleRequest,System.Threading.CancellationToken)">
            <summary>
            Replaces the title of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestTitle service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullRequestTitle service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTitleException">
            The title of the pull request is not valid. Pull request titles cannot exceed 100
            characters in length.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TitleRequiredException">
            A pull request title is required. It cannot be empty or null.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestTitle">REST API Reference for UpdatePullRequestTitle Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateRepositoryDescription(Amazon.CodeCommit.Model.UpdateRepositoryDescriptionRequest)">
            <summary>
            Sets or changes the comment or description for a repository.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRepositoryDescription service method.</param>
            
            <returns>The response from the UpdateRepositoryDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException">
            The specified repository description is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateRepositoryDescription">REST API Reference for UpdateRepositoryDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateRepositoryDescriptionAsync(Amazon.CodeCommit.Model.UpdateRepositoryDescriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Sets or changes the comment or description for a repository.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRepositoryDescription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateRepositoryDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException">
            The specified repository description is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateRepositoryDescription">REST API Reference for UpdateRepositoryDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateRepositoryName(Amazon.CodeCommit.Model.UpdateRepositoryNameRequest)">
            <summary>
            Renames a repository. The repository name must be unique across the calling AWS account.
            Repository names are limited to 100 alphanumeric, dash, and underscore characters,
            and cannot include certain characters. The suffix .git is prohibited. For more information
            about the limits on repository names, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">Limits</a>
            in the AWS CodeCommit User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRepositoryName service method.</param>
            
            <returns>The response from the UpdateRepositoryName service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameExistsException">
            The specified repository name already exists.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateRepositoryName">REST API Reference for UpdateRepositoryName Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.AmazonCodeCommitClient.UpdateRepositoryNameAsync(Amazon.CodeCommit.Model.UpdateRepositoryNameRequest,System.Threading.CancellationToken)">
            <summary>
            Renames a repository. The repository name must be unique across the calling AWS account.
            Repository names are limited to 100 alphanumeric, dash, and underscore characters,
            and cannot include certain characters. The suffix .git is prohibited. For more information
            about the limits on repository names, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">Limits</a>
            in the AWS CodeCommit User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRepositoryName service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateRepositoryName service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameExistsException">
            The specified repository name already exists.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateRepositoryName">REST API Reference for UpdateRepositoryName Operation</seealso>
        </member>
        <member name="T:Amazon.CodeCommit.IAmazonCodeCommit">
             <summary>
             Interface for accessing CodeCommit
            
             AWS CodeCommit 
             <para>
             This is the <i>AWS CodeCommit API Reference</i>. This reference provides descriptions
             of the operations and data types for AWS CodeCommit API along with usage examples.
             </para>
              
             <para>
             You can use the AWS CodeCommit API to work with the following objects:
             </para>
              
             <para>
             Repositories, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>BatchGetRepositories</a>, which returns information about one or more repositories
             associated with your AWS account.
             </para>
              </li> <li> 
             <para>
              <a>CreateRepository</a>, which creates an AWS CodeCommit repository.
             </para>
              </li> <li> 
             <para>
              <a>DeleteRepository</a>, which deletes an AWS CodeCommit repository.
             </para>
              </li> <li> 
             <para>
              <a>GetRepository</a>, which returns information about a specified repository.
             </para>
              </li> <li> 
             <para>
              <a>ListRepositories</a>, which lists all AWS CodeCommit repositories associated with
             your AWS account.
             </para>
              </li> <li> 
             <para>
              <a>UpdateRepositoryDescription</a>, which sets or updates the description of the
             repository.
             </para>
              </li> <li> 
             <para>
              <a>UpdateRepositoryName</a>, which changes the name of the repository. If you change
             the name of a repository, no other users of that repository can access it until you
             send them the new HTTPS or SSH URL to use.
             </para>
              </li> </ul> 
             <para>
             Branches, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>CreateBranch</a>, which creates a branch in a specified repository.
             </para>
              </li> <li> 
             <para>
              <a>DeleteBranch</a>, which deletes the specified branch in a repository unless it
             is the default branch.
             </para>
              </li> <li> 
             <para>
              <a>GetBranch</a>, which returns information about a specified branch.
             </para>
              </li> <li> 
             <para>
              <a>ListBranches</a>, which lists all branches for a specified repository.
             </para>
              </li> <li> 
             <para>
              <a>UpdateDefaultBranch</a>, which changes the default branch for a repository.
             </para>
              </li> </ul> 
             <para>
             Files, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>DeleteFile</a>, which deletes the content of a specified file from a specified
             branch.
             </para>
              </li> <li> 
             <para>
              <a>GetBlob</a>, which returns the base-64 encoded content of an individual Git blob
             object in a repository.
             </para>
              </li> <li> 
             <para>
              <a>GetFile</a>, which returns the base-64 encoded content of a specified file.
             </para>
              </li> <li> 
             <para>
              <a>GetFolder</a>, which returns the contents of a specified folder or directory.
             </para>
              </li> <li> 
             <para>
              <a>PutFile</a>, which adds or modifies a single file in a specified repository and
             branch.
             </para>
              </li> </ul> 
             <para>
             Commits, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>BatchGetCommits</a>, which returns information about one or more commits in a
             repository.
             </para>
              </li> <li> 
             <para>
              <a>CreateCommit</a>, which creates a commit for changes to a repository.
             </para>
              </li> <li> 
             <para>
              <a>GetCommit</a>, which returns information about a commit, including commit messages
             and author and committer information.
             </para>
              </li> <li> 
             <para>
              <a>GetDifferences</a>, which returns information about the differences in a valid
             commit specifier (such as a branch, tag, HEAD, commit ID, or other fully qualified
             reference).
             </para>
              </li> </ul> 
             <para>
             Merges, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>BatchDescribeMergeConflicts</a>, which returns information about conflicts in
             a merge between commits in a repository.
             </para>
              </li> <li> 
             <para>
              <a>CreateUnreferencedMergeCommit</a>, which creates an unreferenced commit between
             two branches or commits for the purpose of comparing them and identifying any potential
             conflicts.
             </para>
              </li> <li> 
             <para>
              <a>DescribeMergeConflicts</a>, which returns information about merge conflicts between
             the base, source, and destination versions of a file in a potential merge.
             </para>
              </li> <li> 
             <para>
              <a>GetMergeCommit</a>, which returns information about the merge between a source
             and destination commit. 
             </para>
              </li> <li> 
             <para>
              <a>GetMergeConflicts</a>, which returns information about merge conflicts between
             the source and destination branch in a pull request.
             </para>
              </li> <li> 
             <para>
              <a>GetMergeOptions</a>, which returns information about the available merge options
             between two branches or commit specifiers.
             </para>
              </li> <li> 
             <para>
              <a>MergeBranchesByFastForward</a>, which merges two branches using the fast-forward
             merge option.
             </para>
              </li> <li> 
             <para>
              <a>MergeBranchesBySquash</a>, which merges two branches using the squash merge option.
             </para>
              </li> <li> 
             <para>
              <a>MergeBranchesByThreeWay</a>, which merges two branches using the three-way merge
             option.
             </para>
              </li> </ul> 
             <para>
             Pull requests, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>CreatePullRequest</a>, which creates a pull request in a specified repository.
             </para>
              </li> <li> 
             <para>
              <a>CreatePullRequestApprovalRule</a>, which creates an approval rule for a specified
             pull request.
             </para>
              </li> <li> 
             <para>
              <a>DeletePullRequestApprovalRule</a>, which deletes an approval rule for a specified
             pull request.
             </para>
              </li> <li> 
             <para>
              <a>DescribePullRequestEvents</a>, which returns information about one or more pull
             request events.
             </para>
              </li> <li> 
             <para>
              <a>EvaluatePullRequestApprovalRules</a>, which evaluates whether a pull request has
             met all the conditions specified in its associated approval rules.
             </para>
              </li> <li> 
             <para>
              <a>GetCommentsForPullRequest</a>, which returns information about comments on a specified
             pull request.
             </para>
              </li> <li> 
             <para>
              <a>GetPullRequest</a>, which returns information about a specified pull request.
             </para>
              </li> <li> 
             <para>
              <a>GetPullRequestApprovalStates</a>, which returns information about the approval
             states for a specified pull request.
             </para>
              </li> <li> 
             <para>
              <a>GetPullRequestOverrideState</a>, which returns information about whether approval
             rules have been set aside (overriden) for a pull request, and if so, the Amazon Resource
             Name (ARN) of the user or identity that overrode the rules and their requirements
             for the pull request.
             </para>
              </li> <li> 
             <para>
              <a>ListPullRequests</a>, which lists all pull requests for a repository.
             </para>
              </li> <li> 
             <para>
              <a>MergePullRequestByFastForward</a>, which merges the source destination branch
             of a pull request into the specified destination branch for that pull request using
             the fast-forward merge option.
             </para>
              </li> <li> 
             <para>
              <a>MergePullRequestBySquash</a>, which merges the source destination branch of a
             pull request into the specified destination branch for that pull request using the
             squash merge option.
             </para>
              </li> <li> 
             <para>
              <a>MergePullRequestByThreeWay</a>. which merges the source destination branch of
             a pull request into the specified destination branch for that pull request using the
             three-way merge option.
             </para>
              </li> <li> 
             <para>
              <a>OverridePullRequestApprovalRules</a>, which sets aside all approval rule requirements
             for a pull request.
             </para>
              </li> <li> 
             <para>
              <a>PostCommentForPullRequest</a>, which posts a comment to a pull request at the
             specified line, file, or request.
             </para>
              </li> <li> 
             <para>
              <a>UpdatePullRequestApprovalRuleContent</a>, which updates the structure of an approval
             rule for a pull request.
             </para>
              </li> <li> 
             <para>
              <a>UpdatePullRequestApprovalState</a>, which updates the state of an approval on
             a pull request.
             </para>
              </li> <li> 
             <para>
              <a>UpdatePullRequestDescription</a>, which updates the description of a pull request.
             </para>
              </li> <li> 
             <para>
              <a>UpdatePullRequestStatus</a>, which updates the status of a pull request.
             </para>
              </li> <li> 
             <para>
              <a>UpdatePullRequestTitle</a>, which updates the title of a pull request.
             </para>
              </li> </ul> 
             <para>
             Approval rule templates, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>AssociateApprovalRuleTemplateWithRepository</a>, which associates a template with
             a specified repository. After the template is associated with a repository, AWS CodeCommit
             creates approval rules that match the template conditions on every pull request created
             in the specified repository.
             </para>
              </li> <li> 
             <para>
              <a>BatchAssociateApprovalRuleTemplateWithRepositories</a>, which associates a template
             with one or more specified repositories. After the template is associated with a repository,
             AWS CodeCommit creates approval rules that match the template conditions on every
             pull request created in the specified repositories.
             </para>
              </li> <li> 
             <para>
              <a>BatchDisassociateApprovalRuleTemplateFromRepositories</a>, which removes the association
             between a template and specified repositories so that approval rules based on the
             template are not automatically created when pull requests are created in those repositories.
             </para>
              </li> <li> 
             <para>
              <a>CreateApprovalRuleTemplate</a>, which creates a template for approval rules that
             can then be associated with one or more repositories in your AWS account.
             </para>
              </li> <li> 
             <para>
              <a>DeleteApprovalRuleTemplate</a>, which deletes the specified template. It does
             not remove approval rules on pull requests already created with the template.
             </para>
              </li> <li> 
             <para>
              <a>DisassociateApprovalRuleTemplateFromRepository</a>, which removes the association
             between a template and a repository so that approval rules based on the template are
             not automatically created when pull requests are created in the specified repository.
             </para>
              </li> <li> 
             <para>
              <a>GetApprovalRuleTemplate</a>, which returns information about an approval rule
             template.
             </para>
              </li> <li> 
             <para>
              <a>ListApprovalRuleTemplates</a>, which lists all approval rule templates in the
             AWS Region in your AWS account.
             </para>
              </li> <li> 
             <para>
              <a>ListAssociatedApprovalRuleTemplatesForRepository</a>, which lists all approval
             rule templates that are associated with a specified repository.
             </para>
              </li> <li> 
             <para>
              <a>ListRepositoriesForApprovalRuleTemplate</a>, which lists all repositories associated
             with the specified approval rule template.
             </para>
              </li> <li> 
             <para>
              <a>UpdateApprovalRuleTemplateDescription</a>, which updates the description of an
             approval rule template.
             </para>
              </li> <li> 
             <para>
              <a>UpdateApprovalRuleTemplateName</a>, which updates the name of an approval rule
             template.
             </para>
              </li> <li> 
             <para>
              <a>UpdateApprovalRuleTemplateContent</a>, which updates the content of an approval
             rule template.
             </para>
              </li> </ul> 
             <para>
             Comments in a repository, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>DeleteCommentContent</a>, which deletes the content of a comment on a commit in
             a repository.
             </para>
              </li> <li> 
             <para>
              <a>GetComment</a>, which returns information about a comment on a commit.
             </para>
              </li> <li> 
             <para>
              <a>GetCommentReactions</a>, which returns information about emoji reactions to comments.
             </para>
              </li> <li> 
             <para>
              <a>GetCommentsForComparedCommit</a>, which returns information about comments on
             the comparison between two commit specifiers in a repository.
             </para>
              </li> <li> 
             <para>
              <a>PostCommentForComparedCommit</a>, which creates a comment on the comparison between
             two commit specifiers in a repository.
             </para>
              </li> <li> 
             <para>
              <a>PostCommentReply</a>, which creates a reply to a comment.
             </para>
              </li> <li> 
             <para>
              <a>PutCommentReaction</a>, which creates or updates an emoji reaction to a comment.
             </para>
              </li> <li> 
             <para>
              <a>UpdateComment</a>, which updates the content of a comment on a commit in a repository.
             </para>
              </li> </ul> 
             <para>
             Tags used to tag resources in AWS CodeCommit (not Git tags), by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>ListTagsForResource</a>, which gets information about AWS tags for a specified
             Amazon Resource Name (ARN) in AWS CodeCommit.
             </para>
              </li> <li> 
             <para>
              <a>TagResource</a>, which adds or updates tags for a resource in AWS CodeCommit.
             </para>
              </li> <li> 
             <para>
              <a>UntagResource</a>, which removes tags for a resource in AWS CodeCommit.
             </para>
              </li> </ul> 
             <para>
             Triggers, by calling the following:
             </para>
              <ul> <li> 
             <para>
              <a>GetRepositoryTriggers</a>, which returns information about triggers configured
             for a repository.
             </para>
              </li> <li> 
             <para>
              <a>PutRepositoryTriggers</a>, which replaces all triggers for a repository and can
             be used to create or delete triggers.
             </para>
              </li> <li> 
             <para>
              <a>TestRepositoryTriggers</a>, which tests the functionality of a repository trigger
             by sending data to the trigger target.
             </para>
              </li> </ul> 
             <para>
             For information about how to use AWS CodeCommit, see the <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS
             CodeCommit User Guide</a>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.CodeCommit.IAmazonCodeCommit.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.AssociateApprovalRuleTemplateWithRepository(Amazon.CodeCommit.Model.AssociateApprovalRuleTemplateWithRepositoryRequest)">
            <summary>
            Creates an association between an approval rule template and a specified repository.
            Then, the next time a pull request is created in the repository where the destination
            reference (if specified) matches the destination reference (branch) for the pull request,
            an approval rule that matches the template conditions is automatically created for
            that pull request. If no destination references are specified in the template, an
            approval rule that matches the template contents is created for all pull requests
            in that repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateApprovalRuleTemplateWithRepository service method.</param>
            
            <returns>The response from the AssociateApprovalRuleTemplateWithRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException">
            The maximum number of approval rule templates for a repository has been exceeded.
            You cannot associate more than 25 approval rule templates with a repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/AssociateApprovalRuleTemplateWithRepository">REST API Reference for AssociateApprovalRuleTemplateWithRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.AssociateApprovalRuleTemplateWithRepositoryAsync(Amazon.CodeCommit.Model.AssociateApprovalRuleTemplateWithRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an association between an approval rule template and a specified repository.
            Then, the next time a pull request is created in the repository where the destination
            reference (if specified) matches the destination reference (branch) for the pull request,
            an approval rule that matches the template conditions is automatically created for
            that pull request. If no destination references are specified in the template, an
            approval rule that matches the template contents is created for all pull requests
            in that repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateApprovalRuleTemplateWithRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the AssociateApprovalRuleTemplateWithRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRuleTemplatesAssociatedWithRepositoryException">
            The maximum number of approval rule templates for a repository has been exceeded.
            You cannot associate more than 25 approval rule templates with a repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/AssociateApprovalRuleTemplateWithRepository">REST API Reference for AssociateApprovalRuleTemplateWithRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories(Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesRequest)">
            <summary>
            Creates an association between an approval rule template and one or more specified
            repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchAssociateApprovalRuleTemplateWithRepositories service method.</param>
            
            <returns>The response from the BatchAssociateApprovalRuleTemplateWithRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchAssociateApprovalRuleTemplateWithRepositories">REST API Reference for BatchAssociateApprovalRuleTemplateWithRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.BatchAssociateApprovalRuleTemplateWithRepositoriesAsync(Amazon.CodeCommit.Model.BatchAssociateApprovalRuleTemplateWithRepositoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an association between an approval rule template and one or more specified
            repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchAssociateApprovalRuleTemplateWithRepositories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchAssociateApprovalRuleTemplateWithRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchAssociateApprovalRuleTemplateWithRepositories">REST API Reference for BatchAssociateApprovalRuleTemplateWithRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.BatchDescribeMergeConflicts(Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest)">
            <summary>
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDescribeMergeConflicts service method.</param>
            
            <returns>The response from the BatchDescribeMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException">
            The specified value for the number of conflict files to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException">
            The specified value for the number of merge hunks to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchDescribeMergeConflicts">REST API Reference for BatchDescribeMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.BatchDescribeMergeConflictsAsync(Amazon.CodeCommit.Model.BatchDescribeMergeConflictsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDescribeMergeConflicts service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchDescribeMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException">
            The specified value for the number of conflict files to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException">
            The specified value for the number of merge hunks to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchDescribeMergeConflicts">REST API Reference for BatchDescribeMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories(Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequest)">
            <summary>
            Removes the association between an approval rule template and one or more specified
            repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDisassociateApprovalRuleTemplateFromRepositories service method.</param>
            
            <returns>The response from the BatchDisassociateApprovalRuleTemplateFromRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchDisassociateApprovalRuleTemplateFromRepositories">REST API Reference for BatchDisassociateApprovalRuleTemplateFromRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositoriesAsync(Amazon.CodeCommit.Model.BatchDisassociateApprovalRuleTemplateFromRepositoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the association between an approval rule template and one or more specified
            repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchDisassociateApprovalRuleTemplateFromRepositories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchDisassociateApprovalRuleTemplateFromRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchDisassociateApprovalRuleTemplateFromRepositories">REST API Reference for BatchDisassociateApprovalRuleTemplateFromRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.BatchGetCommits(Amazon.CodeCommit.Model.BatchGetCommitsRequest)">
            <summary>
            Returns information about the contents of one or more commits in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetCommits service method.</param>
            
            <returns>The response from the BatchGetCommits service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdsLimitExceededException">
            The maximum number of allowed commit IDs in a batch request is 100. Verify that your
            batch requests contains no more than 100 commit IDs, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdsListRequiredException">
            A list of commit IDs is required, but was either not specified or the list was empty.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchGetCommits">REST API Reference for BatchGetCommits Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.BatchGetCommitsAsync(Amazon.CodeCommit.Model.BatchGetCommitsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the contents of one or more commits in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetCommits service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGetCommits service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdsLimitExceededException">
            The maximum number of allowed commit IDs in a batch request is 100. Verify that your
            batch requests contains no more than 100 commit IDs, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdsListRequiredException">
            A list of commit IDs is required, but was either not specified or the list was empty.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchGetCommits">REST API Reference for BatchGetCommits Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.BatchGetRepositories(Amazon.CodeCommit.Model.BatchGetRepositoriesRequest)">
            <summary>
            Returns information about one or more repositories.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetRepositories service method.</param>
            
            <returns>The response from the BatchGetRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchGetRepositories">REST API Reference for BatchGetRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.BatchGetRepositoriesAsync(Amazon.CodeCommit.Model.BatchGetRepositoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about one or more repositories.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the BatchGetRepositories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the BatchGetRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryNamesExceededException">
            The maximum number of allowed repository names was exceeded. Currently, this number
            is 100.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNamesRequiredException">
            At least one repository name object is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/BatchGetRepositories">REST API Reference for BatchGetRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreateApprovalRuleTemplate(Amazon.CodeCommit.Model.CreateApprovalRuleTemplateRequest)">
            <summary>
            Creates a template for approval rules that can then be associated with one or more
            repositories in your AWS account. When you associate a template with a repository,
            AWS CodeCommit creates an approval rule that matches the conditions of the template
            for all pull requests that meet the conditions of the template. For more information,
            see <a>AssociateApprovalRuleTemplateWithRepository</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateApprovalRuleTemplate service method.</param>
            
            <returns>The response from the CreateApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException">
            The content for the approval rule template is empty. You must provide some content
            for an approval rule template. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException">
            You cannot create an approval rule template with that name because a template with
            that name already exists in this AWS Region for your AWS account. Approval rule template
            names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException">
            The content of the approval rule template is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException">
            The description for the approval rule template is not valid because it exceeds the
            maximum characters allowed for a description. For more information about limits in
            AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException">
            The maximum number of approval rule templates has been exceeded for this AWS Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateApprovalRuleTemplate">REST API Reference for CreateApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreateApprovalRuleTemplateAsync(Amazon.CodeCommit.Model.CreateApprovalRuleTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a template for approval rules that can then be associated with one or more
            repositories in your AWS account. When you associate a template with a repository,
            AWS CodeCommit creates an approval rule that matches the conditions of the template
            for all pull requests that meet the conditions of the template. For more information,
            see <a>AssociateApprovalRuleTemplateWithRepository</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateApprovalRuleTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException">
            The content for the approval rule template is empty. You must provide some content
            for an approval rule template. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException">
            You cannot create an approval rule template with that name because a template with
            that name already exists in this AWS Region for your AWS account. Approval rule template
            names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException">
            The content of the approval rule template is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException">
            The description for the approval rule template is not valid because it exceeds the
            maximum characters allowed for a description. For more information about limits in
            AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NumberOfRuleTemplatesExceededException">
            The maximum number of approval rule templates has been exceeded for this AWS Region.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateApprovalRuleTemplate">REST API Reference for CreateApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreateBranch(Amazon.CodeCommit.Model.CreateBranchRequest)">
            <summary>
            Creates a branch in a repository and points the branch to a commit.
            
             <note> 
            <para>
            Calling the create branch operation does not set a repository's default branch. To
            do this, call the update default branch operation.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBranch service method.</param>
            
            <returns>The response from the CreateBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameExistsException">
            Cannot create the branch with the specified name because the commit conflicts with
            an existing branch with the same name. Branch names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateBranch">REST API Reference for CreateBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreateBranchAsync(Amazon.CodeCommit.Model.CreateBranchRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a branch in a repository and points the branch to a commit.
            
             <note> 
            <para>
            Calling the create branch operation does not set a repository's default branch. To
            do this, call the update default branch operation.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBranch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameExistsException">
            Cannot create the branch with the specified name because the commit conflicts with
            an existing branch with the same name. Branch names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateBranch">REST API Reference for CreateBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreateCommit(Amazon.CodeCommit.Model.CreateCommitRequest)">
            <summary>
            Creates a commit for a repository on the tip of a specified branch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCommit service method.</param>
            
            <returns>The response from the CreateCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException">
            A file cannot be added to the repository because the specified path name has the same
            name as a file that already exists in this repository. Either provide a different
            name for the file, or specify a different path for the file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException">
            The commit cannot be created because both a source file and file content have been
            specified for the same file. You cannot provide both. Either specify a source file
            or provide the file content directly.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileEntryRequiredException">
            The commit cannot be created because no files have been specified as added, updated,
            or changed (PutFile or DeleteFile) for the commit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException">
            A file cannot be added to the repository because the specified file name has the same
            name as a directory in this repository. Either provide another name for the file,
            or add the file in a directory that does not match the file name.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException">
            The commit cannot be created because a specified file path points to a submodule.
            Verify that the destination files have valid file paths that do not point to a submodule.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDeletionParameterException">
            The specified deletion parameter is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException">
            The number of specified files to change as part of this commit exceeds the maximum
            number of files that can be changed in a single commit. Consider using a Git client
            for these changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NoChangeException">
            The commit cannot be created because no changes will be made to the repository as
            a result of this commit. A commit must contain at least one change.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PutFileEntryConflictException">
            The commit cannot be created because one or more files specified in the commit reference
            both a file and a folder.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RestrictedSourceFileException">
            The commit cannot be created because one of the changes specifies copying or moving
            a .gitkeep file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SamePathRequestException">
            The commit cannot be created because one or more changes in this commit duplicate
            actions in the same file path. For example, you cannot make the same delete request
            to the same file in the same file path twice, or make a delete request and a move
            request to the same file as part of the same commit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException">
            The commit cannot be created because no source files or file content have been specified
            for the commit.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateCommit">REST API Reference for CreateCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreateCommitAsync(Amazon.CodeCommit.Model.CreateCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a commit for a repository on the tip of a specified branch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException">
            A file cannot be added to the repository because the specified path name has the same
            name as a file that already exists in this repository. Either provide a different
            name for the file, or specify a different path for the file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentAndSourceFileSpecifiedException">
            The commit cannot be created because both a source file and file content have been
            specified for the same file. You cannot provide both. Either specify a source file
            or provide the file content directly.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileEntryRequiredException">
            The commit cannot be created because no files have been specified as added, updated,
            or changed (PutFile or DeleteFile) for the commit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException">
            A file cannot be added to the repository because the specified file name has the same
            name as a directory in this repository. Either provide another name for the file,
            or add the file in a directory that does not match the file name.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException">
            The commit cannot be created because a specified file path points to a submodule.
            Verify that the destination files have valid file paths that do not point to a submodule.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDeletionParameterException">
            The specified deletion parameter is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileEntriesExceededException">
            The number of specified files to change as part of this commit exceeds the maximum
            number of files that can be changed in a single commit. Consider using a Git client
            for these changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NoChangeException">
            The commit cannot be created because no changes will be made to the repository as
            a result of this commit. A commit must contain at least one change.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PutFileEntryConflictException">
            The commit cannot be created because one or more files specified in the commit reference
            both a file and a folder.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RestrictedSourceFileException">
            The commit cannot be created because one of the changes specifies copying or moving
            a .gitkeep file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SamePathRequestException">
            The commit cannot be created because one or more changes in this commit duplicate
            actions in the same file path. For example, you cannot make the same delete request
            to the same file in the same file path twice, or make a delete request and a move
            request to the same file as part of the same commit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SourceFileOrContentRequiredException">
            The commit cannot be created because no source files or file content have been specified
            for the commit.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateCommit">REST API Reference for CreateCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreatePullRequest(Amazon.CodeCommit.Model.CreatePullRequestRequest)">
            <summary>
            Creates a pull request in the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePullRequest service method.</param>
            
            <returns>The response from the CreatePullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDescriptionException">
            The pull request description is not valid. Descriptions cannot be more than 1,000
            characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReferenceNameException">
            The specified reference name format is not valid. Reference names must conform to
            the Git references format (for example, refs/heads/master). For more information,
            see <a href="https://git-scm.com/book/en/v2/Git-Internals-Git-References">Git Internals
            - Git References</a> or consult your Git documentation.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetException">
            The target for the pull request is not valid. A target must contain the full values
            for the repository name, source branch, and destination branch for the pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetsException">
            The targets for the pull request is not valid or not in a valid format. Targets are
            a list of target objects. Each target object must contain the full values for the
            repository name, source branch, and destination branch for a pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTitleException">
            The title of the pull request is not valid. Pull request titles cannot exceed 100
            characters in length.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException">
            You cannot create the pull request because the repository has too many open pull requests.
            The maximum number of open pull requests for a repository is 1,000. Close one or more
            open pull requests, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException">
            You cannot include more than one repository in a pull request. Make sure you have
            specified only one repository name in your request, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceDoesNotExistException">
            The specified reference does not exist. You must provide a full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceNameRequiredException">
            A reference name is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException">
            The specified reference is not a supported type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException">
            The source branch and destination branch for the pull request are the same. You must
            specify different branches for the source and destination.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TargetRequiredException">
            A pull request target is required. It cannot be empty or null. A pull request target
            must contain the full values for the repository name, source branch, and destination
            branch for the pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TargetsRequiredException">
            An array of target objects is required. It cannot be empty or null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TitleRequiredException">
            A pull request title is required. It cannot be empty or null.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreatePullRequest">REST API Reference for CreatePullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreatePullRequestAsync(Amazon.CodeCommit.Model.CreatePullRequestRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a pull request in the specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePullRequest service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDescriptionException">
            The pull request description is not valid. Descriptions cannot be more than 1,000
            characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReferenceNameException">
            The specified reference name format is not valid. Reference names must conform to
            the Git references format (for example, refs/heads/master). For more information,
            see <a href="https://git-scm.com/book/en/v2/Git-Internals-Git-References">Git Internals
            - Git References</a> or consult your Git documentation.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetException">
            The target for the pull request is not valid. A target must contain the full values
            for the repository name, source branch, and destination branch for the pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetsException">
            The targets for the pull request is not valid or not in a valid format. Targets are
            a list of target objects. Each target object must contain the full values for the
            repository name, source branch, and destination branch for a pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTitleException">
            The title of the pull request is not valid. Pull request titles cannot exceed 100
            characters in length.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumOpenPullRequestsExceededException">
            You cannot create the pull request because the repository has too many open pull requests.
            The maximum number of open pull requests for a repository is 1,000. Close one or more
            open pull requests, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleRepositoriesInPullRequestException">
            You cannot include more than one repository in a pull request. Make sure you have
            specified only one repository name in your request, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceDoesNotExistException">
            The specified reference does not exist. You must provide a full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceNameRequiredException">
            A reference name is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceTypeNotSupportedException">
            The specified reference is not a supported type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SourceAndDestinationAreSameException">
            The source branch and destination branch for the pull request are the same. You must
            specify different branches for the source and destination.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TargetRequiredException">
            A pull request target is required. It cannot be empty or null. A pull request target
            must contain the full values for the repository name, source branch, and destination
            branch for the pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TargetsRequiredException">
            An array of target objects is required. It cannot be empty or null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TitleRequiredException">
            A pull request title is required. It cannot be empty or null.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreatePullRequest">REST API Reference for CreatePullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreatePullRequestApprovalRule(Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleRequest)">
            <summary>
            Creates an approval rule for a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePullRequestApprovalRule service method.</param>
            
            <returns>The response from the CreatePullRequestApprovalRule service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException">
            The content for the approval rule is empty. You must provide some content for an approval
            rule. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException">
            An approval rule with that name already exists. Approval rule names must be unique
            within the scope of a pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException">
            The content for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NumberOfRulesExceededException">
            The approval rule cannot be added. The pull request has the maximum number of approval
            rules associated with it.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreatePullRequestApprovalRule">REST API Reference for CreatePullRequestApprovalRule Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreatePullRequestApprovalRuleAsync(Amazon.CodeCommit.Model.CreatePullRequestApprovalRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an approval rule for a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePullRequestApprovalRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreatePullRequestApprovalRule service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException">
            The content for the approval rule is empty. You must provide some content for an approval
            rule. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameAlreadyExistsException">
            An approval rule with that name already exists. Approval rule names must be unique
            within the scope of a pull request.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException">
            The content for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NumberOfRulesExceededException">
            The approval rule cannot be added. The pull request has the maximum number of approval
            rules associated with it.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreatePullRequestApprovalRule">REST API Reference for CreatePullRequestApprovalRule Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreateRepository(Amazon.CodeCommit.Model.CreateRepositoryRequest)">
            <summary>
            Creates a new, empty repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRepository service method.</param>
            
            <returns>The response from the CreateRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException">
            The specified repository description is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagsMapException">
            The map of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryLimitExceededException">
            A repository resource limit was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameExistsException">
            The specified repository name already exists.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateRepository">REST API Reference for CreateRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreateRepositoryAsync(Amazon.CodeCommit.Model.CreateRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new, empty repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException">
            The specified repository description is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagsMapException">
            The map of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryLimitExceededException">
            A repository resource limit was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameExistsException">
            The specified repository name already exists.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateRepository">REST API Reference for CreateRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreateUnreferencedMergeCommit(Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest)">
            <summary>
            Creates an unreferenced commit that represents the result of merging two branches
            using a specified merge strategy. This can help you determine the outcome of a potential
            merge. This API cannot be used with the fast-forward merge strategy because that strategy
            does not create a merge commit.
            
             <note> 
            <para>
            This unreferenced merge commit can only be accessed using the GetCommit API or through
            git commands such as git fetch. To retrieve this commit, you must specify its commit
            ID or otherwise reference it.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUnreferencedMergeCommit service method.</param>
            
            <returns>The response from the CreateUnreferencedMergeCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateUnreferencedMergeCommit">REST API Reference for CreateUnreferencedMergeCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.CreateUnreferencedMergeCommitAsync(Amazon.CodeCommit.Model.CreateUnreferencedMergeCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Creates an unreferenced commit that represents the result of merging two branches
            using a specified merge strategy. This can help you determine the outcome of a potential
            merge. This API cannot be used with the fast-forward merge strategy because that strategy
            does not create a merge commit.
            
             <note> 
            <para>
            This unreferenced merge commit can only be accessed using the GetCommit API or through
            git commands such as git fetch. To retrieve this commit, you must specify its commit
            ID or otherwise reference it.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUnreferencedMergeCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CreateUnreferencedMergeCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/CreateUnreferencedMergeCommit">REST API Reference for CreateUnreferencedMergeCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeleteApprovalRuleTemplate(Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateRequest)">
            <summary>
            Deletes a specified approval rule template. Deleting a template does not remove approval
            rules on pull requests already created with the template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteApprovalRuleTemplate service method.</param>
            
            <returns>The response from the DeleteApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException">
            The approval rule template is associated with one or more repositories. You cannot
            delete a template that is associated with a repository. Remove all associations, and
            then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteApprovalRuleTemplate">REST API Reference for DeleteApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeleteApprovalRuleTemplateAsync(Amazon.CodeCommit.Model.DeleteApprovalRuleTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified approval rule template. Deleting a template does not remove approval
            rules on pull requests already created with the template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteApprovalRuleTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateInUseException">
            The approval rule template is associated with one or more repositories. You cannot
            delete a template that is associated with a repository. Remove all associations, and
            then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteApprovalRuleTemplate">REST API Reference for DeleteApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeleteBranch(Amazon.CodeCommit.Model.DeleteBranchRequest)">
            <summary>
            Deletes a branch from a repository, unless that branch is the default branch for the
            repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBranch service method.</param>
            
            <returns>The response from the DeleteBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException">
            The specified branch is the default branch for the repository, and cannot be deleted.
            To delete this branch, you must first set another branch as the default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteBranch">REST API Reference for DeleteBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeleteBranchAsync(Amazon.CodeCommit.Model.DeleteBranchRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a branch from a repository, unless that branch is the default branch for the
            repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBranch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DefaultBranchCannotBeDeletedException">
            The specified branch is the default branch for the repository, and cannot be deleted.
            To delete this branch, you must first set another branch as the default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteBranch">REST API Reference for DeleteBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeleteCommentContent(Amazon.CodeCommit.Model.DeleteCommentContentRequest)">
            <summary>
            Deletes the content of a comment made on a change, file, or commit in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCommentContent service method.</param>
            
            <returns>The response from the DeleteCommentContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteCommentContent">REST API Reference for DeleteCommentContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeleteCommentContentAsync(Amazon.CodeCommit.Model.DeleteCommentContentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes the content of a comment made on a change, file, or commit in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCommentContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteCommentContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteCommentContent">REST API Reference for DeleteCommentContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeleteFile(Amazon.CodeCommit.Model.DeleteFileRequest)">
            <summary>
            Deletes a specified file from a specified branch. A commit is created on the branch
            that contains the revision. The file still exists in the commits earlier to the commit
            that contains the deletion.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFile service method.</param>
            
            <returns>The response from the DeleteFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteFile">REST API Reference for DeleteFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeleteFileAsync(Amazon.CodeCommit.Model.DeleteFileRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a specified file from a specified branch. A commit is created on the branch
            that contains the revision. The file still exists in the commits earlier to the commit
            that contains the deletion.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteFile">REST API Reference for DeleteFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeletePullRequestApprovalRule(Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleRequest)">
            <summary>
            Deletes an approval rule from a specified pull request. Approval rules can be deleted
            from a pull request only if the pull request is open, and if the approval rule was
            created specifically for a pull request and not generated from an approval rule template
            associated with the repository where the pull request was created. You cannot delete
            an approval rule from a merged or closed pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePullRequestApprovalRule service method.</param>
            
            <returns>The response from the DeletePullRequestApprovalRule service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException">
            The approval rule cannot be deleted from the pull request because it was created by
            an approval rule template and applied to the pull request automatically.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeletePullRequestApprovalRule">REST API Reference for DeletePullRequestApprovalRule Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeletePullRequestApprovalRuleAsync(Amazon.CodeCommit.Model.DeletePullRequestApprovalRuleRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes an approval rule from a specified pull request. Approval rules can be deleted
            from a pull request only if the pull request is open, and if the approval rule was
            created specifically for a pull request and not generated from an approval rule template
            associated with the repository where the pull request was created. You cannot delete
            an approval rule from a merged or closed pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePullRequestApprovalRule service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeletePullRequestApprovalRule service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CannotDeleteApprovalRuleFromTemplateException">
            The approval rule cannot be deleted from the pull request because it was created by
            an approval rule template and applied to the pull request automatically.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeletePullRequestApprovalRule">REST API Reference for DeletePullRequestApprovalRule Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeleteRepository(Amazon.CodeCommit.Model.DeleteRepositoryRequest)">
            <summary>
            Deletes a repository. If a specified repository was already deleted, a null repository
            ID is returned.
            
             <important> 
            <para>
            Deleting a repository also deletes all associated objects and metadata. After a repository
            is deleted, all future push calls to the deleted repository fail.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRepository service method.</param>
            
            <returns>The response from the DeleteRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteRepository">REST API Reference for DeleteRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DeleteRepositoryAsync(Amazon.CodeCommit.Model.DeleteRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a repository. If a specified repository was already deleted, a null repository
            ID is returned.
            
             <important> 
            <para>
            Deleting a repository also deletes all associated objects and metadata. After a repository
            is deleted, all future push calls to the deleted repository fail.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeleteRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DeleteRepository">REST API Reference for DeleteRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DescribeMergeConflicts(Amazon.CodeCommit.Model.DescribeMergeConflictsRequest)">
            <summary>
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy. If the merge option
            for the attempted merge is specified as FAST_FORWARD_MERGE, an exception is thrown.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMergeConflicts service method.</param>
            
            <returns>The response from the DescribeMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException">
            The specified value for the number of merge hunks to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DescribeMergeConflicts">REST API Reference for DescribeMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DescribeMergeConflictsAsync(Amazon.CodeCommit.Model.DescribeMergeConflictsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about one or more merge conflicts in the attempted merge of two
            commit specifiers using the squash or three-way merge strategy. If the merge option
            for the attempted merge is specified as FAST_FORWARD_MERGE, an exception is thrown.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMergeConflicts service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxMergeHunksException">
            The specified value for the number of merge hunks to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DescribeMergeConflicts">REST API Reference for DescribeMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DescribePullRequestEvents(Amazon.CodeCommit.Model.DescribePullRequestEventsRequest)">
            <summary>
            Returns information about one or more pull request events.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePullRequestEvents service method.</param>
            
            <returns>The response from the DescribePullRequestEvents service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ActorDoesNotExistException">
            The specified Amazon Resource Name (ARN) does not exist in the AWS account.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidActorArnException">
            The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the
            full ARN for the user who initiated the change for the pull request, and then try
            again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException">
            The pull request event type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DescribePullRequestEvents">REST API Reference for DescribePullRequestEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DescribePullRequestEventsAsync(Amazon.CodeCommit.Model.DescribePullRequestEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about one or more pull request events.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribePullRequestEvents service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribePullRequestEvents service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ActorDoesNotExistException">
            The specified Amazon Resource Name (ARN) does not exist in the AWS account.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidActorArnException">
            The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the
            full ARN for the user who initiated the change for the pull request, and then try
            again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestEventTypeException">
            The pull request event type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DescribePullRequestEvents">REST API Reference for DescribePullRequestEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DisassociateApprovalRuleTemplateFromRepository(Amazon.CodeCommit.Model.DisassociateApprovalRuleTemplateFromRepositoryRequest)">
            <summary>
            Removes the association between a template and a repository so that approval rules
            based on the template are not automatically created when pull requests are created
            in the specified repository. This does not delete any approval rules previously created
            for pull requests through the template association.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateApprovalRuleTemplateFromRepository service method.</param>
            
            <returns>The response from the DisassociateApprovalRuleTemplateFromRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DisassociateApprovalRuleTemplateFromRepository">REST API Reference for DisassociateApprovalRuleTemplateFromRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.DisassociateApprovalRuleTemplateFromRepositoryAsync(Amazon.CodeCommit.Model.DisassociateApprovalRuleTemplateFromRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Removes the association between a template and a repository so that approval rules
            based on the template are not automatically created when pull requests are created
            in the specified repository. This does not delete any approval rules previously created
            for pull requests through the template association.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateApprovalRuleTemplateFromRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DisassociateApprovalRuleTemplateFromRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/DisassociateApprovalRuleTemplateFromRepository">REST API Reference for DisassociateApprovalRuleTemplateFromRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.EvaluatePullRequestApprovalRules(Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesRequest)">
            <summary>
            Evaluates whether a pull request has met all the conditions specified in its associated
            approval rules.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EvaluatePullRequestApprovalRules service method.</param>
            
            <returns>The response from the EvaluatePullRequestApprovalRules service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/EvaluatePullRequestApprovalRules">REST API Reference for EvaluatePullRequestApprovalRules Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.EvaluatePullRequestApprovalRulesAsync(Amazon.CodeCommit.Model.EvaluatePullRequestApprovalRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Evaluates whether a pull request has met all the conditions specified in its associated
            approval rules.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EvaluatePullRequestApprovalRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the EvaluatePullRequestApprovalRules service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/EvaluatePullRequestApprovalRules">REST API Reference for EvaluatePullRequestApprovalRules Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetApprovalRuleTemplate(Amazon.CodeCommit.Model.GetApprovalRuleTemplateRequest)">
            <summary>
            Returns information about a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetApprovalRuleTemplate service method.</param>
            
            <returns>The response from the GetApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetApprovalRuleTemplate">REST API Reference for GetApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetApprovalRuleTemplateAsync(Amazon.CodeCommit.Model.GetApprovalRuleTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetApprovalRuleTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetApprovalRuleTemplate">REST API Reference for GetApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetBlob(Amazon.CodeCommit.Model.GetBlobRequest)">
            <summary>
            Returns the base-64 encoded content of an individual blob in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBlob service method.</param>
            
            <returns>The response from the GetBlob service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BlobIdDoesNotExistException">
            The specified blob does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BlobIdRequiredException">
            A blob ID is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileTooLargeException">
            The specified file exceeds the file size limit for AWS CodeCommit. For more information
            about limits in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBlobIdException">
            The specified blob is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetBlob">REST API Reference for GetBlob Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetBlobAsync(Amazon.CodeCommit.Model.GetBlobRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the base-64 encoded content of an individual blob in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBlob service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBlob service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BlobIdDoesNotExistException">
            The specified blob does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BlobIdRequiredException">
            A blob ID is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileTooLargeException">
            The specified file exceeds the file size limit for AWS CodeCommit. For more information
            about limits in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBlobIdException">
            The specified blob is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetBlob">REST API Reference for GetBlob Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetBranch(Amazon.CodeCommit.Model.GetBranchRequest)">
            <summary>
            Returns information about a repository branch, including its name and the last commit
            ID.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBranch service method.</param>
            
            <returns>The response from the GetBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetBranch">REST API Reference for GetBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetBranchAsync(Amazon.CodeCommit.Model.GetBranchRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a repository branch, including its name and the last commit
            ID.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBranch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetBranch">REST API Reference for GetBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetComment(Amazon.CodeCommit.Model.GetCommentRequest)">
            <summary>
            Returns the content of a comment made on a change, file, or commit in a repository.
            
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComment service method.</param>
            
            <returns>The response from the GetComment service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetComment">REST API Reference for GetComment Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetCommentAsync(Amazon.CodeCommit.Model.GetCommentRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the content of a comment made on a change, file, or commit in a repository.
            
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetComment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetComment service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetComment">REST API Reference for GetComment Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetCommentReactions(Amazon.CodeCommit.Model.GetCommentReactionsRequest)">
            <summary>
            Returns information about reactions to a specified comment ID. Reactions from users
            who have been deleted will not be included in the count.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentReactions service method.</param>
            
            <returns>The response from the GetCommentReactions service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReactionUserArnException">
            The Amazon Resource Name (ARN) of the user or identity is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentReactions">REST API Reference for GetCommentReactions Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetCommentReactionsAsync(Amazon.CodeCommit.Model.GetCommentReactionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about reactions to a specified comment ID. Reactions from users
            who have been deleted will not be included in the count.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentReactions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCommentReactions service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReactionUserArnException">
            The Amazon Resource Name (ARN) of the user or identity is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentReactions">REST API Reference for GetCommentReactions Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetCommentsForComparedCommit(Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest)">
            <summary>
            Returns information about comments made on the comparison between two commits.
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentsForComparedCommit service method.</param>
            
            <returns>The response from the GetCommentsForComparedCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentsForComparedCommit">REST API Reference for GetCommentsForComparedCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetCommentsForComparedCommitAsync(Amazon.CodeCommit.Model.GetCommentsForComparedCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about comments made on the comparison between two commits.
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentsForComparedCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCommentsForComparedCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentsForComparedCommit">REST API Reference for GetCommentsForComparedCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetCommentsForPullRequest(Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest)">
            <summary>
            Returns comments made on a pull request.
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentsForPullRequest service method.</param>
            
            <returns>The response from the GetCommentsForPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentsForPullRequest">REST API Reference for GetCommentsForPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetCommentsForPullRequestAsync(Amazon.CodeCommit.Model.GetCommentsForPullRequestRequest,System.Threading.CancellationToken)">
            <summary>
            Returns comments made on a pull request.
            
             <note> 
            <para>
            Reaction counts might include numbers from user identities who were deleted after
            the reaction was made. For a count of reactions from active identities, use GetCommentReactions.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommentsForPullRequest service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCommentsForPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommentsForPullRequest">REST API Reference for GetCommentsForPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetCommit(Amazon.CodeCommit.Model.GetCommitRequest)">
            <summary>
            Returns information about a commit, including commit message and committer information.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommit service method.</param>
            
            <returns>The response from the GetCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdDoesNotExistException">
            The specified commit ID does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommit">REST API Reference for GetCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetCommitAsync(Amazon.CodeCommit.Model.GetCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a commit, including commit message and committer information.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdDoesNotExistException">
            The specified commit ID does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetCommit">REST API Reference for GetCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetDifferences(Amazon.CodeCommit.Model.GetDifferencesRequest)">
            <summary>
            Returns information about the differences in a valid commit specifier (such as a branch,
            tag, HEAD, commit ID, or other fully qualified reference). Results can be limited
            to a specified path.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDifferences service method.</param>
            
            <returns>The response from the GetDifferences service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetDifferences">REST API Reference for GetDifferences Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetDifferencesAsync(Amazon.CodeCommit.Model.GetDifferencesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the differences in a valid commit specifier (such as a branch,
            tag, HEAD, commit ID, or other fully qualified reference). Results can be limited
            to a specified path.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDifferences service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetDifferences service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetDifferences">REST API Reference for GetDifferences Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetFile(Amazon.CodeCommit.Model.GetFileRequest)">
            <summary>
            Returns the base-64 encoded contents of a specified file and its metadata.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFile service method.</param>
            
            <returns>The response from the GetFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileTooLargeException">
            The specified file exceeds the file size limit for AWS CodeCommit. For more information
            about limits in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetFile">REST API Reference for GetFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetFileAsync(Amazon.CodeCommit.Model.GetFileRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the base-64 encoded contents of a specified file and its metadata.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileDoesNotExistException">
            The specified file does not exist. Verify that you have used the correct file name,
            full path, and extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileTooLargeException">
            The specified file exceeds the file size limit for AWS CodeCommit. For more information
            about limits in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetFile">REST API Reference for GetFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetFolder(Amazon.CodeCommit.Model.GetFolderRequest)">
            <summary>
            Returns the contents of a specified folder in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFolder service method.</param>
            
            <returns>The response from the GetFolder service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderDoesNotExistException">
            The specified folder does not exist. Either the folder name is not correct, or you
            did not enter the full path to the folder.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetFolder">REST API Reference for GetFolder Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetFolderAsync(Amazon.CodeCommit.Model.GetFolderRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the contents of a specified folder in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetFolder service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetFolder service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderDoesNotExistException">
            The specified folder does not exist. Either the folder name is not correct, or you
            did not enter the full path to the folder.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetFolder">REST API Reference for GetFolder Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetMergeCommit(Amazon.CodeCommit.Model.GetMergeCommitRequest)">
            <summary>
            Returns information about a specified merge commit.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeCommit service method.</param>
            
            <returns>The response from the GetMergeCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeCommit">REST API Reference for GetMergeCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetMergeCommitAsync(Amazon.CodeCommit.Model.GetMergeCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a specified merge commit.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMergeCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeCommit">REST API Reference for GetMergeCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetMergeConflicts(Amazon.CodeCommit.Model.GetMergeConflictsRequest)">
            <summary>
            Returns information about merge conflicts between the before and after commit IDs
            for a pull request in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeConflicts service method.</param>
            
            <returns>The response from the GetMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException">
            The destination commit specifier is not valid. You must provide a valid branch name,
            tag, or full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException">
            The specified value for the number of conflict files to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException">
            The source commit specifier is not valid. You must provide a valid branch name, tag,
            or full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeConflicts">REST API Reference for GetMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetMergeConflictsAsync(Amazon.CodeCommit.Model.GetMergeConflictsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about merge conflicts between the before and after commit IDs
            for a pull request in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeConflicts service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMergeConflicts service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDestinationCommitSpecifierException">
            The destination commit specifier is not valid. You must provide a valid branch name,
            tag, or full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxConflictFilesException">
            The specified value for the number of conflict files to return is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMergeOptionException">
            The specified merge option is not valid for this operation. Not all merge strategies
            are supported for all operations.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSourceCommitSpecifierException">
            The source commit specifier is not valid. You must provide a valid branch name, tag,
            or full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MergeOptionRequiredException">
            A merge option or stategy is required, and none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeConflicts">REST API Reference for GetMergeConflicts Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetMergeOptions(Amazon.CodeCommit.Model.GetMergeOptionsRequest)">
            <summary>
            Returns information about the merge options available for merging two specified branches.
            For details about why a merge option is not available, use GetMergeConflicts or DescribeMergeConflicts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeOptions service method.</param>
            
            <returns>The response from the GetMergeOptions service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeOptions">REST API Reference for GetMergeOptions Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetMergeOptionsAsync(Amazon.CodeCommit.Model.GetMergeOptionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the merge options available for merging two specified branches.
            For details about why a merge option is not available, use GetMergeConflicts or DescribeMergeConflicts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMergeOptions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMergeOptions service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetMergeOptions">REST API Reference for GetMergeOptions Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetPullRequest(Amazon.CodeCommit.Model.GetPullRequestRequest)">
            <summary>
            Gets information about a pull request in a specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequest service method.</param>
            
            <returns>The response from the GetPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequest">REST API Reference for GetPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetPullRequestAsync(Amazon.CodeCommit.Model.GetPullRequestRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about a pull request in a specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequest service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequest">REST API Reference for GetPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetPullRequestApprovalStates(Amazon.CodeCommit.Model.GetPullRequestApprovalStatesRequest)">
            <summary>
            Gets information about the approval states for a specified pull request. Approval
            states only apply to pull requests that have one or more approval rules applied to
            them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequestApprovalStates service method.</param>
            
            <returns>The response from the GetPullRequestApprovalStates service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequestApprovalStates">REST API Reference for GetPullRequestApprovalStates Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetPullRequestApprovalStatesAsync(Amazon.CodeCommit.Model.GetPullRequestApprovalStatesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about the approval states for a specified pull request. Approval
            states only apply to pull requests that have one or more approval rules applied to
            them.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequestApprovalStates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPullRequestApprovalStates service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequestApprovalStates">REST API Reference for GetPullRequestApprovalStates Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetPullRequestOverrideState(Amazon.CodeCommit.Model.GetPullRequestOverrideStateRequest)">
            <summary>
            Returns information about whether approval rules have been set aside (overridden)
            for a pull request, and if so, the Amazon Resource Name (ARN) of the user or identity
            that overrode the rules and their requirements for the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequestOverrideState service method.</param>
            
            <returns>The response from the GetPullRequestOverrideState service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequestOverrideState">REST API Reference for GetPullRequestOverrideState Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetPullRequestOverrideStateAsync(Amazon.CodeCommit.Model.GetPullRequestOverrideStateRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about whether approval rules have been set aside (overridden)
            for a pull request, and if so, the Amazon Resource Name (ARN) of the user or identity
            that overrode the rules and their requirements for the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPullRequestOverrideState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetPullRequestOverrideState service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetPullRequestOverrideState">REST API Reference for GetPullRequestOverrideState Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetRepository(Amazon.CodeCommit.Model.GetRepositoryRequest)">
            <summary>
            Returns information about a repository.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRepository service method.</param>
            
            <returns>The response from the GetRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetRepository">REST API Reference for GetRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetRepositoryAsync(Amazon.CodeCommit.Model.GetRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about a repository.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetRepository">REST API Reference for GetRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetRepositoryTriggers(Amazon.CodeCommit.Model.GetRepositoryTriggersRequest)">
            <summary>
            Gets information about triggers configured for a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRepositoryTriggers service method.</param>
            
            <returns>The response from the GetRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetRepositoryTriggers">REST API Reference for GetRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.GetRepositoryTriggersAsync(Amazon.CodeCommit.Model.GetRepositoryTriggersRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about triggers configured for a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRepositoryTriggers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/GetRepositoryTriggers">REST API Reference for GetRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListApprovalRuleTemplates(Amazon.CodeCommit.Model.ListApprovalRuleTemplatesRequest)">
            <summary>
            Lists all approval rule templates in the specified AWS Region in your AWS account.
            If an AWS Region is not specified, the AWS Region where you are signed in is used.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListApprovalRuleTemplates service method.</param>
            
            <returns>The response from the ListApprovalRuleTemplates service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListApprovalRuleTemplates">REST API Reference for ListApprovalRuleTemplates Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListApprovalRuleTemplatesAsync(Amazon.CodeCommit.Model.ListApprovalRuleTemplatesRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all approval rule templates in the specified AWS Region in your AWS account.
            If an AWS Region is not specified, the AWS Region where you are signed in is used.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListApprovalRuleTemplates service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListApprovalRuleTemplates service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListApprovalRuleTemplates">REST API Reference for ListApprovalRuleTemplates Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListAssociatedApprovalRuleTemplatesForRepository(Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest)">
            <summary>
            Lists all approval rule templates that are associated with a specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAssociatedApprovalRuleTemplatesForRepository service method.</param>
            
            <returns>The response from the ListAssociatedApprovalRuleTemplatesForRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListAssociatedApprovalRuleTemplatesForRepository">REST API Reference for ListAssociatedApprovalRuleTemplatesForRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListAssociatedApprovalRuleTemplatesForRepositoryAsync(Amazon.CodeCommit.Model.ListAssociatedApprovalRuleTemplatesForRepositoryRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all approval rule templates that are associated with a specified repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListAssociatedApprovalRuleTemplatesForRepository service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListAssociatedApprovalRuleTemplatesForRepository service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListAssociatedApprovalRuleTemplatesForRepository">REST API Reference for ListAssociatedApprovalRuleTemplatesForRepository Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListBranches(Amazon.CodeCommit.Model.ListBranchesRequest)">
            <summary>
            Gets information about one or more branches in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListBranches service method.</param>
            
            <returns>The response from the ListBranches service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListBranches">REST API Reference for ListBranches Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListBranchesAsync(Amazon.CodeCommit.Model.ListBranchesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about one or more branches in a repository.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListBranches service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListBranches service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListBranches">REST API Reference for ListBranches Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListPullRequests(Amazon.CodeCommit.Model.ListPullRequestsRequest)">
            <summary>
            Returns a list of pull requests for a specified repository. The return list can be
            refined by pull request status or pull request author ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPullRequests service method.</param>
            
            <returns>The response from the ListPullRequests service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.AuthorDoesNotExistException">
            The specified Amazon Resource Name (ARN) does not exist in the AWS account.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidAuthorArnException">
            The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the
            full ARN for the author of the pull request, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusException">
            The pull request status is not valid. The only valid values are <code>OPEN</code>
            and <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListPullRequests">REST API Reference for ListPullRequests Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListPullRequestsAsync(Amazon.CodeCommit.Model.ListPullRequestsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of pull requests for a specified repository. The return list can be
            refined by pull request status or pull request author ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPullRequests service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListPullRequests service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.AuthorDoesNotExistException">
            The specified Amazon Resource Name (ARN) does not exist in the AWS account.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidAuthorArnException">
            The Amazon Resource Name (ARN) is not valid. Make sure that you have provided the
            full ARN for the author of the pull request, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusException">
            The pull request status is not valid. The only valid values are <code>OPEN</code>
            and <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListPullRequests">REST API Reference for ListPullRequests Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListRepositories(Amazon.CodeCommit.Model.ListRepositoriesRequest)">
            <summary>
            Gets information about one or more repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRepositories service method.</param>
            
            <returns>The response from the ListRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidOrderException">
            The specified sort order is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSortByException">
            The specified sort by value is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListRepositories">REST API Reference for ListRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListRepositoriesAsync(Amazon.CodeCommit.Model.ListRepositoriesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about one or more repositories.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRepositories service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRepositories service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidOrderException">
            The specified sort order is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSortByException">
            The specified sort by value is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListRepositories">REST API Reference for ListRepositories Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListRepositoriesForApprovalRuleTemplate(Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest)">
            <summary>
            Lists all repositories associated with the specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRepositoriesForApprovalRuleTemplate service method.</param>
            
            <returns>The response from the ListRepositoriesForApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListRepositoriesForApprovalRuleTemplate">REST API Reference for ListRepositoriesForApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListRepositoriesForApprovalRuleTemplateAsync(Amazon.CodeCommit.Model.ListRepositoriesForApprovalRuleTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Lists all repositories associated with the specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRepositoriesForApprovalRuleTemplate service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListRepositoriesForApprovalRuleTemplate service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidContinuationTokenException">
            The specified continuation token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidMaxResultsException">
            The specified number of maximum results is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListRepositoriesForApprovalRuleTemplate">REST API Reference for ListRepositoriesForApprovalRuleTemplate Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListTagsForResource(Amazon.CodeCommit.Model.ListTagsForResourceRequest)">
            <summary>
            Gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS
            CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the<i> AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.ListTagsForResourceAsync(Amazon.CodeCommit.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS
            CodeCommit. For a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the<i> AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergeBranchesByFastForward(Amazon.CodeCommit.Model.MergeBranchesByFastForwardRequest)">
            <summary>
            Merges two branches using the fast-forward merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesByFastForward service method.</param>
            
            <returns>The response from the MergeBranchesByFastForward service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesByFastForward">REST API Reference for MergeBranchesByFastForward Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergeBranchesByFastForwardAsync(Amazon.CodeCommit.Model.MergeBranchesByFastForwardRequest,System.Threading.CancellationToken)">
            <summary>
            Merges two branches using the fast-forward merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesByFastForward service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergeBranchesByFastForward service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesByFastForward">REST API Reference for MergeBranchesByFastForward Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergeBranchesBySquash(Amazon.CodeCommit.Model.MergeBranchesBySquashRequest)">
            <summary>
            Merges two branches using the squash merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesBySquash service method.</param>
            
            <returns>The response from the MergeBranchesBySquash service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesBySquash">REST API Reference for MergeBranchesBySquash Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergeBranchesBySquashAsync(Amazon.CodeCommit.Model.MergeBranchesBySquashRequest,System.Threading.CancellationToken)">
            <summary>
            Merges two branches using the squash merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesBySquash service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergeBranchesBySquash service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesBySquash">REST API Reference for MergeBranchesBySquash Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergeBranchesByThreeWay(Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest)">
            <summary>
            Merges two specified branches using the three-way merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesByThreeWay service method.</param>
            
            <returns>The response from the MergeBranchesByThreeWay service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesByThreeWay">REST API Reference for MergeBranchesByThreeWay Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergeBranchesByThreeWayAsync(Amazon.CodeCommit.Model.MergeBranchesByThreeWayRequest,System.Threading.CancellationToken)">
            <summary>
            Merges two specified branches using the three-way merge strategy.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergeBranchesByThreeWay service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergeBranchesByThreeWay service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitRequiredException">
            A commit was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileModeRequiredException">
            The commit cannot be created because no file mode has been specified. A file mode
            is required to update mode permissions for a file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitException">
            The specified commit is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTargetBranchException">
            The specified target branch is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergeBranchesByThreeWay">REST API Reference for MergeBranchesByThreeWay Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergePullRequestByFastForward(Amazon.CodeCommit.Model.MergePullRequestByFastForwardRequest)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the fast-forward merge
            strategy. If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestByFastForward service method.</param>
            
            <returns>The response from the MergePullRequestByFastForward service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceDoesNotExistException">
            The specified reference does not exist. You must provide a full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestByFastForward">REST API Reference for MergePullRequestByFastForward Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergePullRequestByFastForwardAsync(Amazon.CodeCommit.Model.MergePullRequestByFastForwardRequest,System.Threading.CancellationToken)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the fast-forward merge
            strategy. If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestByFastForward service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergePullRequestByFastForward service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReferenceDoesNotExistException">
            The specified reference does not exist. You must provide a full commit ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestByFastForward">REST API Reference for MergePullRequestByFastForward Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergePullRequestBySquash(Amazon.CodeCommit.Model.MergePullRequestBySquashRequest)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the squash merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestBySquash service method.</param>
            
            <returns>The response from the MergePullRequestBySquash service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestBySquash">REST API Reference for MergePullRequestBySquash Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergePullRequestBySquashAsync(Amazon.CodeCommit.Model.MergePullRequestBySquashRequest,System.Threading.CancellationToken)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the squash merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestBySquash service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergePullRequestBySquash service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestBySquash">REST API Reference for MergePullRequestBySquash Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergePullRequestByThreeWay(Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the three-way merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestByThreeWay service method.</param>
            
            <returns>The response from the MergePullRequestByThreeWay service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestByThreeWay">REST API Reference for MergePullRequestByThreeWay Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.MergePullRequestByThreeWayAsync(Amazon.CodeCommit.Model.MergePullRequestByThreeWayRequest,System.Threading.CancellationToken)">
            <summary>
            Attempts to merge the source commit of a pull request into the specified destination
            branch for that pull request at the specified commit using the three-way merge strategy.
            If the merge is successful, it closes the pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the MergePullRequestByThreeWay service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the MergePullRequestByThreeWay service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ConcurrentReferenceUpdateException">
            The merge cannot be completed because the target branch has been modified. Another
            user might have modified the target branch while the merge was in progress. Wait a
            few minutes, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictDetailLevelException">
            The specified conflict detail level is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionException">
            The specified conflict resolution list is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidConflictResolutionStrategyException">
            The specified conflict resolution strategy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementContentException">
            Automerge was specified for resolving the conflict, but the replacement type is not
            valid or content is missing.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReplacementTypeException">
            Automerge was specified for resolving the conflict, but the specified replacement
            type is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ManualMergeRequiredException">
            The pull request cannot be merged automatically into the destination branch. You must
            manually merge the branches and resolve any conflicts.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumConflictResolutionEntriesExceededException">
            The number of allowed conflict resolution entries was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumFileContentToLoadExceededException">
            The number of files to load exceeds the allowed limit.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumItemsToCompareExceededException">
            The number of items to compare between the source or destination branches and the
            merge base has exceeded the maximum allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MultipleConflictResolutionEntriesException">
            More than one conflict resolution entries exists for the conflict. A conflict can
            have only one conflict resolution entry.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestApprovalRulesNotSatisfiedException">
            The pull request cannot be merged because one or more approval rules applied to the
            pull request have conditions that have not been met.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementContentRequiredException">
            USE_NEW_CONTENT was specified, but no replacement content has been provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReplacementTypeRequiredException">
            A replacement type is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipOfSourceReferenceIsDifferentException">
            The tip of the source branch in the destination repository does not match the tip
            of the source branch specified in your request. The pull request might have been updated.
            Make sure that you have the latest changes.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TipsDivergenceExceededException">
            The divergence between the tips of the provided commit specifiers is too great to
            determine whether there might be any merge conflicts. Locally compare the specifiers
            using <code>git diff</code> or a diff tool.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/MergePullRequestByThreeWay">REST API Reference for MergePullRequestByThreeWay Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.OverridePullRequestApprovalRules(Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesRequest)">
            <summary>
            Sets aside (overrides) all approval rule requirements for a specified pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the OverridePullRequestApprovalRules service method.</param>
            
            <returns>The response from the OverridePullRequestApprovalRules service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidOverrideStatusException">
            The override status is not valid. Valid statuses are OVERRIDE and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.OverrideAlreadySetException">
            The pull request has already had its approval rules set to override.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.OverrideStatusRequiredException">
            An override status is required, but no value was provided. Valid values include OVERRIDE
            and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/OverridePullRequestApprovalRules">REST API Reference for OverridePullRequestApprovalRules Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.OverridePullRequestApprovalRulesAsync(Amazon.CodeCommit.Model.OverridePullRequestApprovalRulesRequest,System.Threading.CancellationToken)">
            <summary>
            Sets aside (overrides) all approval rule requirements for a specified pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the OverridePullRequestApprovalRules service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the OverridePullRequestApprovalRules service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidOverrideStatusException">
            The override status is not valid. Valid statuses are OVERRIDE and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.OverrideAlreadySetException">
            The pull request has already had its approval rules set to override.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.OverrideStatusRequiredException">
            An override status is required, but no value was provided. Valid values include OVERRIDE
            and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/OverridePullRequestApprovalRules">REST API Reference for OverridePullRequestApprovalRules Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PostCommentForComparedCommit(Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest)">
            <summary>
            Posts a comment on the comparison between two commits.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentForComparedCommit service method.</param>
            
            <returns>The response from the PostCommentForComparedCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException">
            The before commit ID and the after commit ID are the same, which is not valid. The
            before commit ID and the after commit ID must be different commit IDs.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileLocationException">
            The location of the file is not valid. Make sure that you include the file name and
            extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFilePositionException">
            The position is not valid. Make sure that the line number exists in the version of
            the file you want to comment on.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException">
            Either the enum is not in a valid format, or the specified file version enum is not
            valid in respect to the current file version.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentForComparedCommit">REST API Reference for PostCommentForComparedCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PostCommentForComparedCommitAsync(Amazon.CodeCommit.Model.PostCommentForComparedCommitRequest,System.Threading.CancellationToken)">
            <summary>
            Posts a comment on the comparison between two commits.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentForComparedCommit service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PostCommentForComparedCommit service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException">
            The before commit ID and the after commit ID are the same, which is not valid. The
            before commit ID and the after commit ID must be different commit IDs.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileLocationException">
            The location of the file is not valid. Make sure that you include the file name and
            extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFilePositionException">
            The position is not valid. Make sure that the line number exists in the version of
            the file you want to comment on.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException">
            Either the enum is not in a valid format, or the specified file version enum is not
            valid in respect to the current file version.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentForComparedCommit">REST API Reference for PostCommentForComparedCommit Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PostCommentForPullRequest(Amazon.CodeCommit.Model.PostCommentForPullRequestRequest)">
            <summary>
            Posts a comment on a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentForPullRequest service method.</param>
            
            <returns>The response from the PostCommentForPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException">
            The before commit ID and the after commit ID are the same, which is not valid. The
            before commit ID and the after commit ID must be different commit IDs.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileLocationException">
            The location of the file is not valid. Make sure that you include the file name and
            extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFilePositionException">
            The position is not valid. Make sure that the line number exists in the version of
            the file you want to comment on.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException">
            Either the enum is not in a valid format, or the specified file version enum is not
            valid in respect to the current file version.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentForPullRequest">REST API Reference for PostCommentForPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PostCommentForPullRequestAsync(Amazon.CodeCommit.Model.PostCommentForPullRequestRequest,System.Threading.CancellationToken)">
            <summary>
            Posts a comment on a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentForPullRequest service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PostCommentForPullRequest service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BeforeCommitIdAndAfterCommitIdAreSameException">
            The before commit ID and the after commit ID are the same, which is not valid. The
            before commit ID and the after commit ID must be different commit IDs.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitDoesNotExistException">
            The specified commit does not exist or no commit was specified, and the specified
            repository has no default branch.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitIdRequiredException">
            A commit ID was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommitIdException">
            The specified commit ID is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileLocationException">
            The location of the file is not valid. Make sure that you include the file name and
            extension.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFilePositionException">
            The position is not valid. Make sure that the line number exists in the version of
            the file you want to comment on.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRelativeFileVersionEnumException">
            Either the enum is not in a valid format, or the specified file version enum is not
            valid in respect to the current file version.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathDoesNotExistException">
            The specified path does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNotAssociatedWithPullRequestException">
            The repository does not contain any pull requests with that pull request ID. Use GetPullRequest
            to verify the correct repository name for the pull request ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentForPullRequest">REST API Reference for PostCommentForPullRequest Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PostCommentReply(Amazon.CodeCommit.Model.PostCommentReplyRequest)">
            <summary>
            Posts a comment in reply to an existing comment on a comparison between commits or
            a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentReply service method.</param>
            
            <returns>The response from the PostCommentReply service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentReply">REST API Reference for PostCommentReply Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PostCommentReplyAsync(Amazon.CodeCommit.Model.PostCommentReplyRequest,System.Threading.CancellationToken)">
            <summary>
            Posts a comment in reply to an existing comment on a comparison between commits or
            a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PostCommentReply service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PostCommentReply service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ClientRequestTokenRequiredException">
            A client request token is required. A client request token is an unique, client-generated
            idempotency token that, when provided in a request, ensures the request cannot be
            repeated with a changed parameter. If a request is received with the same parameters
            and a token is included, the request returns information about the initial request
            that used that token.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.IdempotencyParameterMismatchException">
            The client request token is not valid. Either the token is not in a valid format,
            or the token has been used in a previous request and cannot be reused.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidClientRequestTokenException">
            The client request token is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentReply">REST API Reference for PostCommentReply Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PutCommentReaction(Amazon.CodeCommit.Model.PutCommentReactionRequest)">
            <summary>
            Adds or updates a reaction to a specified comment for the user whose identity is used
            to make the request. You can only add or update a reaction for yourself. You cannot
            add, modify, or delete a reaction for another user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutCommentReaction service method.</param>
            
            <returns>The response from the PutCommentReaction service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReactionValueException">
            The value of the reaction is not valid. For more information, see the <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReactionLimitExceededException">
            The number of reactions has been exceeded. Reactions are limited to one reaction per
            user for each individual comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReactionValueRequiredException">
            A reaction value is required.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutCommentReaction">REST API Reference for PutCommentReaction Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PutCommentReactionAsync(Amazon.CodeCommit.Model.PutCommentReactionRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates a reaction to a specified comment for the user whose identity is used
            to make the request. You can only add or update a reaction for yourself. You cannot
            add, modify, or delete a reaction for another user.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutCommentReaction service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutCommentReaction service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidReactionValueException">
            The value of the reaction is not valid. For more information, see the <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReactionLimitExceededException">
            The number of reactions has been exceeded. Reactions are limited to one reaction per
            user for each individual comment ID.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ReactionValueRequiredException">
            A reaction value is required.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutCommentReaction">REST API Reference for PutCommentReaction Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PutFile(Amazon.CodeCommit.Model.PutFileRequest)">
            <summary>
            Adds or updates a file in a branch in an AWS CodeCommit repository, and generates
            a commit for the addition in the specified branch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutFile service method.</param>
            
            <returns>The response from the PutFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException">
            A file cannot be added to the repository because the specified path name has the same
            name as a file that already exists in this repository. Either provide a different
            name for the file, or specify a different path for the file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentRequiredException">
            The file cannot be added because it is empty. Empty files cannot be added to the repository
            with this API.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException">
            A file cannot be added to the repository because the specified file name has the same
            name as a directory in this repository. Either provide another name for the file,
            or add the file in a directory that does not match the file name.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException">
            The commit cannot be created because a specified file path points to a submodule.
            Verify that the destination files have valid file paths that do not point to a submodule.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDeletionParameterException">
            The specified deletion parameter is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SameFileContentException">
            The file was not added or updated because the content of the file is exactly the same
            as the content of that file in the repository and branch that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutFile">REST API Reference for PutFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PutFileAsync(Amazon.CodeCommit.Model.PutFileRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates a file in a branch in an AWS CodeCommit repository, and generates
            a commit for the addition in the specified branch.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutFile service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutFile service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameIsTagNameException">
            The specified branch name is not valid because it is a tag name. Enter the name of
            a branch in the repository. For a list of valid branch names, use <a>ListBranches</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommitMessageLengthExceededException">
            The commit message is too long. Provide a shorter string.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.DirectoryNameConflictsWithFileNameException">
            A file cannot be added to the repository because the specified path name has the same
            name as a file that already exists in this repository. Either provide a different
            name for the file, or specify a different path for the file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentRequiredException">
            The file cannot be added because it is empty. Empty files cannot be added to the repository
            with this API.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileContentSizeLimitExceededException">
            The file cannot be added because it is too large. The maximum file size is 6 MB, and
            the combined file content change size is 7 MB. Consider making these changes using
            a Git client.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FileNameConflictsWithDirectoryNameException">
            A file cannot be added to the repository because the specified file name has the same
            name as a directory in this repository. Either provide another name for the file,
            or add the file in a directory that does not match the file name.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FilePathConflictsWithSubmodulePathException">
            The commit cannot be created because a specified file path points to a submodule.
            Verify that the destination files have valid file paths that do not point to a submodule.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.FolderContentSizeLimitExceededException">
            The commit cannot be created because at least one of the overall changes in the commit
            results in a folder whose contents exceed the limit of 6 MB. Either reduce the number
            and size of your changes, or split the changes across multiple folders.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDeletionParameterException">
            The specified deletion parameter is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidEmailException">
            The specified email address either contains one or more characters that are not allowed,
            or it exceeds the maximum number of characters allowed for an email address.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidFileModeException">
            The specified file mode permission is not valid. For a list of valid file mode permissions,
            see <a>PutFile</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidParentCommitIdException">
            The parent commit ID is not valid. The commit ID cannot be empty, and must match the
            head commit ID for the branch of the repository where you want to add or update a
            file.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPathException">
            The specified path is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.NameLengthExceededException">
            The user name is not valid because it has exceeded the character limit for author
            names.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitDoesNotExistException">
            The parent commit ID is not valid because it does not exist. The specified parent
            commit ID does not exist in the specified branch of the repository.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdOutdatedException">
            The file could not be added because the provided parent commit ID is not the current
            tip of the specified branch. To view the full commit ID of the current head of the
            branch, use <a>GetBranch</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ParentCommitIdRequiredException">
            A parent commit ID is required. To view the full commit ID of a branch in a repository,
            use <a>GetBranch</a> or a Git command (for example, git pull or git log).
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PathRequiredException">
            The folderPath for a location cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.SameFileContentException">
            The file was not added or updated because the content of the file is exactly the same
            as the content of that file in the repository and branch that you specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutFile">REST API Reference for PutFile Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PutRepositoryTriggers(Amazon.CodeCommit.Model.PutRepositoryTriggersRequest)">
            <summary>
            Replaces all triggers for a repository. Used to create or delete triggers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRepositoryTriggers service method.</param>
            
            <returns>The response from the PutRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException">
            One or more branch names specified for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException">
            The custom data provided for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException">
            The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination.
            The most common reason for this error is that the ARN does not meet the requirements
            for the service type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException">
            One or more events specified for the trigger is not valid. Check to make sure that
            all events specified match the requirements for allowed events.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException">
            The name of the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException">
            The AWS Region for the trigger target does not match the AWS Region for the repository.
            Triggers must be created in the same Region as the target for the trigger.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumBranchesExceededException">
            The number of branches for the trigger was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException">
            The number of triggers allowed for the repository was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException">
            At least one branch name is required, but was not specified in the trigger configuration.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException">
            A destination ARN for the target service for the trigger is required, but was not
            specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException">
            At least one event for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException">
            A name for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException">
            The list of triggers for the repository is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutRepositoryTriggers">REST API Reference for PutRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.PutRepositoryTriggersAsync(Amazon.CodeCommit.Model.PutRepositoryTriggersRequest,System.Threading.CancellationToken)">
            <summary>
            Replaces all triggers for a repository. Used to create or delete triggers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRepositoryTriggers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PutRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException">
            One or more branch names specified for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException">
            The custom data provided for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException">
            The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination.
            The most common reason for this error is that the ARN does not meet the requirements
            for the service type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException">
            One or more events specified for the trigger is not valid. Check to make sure that
            all events specified match the requirements for allowed events.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException">
            The name of the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException">
            The AWS Region for the trigger target does not match the AWS Region for the repository.
            Triggers must be created in the same Region as the target for the trigger.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumBranchesExceededException">
            The number of branches for the trigger was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException">
            The number of triggers allowed for the repository was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException">
            At least one branch name is required, but was not specified in the trigger configuration.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException">
            A destination ARN for the target service for the trigger is required, but was not
            specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException">
            At least one event for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException">
            A name for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException">
            The list of triggers for the repository is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PutRepositoryTriggers">REST API Reference for PutRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.TagResource(Amazon.CodeCommit.Model.TagResourceRequest)">
            <summary>
            Adds or updates tags for a resource in AWS CodeCommit. For a list of valid resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagsMapException">
            The map of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagsMapRequiredException">
            A map of tags is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.TagResourceAsync(Amazon.CodeCommit.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Adds or updates tags for a resource in AWS CodeCommit. For a list of valid resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagsMapException">
            The map of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagsMapRequiredException">
            A map of tags is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.TestRepositoryTriggers(Amazon.CodeCommit.Model.TestRepositoryTriggersRequest)">
            <summary>
            Tests the functionality of repository triggers by sending information to the trigger
            target. If real data is available in the repository, the test sends data from the
            last commit. If no data is available, sample data is generated.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestRepositoryTriggers service method.</param>
            
            <returns>The response from the TestRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException">
            One or more branch names specified for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException">
            The custom data provided for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException">
            The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination.
            The most common reason for this error is that the ARN does not meet the requirements
            for the service type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException">
            One or more events specified for the trigger is not valid. Check to make sure that
            all events specified match the requirements for allowed events.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException">
            The name of the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException">
            The AWS Region for the trigger target does not match the AWS Region for the repository.
            Triggers must be created in the same Region as the target for the trigger.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumBranchesExceededException">
            The number of branches for the trigger was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException">
            The number of triggers allowed for the repository was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException">
            At least one branch name is required, but was not specified in the trigger configuration.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException">
            A destination ARN for the target service for the trigger is required, but was not
            specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException">
            At least one event for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException">
            A name for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException">
            The list of triggers for the repository is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/TestRepositoryTriggers">REST API Reference for TestRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.TestRepositoryTriggersAsync(Amazon.CodeCommit.Model.TestRepositoryTriggersRequest,System.Threading.CancellationToken)">
            <summary>
            Tests the functionality of repository triggers by sending information to the trigger
            target. If real data is available in the repository, the test sends data from the
            last commit. If no data is available, sample data is generated.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestRepositoryTriggers service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TestRepositoryTriggers service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerBranchNameException">
            One or more branch names specified for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerCustomDataException">
            The custom data provided for the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerDestinationArnException">
            The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination.
            The most common reason for this error is that the ARN does not meet the requirements
            for the service type.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerEventsException">
            One or more events specified for the trigger is not valid. Check to make sure that
            all events specified match the requirements for allowed events.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerNameException">
            The name of the trigger is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryTriggerRegionException">
            The AWS Region for the trigger target does not match the AWS Region for the repository.
            Triggers must be created in the same Region as the target for the trigger.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumBranchesExceededException">
            The number of branches for the trigger was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumRepositoryTriggersExceededException">
            The number of triggers allowed for the repository was exceeded.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerBranchNameListRequiredException">
            At least one branch name is required, but was not specified in the trigger configuration.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerDestinationArnRequiredException">
            A destination ARN for the target service for the trigger is required, but was not
            specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerEventsListRequiredException">
            At least one event for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggerNameRequiredException">
            A name for the trigger is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryTriggersListRequiredException">
            The list of triggers for the repository is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/TestRepositoryTriggers">REST API Reference for TestRepositoryTriggers Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UntagResource(Amazon.CodeCommit.Model.UntagResourceRequest)">
            <summary>
            Removes tags for a resource in AWS CodeCommit. For a list of valid resources in AWS
            CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagKeysListException">
            The list of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagKeysListRequiredException">
            A list of tag keys is required. The list cannot be empty or null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UntagResourceAsync(Amazon.CodeCommit.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Removes tags for a resource in AWS CodeCommit. For a list of valid resources in AWS
            CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the <i>AWS CodeCommit User Guide</i>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidResourceArnException">
            The value for the resource ARN is not valid. For more information about resources
            in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidSystemTagUsageException">
            The specified tag is not valid. Key names cannot be prefixed with aws:.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTagKeysListException">
            The list of tags is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ResourceArnRequiredException">
            A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is required. For
            a list of valid resources in AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats">CodeCommit
            Resources and Operations</a> in the AWS CodeCommit User Guide.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagKeysListRequiredException">
            A list of tag keys is required. The list cannot be empty or null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TagPolicyException">
            The tag policy is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TooManyTagsException">
            The maximum number of tags for an AWS CodeCommit resource has been exceeded.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateApprovalRuleTemplateContent(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentRequest)">
            <summary>
            Updates the content of an approval rule template. You can change the number of required
            approvals, the membership of the approval rule, and whether an approval pool is defined.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateContent service method.</param>
            
            <returns>The response from the UpdateApprovalRuleTemplateContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException">
            The content for the approval rule template is empty. You must provide some content
            for an approval rule template. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException">
            The content of the approval rule template is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception">
            The SHA-256 hash signature for the rule content is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateContent">REST API Reference for UpdateApprovalRuleTemplateContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateApprovalRuleTemplateContentAsync(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateContentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the content of an approval rule template. You can change the number of required
            approvals, the membership of the approval rule, and whether an approval pool is defined.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateApprovalRuleTemplateContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateContentRequiredException">
            The content for the approval rule template is empty. You must provide some content
            for an approval rule template. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateContentException">
            The content of the approval rule template is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception">
            The SHA-256 hash signature for the rule content is not valid.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateContent">REST API Reference for UpdateApprovalRuleTemplateContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateApprovalRuleTemplateDescription(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionRequest)">
            <summary>
            Updates the description for a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateDescription service method.</param>
            
            <returns>The response from the UpdateApprovalRuleTemplateDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException">
            The description for the approval rule template is not valid because it exceeds the
            maximum characters allowed for a description. For more information about limits in
            AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateDescription">REST API Reference for UpdateApprovalRuleTemplateDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateApprovalRuleTemplateDescriptionAsync(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateDescriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the description for a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateDescription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateApprovalRuleTemplateDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateDescriptionException">
            The description for the approval rule template is not valid because it exceeds the
            maximum characters allowed for a description. For more information about limits in
            AWS CodeCommit, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateDescription">REST API Reference for UpdateApprovalRuleTemplateDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateApprovalRuleTemplateName(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameRequest)">
            <summary>
            Updates the name of a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateName service method.</param>
            
            <returns>The response from the UpdateApprovalRuleTemplateName service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException">
            You cannot create an approval rule template with that name because a template with
            that name already exists in this AWS Region for your AWS account. Approval rule template
            names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateName">REST API Reference for UpdateApprovalRuleTemplateName Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateApprovalRuleTemplateNameAsync(Amazon.CodeCommit.Model.UpdateApprovalRuleTemplateNameRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the name of a specified approval rule template.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateApprovalRuleTemplateName service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateApprovalRuleTemplateName service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateDoesNotExistException">
            The specified approval rule template does not exist. Verify that the name is correct
            and that you are signed in to the AWS Region where the template was created, and then
            try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameAlreadyExistsException">
            You cannot create an approval rule template with that name because a template with
            that name already exists in this AWS Region for your AWS account. Approval rule template
            names must be unique.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleTemplateNameRequiredException">
            An approval rule template name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleTemplateNameException">
            The name of the approval rule template is not valid. Template names must be between
            1 and 100 valid characters in length. For more information about limits in AWS CodeCommit,
            see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">AWS
            CodeCommit User Guide</a>.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateApprovalRuleTemplateName">REST API Reference for UpdateApprovalRuleTemplateName Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateComment(Amazon.CodeCommit.Model.UpdateCommentRequest)">
            <summary>
            Replaces the contents of a comment.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateComment service method.</param>
            
            <returns>The response from the UpdateComment service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException">
            You cannot modify or delete this comment. Only comment authors can modify or delete
            their comments.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateComment">REST API Reference for UpdateComment Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateCommentAsync(Amazon.CodeCommit.Model.UpdateCommentRequest,System.Threading.CancellationToken)">
            <summary>
            Replaces the contents of a comment.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateComment service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateComment service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentRequiredException">
            The comment is empty. You must provide some content for a comment. The content cannot
            be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentContentSizeLimitExceededException">
            The comment is too large. Comments are limited to 1,000 characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDeletedException">
            This comment has already been deleted. You cannot edit or delete a deleted comment.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentDoesNotExistException">
            No comment exists with the provided ID. Verify that you have used the correct ID,
            and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentIdRequiredException">
            The comment ID is missing or null. A comment ID is required.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CommentNotCreatedByCallerException">
            You cannot modify or delete this comment. Only comment authors can modify or delete
            their comments.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidCommentIdException">
            The comment ID is not in a valid format. Make sure that you have provided the full
            comment ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateComment">REST API Reference for UpdateComment Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateDefaultBranch(Amazon.CodeCommit.Model.UpdateDefaultBranchRequest)">
            <summary>
            Sets or changes the default branch name for the specified repository.
            
             <note> 
            <para>
            If you use this operation to change the default branch name to the current default
            branch name, a success message is returned even though the default branch did not
            change.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDefaultBranch service method.</param>
            
            <returns>The response from the UpdateDefaultBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateDefaultBranch">REST API Reference for UpdateDefaultBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateDefaultBranchAsync(Amazon.CodeCommit.Model.UpdateDefaultBranchRequest,System.Threading.CancellationToken)">
            <summary>
            Sets or changes the default branch name for the specified repository.
            
             <note> 
            <para>
            If you use this operation to change the default branch name to the current default
            branch name, a success message is returned even though the default branch did not
            change.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDefaultBranch service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateDefaultBranch service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.BranchDoesNotExistException">
            The specified branch does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.BranchNameRequiredException">
            A branch name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidBranchNameException">
            The specified reference name is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateDefaultBranch">REST API Reference for UpdateDefaultBranch Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdatePullRequestApprovalRuleContent(Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentRequest)">
            <summary>
            Updates the structure of an approval rule created specifically for a pull request.
            For example, you can change the number of required approvers and the approval pool
            for approvers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestApprovalRuleContent service method.</param>
            
            <returns>The response from the UpdatePullRequestApprovalRuleContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException">
            The content for the approval rule is empty. You must provide some content for an approval
            rule. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException">
            The specified approval rule does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException">
            The approval rule cannot be modified for the pull request because it was created by
            an approval rule template and applied to the pull request automatically.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException">
            The content for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception">
            The SHA-256 hash signature for the rule content is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestApprovalRuleContent">REST API Reference for UpdatePullRequestApprovalRuleContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdatePullRequestApprovalRuleContentAsync(Amazon.CodeCommit.Model.UpdatePullRequestApprovalRuleContentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the structure of an approval rule created specifically for a pull request.
            For example, you can change the number of required approvers and the approval pool
            for approvers.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestApprovalRuleContent service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullRequestApprovalRuleContent service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleContentRequiredException">
            The content for the approval rule is empty. You must provide some content for an approval
            rule. The content cannot be null.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleDoesNotExistException">
            The specified approval rule does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalRuleNameRequiredException">
            An approval rule name is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.CannotModifyApprovalRuleFromTemplateException">
            The approval rule cannot be modified for the pull request because it was created by
            an approval rule template and applied to the pull request automatically.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleContentException">
            The content for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalRuleNameException">
            The name for the approval rule is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRuleContentSha256Exception">
            The SHA-256 hash signature for the rule content is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestApprovalRuleContent">REST API Reference for UpdatePullRequestApprovalRuleContent Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdatePullRequestApprovalState(Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateRequest)">
            <summary>
            Updates the state of a user's approval on a pull request. The user is derived from
            the signed-in account when the request is made.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestApprovalState service method.</param>
            
            <returns>The response from the UpdatePullRequestApprovalState service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalStateRequiredException">
            An approval state is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalStateException">
            The state for the approval is not valid. Valid values include APPROVE and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException">
            The number of approvals required for the approval rule exceeds the maximum number
            allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException">
            The approval cannot be applied because the user approving the pull request matches
            the user who created the pull request. You cannot approve a pull request that you
            created.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestApprovalState">REST API Reference for UpdatePullRequestApprovalState Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdatePullRequestApprovalStateAsync(Amazon.CodeCommit.Model.UpdatePullRequestApprovalStateRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the state of a user's approval on a pull request. The user is derived from
            the signed-in account when the request is made.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestApprovalState service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullRequestApprovalState service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.ApprovalStateRequiredException">
            An approval state is required, but was not specified.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidApprovalStateException">
            The state for the approval is not valid. Valid values include APPROVE and REVOKE.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRevisionIdException">
            The revision ID is not valid. Use GetPullRequest to determine the value.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.MaximumNumberOfApprovalsExceededException">
            The number of approvals required for the approval rule exceeds the maximum number
            allowed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestCannotBeApprovedByAuthorException">
            The approval cannot be applied because the user approving the pull request matches
            the user who created the pull request. You cannot approve a pull request that you
            created.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionIdRequiredException">
            A revision ID is required, but was not provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RevisionNotCurrentException">
            The revision ID provided in the request does not match the current revision ID. Use
            GetPullRequest to retrieve the current revision ID.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestApprovalState">REST API Reference for UpdatePullRequestApprovalState Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdatePullRequestDescription(Amazon.CodeCommit.Model.UpdatePullRequestDescriptionRequest)">
            <summary>
            Replaces the contents of the description of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestDescription service method.</param>
            
            <returns>The response from the UpdatePullRequestDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDescriptionException">
            The pull request description is not valid. Descriptions cannot be more than 1,000
            characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestDescription">REST API Reference for UpdatePullRequestDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdatePullRequestDescriptionAsync(Amazon.CodeCommit.Model.UpdatePullRequestDescriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Replaces the contents of the description of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestDescription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullRequestDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidDescriptionException">
            The pull request description is not valid. Descriptions cannot be more than 1,000
            characters.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestDescription">REST API Reference for UpdatePullRequestDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdatePullRequestStatus(Amazon.CodeCommit.Model.UpdatePullRequestStatusRequest)">
            <summary>
            Updates the status of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestStatus service method.</param>
            
            <returns>The response from the UpdatePullRequestStatus service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusException">
            The pull request status is not valid. The only valid values are <code>OPEN</code>
            and <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException">
            The pull request status update is not valid. The only valid update is from <code>OPEN</code>
            to <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestStatusRequiredException">
            A pull request status is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestStatus">REST API Reference for UpdatePullRequestStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdatePullRequestStatusAsync(Amazon.CodeCommit.Model.UpdatePullRequestStatusRequest,System.Threading.CancellationToken)">
            <summary>
            Updates the status of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestStatus service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullRequestStatus service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusException">
            The pull request status is not valid. The only valid values are <code>OPEN</code>
            and <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestStatusUpdateException">
            The pull request status update is not valid. The only valid update is from <code>OPEN</code>
            to <code>CLOSED</code>.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestStatusRequiredException">
            A pull request status is required, but none was provided.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestStatus">REST API Reference for UpdatePullRequestStatus Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdatePullRequestTitle(Amazon.CodeCommit.Model.UpdatePullRequestTitleRequest)">
            <summary>
            Replaces the title of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestTitle service method.</param>
            
            <returns>The response from the UpdatePullRequestTitle service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTitleException">
            The title of the pull request is not valid. Pull request titles cannot exceed 100
            characters in length.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TitleRequiredException">
            A pull request title is required. It cannot be empty or null.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestTitle">REST API Reference for UpdatePullRequestTitle Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdatePullRequestTitleAsync(Amazon.CodeCommit.Model.UpdatePullRequestTitleRequest,System.Threading.CancellationToken)">
            <summary>
            Replaces the title of a pull request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdatePullRequestTitle service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdatePullRequestTitle service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidPullRequestIdException">
            The pull request ID is not valid. Make sure that you have provided the full ID and
            that the pull request is in the specified repository, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidTitleException">
            The title of the pull request is not valid. Pull request titles cannot exceed 100
            characters in length.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestAlreadyClosedException">
            The pull request status cannot be updated because it is already closed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestDoesNotExistException">
            The pull request ID could not be found. Make sure that you have specified the correct
            repository name and pull request ID, and then try again.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.PullRequestIdRequiredException">
            A pull request ID is required, but none was provided.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.TitleRequiredException">
            A pull request title is required. It cannot be empty or null.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdatePullRequestTitle">REST API Reference for UpdatePullRequestTitle Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateRepositoryDescription(Amazon.CodeCommit.Model.UpdateRepositoryDescriptionRequest)">
            <summary>
            Sets or changes the comment or description for a repository.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRepositoryDescription service method.</param>
            
            <returns>The response from the UpdateRepositoryDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException">
            The specified repository description is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateRepositoryDescription">REST API Reference for UpdateRepositoryDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateRepositoryDescriptionAsync(Amazon.CodeCommit.Model.UpdateRepositoryDescriptionRequest,System.Threading.CancellationToken)">
            <summary>
            Sets or changes the comment or description for a repository.
            
             <note> 
            <para>
            The description field for a repository accepts all HTML characters and all valid Unicode
            characters. Applications that do not HTML-encode the description and display it in
            a webpage can expose users to potentially malicious code. Make sure that you HTML-encode
            the description field in any application that uses this API to display the repository
            description on a webpage.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRepositoryDescription service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateRepositoryDescription service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionIntegrityChecksFailedException">
            An encryption integrity check failed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyAccessDeniedException">
            An encryption key could not be accessed.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyDisabledException">
            The encryption key is disabled.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyNotFoundException">
            No encryption key was found.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.EncryptionKeyUnavailableException">
            The encryption key is not available.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryDescriptionException">
            The specified repository description is not valid.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateRepositoryDescription">REST API Reference for UpdateRepositoryDescription Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateRepositoryName(Amazon.CodeCommit.Model.UpdateRepositoryNameRequest)">
            <summary>
            Renames a repository. The repository name must be unique across the calling AWS account.
            Repository names are limited to 100 alphanumeric, dash, and underscore characters,
            and cannot include certain characters. The suffix .git is prohibited. For more information
            about the limits on repository names, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">Limits</a>
            in the AWS CodeCommit User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRepositoryName service method.</param>
            
            <returns>The response from the UpdateRepositoryName service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameExistsException">
            The specified repository name already exists.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateRepositoryName">REST API Reference for UpdateRepositoryName Operation</seealso>
        </member>
        <member name="M:Amazon.CodeCommit.IAmazonCodeCommit.UpdateRepositoryNameAsync(Amazon.CodeCommit.Model.UpdateRepositoryNameRequest,System.Threading.CancellationToken)">
            <summary>
            Renames a repository. The repository name must be unique across the calling AWS account.
            Repository names are limited to 100 alphanumeric, dash, and underscore characters,
            and cannot include certain characters. The suffix .git is prohibited. For more information
            about the limits on repository names, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html">Limits</a>
            in the AWS CodeCommit User Guide.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRepositoryName service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UpdateRepositoryName service method, as returned by CodeCommit.</returns>
            <exception cref="T:Amazon.CodeCommit.Model.InvalidRepositoryNameException">
            A specified repository name is not valid.
            
             <note> 
            <para>
            This exception occurs only when a specified repository name is not valid. Other exceptions
            occur when a required repository parameter is missing, or when a specified repository
            does not exist.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryDoesNotExistException">
            The specified repository does not exist.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameExistsException">
            The specified repository name already exists.
            </exception>
            <exception cref="T:Amazon.CodeCommit.Model.RepositoryNameRequiredException">
            A repository name is required, but was not specified.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/UpdateRepositoryName">REST API Reference for UpdateRepositoryName Operation</seealso>
        </member>
    </members>
</doc>
