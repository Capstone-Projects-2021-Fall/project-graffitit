<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.KinesisVideoMedia</name>
    </assembly>
    <members>
        <member name="T:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient">
             <summary>
             Implementation for accessing KinesisVideoMedia
            
             
             </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.#ctor(System.String)">
             <summary>
             Constructs AmazonKinesisVideoMediaClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="serviceUrl">The URL of the search or document service.</param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.#ctor(Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig)">
             <summary>
             Constructs AmazonKinesisVideoMediaClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonKinesisVideoMediaClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.#ctor(System.String,Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonKinesisVideoMediaClient with AWS Credentials
            </summary>
            <param name="serviceUrl">The URL of the search or document service.</param>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig)">
            <summary>
            Constructs AmazonKinesisVideoMediaClient with AWS Credentials and an
            AmazonKinesisVideoMediaClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonKinesisVideoMediaClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonKinesisVideoMediaClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="serviceUrl">The URL of the search or document service.</param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.#ctor(System.String,System.String,Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig)">
            <summary>
            Constructs AmazonKinesisVideoMediaClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisVideoMediaClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonKinesisVideoMediaClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructs AmazonKinesisVideoMediaClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="serviceUrl">The URL of the search or document service.</param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.#ctor(System.String,System.String,System.String,Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig)">
            <summary>
            Constructs AmazonKinesisVideoMediaClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisVideoMediaClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonKinesisVideoMediaClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.GetMedia(Amazon.KinesisVideoMedia.Model.GetMediaRequest)">
            <summary>
            Use this API to retrieve media content from a Kinesis video stream. In the request,
            you identify the stream name or stream Amazon Resource Name (ARN), and the starting
            chunk. Kinesis Video Streams then returns a stream of chunks in order by fragment
            number.
            
             <note> 
            <para>
            You must first call the <code>GetDataEndpoint</code> API to get an endpoint. Then
            send the <code>GetMedia</code> requests to this endpoint using the <a href="https://docs.aws.amazon.com/cli/latest/reference/">--endpoint-url
            parameter</a>. 
            </para>
             </note> 
            <para>
            When you put media data (fragments) on a stream, Kinesis Video Streams stores each
            incoming fragment and related metadata in what is called a "chunk." For more information,
            see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_dataplane_PutMedia.html">PutMedia</a>.
            The <code>GetMedia</code> API returns a stream of these chunks starting from the chunk
            that you specify in the request. 
            </para>
             
            <para>
            The following limits apply when using the <code>GetMedia</code> API:
            </para>
             <ul> <li> 
            <para>
            A client can call <code>GetMedia</code> up to five times per second per stream. 
            </para>
             </li> <li> 
            <para>
            Kinesis Video Streams sends media data at a rate of up to 25 megabytes per second
            (or 200 megabits per second) during a <code>GetMedia</code> session. 
            </para>
             </li> </ul> <note> 
            <para>
            If an error is thrown after invoking a Kinesis Video Streams media API, in addition
            to the HTTP status code and the response body, it includes the following pieces of
            information: 
            </para>
             <ul> <li> 
            <para>
             <code>x-amz-ErrorType</code> HTTP header – contains a more specific error type in
            addition to what the HTTP status code provides. 
            </para>
             </li> <li> 
            <para>
             <code>x-amz-RequestId</code> HTTP header – if you want to report an issue to AWS,
            the support team can better diagnose the problem if given the Request Id.
            </para>
             </li> </ul> 
            <para>
            Both the HTTP status code and the ErrorType header can be utilized to make programmatic
            decisions about whether errors are retry-able and under what conditions, as well as
            provide information on what actions the client programmer might need to take in order
            to successfully try again.
            </para>
             
            <para>
            For more information, see the <b>Errors</b> section at the bottom of this topic, as
            well as <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/CommonErrors.html">Common
            Errors</a>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMedia service method.</param>
            
            <returns>The response from the GetMedia service method, as returned by KinesisVideoMedia.</returns>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client connections.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.InvalidEndpointException">
            Status Code: 400, Caller used wrong endpoint to write data to a stream. On receiving
            such an exception, the user must call <code>GetDataEndpoint</code> with <code>AccessMode</code>
            set to "READ" and use the endpoint Kinesis Video returns in the next <code>GetMedia</code>
            call.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.NotAuthorizedException">
            Status Code: 403, The caller is not authorized to perform an operation on the given
            stream, or the token has expired.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException">
            Status Code: 404, The stream with the given name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-media-2017-09-30/GetMedia">REST API Reference for GetMedia Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaClient.GetMediaAsync(Amazon.KinesisVideoMedia.Model.GetMediaRequest,System.Threading.CancellationToken)">
            <summary>
            Use this API to retrieve media content from a Kinesis video stream. In the request,
            you identify the stream name or stream Amazon Resource Name (ARN), and the starting
            chunk. Kinesis Video Streams then returns a stream of chunks in order by fragment
            number.
            
             <note> 
            <para>
            You must first call the <code>GetDataEndpoint</code> API to get an endpoint. Then
            send the <code>GetMedia</code> requests to this endpoint using the <a href="https://docs.aws.amazon.com/cli/latest/reference/">--endpoint-url
            parameter</a>. 
            </para>
             </note> 
            <para>
            When you put media data (fragments) on a stream, Kinesis Video Streams stores each
            incoming fragment and related metadata in what is called a "chunk." For more information,
            see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_dataplane_PutMedia.html">PutMedia</a>.
            The <code>GetMedia</code> API returns a stream of these chunks starting from the chunk
            that you specify in the request. 
            </para>
             
            <para>
            The following limits apply when using the <code>GetMedia</code> API:
            </para>
             <ul> <li> 
            <para>
            A client can call <code>GetMedia</code> up to five times per second per stream. 
            </para>
             </li> <li> 
            <para>
            Kinesis Video Streams sends media data at a rate of up to 25 megabytes per second
            (or 200 megabits per second) during a <code>GetMedia</code> session. 
            </para>
             </li> </ul> <note> 
            <para>
            If an error is thrown after invoking a Kinesis Video Streams media API, in addition
            to the HTTP status code and the response body, it includes the following pieces of
            information: 
            </para>
             <ul> <li> 
            <para>
             <code>x-amz-ErrorType</code> HTTP header – contains a more specific error type in
            addition to what the HTTP status code provides. 
            </para>
             </li> <li> 
            <para>
             <code>x-amz-RequestId</code> HTTP header – if you want to report an issue to AWS,
            the support team can better diagnose the problem if given the Request Id.
            </para>
             </li> </ul> 
            <para>
            Both the HTTP status code and the ErrorType header can be utilized to make programmatic
            decisions about whether errors are retry-able and under what conditions, as well as
            provide information on what actions the client programmer might need to take in order
            to successfully try again.
            </para>
             
            <para>
            For more information, see the <b>Errors</b> section at the bottom of this topic, as
            well as <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/CommonErrors.html">Common
            Errors</a>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMedia service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMedia service method, as returned by KinesisVideoMedia.</returns>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client connections.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.InvalidEndpointException">
            Status Code: 400, Caller used wrong endpoint to write data to a stream. On receiving
            such an exception, the user must call <code>GetDataEndpoint</code> with <code>AccessMode</code>
            set to "READ" and use the endpoint Kinesis Video returns in the next <code>GetMedia</code>
            call.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.NotAuthorizedException">
            Status Code: 403, The caller is not authorized to perform an operation on the given
            stream, or the token has expired.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException">
            Status Code: 404, The stream with the given name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-media-2017-09-30/GetMedia">REST API Reference for GetMedia Operation</seealso>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig">
            <summary>
            Configuration for accessing Amazon KinesisVideoMedia service
            </summary>
            <summary>
            Configuration for accessing Amazon KinesisVideoMedia service
            </summary>
            <summary>
            Configuration for accessing Amazon KinesisVideoMedia service
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig.Initialize">
            <summary>
            This method contains custom initializations for the config object.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig.Validate">
            <summary>
            Validate that the config object is properly configured.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaException">
            <summary>
             Common exception for the KinesisVideoMedia service.
             </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonKinesisVideoMediaException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonKinesisVideoMediaException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonKinesisVideoMediaException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonKinesisVideoMediaException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonKinesisVideoMediaException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonKinesisVideoMediaException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Internal.AmazonKinesisVideoMediaMetadata">
            <summary>
            Service metadata for  Amazon KinesisVideoMedia service
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Internal.AmazonKinesisVideoMediaMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Internal.AmazonKinesisVideoMediaMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.AmazonKinesisVideoMediaRequest">
            <summary>
            Base class for KinesisVideoMedia operation requests.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException">
            <summary>
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ClientLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClientLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException">
            <summary>
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client connections.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ConnectionLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ConnectionLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ConnectionLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConnectionLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ConnectionLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ConnectionLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.GetMediaRequest">
            <summary>
            Container for the parameters to the GetMedia operation.
            Use this API to retrieve media content from a Kinesis video stream. In the request,
            you identify the stream name or stream Amazon Resource Name (ARN), and the starting
            chunk. Kinesis Video Streams then returns a stream of chunks in order by fragment
            number.
            
             <note> 
            <para>
            You must first call the <code>GetDataEndpoint</code> API to get an endpoint. Then
            send the <code>GetMedia</code> requests to this endpoint using the <a href="https://docs.aws.amazon.com/cli/latest/reference/">--endpoint-url
            parameter</a>. 
            </para>
             </note> 
            <para>
            When you put media data (fragments) on a stream, Kinesis Video Streams stores each
            incoming fragment and related metadata in what is called a "chunk." For more information,
            see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_dataplane_PutMedia.html">PutMedia</a>.
            The <code>GetMedia</code> API returns a stream of these chunks starting from the chunk
            that you specify in the request. 
            </para>
             
            <para>
            The following limits apply when using the <code>GetMedia</code> API:
            </para>
             <ul> <li> 
            <para>
            A client can call <code>GetMedia</code> up to five times per second per stream. 
            </para>
             </li> <li> 
            <para>
            Kinesis Video Streams sends media data at a rate of up to 25 megabytes per second
            (or 200 megabits per second) during a <code>GetMedia</code> session. 
            </para>
             </li> </ul> <note> 
            <para>
            If an error is thrown after invoking a Kinesis Video Streams media API, in addition
            to the HTTP status code and the response body, it includes the following pieces of
            information: 
            </para>
             <ul> <li> 
            <para>
             <code>x-amz-ErrorType</code> HTTP header – contains a more specific error type in
            addition to what the HTTP status code provides. 
            </para>
             </li> <li> 
            <para>
             <code>x-amz-RequestId</code> HTTP header – if you want to report an issue to AWS,
            the support team can better diagnose the problem if given the Request Id.
            </para>
             </li> </ul> 
            <para>
            Both the HTTP status code and the ErrorType header can be utilized to make programmatic
            decisions about whether errors are retry-able and under what conditions, as well as
            provide information on what actions the client programmer might need to take in order
            to successfully try again.
            </para>
             
            <para>
            For more information, see the <b>Errors</b> section at the bottom of this topic, as
            well as <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/CommonErrors.html">Common
            Errors</a>. 
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.GetMediaRequest.StartSelector">
            <summary>
            Gets and sets the property StartSelector. 
            <para>
            Identifies the starting chunk to get from the specified stream. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.GetMediaRequest.StreamARN">
            <summary>
            Gets and sets the property StreamARN. 
            <para>
            The ARN of the stream from where you want to get the media content. If you don't specify
            the <code>streamARN</code>, you must specify the <code>streamName</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.GetMediaRequest.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The Kinesis video stream name from where you want to get the media content. If you
            don't specify the <code>streamName</code>, you must specify the <code>streamARN</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.GetMediaResponse">
            <summary>
            This is the response object from the GetMedia operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.GetMediaResponse.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            The content type of the requested media.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.GetMediaResponse.Payload">
            <summary>
            Gets and sets the property Payload. 
            <para>
             The payload Kinesis Video Streams returns is a sequence of chunks from the specified
            stream. For information about the chunks, see . The chunks that Kinesis Video Streams
            returns in the <code>GetMedia</code> call also include the following additional Matroska
            (MKV) tags: 
            </para>
             <ul> <li> 
            <para>
            AWS_KINESISVIDEO_CONTINUATION_TOKEN (UTF-8 string) - In the event your <code>GetMedia</code>
            call terminates, you can use this continuation token in your next request to get the
            next chunk where the last request terminated.
            </para>
             </li> <li> 
            <para>
            AWS_KINESISVIDEO_MILLIS_BEHIND_NOW (UTF-8 string) - Client applications can use this
            tag value to determine how far behind the chunk returned in the response is from the
            latest chunk on the stream. 
            </para>
             </li> <li> 
            <para>
            AWS_KINESISVIDEO_FRAGMENT_NUMBER - Fragment number returned in the chunk.
            </para>
             </li> <li> 
            <para>
            AWS_KINESISVIDEO_SERVER_TIMESTAMP - Server timestamp of the fragment.
            </para>
             </li> <li> 
            <para>
            AWS_KINESISVIDEO_PRODUCER_TIMESTAMP - Producer timestamp of the fragment.
            </para>
             </li> </ul> 
            <para>
            The following tags will be present if an error occurs:
            </para>
             <ul> <li> 
            <para>
            AWS_KINESISVIDEO_ERROR_CODE - String description of an error that caused GetMedia
            to stop.
            </para>
             </li> <li> 
            <para>
            AWS_KINESISVIDEO_ERROR_ID: Integer code of the error.
            </para>
             </li> </ul> 
            <para>
            The error codes are as follows:
            </para>
             <ul> <li> 
            <para>
            3002 - Error writing to the stream
            </para>
             </li> <li> 
            <para>
            4000 - Requested fragment is not found
            </para>
             </li> <li> 
            <para>
            4500 - Access denied for the stream's KMS key
            </para>
             </li> <li> 
            <para>
            4501 - Stream's KMS key is disabled
            </para>
             </li> <li> 
            <para>
            4502 - Validation error on the stream's KMS key
            </para>
             </li> <li> 
            <para>
            4503 - KMS key specified in the stream is unavailable
            </para>
             </li> <li> 
            <para>
            4504 - Invalid usage of the KMS key specified in the stream
            </para>
             </li> <li> 
            <para>
            4505 - Invalid state of the KMS key specified in the stream
            </para>
             </li> <li> 
            <para>
            4506 - Unable to find the KMS key specified in the stream
            </para>
             </li> <li> 
            <para>
            5000 - Internal error
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.GetMediaResponse.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClientLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ConnectionLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectionLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ConnectionLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ConnectionLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ConnectionLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.GetMediaRequestMarshaller">
            <summary>
            GetMedia Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.GetMediaRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.GetMediaRequestMarshaller.Marshall(Amazon.KinesisVideoMedia.Model.GetMediaRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.GetMediaRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.GetMediaResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMedia operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.GetMediaResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.GetMediaResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.GetMediaResponseUnmarshaller.HasStreamingProperty">
            <summary>
            Overriden to return true indicating the response contains streaming data.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.GetMediaResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidArgumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.InvalidEndpointExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidEndpointException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.InvalidEndpointExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.InvalidEndpointExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.InvalidEndpointExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NotAuthorizedException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.StartSelectorMarshaller">
            <summary>
            StartSelector Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.StartSelectorMarshaller.Marshall(Amazon.KinesisVideoMedia.Model.StartSelector,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.KinesisVideoMedia.Model.Internal.MarshallTransformations.StartSelectorMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.InvalidArgumentException">
            <summary>
            The value for this input parameter is invalid.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidArgumentException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArgumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidArgumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidArgumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidArgumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidArgumentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.InvalidEndpointException">
            <summary>
            Status Code: 400, Caller used wrong endpoint to write data to a stream. On receiving
            such an exception, the user must call <code>GetDataEndpoint</code> with <code>AccessMode</code>
            set to "READ" and use the endpoint Kinesis Video returns in the next <code>GetMedia</code>
            call.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidEndpointException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidEndpointException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidEndpointException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidEndpointException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidEndpointException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidEndpointException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidEndpointException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEndpointException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidEndpointException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidEndpointException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidEndpointException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidEndpointException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.InvalidEndpointException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.NotAuthorizedException">
            <summary>
            Status Code: 403, The caller is not authorized to perform an operation on the given
            stream, or the token has expired.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.NotAuthorizedException.#ctor(System.String)">
            <summary>
            Constructs a new NotAuthorizedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.NotAuthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.NotAuthorizedException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.NotAuthorizedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.NotAuthorizedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NotAuthorizedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.NotAuthorizedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException">
            <summary>
            Status Code: 404, The stream with the given name does not exist.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.Model.StartSelector">
            <summary>
            Identifies the chunk on the Kinesis video stream where you want the <code>GetMedia</code>
            API to start returning media data. You have the following options to identify the
            starting chunk: 
            
             <ul> <li> 
            <para>
            Choose the latest (or oldest) chunk.
            </para>
             </li> <li> 
            <para>
            Identify a specific chunk. You can identify a specific chunk either by providing a
            fragment number or timestamp (server or producer). 
            </para>
             </li> <li> 
            <para>
            Each chunk's metadata includes a continuation token as a Matroska (MKV) tag (<code>AWS_KINESISVIDEO_CONTINUATION_TOKEN</code>).
            If your previous <code>GetMedia</code> request terminated, you can use this tag value
            in your next <code>GetMedia</code> request. The API then starts returning chunks starting
            where the last API ended.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.StartSelector.AfterFragmentNumber">
            <summary>
            Gets and sets the property AfterFragmentNumber. 
            <para>
            Specifies the fragment number from where you want the <code>GetMedia</code> API to
            start returning the fragments. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.StartSelector.ContinuationToken">
            <summary>
            Gets and sets the property ContinuationToken. 
            <para>
            Continuation token that Kinesis Video Streams returned in the previous <code>GetMedia</code>
            response. The <code>GetMedia</code> API then starts with the chunk identified by the
            continuation token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.StartSelector.StartSelectorType">
            <summary>
            Gets and sets the property StartSelectorType. 
            <para>
            Identifies the fragment on the Kinesis video stream where you want to start getting
            the data from.
            </para>
             <ul> <li> 
            <para>
            NOW - Start with the latest chunk on the stream.
            </para>
             </li> <li> 
            <para>
            EARLIEST - Start with earliest available chunk on the stream.
            </para>
             </li> <li> 
            <para>
            FRAGMENT_NUMBER - Start with the chunk after a specific fragment. You must also specify
            the <code>AfterFragmentNumber</code> parameter.
            </para>
             </li> <li> 
            <para>
            PRODUCER_TIMESTAMP or SERVER_TIMESTAMP - Start with the chunk containing a fragment
            with the specified producer or server timestamp. You specify the timestamp by adding
            <code>StartTimestamp</code>.
            </para>
             </li> <li> 
            <para>
             CONTINUATION_TOKEN - Read using the specified continuation token. 
            </para>
             </li> </ul> <note> 
            <para>
            If you choose the NOW, EARLIEST, or CONTINUATION_TOKEN as the <code>startSelectorType</code>,
            you don't provide any additional information in the <code>startSelector</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoMedia.Model.StartSelector.StartTimestamp">
            <summary>
            Gets and sets the property StartTimestamp. 
            <para>
            A timestamp value. This value is required if you choose the PRODUCER_TIMESTAMP or
            the SERVER_TIMESTAMP as the <code>startSelectorType</code>. The <code>GetMedia</code>
            API then starts with the chunk containing the fragment that has the specified timestamp.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.StartSelectorType">
            <summary>
            Constants used for properties of type StartSelectorType.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideoMedia.StartSelectorType.CONTINUATION_TOKEN">
            <summary>
            Constant CONTINUATION_TOKEN for StartSelectorType
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideoMedia.StartSelectorType.EARLIEST">
            <summary>
            Constant EARLIEST for StartSelectorType
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideoMedia.StartSelectorType.FRAGMENT_NUMBER">
            <summary>
            Constant FRAGMENT_NUMBER for StartSelectorType
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideoMedia.StartSelectorType.NOW">
            <summary>
            Constant NOW for StartSelectorType
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideoMedia.StartSelectorType.PRODUCER_TIMESTAMP">
            <summary>
            Constant PRODUCER_TIMESTAMP for StartSelectorType
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideoMedia.StartSelectorType.SERVER_TIMESTAMP">
            <summary>
            Constant SERVER_TIMESTAMP for StartSelectorType
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.StartSelectorType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.StartSelectorType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.StartSelectorType.op_Implicit(System.String)~Amazon.KinesisVideoMedia.StartSelectorType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideoMedia.IAmazonKinesisVideoMedia">
             <summary>
             Interface for accessing KinesisVideoMedia
            
             
             </summary>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.IAmazonKinesisVideoMedia.GetMedia(Amazon.KinesisVideoMedia.Model.GetMediaRequest)">
            <summary>
            Use this API to retrieve media content from a Kinesis video stream. In the request,
            you identify the stream name or stream Amazon Resource Name (ARN), and the starting
            chunk. Kinesis Video Streams then returns a stream of chunks in order by fragment
            number.
            
             <note> 
            <para>
            You must first call the <code>GetDataEndpoint</code> API to get an endpoint. Then
            send the <code>GetMedia</code> requests to this endpoint using the <a href="https://docs.aws.amazon.com/cli/latest/reference/">--endpoint-url
            parameter</a>. 
            </para>
             </note> 
            <para>
            When you put media data (fragments) on a stream, Kinesis Video Streams stores each
            incoming fragment and related metadata in what is called a "chunk." For more information,
            see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_dataplane_PutMedia.html">PutMedia</a>.
            The <code>GetMedia</code> API returns a stream of these chunks starting from the chunk
            that you specify in the request. 
            </para>
             
            <para>
            The following limits apply when using the <code>GetMedia</code> API:
            </para>
             <ul> <li> 
            <para>
            A client can call <code>GetMedia</code> up to five times per second per stream. 
            </para>
             </li> <li> 
            <para>
            Kinesis Video Streams sends media data at a rate of up to 25 megabytes per second
            (or 200 megabits per second) during a <code>GetMedia</code> session. 
            </para>
             </li> </ul> <note> 
            <para>
            If an error is thrown after invoking a Kinesis Video Streams media API, in addition
            to the HTTP status code and the response body, it includes the following pieces of
            information: 
            </para>
             <ul> <li> 
            <para>
             <code>x-amz-ErrorType</code> HTTP header – contains a more specific error type in
            addition to what the HTTP status code provides. 
            </para>
             </li> <li> 
            <para>
             <code>x-amz-RequestId</code> HTTP header – if you want to report an issue to AWS,
            the support team can better diagnose the problem if given the Request Id.
            </para>
             </li> </ul> 
            <para>
            Both the HTTP status code and the ErrorType header can be utilized to make programmatic
            decisions about whether errors are retry-able and under what conditions, as well as
            provide information on what actions the client programmer might need to take in order
            to successfully try again.
            </para>
             
            <para>
            For more information, see the <b>Errors</b> section at the bottom of this topic, as
            well as <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/CommonErrors.html">Common
            Errors</a>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMedia service method.</param>
            
            <returns>The response from the GetMedia service method, as returned by KinesisVideoMedia.</returns>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client connections.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.InvalidEndpointException">
            Status Code: 400, Caller used wrong endpoint to write data to a stream. On receiving
            such an exception, the user must call <code>GetDataEndpoint</code> with <code>AccessMode</code>
            set to "READ" and use the endpoint Kinesis Video returns in the next <code>GetMedia</code>
            call.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.NotAuthorizedException">
            Status Code: 403, The caller is not authorized to perform an operation on the given
            stream, or the token has expired.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException">
            Status Code: 404, The stream with the given name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-media-2017-09-30/GetMedia">REST API Reference for GetMedia Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideoMedia.IAmazonKinesisVideoMedia.GetMediaAsync(Amazon.KinesisVideoMedia.Model.GetMediaRequest,System.Threading.CancellationToken)">
            <summary>
            Use this API to retrieve media content from a Kinesis video stream. In the request,
            you identify the stream name or stream Amazon Resource Name (ARN), and the starting
            chunk. Kinesis Video Streams then returns a stream of chunks in order by fragment
            number.
            
             <note> 
            <para>
            You must first call the <code>GetDataEndpoint</code> API to get an endpoint. Then
            send the <code>GetMedia</code> requests to this endpoint using the <a href="https://docs.aws.amazon.com/cli/latest/reference/">--endpoint-url
            parameter</a>. 
            </para>
             </note> 
            <para>
            When you put media data (fragments) on a stream, Kinesis Video Streams stores each
            incoming fragment and related metadata in what is called a "chunk." For more information,
            see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_dataplane_PutMedia.html">PutMedia</a>.
            The <code>GetMedia</code> API returns a stream of these chunks starting from the chunk
            that you specify in the request. 
            </para>
             
            <para>
            The following limits apply when using the <code>GetMedia</code> API:
            </para>
             <ul> <li> 
            <para>
            A client can call <code>GetMedia</code> up to five times per second per stream. 
            </para>
             </li> <li> 
            <para>
            Kinesis Video Streams sends media data at a rate of up to 25 megabytes per second
            (or 200 megabits per second) during a <code>GetMedia</code> session. 
            </para>
             </li> </ul> <note> 
            <para>
            If an error is thrown after invoking a Kinesis Video Streams media API, in addition
            to the HTTP status code and the response body, it includes the following pieces of
            information: 
            </para>
             <ul> <li> 
            <para>
             <code>x-amz-ErrorType</code> HTTP header – contains a more specific error type in
            addition to what the HTTP status code provides. 
            </para>
             </li> <li> 
            <para>
             <code>x-amz-RequestId</code> HTTP header – if you want to report an issue to AWS,
            the support team can better diagnose the problem if given the Request Id.
            </para>
             </li> </ul> 
            <para>
            Both the HTTP status code and the ErrorType header can be utilized to make programmatic
            decisions about whether errors are retry-able and under what conditions, as well as
            provide information on what actions the client programmer might need to take in order
            to successfully try again.
            </para>
             
            <para>
            For more information, see the <b>Errors</b> section at the bottom of this topic, as
            well as <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/CommonErrors.html">Common
            Errors</a>. 
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMedia service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetMedia service method, as returned by KinesisVideoMedia.</returns>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ClientLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client calls. Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ConnectionLimitExceededException">
            Kinesis Video Streams has throttled the request because you have exceeded the limit
            of allowed client connections.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.InvalidEndpointException">
            Status Code: 400, Caller used wrong endpoint to write data to a stream. On receiving
            such an exception, the user must call <code>GetDataEndpoint</code> with <code>AccessMode</code>
            set to "READ" and use the endpoint Kinesis Video returns in the next <code>GetMedia</code>
            call.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.NotAuthorizedException">
            Status Code: 403, The caller is not authorized to perform an operation on the given
            stream, or the token has expired.
            </exception>
            <exception cref="T:Amazon.KinesisVideoMedia.Model.ResourceNotFoundException">
            Status Code: 404, The stream with the given name does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-media-2017-09-30/GetMedia">REST API Reference for GetMedia Operation</seealso>
        </member>
    </members>
</doc>
