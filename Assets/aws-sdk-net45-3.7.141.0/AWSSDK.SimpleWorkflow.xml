<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.SimpleWorkflow</name>
    </assembly>
    <members>
        <member name="T:Amazon.SimpleWorkflow.AmazonSimpleWorkflowConfig">
            <summary>
            Configuration for accessing Amazon SimpleWorkflow service
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.AmazonSimpleWorkflowConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.AmazonSimpleWorkflowConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.AmazonSimpleWorkflowConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.AmazonSimpleWorkflowException">
            <summary>
             Common exception for the SimpleWorkflow service.
             </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonSimpleWorkflowException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonSimpleWorkflowException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonSimpleWorkflowException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSimpleWorkflowException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonSimpleWorkflowException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonSimpleWorkflowException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Internal.AmazonSimpleWorkflowMetadata">
            <summary>
            Service metadata for  Amazon SimpleWorkflow service
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Internal.AmazonSimpleWorkflowMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Internal.AmazonSimpleWorkflowMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTask">
            <summary>
            Unit of work sent to an activity worker.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTask.ActivityId">
            <summary>
            Gets and sets the property ActivityId. 
            <para>
            The unique ID of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTask.ActivityType">
            <summary>
            Gets and sets the property ActivityType. 
            <para>
            The type of this activity task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTask.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The inputs provided when the activity task was scheduled. The form of the input is
            user defined and should be meaningful to the activity implementation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTask.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ActivityTaskStarted</code> event recorded in the history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTask.TaskToken">
            <summary>
            Gets and sets the property TaskToken. 
            <para>
            The opaque string used as a handle on the task. This token is used by workers to communicate
            progress and response information back to the system about the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTask.WorkflowExecution">
            <summary>
            Gets and sets the property WorkflowExecution. 
            <para>
            The workflow execution that started this activity task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTaskCanceledEventAttributes">
            <summary>
            Provides the details of the <code>ActivityTaskCanceled</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskCanceledEventAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            Details of the cancellation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskCanceledEventAttributes.LatestCancelRequestedEventId">
            <summary>
            Gets and sets the property LatestCancelRequestedEventId. 
            <para>
            If set, contains the ID of the last <code>ActivityTaskCancelRequested</code> event
            recorded for this activity task. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskCanceledEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this
            activity task was scheduled. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskCanceledEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ActivityTaskStarted</code> event recorded when this activity task
            was started. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTaskCancelRequestedEventAttributes">
            <summary>
            Provides the details of the <code>ActivityTaskCancelRequested</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskCancelRequestedEventAttributes.ActivityId">
            <summary>
            Gets and sets the property ActivityId. 
            <para>
            The unique ID of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskCancelRequestedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>RequestCancelActivityTask</code> decision for this
            cancellation request. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTaskCompletedEventAttributes">
            <summary>
            Provides the details of the <code>ActivityTaskCompleted</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskCompletedEventAttributes.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The results of the activity task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskCompletedEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this
            activity task was scheduled. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskCompletedEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ActivityTaskStarted</code> event recorded when this activity task
            was started. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTaskFailedEventAttributes">
            <summary>
            Provides the details of the <code>ActivityTaskFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskFailedEventAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The details of the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskFailedEventAttributes.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason provided for the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskFailedEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this
            activity task was scheduled. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskFailedEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ActivityTaskStarted</code> event recorded when this activity task
            was started. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes">
            <summary>
            Provides the details of the <code>ActivityTaskScheduled</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.ActivityId">
            <summary>
            Gets and sets the property ActivityId. 
            <para>
            The unique ID of the activity task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.ActivityType">
            <summary>
            Gets and sets the property ActivityType. 
            <para>
            The type of the activity task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            Data attached to the event that can be used by the decider in subsequent workflow
            tasks. This data isn't sent to the activity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            that resulted in the scheduling of this activity task. This information can be useful
            for diagnosing problems by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.HeartbeatTimeout">
            <summary>
            Gets and sets the property HeartbeatTimeout. 
            <para>
            The maximum time before which the worker processing this task must report progress
            by calling <a>RecordActivityTaskHeartbeat</a>. If the timeout is exceeded, the activity
            task is automatically timed out. If the worker subsequently attempts to record a heartbeat
            or return a result, it is ignored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The input provided to the activity task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.ScheduleToCloseTimeout">
            <summary>
            Gets and sets the property ScheduleToCloseTimeout. 
            <para>
            The maximum amount of time for this activity task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.ScheduleToStartTimeout">
            <summary>
            Gets and sets the property ScheduleToStartTimeout. 
            <para>
            The maximum amount of time the activity task can wait to be assigned to a worker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.StartToCloseTimeout">
            <summary>
            Gets and sets the property StartToCloseTimeout. 
            <para>
            The maximum amount of time a worker may take to process the activity task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The task list in which the activity task has been scheduled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskScheduledEventAttributes.TaskPriority">
            <summary>
            Gets and sets the property TaskPriority. 
            <para>
             The priority to assign to the scheduled activity task. If set, this overrides any
            default priority value that was assigned when the activity type was registered.
            </para>
             
            <para>
            Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648)
            to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTaskStartedEventAttributes">
            <summary>
            Provides the details of the <code>ActivityTaskStarted</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskStartedEventAttributes.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            Identity of the worker that was assigned this task. This aids diagnostics when problems
            arise. The form of this identity is user defined.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskStartedEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this
            activity task was scheduled. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTaskStatus">
            <summary>
            Status information about an activity task.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskStatus.CancelRequested">
            <summary>
            Gets and sets the property CancelRequested. 
            <para>
            Set to <code>true</code> if cancellation of the task is requested.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTaskTimedOutEventAttributes">
            <summary>
            Provides the details of the <code>ActivityTaskTimedOut</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskTimedOutEventAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            Contains the content of the <code>details</code> parameter for the last call made
            by the activity to <code>RecordActivityTaskHeartbeat</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskTimedOutEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this
            activity task was scheduled. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskTimedOutEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ActivityTaskStarted</code> event recorded when this activity task
            was started. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTaskTimedOutEventAttributes.TimeoutType">
            <summary>
            Gets and sets the property TimeoutType. 
            <para>
            The type of the timeout that caused this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityType">
            <summary>
            Represents an activity type.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of this activity.
            </para>
             <note> 
            <para>
            The combination of activity type name and version must be unique within a domain.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityType.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of this activity.
            </para>
             <note> 
            <para>
            The combination of activity type name and version must be unique with in a domain.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTypeConfiguration">
            <summary>
            Configuration settings registered with the activity type.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeConfiguration.DefaultTaskHeartbeatTimeout">
            <summary>
            Gets and sets the property DefaultTaskHeartbeatTimeout. 
            <para>
             The default maximum time, in seconds, before which a worker processing a task must
            report progress by calling <a>RecordActivityTaskHeartbeat</a>.
            </para>
             
            <para>
            You can specify this value only when <i>registering</i> an activity type. The registered
            default value can be overridden when you schedule a task through the <code>ScheduleActivityTask</code>
            <a>Decision</a>. If the activity worker subsequently attempts to record a heartbeat
            or returns a result, the activity worker receives an <code>UnknownResource</code>
            fault. In this case, Amazon SWF no longer considers the activity task to be valid;
            the activity worker should clean up the activity task.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeConfiguration.DefaultTaskList">
            <summary>
            Gets and sets the property DefaultTaskList. 
            <para>
             The default task list specified for this activity type at registration. This default
            is used if a task list isn't provided when a task is scheduled through the <code>ScheduleActivityTask</code>
            <a>Decision</a>. You can override the default registered task list when scheduling
            a task through the <code>ScheduleActivityTask</code> <a>Decision</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeConfiguration.DefaultTaskPriority">
            <summary>
            Gets and sets the property DefaultTaskPriority. 
            <para>
             The default task priority for tasks of this activity type, specified at registration.
            If not set, then <code>0</code> is used as the default priority. This default can
            be overridden when scheduling an activity task.
            </para>
             
            <para>
            Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648)
            to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeConfiguration.DefaultTaskScheduleToCloseTimeout">
            <summary>
            Gets and sets the property DefaultTaskScheduleToCloseTimeout. 
            <para>
             The default maximum duration, specified when registering the activity type, for tasks
            of this activity type. You can override this default when scheduling a task through
            the <code>ScheduleActivityTask</code> <a>Decision</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeConfiguration.DefaultTaskScheduleToStartTimeout">
            <summary>
            Gets and sets the property DefaultTaskScheduleToStartTimeout. 
            <para>
             The default maximum duration, specified when registering the activity type, that
            a task of an activity type can wait before being assigned to a worker. You can override
            this default when scheduling a task through the <code>ScheduleActivityTask</code>
            <a>Decision</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeConfiguration.DefaultTaskStartToCloseTimeout">
            <summary>
            Gets and sets the property DefaultTaskStartToCloseTimeout. 
            <para>
             The default maximum duration for tasks of an activity type specified when registering
            the activity type. You can override this default when scheduling a task through the
            <code>ScheduleActivityTask</code> <a>Decision</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTypeDetail">
            <summary>
            Detailed information about an activity type.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeDetail.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The configuration settings registered with the activity type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeDetail.TypeInfo">
            <summary>
            Gets and sets the property TypeInfo. 
            <para>
            General information about the activity type.
            </para>
             
            <para>
            The status of activity type (returned in the ActivityTypeInfo structure) can be one
            of the following.
            </para>
             <ul> <li> 
            <para>
             <code>REGISTERED</code> – The type is registered and available. Workers supporting
            this type should be running. 
            </para>
             </li> <li> 
            <para>
             <code>DEPRECATED</code> – The type was deprecated using <a>DeprecateActivityType</a>,
            but is still in use. You should keep workers supporting this type running. You cannot
            create new tasks of this type. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTypeInfo">
            <summary>
            Detailed information about an activity type.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeInfo.ActivityType">
            <summary>
            Gets and sets the property ActivityType. 
            <para>
            The <a>ActivityType</a> type structure representing the activity type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeInfo.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date and time this activity type was created through <a>RegisterActivityType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeInfo.DeprecationDate">
            <summary>
            Gets and sets the property DeprecationDate. 
            <para>
            If DEPRECATED, the date and time <a>DeprecateActivityType</a> was called.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeInfo.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the activity type provided in <a>RegisterActivityType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeInfo.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the activity type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ActivityTypeInfos">
            <summary>
            Contains a paginated list of activity type information structures.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeInfos.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If a <code>NextPageToken</code> was returned by a previous call, there are more results
            available. To retrieve the next page of results, make the call again using the returned
            token in <code>nextPageToken</code>. Keep all other arguments unchanged.
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ActivityTypeInfos.TypeInfos">
            <summary>
            Gets and sets the property TypeInfos. 
            <para>
            List of activity type information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CancelTimerDecisionAttributes">
            <summary>
            Provides the details of the <code>CancelTimer</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CancelTimerDecisionAttributes.TimerId">
            <summary>
            Gets and sets the property TimerId. 
            <para>
             The unique ID of the timer to cancel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CancelTimerFailedEventAttributes">
            <summary>
            Provides the details of the <code>CancelTimerFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CancelTimerFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CancelTimerFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>CancelTimer</code> decision to cancel this timer.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CancelTimerFailedEventAttributes.TimerId">
            <summary>
            Gets and sets the property TimerId. 
            <para>
            The timerId provided in the <code>CancelTimer</code> decision that failed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CancelWorkflowExecutionDecisionAttributes">
            <summary>
            Provides the details of the <code>CancelWorkflowExecution</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CancelWorkflowExecutionDecisionAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
             Details of the cancellation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CancelWorkflowExecutionFailedEventAttributes">
            <summary>
            Provides the details of the <code>CancelWorkflowExecutionFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CancelWorkflowExecutionFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CancelWorkflowExecutionFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>CancelWorkflowExecution</code> decision for this cancellation
            request. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCanceledEventAttributes">
            <summary>
            Provide details of the <code>ChildWorkflowExecutionCanceled</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCanceledEventAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            Details of the cancellation (if provided).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCanceledEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding
            to the <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCanceledEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ChildWorkflowExecutionStarted</code> event recorded when this
            child workflow execution was started. This information can be useful for diagnosing
            problems by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCanceledEventAttributes.WorkflowExecution">
            <summary>
            Gets and sets the property WorkflowExecution. 
            <para>
            The child workflow execution that was canceled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCanceledEventAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The type of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCompletedEventAttributes">
            <summary>
            Provides the details of the <code>ChildWorkflowExecutionCompleted</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCompletedEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding
            to the <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCompletedEventAttributes.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The result of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCompletedEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ChildWorkflowExecutionStarted</code> event recorded when this
            child workflow execution was started. This information can be useful for diagnosing
            problems by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCompletedEventAttributes.WorkflowExecution">
            <summary>
            Gets and sets the property WorkflowExecution. 
            <para>
            The child workflow execution that was completed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionCompletedEventAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The type of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionFailedEventAttributes">
            <summary>
            Provides the details of the <code>ChildWorkflowExecutionFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionFailedEventAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The details of the failure (if provided).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionFailedEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding
            to the <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionFailedEventAttributes.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason for the failure (if provided).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionFailedEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ChildWorkflowExecutionStarted</code> event recorded when this
            child workflow execution was started. This information can be useful for diagnosing
            problems by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionFailedEventAttributes.WorkflowExecution">
            <summary>
            Gets and sets the property WorkflowExecution. 
            <para>
            The child workflow execution that failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionFailedEventAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The type of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionStartedEventAttributes">
            <summary>
            Provides the details of the <code>ChildWorkflowExecutionStarted</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionStartedEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding
            to the <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionStartedEventAttributes.WorkflowExecution">
            <summary>
            Gets and sets the property WorkflowExecution. 
            <para>
            The child workflow execution that was started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionStartedEventAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The type of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTerminatedEventAttributes">
            <summary>
            Provides the details of the <code>ChildWorkflowExecutionTerminated</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTerminatedEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding
            to the <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTerminatedEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ChildWorkflowExecutionStarted</code> event recorded when this
            child workflow execution was started. This information can be useful for diagnosing
            problems by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTerminatedEventAttributes.WorkflowExecution">
            <summary>
            Gets and sets the property WorkflowExecution. 
            <para>
            The child workflow execution that was terminated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTerminatedEventAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The type of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTimedOutEventAttributes">
            <summary>
            Provides the details of the <code>ChildWorkflowExecutionTimedOut</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTimedOutEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding
            to the <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this child
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTimedOutEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ChildWorkflowExecutionStarted</code> event recorded when this
            child workflow execution was started. This information can be useful for diagnosing
            problems by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTimedOutEventAttributes.TimeoutType">
            <summary>
            Gets and sets the property TimeoutType. 
            <para>
            The type of the timeout that caused the child workflow execution to time out.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTimedOutEventAttributes.WorkflowExecution">
            <summary>
            Gets and sets the property WorkflowExecution. 
            <para>
            The child workflow execution that timed out.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ChildWorkflowExecutionTimedOutEventAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The type of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CloseStatusFilter">
            <summary>
            Used to filter the closed workflow executions in visibility APIs by their close status.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CloseStatusFilter.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
             The close status that must match the close status of an execution for it to meet
            the criteria of this filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CompleteWorkflowExecutionDecisionAttributes">
            <summary>
            Provides the details of the <code>CompleteWorkflowExecution</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CompleteWorkflowExecutionDecisionAttributes.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The result of the workflow execution. The form of the result is implementation defined.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CompleteWorkflowExecutionFailedEventAttributes">
            <summary>
            Provides the details of the <code>CompleteWorkflowExecutionFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CompleteWorkflowExecutionFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CompleteWorkflowExecutionFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>CompleteWorkflowExecution</code> decision to complete
            this execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes">
            <summary>
            Provides the details of the <code>ContinueAsNewWorkflowExecution</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tag</code> – A tag used to identify the workflow execution
            </para>
             </li> <li> 
            <para>
             <code>taskList</code> – String constraint. The key is <code>swf:taskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code> – String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes.ChildPolicy">
            <summary>
            Gets and sets the property ChildPolicy. 
            <para>
            If set, specifies the policy to use for the child workflow executions of the new execution
            if it is terminated by calling the <a>TerminateWorkflowExecution</a> action explicitly
            or due to an expired timeout. This policy overrides the default child policy specified
            when registering the workflow type using <a>RegisterWorkflowType</a>.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul> <note> 
            <para>
            A child policy for this workflow execution must be specified either as a default for
            the workflow type or through this parameter. If neither this parameter is set nor
            a default child policy was specified at registration time then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes.ExecutionStartToCloseTimeout">
            <summary>
            Gets and sets the property ExecutionStartToCloseTimeout. 
            <para>
            If set, specifies the total duration for this workflow execution. This overrides the
            <code>defaultExecutionStartToCloseTimeout</code> specified when registering the workflow
            type.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
             <note> 
            <para>
            An execution start-to-close timeout for this workflow execution must be specified
            either as a default for the workflow type or through this field. If neither this field
            is set nor a default execution start-to-close timeout was specified at registration
            time then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The input provided to the new workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes.LambdaRole">
            <summary>
            Gets and sets the property LambdaRole. 
            <para>
            The IAM role to attach to the new (continued) execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes.TagList">
            <summary>
            Gets and sets the property TagList. 
            <para>
            The list of tags to associate with the new workflow execution. A maximum of 5 tags
            can be specified. You can list workflow executions with a specific tag by calling
            <a>ListOpenWorkflowExecutions</a> or <a>ListClosedWorkflowExecutions</a> and specifying
            a <a>TagFilter</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The task list to use for the decisions of the new (continued) workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes.TaskPriority">
            <summary>
            Gets and sets the property TaskPriority. 
            <para>
             The task priority that, if set, specifies the priority for the decision tasks for
            this workflow execution. This overrides the defaultTaskPriority specified when registering
            the workflow type. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code>
            (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate
            higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes.TaskStartToCloseTimeout">
            <summary>
            Gets and sets the property TaskStartToCloseTimeout. 
            <para>
            Specifies the maximum duration of decision tasks for the new workflow execution. This
            parameter overrides the <code>defaultTaskStartToCloseTimout</code> specified when
            registering the workflow type using <a>RegisterWorkflowType</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
             <note> 
            <para>
            A task start-to-close timeout for the new workflow execution must be specified either
            as a default for the workflow type or through this parameter. If neither this parameter
            is set nor a default task start-to-close timeout was specified at registration time
            then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes.WorkflowTypeVersion">
            <summary>
            Gets and sets the property WorkflowTypeVersion. 
            <para>
            The version of the workflow to start.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionFailedEventAttributes">
            <summary>
            Provides the details of the <code>ContinueAsNewWorkflowExecutionFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>ContinueAsNewWorkflowExecution</code> decision that
            started this execution. This information can be useful for diagnosing problems by
            tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest">
            <summary>
            Container for the parameters to the CountClosedWorkflowExecutions operation.
            Returns the number of closed workflow executions within the given domain that meet
            the specified filtering criteria.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest.CloseStatusFilter">
            <summary>
            Gets and sets the property CloseStatusFilter. 
            <para>
            If specified, only workflow executions that match this close status are counted. This
            filter has an affect only if <code>executionStatus</code> is specified as <code>CLOSED</code>.
            </para>
             <note> 
            <para>
             <code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code>
            and <code>tagFilter</code> are mutually exclusive. You can specify at most one of
            these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest.CloseTimeFilter">
            <summary>
            Gets and sets the property CloseTimeFilter. 
            <para>
            If specified, only workflow executions that meet the close time criteria of the filter
            are counted.
            </para>
             <note> 
            <para>
             <code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive.
            You must specify one of these in a request but not both.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain containing the workflow executions to count.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest.ExecutionFilter">
            <summary>
            Gets and sets the property ExecutionFilter. 
            <para>
            If specified, only workflow executions matching the <code>WorkflowId</code> in the
            filter are counted.
            </para>
             <note> 
            <para>
             <code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code>
            and <code>tagFilter</code> are mutually exclusive. You can specify at most one of
            these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest.StartTimeFilter">
            <summary>
            Gets and sets the property StartTimeFilter. 
            <para>
            If specified, only workflow executions that meet the start time criteria of the filter
            are counted.
            </para>
             <note> 
            <para>
             <code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive.
            You must specify one of these in a request but not both.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest.TagFilter">
            <summary>
            Gets and sets the property TagFilter. 
            <para>
            If specified, only executions that have a tag that matches the filter are counted.
            </para>
             <note> 
            <para>
             <code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code>
            and <code>tagFilter</code> are mutually exclusive. You can specify at most one of
            these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest.TypeFilter">
            <summary>
            Gets and sets the property TypeFilter. 
            <para>
            If specified, indicates the type of the workflow executions to be counted.
            </para>
             <note> 
            <para>
             <code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code>
            and <code>tagFilter</code> are mutually exclusive. You can specify at most one of
            these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsResponse">
            <summary>
            Contains the response data from the CountClosedWorkflowExecutions operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsResponse.WorkflowExecutionCount">
            <summary>
            Gets and sets the WorkflowExecutionCount member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest">
            <summary>
            Container for the parameters to the CountOpenWorkflowExecutions operation.
            Returns the number of open workflow executions within the given domain that meet the
            specified filtering criteria.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain containing the workflow executions to count.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest.ExecutionFilter">
            <summary>
            Gets and sets the property ExecutionFilter. 
            <para>
            If specified, only workflow executions matching the <code>WorkflowId</code> in the
            filter are counted.
            </para>
             <note> 
            <para>
             <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>
            are mutually exclusive. You can specify at most one of these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest.StartTimeFilter">
            <summary>
            Gets and sets the property StartTimeFilter. 
            <para>
            Specifies the start time criteria that workflow executions must meet in order to be
            counted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest.TagFilter">
            <summary>
            Gets and sets the property TagFilter. 
            <para>
            If specified, only executions that have a tag that matches the filter are counted.
            </para>
             <note> 
            <para>
             <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>
            are mutually exclusive. You can specify at most one of these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest.TypeFilter">
            <summary>
            Gets and sets the property TypeFilter. 
            <para>
            Specifies the type of the workflow executions to be counted.
            </para>
             <note> 
            <para>
             <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>
            are mutually exclusive. You can specify at most one of these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsResponse">
            <summary>
            Contains the response data from the CountOpenWorkflowExecutions operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsResponse.WorkflowExecutionCount">
            <summary>
            Gets and sets the WorkflowExecutionCount member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CountPendingActivityTasksRequest">
            <summary>
            Container for the parameters to the CountPendingActivityTasks operation.
            Returns the estimated number of activity tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no activity task was ever scheduled in then <code>0</code> is returned.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountPendingActivityTasksRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain that contains the task list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountPendingActivityTasksRequest.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The name of the task list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CountPendingActivityTasksResponse">
            <summary>
            Contains the response data from the CountPendingActivityTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountPendingActivityTasksResponse.PendingTaskCount">
            <summary>
            Gets and sets the PendingTaskCount member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksRequest">
            <summary>
            Container for the parameters to the CountPendingDecisionTasks operation.
            Returns the estimated number of decision tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no decision task was ever scheduled in then <code>0</code> is returned.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain that contains the task list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksRequest.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The name of the task list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksResponse">
            <summary>
            Contains the response data from the CountPendingDecisionTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksResponse.PendingTaskCount">
            <summary>
            Gets and sets the PendingTaskCount member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Decision">
            <summary>
            Specifies a decision made by the decider. A decision can be one of these types:
            
             <ul> <li> 
            <para>
             <code>CancelTimer</code> – Cancels a previously started timer and records a <code>TimerCanceled</code>
            event in the history.
            </para>
             </li> <li> 
            <para>
             <code>CancelWorkflowExecution</code> – Closes the workflow execution and records
            a <code>WorkflowExecutionCanceled</code> event in the history.
            </para>
             </li> <li> 
            <para>
             <code>CompleteWorkflowExecution</code> – Closes the workflow execution and records
            a <code>WorkflowExecutionCompleted</code> event in the history .
            </para>
             </li> <li> 
            <para>
             <code>ContinueAsNewWorkflowExecution</code> – Closes the workflow execution and starts
            a new workflow execution of the same type using the same workflow ID and a unique
            run Id. A <code>WorkflowExecutionContinuedAsNew</code> event is recorded in the history.
            </para>
             </li> <li> 
            <para>
             <code>FailWorkflowExecution</code> – Closes the workflow execution and records a
            <code>WorkflowExecutionFailed</code> event in the history.
            </para>
             </li> <li> 
            <para>
             <code>RecordMarker</code> – Records a <code>MarkerRecorded</code> event in the history.
            Markers can be used for adding custom information in the history for instance to let
            deciders know that they don't need to look at the history beyond the marker event.
            </para>
             </li> <li> 
            <para>
             <code>RequestCancelActivityTask</code> – Attempts to cancel a previously scheduled
            activity task. If the activity task was scheduled but has not been assigned to a worker,
            then it is canceled. If the activity task was already assigned to a worker, then the
            worker is informed that cancellation has been requested in the response to <a>RecordActivityTaskHeartbeat</a>.
            </para>
             </li> <li> 
            <para>
             <code>RequestCancelExternalWorkflowExecution</code> – Requests that a request be
            made to cancel the specified external workflow execution and records a <code>RequestCancelExternalWorkflowExecutionInitiated</code>
            event in the history.
            </para>
             </li> <li> 
            <para>
             <code>ScheduleActivityTask</code> – Schedules an activity task.
            </para>
             </li> <li> 
            <para>
             <code>SignalExternalWorkflowExecution</code> – Requests a signal to be delivered
            to the specified external workflow execution and records a <code>SignalExternalWorkflowExecutionInitiated</code>
            event in the history.
            </para>
             </li> <li> 
            <para>
             <code>StartChildWorkflowExecution</code> – Requests that a child workflow execution
            be started and records a <code>StartChildWorkflowExecutionInitiated</code> event in
            the history. The child workflow execution is a separate workflow execution with its
            own history.
            </para>
             </li> <li> 
            <para>
             <code>StartTimer</code> – Starts a timer for this workflow execution and records
            a <code>TimerStarted</code> event in the history. This timer fires after the specified
            delay and record a <code>TimerFired</code> event.
            </para>
             </li> </ul> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            If you grant permission to use <code>RespondDecisionTaskCompleted</code>, you can
            use IAM policies to express permissions for the list of decisions returned by this
            action as if they were members of the API. Treating decisions as a pseudo API maintains
            a uniform conceptual model and helps keep policies readable. For details and example
            IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             
            <para>
             <b>Decision Failure</b> 
            </para>
             
            <para>
            Decisions can fail for several reasons
            </para>
             <ul> <li> 
            <para>
            The ordering of decisions should follow a logical flow. Some decisions might not make
            sense in the current context of the workflow execution and therefore fails.
            </para>
             </li> <li> 
            <para>
            A limit on your account was reached.
            </para>
             </li> <li> 
            <para>
            The decision lacks sufficient permissions.
            </para>
             </li> </ul> 
            <para>
            One of the following events might be added to the history to indicate an error. The
            event attribute's <code>cause</code> parameter indicates the cause. If <code>cause</code>
            is set to <code>OPERATION_NOT_PERMITTED</code>, the decision failed because it lacked
            sufficient permissions. For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             <ul> <li> 
            <para>
             <code>ScheduleActivityTaskFailed</code> – A <code>ScheduleActivityTask</code> decision
            failed. This could happen if the activity type specified in the decision isn't registered,
            is in a deprecated state, or the decision isn't properly configured.
            </para>
             </li> <li> 
            <para>
             <code>RequestCancelActivityTaskFailed</code> – A <code>RequestCancelActivityTask</code>
            decision failed. This could happen if there is no open activity task with the specified
            activityId.
            </para>
             </li> <li> 
            <para>
             <code>StartTimerFailed</code> – A <code>StartTimer</code> decision failed. This could
            happen if there is another open timer with the same timerId.
            </para>
             </li> <li> 
            <para>
             <code>CancelTimerFailed</code> – A <code>CancelTimer</code> decision failed. This
            could happen if there is no open timer with the specified timerId.
            </para>
             </li> <li> 
            <para>
             <code>StartChildWorkflowExecutionFailed</code> – A <code>StartChildWorkflowExecution</code>
            decision failed. This could happen if the workflow type specified isn't registered,
            is deprecated, or the decision isn't properly configured.
            </para>
             </li> <li> 
            <para>
             <code>SignalExternalWorkflowExecutionFailed</code> – A <code>SignalExternalWorkflowExecution</code>
            decision failed. This could happen if the <code>workflowID</code> specified in the
            decision was incorrect.
            </para>
             </li> <li> 
            <para>
             <code>RequestCancelExternalWorkflowExecutionFailed</code> – A <code>RequestCancelExternalWorkflowExecution</code>
            decision failed. This could happen if the <code>workflowID</code> specified in the
            decision was incorrect.
            </para>
             </li> <li> 
            <para>
             <code>CancelWorkflowExecutionFailed</code> – A <code>CancelWorkflowExecution</code>
            decision failed. This could happen if there is an unhandled decision task pending
            in the workflow execution.
            </para>
             </li> <li> 
            <para>
             <code>CompleteWorkflowExecutionFailed</code> – A <code>CompleteWorkflowExecution</code>
            decision failed. This could happen if there is an unhandled decision task pending
            in the workflow execution.
            </para>
             </li> <li> 
            <para>
             <code>ContinueAsNewWorkflowExecutionFailed</code> – A <code>ContinueAsNewWorkflowExecution</code>
            decision failed. This could happen if there is an unhandled decision task pending
            in the workflow execution or the ContinueAsNewWorkflowExecution decision was not configured
            correctly.
            </para>
             </li> <li> 
            <para>
             <code>FailWorkflowExecutionFailed</code> – A <code>FailWorkflowExecution</code> decision
            failed. This could happen if there is an unhandled decision task pending in the workflow
            execution.
            </para>
             </li> </ul> 
            <para>
            The preceding error events might occur due to an error in the decider logic, which
            might put the workflow execution in an unstable state The cause field in the event
            structure for the error event indicates the cause of the error.
            </para>
             <note> 
            <para>
            A workflow execution may be closed by the decider by returning one of the following
            decisions when completing a decision task: <code>CompleteWorkflowExecution</code>,
            <code>FailWorkflowExecution</code>, <code>CancelWorkflowExecution</code> and <code>ContinueAsNewWorkflowExecution</code>.
            An <code>UnhandledDecision</code> fault is returned if a workflow closing decision
            is specified and a signal or activity event had been added to the history while the
            decision task was being performed by the decider. Unlike the above situations which
            are logic issues, this fault is always possible because of race conditions in a distributed
            system. The right action here is to call <a>RespondDecisionTaskCompleted</a> without
            any decisions. This would result in another decision task with these new events included
            in the history. The decider should handle the new events and may decide to close the
            workflow execution.
            </para>
             </note> 
            <para>
             <b>How to Code a Decision</b> 
            </para>
             
            <para>
            You code a decision by first setting the decision type field to one of the above decision
            values, and then set the corresponding attributes field shown below:
            </para>
             <ul> <li> 
            <para>
             <code> <a>ScheduleActivityTaskDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>RequestCancelActivityTaskDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>CompleteWorkflowExecutionDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>FailWorkflowExecutionDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>CancelWorkflowExecutionDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>ContinueAsNewWorkflowExecutionDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>RecordMarkerDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>StartTimerDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>CancelTimerDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>SignalExternalWorkflowExecutionDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>RequestCancelExternalWorkflowExecutionDecisionAttributes</a> </code> 
            </para>
             </li> <li> 
            <para>
             <code> <a>StartChildWorkflowExecutionDecisionAttributes</a> </code> 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.CancelTimerDecisionAttributes">
            <summary>
            Gets and sets the property CancelTimerDecisionAttributes. 
            <para>
            Provides the details of the <code>CancelTimer</code> decision. It isn't set for other
            decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.CancelWorkflowExecutionDecisionAttributes">
            <summary>
            Gets and sets the property CancelWorkflowExecutionDecisionAttributes. 
            <para>
            Provides the details of the <code>CancelWorkflowExecution</code> decision. It isn't
            set for other decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.CompleteWorkflowExecutionDecisionAttributes">
            <summary>
            Gets and sets the property CompleteWorkflowExecutionDecisionAttributes. 
            <para>
            Provides the details of the <code>CompleteWorkflowExecution</code> decision. It isn't
            set for other decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.ContinueAsNewWorkflowExecutionDecisionAttributes">
            <summary>
            Gets and sets the property ContinueAsNewWorkflowExecutionDecisionAttributes. 
            <para>
            Provides the details of the <code>ContinueAsNewWorkflowExecution</code> decision.
            It isn't set for other decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.DecisionType">
            <summary>
            Gets and sets the property DecisionType. 
            <para>
            Specifies the type of the decision.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.FailWorkflowExecutionDecisionAttributes">
            <summary>
            Gets and sets the property FailWorkflowExecutionDecisionAttributes. 
            <para>
            Provides the details of the <code>FailWorkflowExecution</code> decision. It isn't
            set for other decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.RecordMarkerDecisionAttributes">
            <summary>
            Gets and sets the property RecordMarkerDecisionAttributes. 
            <para>
            Provides the details of the <code>RecordMarker</code> decision. It isn't set for other
            decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.RequestCancelActivityTaskDecisionAttributes">
            <summary>
            Gets and sets the property RequestCancelActivityTaskDecisionAttributes. 
            <para>
            Provides the details of the <code>RequestCancelActivityTask</code> decision. It isn't
            set for other decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.RequestCancelExternalWorkflowExecutionDecisionAttributes">
            <summary>
            Gets and sets the property RequestCancelExternalWorkflowExecutionDecisionAttributes.
            
            <para>
            Provides the details of the <code>RequestCancelExternalWorkflowExecution</code> decision.
            It isn't set for other decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.ScheduleActivityTaskDecisionAttributes">
            <summary>
            Gets and sets the property ScheduleActivityTaskDecisionAttributes. 
            <para>
            Provides the details of the <code>ScheduleActivityTask</code> decision. It isn't set
            for other decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.ScheduleLambdaFunctionDecisionAttributes">
            <summary>
            Gets and sets the property ScheduleLambdaFunctionDecisionAttributes. 
            <para>
            Provides the details of the <code>ScheduleLambdaFunction</code> decision. It isn't
            set for other decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.SignalExternalWorkflowExecutionDecisionAttributes">
            <summary>
            Gets and sets the property SignalExternalWorkflowExecutionDecisionAttributes. 
            <para>
            Provides the details of the <code>SignalExternalWorkflowExecution</code> decision.
            It isn't set for other decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.StartChildWorkflowExecutionDecisionAttributes">
            <summary>
            Gets and sets the property StartChildWorkflowExecutionDecisionAttributes. 
            <para>
            Provides the details of the <code>StartChildWorkflowExecution</code> decision. It
            isn't set for other decision types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Decision.StartTimerDecisionAttributes">
            <summary>
            Gets and sets the property StartTimerDecisionAttributes. 
            <para>
            Provides the details of the <code>StartTimer</code> decision. It isn't set for other
            decision types.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DecisionTask">
            <summary>
            A structure that represents a decision task. Decision tasks are sent to deciders in
            order for them to make decisions.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTask.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            A paginated list of history events of the workflow execution. The decider uses this
            during the processing of the decision task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTask.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If a <code>NextPageToken</code> was returned by a previous call, there are more results
            available. To retrieve the next page of results, make the call again using the returned
            token in <code>nextPageToken</code>. Keep all other arguments unchanged.
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTask.PreviousStartedEventId">
            <summary>
            Gets and sets the property PreviousStartedEventId. 
            <para>
            The ID of the DecisionTaskStarted event of the previous decision task of this workflow
            execution that was processed by the decider. This can be used to determine the events
            in the history new since the last decision task received by the decider.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTask.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>DecisionTaskStarted</code> event recorded in the history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTask.TaskToken">
            <summary>
            Gets and sets the property TaskToken. 
            <para>
            The opaque string used as a handle on the task. This token is used by workers to communicate
            progress and response information back to the system about the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTask.WorkflowExecution">
            <summary>
            Gets and sets the property WorkflowExecution. 
            <para>
            The workflow execution for which this decision task was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTask.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The type of the workflow execution for which this decision task was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DecisionTaskCompletedEventAttributes">
            <summary>
            Provides the details of the <code>DecisionTaskCompleted</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskCompletedEventAttributes.ExecutionContext">
            <summary>
            Gets and sets the property ExecutionContext. 
            <para>
            User defined context for the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskCompletedEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>DecisionTaskScheduled</code> event that was recorded when this
            decision task was scheduled. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskCompletedEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>DecisionTaskStarted</code> event recorded when this decision task
            was started. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DecisionTaskScheduledEventAttributes">
            <summary>
            Provides details about the <code>DecisionTaskScheduled</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskScheduledEventAttributes.StartToCloseTimeout">
            <summary>
            Gets and sets the property StartToCloseTimeout. 
            <para>
            The maximum duration for this decision task. The task is considered timed out if it
            doesn't completed within this duration.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskScheduledEventAttributes.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The name of the task list in which the decision task was scheduled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskScheduledEventAttributes.TaskPriority">
            <summary>
            Gets and sets the property TaskPriority. 
            <para>
             A task priority that, if set, specifies the priority for this decision task. Valid
            values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648)
            to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DecisionTaskStartedEventAttributes">
            <summary>
            Provides the details of the <code>DecisionTaskStarted</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskStartedEventAttributes.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            Identity of the decider making the request. This enables diagnostic tracing when problems
            arise. The form of this identity is user defined.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskStartedEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>DecisionTaskScheduled</code> event that was recorded when this
            decision task was scheduled. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DecisionTaskTimedOutEventAttributes">
            <summary>
            Provides the details of the <code>DecisionTaskTimedOut</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskTimedOutEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>DecisionTaskScheduled</code> event that was recorded when this
            decision task was scheduled. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskTimedOutEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>DecisionTaskStarted</code> event recorded when this decision task
            was started. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DecisionTaskTimedOutEventAttributes.TimeoutType">
            <summary>
            Gets and sets the property TimeoutType. 
            <para>
            The type of timeout that expired before the decision task could be completed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DefaultUndefinedException">
            <summary>
            The <code>StartWorkflowExecution</code> API action was called without the required
            parameters set.
            
             
            <para>
            Some workflow execution parameters, such as the decision <code>taskList</code>, must
            be set to start the execution. However, these parameters might have been set as defaults
            when the workflow type was registered. In this case, you can omit these parameters
            from the <code>StartWorkflowExecution</code> call and Amazon SWF uses the values defined
            in the workflow type.
            </para>
             <note> 
            <para>
            If these parameters aren't set and no default parameters were defined in the workflow
            type, this error is displayed.
            </para>
             </note>
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DefaultUndefinedException.#ctor(System.String)">
            <summary>
            Constructs a new DefaultUndefinedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DefaultUndefinedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DefaultUndefinedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DefaultUndefinedException.#ctor(System.Exception)">
            <summary>
            Construct instance of DefaultUndefinedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DefaultUndefinedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DefaultUndefinedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DefaultUndefinedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DefaultUndefinedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DefaultUndefinedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DefaultUndefinedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DefaultUndefinedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DeprecateActivityTypeRequest">
            <summary>
            Container for the parameters to the DeprecateActivityType operation.
            Deprecates the specified <i>activity type</i>. After an activity type has been deprecated,
            you cannot create new tasks of that activity type. Tasks of this type that were scheduled
            before the type was deprecated continue to run.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DeprecateActivityTypeRequest.ActivityType">
            <summary>
            Gets and sets the property ActivityType. 
            <para>
            The activity type to deprecate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DeprecateActivityTypeRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain in which the activity type is registered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DeprecateActivityTypeResponse">
            <summary>
            This is the response object from the DeprecateActivityType operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DeprecateDomainRequest">
            <summary>
            Container for the parameters to the DeprecateDomain operation.
            Deprecates the specified domain. After a domain has been deprecated it cannot be used
            to create new workflow executions or register new types. However, you can still use
            visibility actions on this domain. Deprecating a domain also deprecates all activity
            and workflow types registered in the domain. Executions that were started before the
            domain was deprecated continues to run.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DeprecateDomainRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the domain to deprecate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DeprecateDomainResponse">
            <summary>
            This is the response object from the DeprecateDomain operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DeprecateWorkflowTypeRequest">
            <summary>
            Container for the parameters to the DeprecateWorkflowType operation.
            Deprecates the specified <i>workflow type</i>. After a workflow type has been deprecated,
            you cannot create new executions of that type. Executions that were started before
            the type was deprecated continues to run. A deprecated workflow type may still be
            used when calling visibility actions.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DeprecateWorkflowTypeRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain in which the workflow type is registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DeprecateWorkflowTypeRequest.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The workflow type to deprecate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DeprecateWorkflowTypeResponse">
            <summary>
            This is the response object from the DeprecateWorkflowType operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DescribeActivityTypeRequest">
            <summary>
            Container for the parameters to the DescribeActivityType operation.
            Returns information about the specified activity type. This includes configuration
            settings provided when the type was registered and other general information about
            the type.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeActivityTypeRequest.ActivityType">
            <summary>
            Gets and sets the property ActivityType. 
            <para>
            The activity type to get information about. Activity types are identified by the <code>name</code>
            and <code>version</code> that were supplied when the activity was registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeActivityTypeRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain in which the activity type is registered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DescribeActivityTypeResponse">
            <summary>
            Contains the response data from the DescribeActivityType operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeActivityTypeResponse.ActivityTypeDetail">
            <summary>
            Gets and sets the ActivityTypeDetail member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DescribeDomainRequest">
            <summary>
            Container for the parameters to the DescribeDomain operation.
            Returns information about the specified domain, including description and status.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeDomainRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the domain to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DescribeDomainResponse">
            <summary>
            Contains the response data from the DescribeDomain operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeDomainResponse.DomainDetail">
            <summary>
            Gets and sets the DomainDetail member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionRequest">
            <summary>
            Container for the parameters to the DescribeWorkflowExecution operation.
            Returns information about the specified workflow execution including its type and
            some statistics.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain containing the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionRequest.Execution">
            <summary>
            Gets and sets the property Execution. 
            <para>
            The workflow execution to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionResponse">
            <summary>
            Contains the response data from the DescribeWorkflowExecution operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionResponse.WorkflowExecutionDetail">
            <summary>
            Gets and sets the WorkflowExecutionDetail member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeRequest">
            <summary>
            Container for the parameters to the DescribeWorkflowType operation.
            Returns information about the specified <i>workflow type</i>. This includes configuration
            settings specified when the type was registered and other information such as creation
            date, current status, etc.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain in which this workflow type is registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeRequest.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The workflow type to describe.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeResponse">
            <summary>
            Contains the response data from the DescribeWorkflowType operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeResponse.WorkflowTypeDetail">
            <summary>
            Gets and sets the WorkflowTypeDetail member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException">
            <summary>
            Returned if the domain already exists. You may get this fault if you are registering
            a domain that is either already registered or deprecated, or if you undeprecate a
            domain that is currently registered.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new DomainAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DomainAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of DomainAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DomainAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DomainAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DomainAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DomainConfiguration">
            <summary>
            Contains the configuration settings of a domain.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DomainConfiguration.WorkflowExecutionRetentionPeriodInDays">
            <summary>
            Gets and sets the property WorkflowExecutionRetentionPeriodInDays. 
            <para>
            The retention period for workflow executions in this domain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DomainDeprecatedException">
            <summary>
            Returned when the specified domain has been deprecated.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainDeprecatedException.#ctor(System.String)">
            <summary>
            Constructs a new DomainDeprecatedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainDeprecatedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DomainDeprecatedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainDeprecatedException.#ctor(System.Exception)">
            <summary>
            Construct instance of DomainDeprecatedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainDeprecatedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DomainDeprecatedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainDeprecatedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DomainDeprecatedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainDeprecatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DomainDeprecatedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.DomainDeprecatedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DomainDetail">
            <summary>
            Contains details of a domain.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DomainDetail.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            The domain configuration. Currently, this includes only the domain's retention period.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DomainDetail.DomainInfo">
            <summary>
            Gets and sets the property DomainInfo. 
            <para>
            The basic information about a domain, such as its name, status, and description.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DomainInfo">
            <summary>
            Contains general information about a domain.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DomainInfo.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of the domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DomainInfo.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the domain provided through <a>RegisterDomain</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DomainInfo.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the domain. This name is unique within the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DomainInfo.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the domain:
            </para>
             <ul> <li> 
            <para>
             <code>REGISTERED</code> – The domain is properly registered and available. You can
            use this domain for registering types and creating new workflow executions. 
            </para>
             </li> <li> 
            <para>
             <code>DEPRECATED</code> – The domain was deprecated using <a>DeprecateDomain</a>,
            but is still in use. You should not create new workflow executions in this domain.
            
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.DomainInfos">
            <summary>
            Contains a paginated collection of DomainInfo structures.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DomainInfos.Infos">
            <summary>
            Gets and sets the property Infos. 
            <para>
            A list of DomainInfo structures.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.DomainInfos.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If a <code>NextPageToken</code> was returned by a previous call, there are more results
            available. To retrieve the next page of results, make the call again using the returned
            token in <code>nextPageToken</code>. Keep all other arguments unchanged.
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ExecutionTimeFilter">
            <summary>
            Used to filter the workflow executions in visibility APIs by various time-based rules.
            Each parameter, if specified, defines a rule that must be satisfied by each returned
            query result. The parameter values are in the <a href="https://en.wikipedia.org/wiki/Unix_time">Unix
            Time format</a>. For example: <code>"oldestDate": 1325376070.</code>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ExecutionTimeFilter.LatestDate">
            <summary>
            Gets and sets the property LatestDate. 
            <para>
            Specifies the latest start or close date and time to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ExecutionTimeFilter.OldestDate">
            <summary>
            Gets and sets the property OldestDate. 
            <para>
            Specifies the oldest start or close date and time to return.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ExternalWorkflowExecutionCancelRequestedEventAttributes">
            <summary>
            Provides the details of the <code>ExternalWorkflowExecutionCancelRequested</code>
            event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ExternalWorkflowExecutionCancelRequestedEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            The ID of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding
            to the <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this
            external workflow execution. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ExternalWorkflowExecutionCancelRequestedEventAttributes.WorkflowExecution">
            <summary>
            Gets and sets the property WorkflowExecution. 
            <para>
            The external workflow execution to which the cancellation request was delivered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ExternalWorkflowExecutionSignaledEventAttributes">
            <summary>
            Provides the details of the <code>ExternalWorkflowExecutionSignaled</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ExternalWorkflowExecutionSignaledEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            The ID of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding
            to the <code>SignalExternalWorkflowExecution</code> decision to request this signal.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ExternalWorkflowExecutionSignaledEventAttributes.WorkflowExecution">
            <summary>
            Gets and sets the property WorkflowExecution. 
            <para>
            The external workflow execution that the signal was delivered to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.FailWorkflowExecutionDecisionAttributes">
            <summary>
            Provides the details of the <code>FailWorkflowExecution</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.FailWorkflowExecutionDecisionAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
             Details of the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.FailWorkflowExecutionDecisionAttributes.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            A descriptive reason for the failure that may help in diagnostics.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.FailWorkflowExecutionFailedEventAttributes">
            <summary>
            Provides the details of the <code>FailWorkflowExecutionFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.FailWorkflowExecutionFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.FailWorkflowExecutionFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>FailWorkflowExecution</code> decision to fail this
            execution. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest">
            <summary>
            Container for the parameters to the GetWorkflowExecutionHistory operation.
            Returns the history of the specified workflow execution. The results may be split
            into multiple pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain containing the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest.Execution">
            <summary>
            Gets and sets the property Execution. 
            <para>
            Specifies the workflow execution for which to return the history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest.MaximumPageSize">
            <summary>
            Gets and sets the property MaximumPageSize. 
            <para>
            The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". 
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest.ReverseOrder">
            <summary>
            Gets and sets the property ReverseOrder. 
            <para>
            When set to <code>true</code>, returns the events in reverse order. By default the
            results are returned in ascending order of the <code>eventTimeStamp</code> of the
            events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryResponse">
            <summary>
            Contains the response data from the GetWorkflowExecutionHistory operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryResponse.History">
            <summary>
            Gets and sets the History member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.History">
            <summary>
            Paginated representation of a workflow history for a workflow execution. This is the
            up to date, complete and authoritative record of the events related to all tasks and
            events in the life of the workflow execution.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.History.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            The list of history events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.History.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If a <code>NextPageToken</code> was returned by a previous call, there are more results
            available. To retrieve the next page of results, make the call again using the returned
            token in <code>nextPageToken</code>. Keep all other arguments unchanged.
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.HistoryEvent">
            <summary>
            Event within a workflow execution. A history event can be one of these types:
            
             <ul> <li> 
            <para>
             <code>ActivityTaskCancelRequested</code> – A <code>RequestCancelActivityTask</code>
            decision was received by the system.
            </para>
             </li> <li> 
            <para>
             <code>ActivityTaskCanceled</code> – The activity task was successfully canceled.
            </para>
             </li> <li> 
            <para>
             <code>ActivityTaskCompleted</code> – An activity worker successfully completed an
            activity task by calling <a>RespondActivityTaskCompleted</a>.
            </para>
             </li> <li> 
            <para>
             <code>ActivityTaskFailed</code> – An activity worker failed an activity task by calling
            <a>RespondActivityTaskFailed</a>.
            </para>
             </li> <li> 
            <para>
             <code>ActivityTaskScheduled</code> – An activity task was scheduled for execution.
            </para>
             </li> <li> 
            <para>
             <code>ActivityTaskStarted</code> – The scheduled activity task was dispatched to
            a worker.
            </para>
             </li> <li> 
            <para>
             <code>ActivityTaskTimedOut</code> – The activity task timed out.
            </para>
             </li> <li> 
            <para>
             <code>CancelTimerFailed</code> – Failed to process CancelTimer decision. This happens
            when the decision isn't configured properly, for example no timer exists with the
            specified timer Id.
            </para>
             </li> <li> 
            <para>
             <code>CancelWorkflowExecutionFailed</code> – A request to cancel a workflow execution
            failed.
            </para>
             </li> <li> 
            <para>
             <code>ChildWorkflowExecutionCanceled</code> – A child workflow execution, started
            by this workflow execution, was canceled and closed.
            </para>
             </li> <li> 
            <para>
             <code>ChildWorkflowExecutionCompleted</code> – A child workflow execution, started
            by this workflow execution, completed successfully and was closed.
            </para>
             </li> <li> 
            <para>
             <code>ChildWorkflowExecutionFailed</code> – A child workflow execution, started by
            this workflow execution, failed to complete successfully and was closed.
            </para>
             </li> <li> 
            <para>
             <code>ChildWorkflowExecutionStarted</code> – A child workflow execution was successfully
            started.
            </para>
             </li> <li> 
            <para>
             <code>ChildWorkflowExecutionTerminated</code> – A child workflow execution, started
            by this workflow execution, was terminated.
            </para>
             </li> <li> 
            <para>
             <code>ChildWorkflowExecutionTimedOut</code> – A child workflow execution, started
            by this workflow execution, timed out and was closed.
            </para>
             </li> <li> 
            <para>
             <code>CompleteWorkflowExecutionFailed</code> – The workflow execution failed to complete.
            </para>
             </li> <li> 
            <para>
             <code>ContinueAsNewWorkflowExecutionFailed</code> – The workflow execution failed
            to complete after being continued as a new workflow execution.
            </para>
             </li> <li> 
            <para>
             <code>DecisionTaskCompleted</code> – The decider successfully completed a decision
            task by calling <a>RespondDecisionTaskCompleted</a>.
            </para>
             </li> <li> 
            <para>
             <code>DecisionTaskScheduled</code> – A decision task was scheduled for the workflow
            execution.
            </para>
             </li> <li> 
            <para>
             <code>DecisionTaskStarted</code> – The decision task was dispatched to a decider.
            </para>
             </li> <li> 
            <para>
             <code>DecisionTaskTimedOut</code> – The decision task timed out.
            </para>
             </li> <li> 
            <para>
             <code>ExternalWorkflowExecutionCancelRequested</code> – Request to cancel an external
            workflow execution was successfully delivered to the target execution.
            </para>
             </li> <li> 
            <para>
             <code>ExternalWorkflowExecutionSignaled</code> – A signal, requested by this workflow
            execution, was successfully delivered to the target external workflow execution.
            </para>
             </li> <li> 
            <para>
             <code>FailWorkflowExecutionFailed</code> – A request to mark a workflow execution
            as failed, itself failed.
            </para>
             </li> <li> 
            <para>
             <code>MarkerRecorded</code> – A marker was recorded in the workflow history as the
            result of a <code>RecordMarker</code> decision.
            </para>
             </li> <li> 
            <para>
             <code>RecordMarkerFailed</code> – A <code>RecordMarker</code> decision was returned
            as failed.
            </para>
             </li> <li> 
            <para>
             <code>RequestCancelActivityTaskFailed</code> – Failed to process RequestCancelActivityTask
            decision. This happens when the decision isn't configured properly.
            </para>
             </li> <li> 
            <para>
             <code>RequestCancelExternalWorkflowExecutionFailed</code> – Request to cancel an
            external workflow execution failed.
            </para>
             </li> <li> 
            <para>
             <code>RequestCancelExternalWorkflowExecutionInitiated</code> – A request was made
            to request the cancellation of an external workflow execution.
            </para>
             </li> <li> 
            <para>
             <code>ScheduleActivityTaskFailed</code> – Failed to process ScheduleActivityTask
            decision. This happens when the decision isn't configured properly, for example the
            activity type specified isn't registered.
            </para>
             </li> <li> 
            <para>
             <code>SignalExternalWorkflowExecutionFailed</code> – The request to signal an external
            workflow execution failed.
            </para>
             </li> <li> 
            <para>
             <code>SignalExternalWorkflowExecutionInitiated</code> – A request to signal an external
            workflow was made.
            </para>
             </li> <li> 
            <para>
             <code>StartActivityTaskFailed</code> – A scheduled activity task failed to start.
            </para>
             </li> <li> 
            <para>
             <code>StartChildWorkflowExecutionFailed</code> – Failed to process StartChildWorkflowExecution
            decision. This happens when the decision isn't configured properly, for example the
            workflow type specified isn't registered.
            </para>
             </li> <li> 
            <para>
             <code>StartChildWorkflowExecutionInitiated</code> – A request was made to start a
            child workflow execution.
            </para>
             </li> <li> 
            <para>
             <code>StartTimerFailed</code> – Failed to process StartTimer decision. This happens
            when the decision isn't configured properly, for example a timer already exists with
            the specified timer Id.
            </para>
             </li> <li> 
            <para>
             <code>TimerCanceled</code> – A timer, previously started for this workflow execution,
            was successfully canceled.
            </para>
             </li> <li> 
            <para>
             <code>TimerFired</code> – A timer, previously started for this workflow execution,
            fired.
            </para>
             </li> <li> 
            <para>
             <code>TimerStarted</code> – A timer was started for the workflow execution due to
            a <code>StartTimer</code> decision.
            </para>
             </li> <li> 
            <para>
             <code>WorkflowExecutionCancelRequested</code> – A request to cancel this workflow
            execution was made.
            </para>
             </li> <li> 
            <para>
             <code>WorkflowExecutionCanceled</code> – The workflow execution was successfully
            canceled and closed.
            </para>
             </li> <li> 
            <para>
             <code>WorkflowExecutionCompleted</code> – The workflow execution was closed due to
            successful completion.
            </para>
             </li> <li> 
            <para>
             <code>WorkflowExecutionContinuedAsNew</code> – The workflow execution was closed
            and a new execution of the same type was created with the same workflowId.
            </para>
             </li> <li> 
            <para>
             <code>WorkflowExecutionFailed</code> – The workflow execution closed due to a failure.
            </para>
             </li> <li> 
            <para>
             <code>WorkflowExecutionSignaled</code> – An external signal was received for the
            workflow execution.
            </para>
             </li> <li> 
            <para>
             <code>WorkflowExecutionStarted</code> – The workflow execution was started.
            </para>
             </li> <li> 
            <para>
             <code>WorkflowExecutionTerminated</code> – The workflow execution was terminated.
            </para>
             </li> <li> 
            <para>
             <code>WorkflowExecutionTimedOut</code> – The workflow execution was closed because
            a time out was exceeded.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ActivityTaskCanceledEventAttributes">
            <summary>
            Gets and sets the property ActivityTaskCanceledEventAttributes. 
            <para>
            If the event is of type <code>ActivityTaskCanceled</code> then this member is set
            and provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ActivityTaskCancelRequestedEventAttributes">
            <summary>
            Gets and sets the property ActivityTaskCancelRequestedEventAttributes. 
            <para>
            If the event is of type <code>ActivityTaskcancelRequested</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ActivityTaskCompletedEventAttributes">
            <summary>
            Gets and sets the property ActivityTaskCompletedEventAttributes. 
            <para>
            If the event is of type <code>ActivityTaskCompleted</code> then this member is set
            and provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ActivityTaskFailedEventAttributes">
            <summary>
            Gets and sets the property ActivityTaskFailedEventAttributes. 
            <para>
            If the event is of type <code>ActivityTaskFailed</code> then this member is set and
            provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ActivityTaskScheduledEventAttributes">
            <summary>
            Gets and sets the property ActivityTaskScheduledEventAttributes. 
            <para>
            If the event is of type <code>ActivityTaskScheduled</code> then this member is set
            and provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ActivityTaskStartedEventAttributes">
            <summary>
            Gets and sets the property ActivityTaskStartedEventAttributes. 
            <para>
            If the event is of type <code>ActivityTaskStarted</code> then this member is set and
            provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ActivityTaskTimedOutEventAttributes">
            <summary>
            Gets and sets the property ActivityTaskTimedOutEventAttributes. 
            <para>
            If the event is of type <code>ActivityTaskTimedOut</code> then this member is set
            and provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.CancelTimerFailedEventAttributes">
            <summary>
            Gets and sets the property CancelTimerFailedEventAttributes. 
            <para>
            If the event is of type <code>CancelTimerFailed</code> then this member is set and
            provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.CancelWorkflowExecutionFailedEventAttributes">
            <summary>
            Gets and sets the property CancelWorkflowExecutionFailedEventAttributes. 
            <para>
            If the event is of type <code>CancelWorkflowExecutionFailed</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ChildWorkflowExecutionCanceledEventAttributes">
            <summary>
            Gets and sets the property ChildWorkflowExecutionCanceledEventAttributes. 
            <para>
            If the event is of type <code>ChildWorkflowExecutionCanceled</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ChildWorkflowExecutionCompletedEventAttributes">
            <summary>
            Gets and sets the property ChildWorkflowExecutionCompletedEventAttributes. 
            <para>
            If the event is of type <code>ChildWorkflowExecutionCompleted</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ChildWorkflowExecutionFailedEventAttributes">
            <summary>
            Gets and sets the property ChildWorkflowExecutionFailedEventAttributes. 
            <para>
            If the event is of type <code>ChildWorkflowExecutionFailed</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ChildWorkflowExecutionStartedEventAttributes">
            <summary>
            Gets and sets the property ChildWorkflowExecutionStartedEventAttributes. 
            <para>
            If the event is of type <code>ChildWorkflowExecutionStarted</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ChildWorkflowExecutionTerminatedEventAttributes">
            <summary>
            Gets and sets the property ChildWorkflowExecutionTerminatedEventAttributes. 
            <para>
            If the event is of type <code>ChildWorkflowExecutionTerminated</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ChildWorkflowExecutionTimedOutEventAttributes">
            <summary>
            Gets and sets the property ChildWorkflowExecutionTimedOutEventAttributes. 
            <para>
            If the event is of type <code>ChildWorkflowExecutionTimedOut</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.CompleteWorkflowExecutionFailedEventAttributes">
            <summary>
            Gets and sets the property CompleteWorkflowExecutionFailedEventAttributes. 
            <para>
            If the event is of type <code>CompleteWorkflowExecutionFailed</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ContinueAsNewWorkflowExecutionFailedEventAttributes">
            <summary>
            Gets and sets the property ContinueAsNewWorkflowExecutionFailedEventAttributes. 
            <para>
            If the event is of type <code>ContinueAsNewWorkflowExecutionFailed</code> then this
            member is set and provides detailed information about the event. It isn't set for
            other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.DecisionTaskCompletedEventAttributes">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventAttributes. 
            <para>
            If the event is of type <code>DecisionTaskCompleted</code> then this member is set
            and provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.DecisionTaskScheduledEventAttributes">
            <summary>
            Gets and sets the property DecisionTaskScheduledEventAttributes. 
            <para>
            If the event is of type <code>DecisionTaskScheduled</code> then this member is set
            and provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.DecisionTaskStartedEventAttributes">
            <summary>
            Gets and sets the property DecisionTaskStartedEventAttributes. 
            <para>
            If the event is of type <code>DecisionTaskStarted</code> then this member is set and
            provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.DecisionTaskTimedOutEventAttributes">
            <summary>
            Gets and sets the property DecisionTaskTimedOutEventAttributes. 
            <para>
            If the event is of type <code>DecisionTaskTimedOut</code> then this member is set
            and provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The system generated ID of the event. This ID uniquely identifies the event with in
            the workflow execution history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.EventTimestamp">
            <summary>
            Gets and sets the property EventTimestamp. 
            <para>
            The date and time when the event occurred.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.EventType">
            <summary>
            Gets and sets the property EventType. 
            <para>
            The type of the history event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ExternalWorkflowExecutionCancelRequestedEventAttributes">
            <summary>
            Gets and sets the property ExternalWorkflowExecutionCancelRequestedEventAttributes.
            
            <para>
            If the event is of type <code>ExternalWorkflowExecutionCancelRequested</code> then
            this member is set and provides detailed information about the event. It isn't set
            for other event types. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ExternalWorkflowExecutionSignaledEventAttributes">
            <summary>
            Gets and sets the property ExternalWorkflowExecutionSignaledEventAttributes. 
            <para>
            If the event is of type <code>ExternalWorkflowExecutionSignaled</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.FailWorkflowExecutionFailedEventAttributes">
            <summary>
            Gets and sets the property FailWorkflowExecutionFailedEventAttributes. 
            <para>
            If the event is of type <code>FailWorkflowExecutionFailed</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.LambdaFunctionCompletedEventAttributes">
            <summary>
            Gets and sets the property LambdaFunctionCompletedEventAttributes. 
            <para>
            Provides the details of the <code>LambdaFunctionCompleted</code> event. It isn't set
            for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.LambdaFunctionFailedEventAttributes">
            <summary>
            Gets and sets the property LambdaFunctionFailedEventAttributes. 
            <para>
            Provides the details of the <code>LambdaFunctionFailed</code> event. It isn't set
            for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.LambdaFunctionScheduledEventAttributes">
            <summary>
            Gets and sets the property LambdaFunctionScheduledEventAttributes. 
            <para>
            Provides the details of the <code>LambdaFunctionScheduled</code> event. It isn't set
            for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.LambdaFunctionStartedEventAttributes">
            <summary>
            Gets and sets the property LambdaFunctionStartedEventAttributes. 
            <para>
            Provides the details of the <code>LambdaFunctionStarted</code> event. It isn't set
            for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.LambdaFunctionTimedOutEventAttributes">
            <summary>
            Gets and sets the property LambdaFunctionTimedOutEventAttributes. 
            <para>
            Provides the details of the <code>LambdaFunctionTimedOut</code> event. It isn't set
            for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.MarkerRecordedEventAttributes">
            <summary>
            Gets and sets the property MarkerRecordedEventAttributes. 
            <para>
            If the event is of type <code>MarkerRecorded</code> then this member is set and provides
            detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.RecordMarkerFailedEventAttributes">
            <summary>
            Gets and sets the property RecordMarkerFailedEventAttributes. 
            <para>
            If the event is of type <code>DecisionTaskFailed</code> then this member is set and
            provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.RequestCancelActivityTaskFailedEventAttributes">
            <summary>
            Gets and sets the property RequestCancelActivityTaskFailedEventAttributes. 
            <para>
            If the event is of type <code>RequestCancelActivityTaskFailed</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.RequestCancelExternalWorkflowExecutionFailedEventAttributes">
            <summary>
            Gets and sets the property RequestCancelExternalWorkflowExecutionFailedEventAttributes.
            
            <para>
            If the event is of type <code>RequestCancelExternalWorkflowExecutionFailed</code>
            then this member is set and provides detailed information about the event. It isn't
            set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.RequestCancelExternalWorkflowExecutionInitiatedEventAttributes">
            <summary>
            Gets and sets the property RequestCancelExternalWorkflowExecutionInitiatedEventAttributes.
            
            <para>
            If the event is of type <code>RequestCancelExternalWorkflowExecutionInitiated</code>
            then this member is set and provides detailed information about the event. It isn't
            set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ScheduleActivityTaskFailedEventAttributes">
            <summary>
            Gets and sets the property ScheduleActivityTaskFailedEventAttributes. 
            <para>
            If the event is of type <code>ScheduleActivityTaskFailed</code> then this member is
            set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.ScheduleLambdaFunctionFailedEventAttributes">
            <summary>
            Gets and sets the property ScheduleLambdaFunctionFailedEventAttributes. 
            <para>
            Provides the details of the <code>ScheduleLambdaFunctionFailed</code> event. It isn't
            set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.SignalExternalWorkflowExecutionFailedEventAttributes">
            <summary>
            Gets and sets the property SignalExternalWorkflowExecutionFailedEventAttributes. 
            <para>
            If the event is of type <code>SignalExternalWorkflowExecutionFailed</code> then this
            member is set and provides detailed information about the event. It isn't set for
            other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.SignalExternalWorkflowExecutionInitiatedEventAttributes">
            <summary>
            Gets and sets the property SignalExternalWorkflowExecutionInitiatedEventAttributes.
            
            <para>
            If the event is of type <code>SignalExternalWorkflowExecutionInitiated</code> then
            this member is set and provides detailed information about the event. It isn't set
            for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.StartChildWorkflowExecutionFailedEventAttributes">
            <summary>
            Gets and sets the property StartChildWorkflowExecutionFailedEventAttributes. 
            <para>
            If the event is of type <code>StartChildWorkflowExecutionFailed</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.StartChildWorkflowExecutionInitiatedEventAttributes">
            <summary>
            Gets and sets the property StartChildWorkflowExecutionInitiatedEventAttributes. 
            <para>
            If the event is of type <code>StartChildWorkflowExecutionInitiated</code> then this
            member is set and provides detailed information about the event. It isn't set for
            other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.StartLambdaFunctionFailedEventAttributes">
            <summary>
            Gets and sets the property StartLambdaFunctionFailedEventAttributes. 
            <para>
            Provides the details of the <code>StartLambdaFunctionFailed</code> event. It isn't
            set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.StartTimerFailedEventAttributes">
            <summary>
            Gets and sets the property StartTimerFailedEventAttributes. 
            <para>
            If the event is of type <code>StartTimerFailed</code> then this member is set and
            provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.TimerCanceledEventAttributes">
            <summary>
            Gets and sets the property TimerCanceledEventAttributes. 
            <para>
            If the event is of type <code>TimerCanceled</code> then this member is set and provides
            detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.TimerFiredEventAttributes">
            <summary>
            Gets and sets the property TimerFiredEventAttributes. 
            <para>
            If the event is of type <code>TimerFired</code> then this member is set and provides
            detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.TimerStartedEventAttributes">
            <summary>
            Gets and sets the property TimerStartedEventAttributes. 
            <para>
            If the event is of type <code>TimerStarted</code> then this member is set and provides
            detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.WorkflowExecutionCanceledEventAttributes">
            <summary>
            Gets and sets the property WorkflowExecutionCanceledEventAttributes. 
            <para>
            If the event is of type <code>WorkflowExecutionCanceled</code> then this member is
            set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.WorkflowExecutionCancelRequestedEventAttributes">
            <summary>
            Gets and sets the property WorkflowExecutionCancelRequestedEventAttributes. 
            <para>
            If the event is of type <code>WorkflowExecutionCancelRequested</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.WorkflowExecutionCompletedEventAttributes">
            <summary>
            Gets and sets the property WorkflowExecutionCompletedEventAttributes. 
            <para>
            If the event is of type <code>WorkflowExecutionCompleted</code> then this member is
            set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.WorkflowExecutionContinuedAsNewEventAttributes">
            <summary>
            Gets and sets the property WorkflowExecutionContinuedAsNewEventAttributes. 
            <para>
            If the event is of type <code>WorkflowExecutionContinuedAsNew</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.WorkflowExecutionFailedEventAttributes">
            <summary>
            Gets and sets the property WorkflowExecutionFailedEventAttributes. 
            <para>
            If the event is of type <code>WorkflowExecutionFailed</code> then this member is set
            and provides detailed information about the event. It isn't set for other event types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.WorkflowExecutionSignaledEventAttributes">
            <summary>
            Gets and sets the property WorkflowExecutionSignaledEventAttributes. 
            <para>
            If the event is of type <code>WorkflowExecutionSignaled</code> then this member is
            set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.WorkflowExecutionStartedEventAttributes">
            <summary>
            Gets and sets the property WorkflowExecutionStartedEventAttributes. 
            <para>
            If the event is of type <code>WorkflowExecutionStarted</code> then this member is
            set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.WorkflowExecutionTerminatedEventAttributes">
            <summary>
            Gets and sets the property WorkflowExecutionTerminatedEventAttributes. 
            <para>
            If the event is of type <code>WorkflowExecutionTerminated</code> then this member
            is set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.HistoryEvent.WorkflowExecutionTimedOutEventAttributes">
            <summary>
            Gets and sets the property WorkflowExecutionTimedOutEventAttributes. 
            <para>
            If the event is of type <code>WorkflowExecutionTimedOut</code> then this member is
            set and provides detailed information about the event. It isn't set for other event
            types.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCanceledEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTaskCanceledEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCanceledEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTaskCanceledEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCanceledEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCanceledEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCancelRequestedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTaskCancelRequestedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCancelRequestedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTaskCancelRequestedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCancelRequestedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCancelRequestedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCompletedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTaskCompletedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCompletedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTaskCompletedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCompletedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskCompletedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTaskFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTaskFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskScheduledEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTaskScheduledEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskScheduledEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTaskScheduledEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskScheduledEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskScheduledEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskStartedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTaskStartedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskStartedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTaskStartedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskStartedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskStartedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskStatusUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTaskStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTaskStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskTimedOutEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTaskTimedOutEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskTimedOutEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTaskTimedOutEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskTimedOutEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskTimedOutEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTask Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTask,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTypeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTypeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTypeDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTypeDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeInfosUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTypeInfos Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeInfosUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTypeInfos,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeInfosUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeInfosUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityTypeInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityTypeInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeMarshaller">
            <summary>
            ActivityType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ActivityType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeUnmarshaller">
            <summary>
            Response Unmarshaller for ActivityType Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ActivityType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ActivityTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelTimerDecisionAttributesMarshaller">
            <summary>
            CancelTimerDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelTimerDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.CancelTimerDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelTimerDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelTimerFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for CancelTimerFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelTimerFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#CancelTimerFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelTimerFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelTimerFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelWorkflowExecutionDecisionAttributesMarshaller">
            <summary>
            CancelWorkflowExecutionDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelWorkflowExecutionDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.CancelWorkflowExecutionDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelWorkflowExecutionDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelWorkflowExecutionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for CancelWorkflowExecutionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelWorkflowExecutionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#CancelWorkflowExecutionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelWorkflowExecutionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CancelWorkflowExecutionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionCanceledEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ChildWorkflowExecutionCanceledEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionCanceledEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ChildWorkflowExecutionCanceledEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionCanceledEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionCanceledEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionCompletedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ChildWorkflowExecutionCompletedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionCompletedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ChildWorkflowExecutionCompletedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionCompletedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionCompletedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ChildWorkflowExecutionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ChildWorkflowExecutionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionStartedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ChildWorkflowExecutionStartedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionStartedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ChildWorkflowExecutionStartedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionStartedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionStartedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionTerminatedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ChildWorkflowExecutionTerminatedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionTerminatedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ChildWorkflowExecutionTerminatedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionTerminatedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionTerminatedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionTimedOutEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ChildWorkflowExecutionTimedOutEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionTimedOutEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ChildWorkflowExecutionTimedOutEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionTimedOutEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ChildWorkflowExecutionTimedOutEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CloseStatusFilterMarshaller">
            <summary>
            CloseStatusFilter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CloseStatusFilterMarshaller.Marshall(Amazon.SimpleWorkflow.Model.CloseStatusFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CloseStatusFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CompleteWorkflowExecutionDecisionAttributesMarshaller">
            <summary>
            CompleteWorkflowExecutionDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CompleteWorkflowExecutionDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.CompleteWorkflowExecutionDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CompleteWorkflowExecutionDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CompleteWorkflowExecutionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for CompleteWorkflowExecutionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CompleteWorkflowExecutionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#CompleteWorkflowExecutionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CompleteWorkflowExecutionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CompleteWorkflowExecutionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ContinueAsNewWorkflowExecutionDecisionAttributesMarshaller">
            <summary>
            ContinueAsNewWorkflowExecutionDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ContinueAsNewWorkflowExecutionDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ContinueAsNewWorkflowExecutionDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ContinueAsNewWorkflowExecutionDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ContinueAsNewWorkflowExecutionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ContinueAsNewWorkflowExecutionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ContinueAsNewWorkflowExecutionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ContinueAsNewWorkflowExecutionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ContinueAsNewWorkflowExecutionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ContinueAsNewWorkflowExecutionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountClosedWorkflowExecutionsRequestMarshaller">
            <summary>
            CountClosedWorkflowExecutions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountClosedWorkflowExecutionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountClosedWorkflowExecutionsRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountClosedWorkflowExecutionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountClosedWorkflowExecutionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CountClosedWorkflowExecutions operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountClosedWorkflowExecutionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountClosedWorkflowExecutionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountClosedWorkflowExecutionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountOpenWorkflowExecutionsRequestMarshaller">
            <summary>
            CountOpenWorkflowExecutions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountOpenWorkflowExecutionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountOpenWorkflowExecutionsRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountOpenWorkflowExecutionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountOpenWorkflowExecutionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CountOpenWorkflowExecutions operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountOpenWorkflowExecutionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountOpenWorkflowExecutionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountOpenWorkflowExecutionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingActivityTasksRequestMarshaller">
            <summary>
            CountPendingActivityTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingActivityTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingActivityTasksRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.CountPendingActivityTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingActivityTasksRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingActivityTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CountPendingActivityTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingActivityTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingActivityTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingActivityTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingDecisionTasksRequestMarshaller">
            <summary>
            CountPendingDecisionTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingDecisionTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingDecisionTasksRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingDecisionTasksRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingDecisionTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CountPendingDecisionTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingDecisionTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingDecisionTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.CountPendingDecisionTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionMarshaller">
            <summary>
            Decision Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionMarshaller.Marshall(Amazon.SimpleWorkflow.Model.Decision,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskCompletedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for DecisionTaskCompletedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskCompletedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#DecisionTaskCompletedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskCompletedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskCompletedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskScheduledEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for DecisionTaskScheduledEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskScheduledEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#DecisionTaskScheduledEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskScheduledEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskScheduledEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskStartedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for DecisionTaskStartedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskStartedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#DecisionTaskStartedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskStartedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskStartedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskTimedOutEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for DecisionTaskTimedOutEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskTimedOutEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#DecisionTaskTimedOutEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskTimedOutEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskTimedOutEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskUnmarshaller">
            <summary>
            Response Unmarshaller for DecisionTask Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#DecisionTask,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DecisionTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DefaultUndefinedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DefaultUndefinedException Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DefaultUndefinedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DefaultUndefinedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DefaultUndefinedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateActivityTypeRequestMarshaller">
            <summary>
            DeprecateActivityType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateActivityTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateActivityTypeRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.DeprecateActivityTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateActivityTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateActivityTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeprecateActivityType operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateActivityTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateActivityTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateActivityTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateDomainRequestMarshaller">
            <summary>
            DeprecateDomain Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateDomainRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateDomainRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.DeprecateDomainRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateDomainRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeprecateDomain operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateDomainResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateDomainResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateDomainResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateWorkflowTypeRequestMarshaller">
            <summary>
            DeprecateWorkflowType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateWorkflowTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateWorkflowTypeRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.DeprecateWorkflowTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateWorkflowTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateWorkflowTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeprecateWorkflowType operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateWorkflowTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateWorkflowTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DeprecateWorkflowTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeActivityTypeRequestMarshaller">
            <summary>
            DescribeActivityType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeActivityTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeActivityTypeRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.DescribeActivityTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeActivityTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeActivityTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeActivityType operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeActivityTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeActivityTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeActivityTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeDomainRequestMarshaller">
            <summary>
            DescribeDomain Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeDomainRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeDomainRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.DescribeDomainRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeDomainRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDomain operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeDomainResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeDomainResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeDomainResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowExecutionRequestMarshaller">
            <summary>
            DescribeWorkflowExecution Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowExecutionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowExecutionRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowExecutionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowExecutionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeWorkflowExecution operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowExecutionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowExecutionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowExecutionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowTypeRequestMarshaller">
            <summary>
            DescribeWorkflowType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowTypeRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeWorkflowType operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DescribeWorkflowTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DomainAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for DomainConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#DomainConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainDeprecatedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for DomainDeprecatedException Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainDeprecatedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainDeprecatedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainDeprecatedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainDetailUnmarshaller">
            <summary>
            Response Unmarshaller for DomainDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#DomainDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainInfosUnmarshaller">
            <summary>
            Response Unmarshaller for DomainInfos Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainInfosUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#DomainInfos,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainInfosUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainInfosUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainInfoUnmarshaller">
            <summary>
            Response Unmarshaller for DomainInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#DomainInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.DomainInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExecutionTimeFilterMarshaller">
            <summary>
            ExecutionTimeFilter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExecutionTimeFilterMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ExecutionTimeFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExecutionTimeFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExternalWorkflowExecutionCancelRequestedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ExternalWorkflowExecutionCancelRequestedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExternalWorkflowExecutionCancelRequestedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ExternalWorkflowExecutionCancelRequestedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExternalWorkflowExecutionCancelRequestedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExternalWorkflowExecutionCancelRequestedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExternalWorkflowExecutionSignaledEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ExternalWorkflowExecutionSignaledEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExternalWorkflowExecutionSignaledEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ExternalWorkflowExecutionSignaledEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExternalWorkflowExecutionSignaledEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ExternalWorkflowExecutionSignaledEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.FailWorkflowExecutionDecisionAttributesMarshaller">
            <summary>
            FailWorkflowExecutionDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.FailWorkflowExecutionDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.FailWorkflowExecutionDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.FailWorkflowExecutionDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.FailWorkflowExecutionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for FailWorkflowExecutionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.FailWorkflowExecutionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#FailWorkflowExecutionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.FailWorkflowExecutionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.FailWorkflowExecutionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.GetWorkflowExecutionHistoryRequestMarshaller">
            <summary>
            GetWorkflowExecutionHistory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.GetWorkflowExecutionHistoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.GetWorkflowExecutionHistoryRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.GetWorkflowExecutionHistoryRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.GetWorkflowExecutionHistoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetWorkflowExecutionHistory operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.GetWorkflowExecutionHistoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.GetWorkflowExecutionHistoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.GetWorkflowExecutionHistoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.HistoryEventUnmarshaller">
            <summary>
            Response Unmarshaller for HistoryEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.HistoryEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#HistoryEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.HistoryEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.HistoryEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.HistoryUnmarshaller">
            <summary>
            Response Unmarshaller for History Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.HistoryUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#History,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.HistoryUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.HistoryUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionCompletedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for LambdaFunctionCompletedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionCompletedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#LambdaFunctionCompletedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionCompletedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionCompletedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for LambdaFunctionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#LambdaFunctionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionScheduledEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for LambdaFunctionScheduledEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionScheduledEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#LambdaFunctionScheduledEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionScheduledEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionScheduledEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionStartedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for LambdaFunctionStartedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionStartedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#LambdaFunctionStartedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionStartedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionStartedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionTimedOutEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for LambdaFunctionTimedOutEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionTimedOutEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#LambdaFunctionTimedOutEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionTimedOutEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LambdaFunctionTimedOutEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for LimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.LimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListActivityTypesRequestMarshaller">
            <summary>
            ListActivityTypes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListActivityTypesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListActivityTypesRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ListActivityTypesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListActivityTypesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListActivityTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListActivityTypes operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListActivityTypesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListActivityTypesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListActivityTypesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListClosedWorkflowExecutionsRequestMarshaller">
            <summary>
            ListClosedWorkflowExecutions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListClosedWorkflowExecutionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListClosedWorkflowExecutionsRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListClosedWorkflowExecutionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListClosedWorkflowExecutionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListClosedWorkflowExecutions operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListClosedWorkflowExecutionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListClosedWorkflowExecutionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListClosedWorkflowExecutionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListDomainsRequestMarshaller">
            <summary>
            ListDomains Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListDomainsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListDomainsRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ListDomainsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListDomainsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListDomainsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDomains operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListDomainsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListDomainsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListDomainsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListOpenWorkflowExecutionsRequestMarshaller">
            <summary>
            ListOpenWorkflowExecutions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListOpenWorkflowExecutionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListOpenWorkflowExecutionsRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListOpenWorkflowExecutionsRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListOpenWorkflowExecutionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListOpenWorkflowExecutions operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListOpenWorkflowExecutionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListOpenWorkflowExecutionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListOpenWorkflowExecutionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller">
            <summary>
            ListTagsForResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ListTagsForResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListTagsForResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsForResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListTagsForResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListWorkflowTypesRequestMarshaller">
            <summary>
            ListWorkflowTypes Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListWorkflowTypesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListWorkflowTypesRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListWorkflowTypesRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListWorkflowTypesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListWorkflowTypes operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListWorkflowTypesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListWorkflowTypesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ListWorkflowTypesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.MarkerRecordedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for MarkerRecordedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.MarkerRecordedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#MarkerRecordedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.MarkerRecordedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.MarkerRecordedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.OperationNotPermittedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for OperationNotPermittedException Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.OperationNotPermittedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.OperationNotPermittedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.OperationNotPermittedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PendingTaskCountUnmarshaller">
            <summary>
            Response Unmarshaller for PendingTaskCount Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PendingTaskCountUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#PendingTaskCount,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PendingTaskCountUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PendingTaskCountUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForActivityTaskRequestMarshaller">
            <summary>
            PollForActivityTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForActivityTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForActivityTaskRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.PollForActivityTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForActivityTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForActivityTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PollForActivityTask operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForActivityTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForActivityTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForActivityTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForDecisionTaskRequestMarshaller">
            <summary>
            PollForDecisionTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForDecisionTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForDecisionTaskRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForDecisionTaskRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForDecisionTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PollForDecisionTask operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForDecisionTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForDecisionTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.PollForDecisionTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordActivityTaskHeartbeatRequestMarshaller">
            <summary>
            RecordActivityTaskHeartbeat Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordActivityTaskHeartbeatRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordActivityTaskHeartbeatRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RecordActivityTaskHeartbeatRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordActivityTaskHeartbeatRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordActivityTaskHeartbeatResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RecordActivityTaskHeartbeat operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordActivityTaskHeartbeatResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordActivityTaskHeartbeatResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordActivityTaskHeartbeatResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordMarkerDecisionAttributesMarshaller">
            <summary>
            RecordMarkerDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordMarkerDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RecordMarkerDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordMarkerDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordMarkerFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for RecordMarkerFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordMarkerFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#RecordMarkerFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordMarkerFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RecordMarkerFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterActivityTypeRequestMarshaller">
            <summary>
            RegisterActivityType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterActivityTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterActivityTypeRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterActivityTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterActivityTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterActivityType operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterActivityTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterActivityTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterActivityTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterDomainRequestMarshaller">
            <summary>
            RegisterDomain Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterDomainRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterDomainRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RegisterDomainRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterDomainRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterDomain operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterDomainResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterDomainResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterDomainResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterWorkflowTypeRequestMarshaller">
            <summary>
            RegisterWorkflowType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterWorkflowTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterWorkflowTypeRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterWorkflowTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterWorkflowTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterWorkflowType operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterWorkflowTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterWorkflowTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RegisterWorkflowTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelActivityTaskDecisionAttributesMarshaller">
            <summary>
            RequestCancelActivityTaskDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelActivityTaskDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RequestCancelActivityTaskDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelActivityTaskDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelActivityTaskFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for RequestCancelActivityTaskFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelActivityTaskFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#RequestCancelActivityTaskFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelActivityTaskFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelActivityTaskFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionDecisionAttributesMarshaller">
            <summary>
            RequestCancelExternalWorkflowExecutionDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for RequestCancelExternalWorkflowExecutionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#RequestCancelExternalWorkflowExecutionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionInitiatedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for RequestCancelExternalWorkflowExecutionInitiatedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionInitiatedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#RequestCancelExternalWorkflowExecutionInitiatedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionInitiatedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelExternalWorkflowExecutionInitiatedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelWorkflowExecutionRequestMarshaller">
            <summary>
            RequestCancelWorkflowExecution Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelWorkflowExecutionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelWorkflowExecutionRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelWorkflowExecutionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelWorkflowExecutionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RequestCancelWorkflowExecution operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelWorkflowExecutionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelWorkflowExecutionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RequestCancelWorkflowExecutionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ResourceTagMarshaller">
            <summary>
            ResourceTag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ResourceTagMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ResourceTag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ResourceTagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ResourceTagUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceTag Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ResourceTagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ResourceTag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ResourceTagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ResourceTagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCanceledRequestMarshaller">
            <summary>
            RespondActivityTaskCanceled Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCanceledRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCanceledRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RespondActivityTaskCanceledRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCanceledRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCanceledResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RespondActivityTaskCanceled operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCanceledResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCanceledResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCanceledResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCompletedRequestMarshaller">
            <summary>
            RespondActivityTaskCompleted Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCompletedRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCompletedRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RespondActivityTaskCompletedRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCompletedRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCompletedResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RespondActivityTaskCompleted operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCompletedResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCompletedResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskCompletedResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskFailedRequestMarshaller">
            <summary>
            RespondActivityTaskFailed Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskFailedRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskFailedRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RespondActivityTaskFailedRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskFailedRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskFailedResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RespondActivityTaskFailed operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskFailedResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskFailedResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondActivityTaskFailedResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondDecisionTaskCompletedRequestMarshaller">
            <summary>
            RespondDecisionTaskCompleted Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondDecisionTaskCompletedRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondDecisionTaskCompletedRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.RespondDecisionTaskCompletedRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondDecisionTaskCompletedRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondDecisionTaskCompletedResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RespondDecisionTaskCompleted operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondDecisionTaskCompletedResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondDecisionTaskCompletedResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RespondDecisionTaskCompletedResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RunUnmarshaller">
            <summary>
            Response Unmarshaller for Run Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RunUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#Run,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RunUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.RunUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleActivityTaskDecisionAttributesMarshaller">
            <summary>
            ScheduleActivityTaskDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleActivityTaskDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleActivityTaskDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleActivityTaskFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ScheduleActivityTaskFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleActivityTaskFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ScheduleActivityTaskFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleActivityTaskFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleActivityTaskFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleLambdaFunctionDecisionAttributesMarshaller">
            <summary>
            ScheduleLambdaFunctionDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleLambdaFunctionDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleLambdaFunctionDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleLambdaFunctionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for ScheduleLambdaFunctionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleLambdaFunctionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#ScheduleLambdaFunctionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleLambdaFunctionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.ScheduleLambdaFunctionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionDecisionAttributesMarshaller">
            <summary>
            SignalExternalWorkflowExecutionDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for SignalExternalWorkflowExecutionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#SignalExternalWorkflowExecutionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionInitiatedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for SignalExternalWorkflowExecutionInitiatedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionInitiatedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#SignalExternalWorkflowExecutionInitiatedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionInitiatedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalExternalWorkflowExecutionInitiatedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalWorkflowExecutionRequestMarshaller">
            <summary>
            SignalWorkflowExecution Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalWorkflowExecutionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalWorkflowExecutionRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalWorkflowExecutionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalWorkflowExecutionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SignalWorkflowExecution operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalWorkflowExecutionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalWorkflowExecutionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.SignalWorkflowExecutionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionDecisionAttributesMarshaller">
            <summary>
            StartChildWorkflowExecutionDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for StartChildWorkflowExecutionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#StartChildWorkflowExecutionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionInitiatedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for StartChildWorkflowExecutionInitiatedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionInitiatedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#StartChildWorkflowExecutionInitiatedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionInitiatedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartChildWorkflowExecutionInitiatedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartLambdaFunctionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for StartLambdaFunctionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartLambdaFunctionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#StartLambdaFunctionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartLambdaFunctionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartLambdaFunctionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartTimerDecisionAttributesMarshaller">
            <summary>
            StartTimerDecisionAttributes Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartTimerDecisionAttributesMarshaller.Marshall(Amazon.SimpleWorkflow.Model.StartTimerDecisionAttributes,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartTimerDecisionAttributesMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartTimerFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for StartTimerFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartTimerFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#StartTimerFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartTimerFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartTimerFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartWorkflowExecutionRequestMarshaller">
            <summary>
            StartWorkflowExecution Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartWorkflowExecutionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartWorkflowExecutionRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartWorkflowExecutionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartWorkflowExecutionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StartWorkflowExecution operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartWorkflowExecutionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartWorkflowExecutionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.StartWorkflowExecutionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagFilterMarshaller">
            <summary>
            TagFilter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagFilterMarshaller.Marshall(Amazon.SimpleWorkflow.Model.TagFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller">
            <summary>
            TagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.TagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TaskListMarshaller">
            <summary>
            TaskList Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TaskListMarshaller.Marshall(Amazon.SimpleWorkflow.Model.TaskList,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TaskListMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TaskListUnmarshaller">
            <summary>
            Response Unmarshaller for TaskList Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TaskListUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#TaskList,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TaskListUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TaskListUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TerminateWorkflowExecutionRequestMarshaller">
            <summary>
            TerminateWorkflowExecution Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TerminateWorkflowExecutionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TerminateWorkflowExecutionRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TerminateWorkflowExecutionRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TerminateWorkflowExecutionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TerminateWorkflowExecution operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TerminateWorkflowExecutionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TerminateWorkflowExecutionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TerminateWorkflowExecutionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerCanceledEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for TimerCanceledEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerCanceledEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#TimerCanceledEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerCanceledEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerCanceledEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerFiredEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for TimerFiredEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerFiredEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#TimerFiredEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerFiredEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerFiredEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerStartedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for TimerStartedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerStartedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#TimerStartedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerStartedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TimerStartedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TooManyTagsException Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TooManyTagsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TypeAlreadyExistsExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TypeAlreadyExistsException Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TypeAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TypeAlreadyExistsExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TypeAlreadyExistsExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TypeDeprecatedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for TypeDeprecatedException Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TypeDeprecatedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TypeDeprecatedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.TypeDeprecatedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateActivityTypeRequestMarshaller">
            <summary>
            UndeprecateActivityType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateActivityTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateActivityTypeRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.UndeprecateActivityTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateActivityTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateActivityTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UndeprecateActivityType operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateActivityTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateActivityTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateActivityTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateDomainRequestMarshaller">
            <summary>
            UndeprecateDomain Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateDomainRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateDomainRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.UndeprecateDomainRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateDomainRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateDomainResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UndeprecateDomain operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateDomainResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateDomainResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateDomainResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateWorkflowTypeRequestMarshaller">
            <summary>
            UndeprecateWorkflowType Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateWorkflowTypeRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateWorkflowTypeRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.UndeprecateWorkflowTypeRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateWorkflowTypeRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateWorkflowTypeResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UndeprecateWorkflowType operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateWorkflowTypeResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateWorkflowTypeResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UndeprecateWorkflowTypeResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UnknownResourceExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for UnknownResourceException Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UnknownResourceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UnknownResourceExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UnknownResourceExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller">
            <summary>
            UntagResource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Marshall(Amazon.SimpleWorkflow.Model.UntagResourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UntagResourceRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagResource operation
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.UntagResourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionAlreadyStartedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionAlreadyStartedException Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionAlreadyStartedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionAlreadyStartedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionAlreadyStartedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCanceledEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionCanceledEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCanceledEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionCanceledEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCanceledEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCanceledEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCancelRequestedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionCancelRequestedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCancelRequestedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionCancelRequestedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCancelRequestedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCancelRequestedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCompletedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionCompletedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCompletedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionCompletedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCompletedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCompletedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionContinuedAsNewEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionContinuedAsNewEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionContinuedAsNewEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionContinuedAsNewEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionContinuedAsNewEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionContinuedAsNewEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCountUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionCount Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCountUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionCount,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCountUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionCountUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionDetailUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionFailedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionFailedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionFailedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionFailedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionFailedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionFailedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionFilterMarshaller">
            <summary>
            WorkflowExecutionFilter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionFilterMarshaller.Marshall(Amazon.SimpleWorkflow.Model.WorkflowExecutionFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionInfosUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionInfos Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionInfosUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionInfos,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionInfosUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionInfosUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionInfoUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionMarshaller">
            <summary>
            WorkflowExecution Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionMarshaller.Marshall(Amazon.SimpleWorkflow.Model.WorkflowExecution,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionOpenCountsUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionOpenCounts Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionOpenCountsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionOpenCounts,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionOpenCountsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionOpenCountsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionSignaledEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionSignaledEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionSignaledEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionSignaledEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionSignaledEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionSignaledEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionStartedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionStartedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionStartedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionStartedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionStartedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionStartedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionTerminatedEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionTerminatedEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionTerminatedEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionTerminatedEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionTerminatedEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionTerminatedEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionTimedOutEventAttributesUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecutionTimedOutEventAttributes Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionTimedOutEventAttributesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecutionTimedOutEventAttributes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionTimedOutEventAttributesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionTimedOutEventAttributesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowExecution Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowExecution,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowExecutionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeConfigurationUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowTypeConfiguration Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeConfigurationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowTypeConfiguration,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeConfigurationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeConfigurationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeDetailUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowTypeDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowTypeDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeFilterMarshaller">
            <summary>
            WorkflowTypeFilter Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeFilterMarshaller.Marshall(Amazon.SimpleWorkflow.Model.WorkflowTypeFilter,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeFilterMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeInfosUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowTypeInfos Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeInfosUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowTypeInfos,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeInfosUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeInfosUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeInfoUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowTypeInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowTypeInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeMarshaller">
            <summary>
            WorkflowType Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeMarshaller.Marshall(Amazon.SimpleWorkflow.Model.WorkflowType,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeUnmarshaller">
            <summary>
            Response Unmarshaller for WorkflowType Object
            </summary>  
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#SimpleWorkflow#Model#WorkflowType,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Internal.MarshallTransformations.WorkflowTypeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.LambdaFunctionCompletedEventAttributes">
            <summary>
            Provides the details of the <code>LambdaFunctionCompleted</code> event. It isn't set
            for other event types.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionCompletedEventAttributes.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The results of the Lambda task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionCompletedEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>LambdaFunctionScheduled</code> event that was recorded when this
            Lambda task was scheduled. To help diagnose issues, use this information to trace
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionCompletedEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>LambdaFunctionStarted</code> event recorded when this activity
            task started. To help diagnose issues, use this information to trace back the chain
            of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.LambdaFunctionFailedEventAttributes">
            <summary>
            Provides the details of the <code>LambdaFunctionFailed</code> event. It isn't set
            for other event types.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionFailedEventAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The details of the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionFailedEventAttributes.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason provided for the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionFailedEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>LambdaFunctionScheduled</code> event that was recorded when this
            activity task was scheduled. To help diagnose issues, use this information to trace
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionFailedEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>LambdaFunctionStarted</code> event recorded when this activity
            task started. To help diagnose issues, use this information to trace back the chain
            of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.LambdaFunctionScheduledEventAttributes">
            <summary>
            Provides the details of the <code>LambdaFunctionScheduled</code> event. It isn't set
            for other event types.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionScheduledEventAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            Data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the Lambda task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionScheduledEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>LambdaFunctionCompleted</code> event corresponding to the decision
            that resulted in scheduling this activity task. To help diagnose issues, use this
            information to trace back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionScheduledEventAttributes.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique ID of the Lambda task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionScheduledEventAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The input provided to the Lambda task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionScheduledEventAttributes.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Lambda function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionScheduledEventAttributes.StartToCloseTimeout">
            <summary>
            Gets and sets the property StartToCloseTimeout. 
            <para>
            The maximum amount of time a worker can take to process the Lambda task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.LambdaFunctionStartedEventAttributes">
            <summary>
            Provides the details of the <code>LambdaFunctionStarted</code> event. It isn't set
            for other event types.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionStartedEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>LambdaFunctionScheduled</code> event that was recorded when this
            activity task was scheduled. To help diagnose issues, use this information to trace
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.LambdaFunctionTimedOutEventAttributes">
            <summary>
            Provides details of the <code>LambdaFunctionTimedOut</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionTimedOutEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>LambdaFunctionScheduled</code> event that was recorded when this
            activity task was scheduled. To help diagnose issues, use this information to trace
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionTimedOutEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>ActivityTaskStarted</code> event that was recorded when this activity
            task started. To help diagnose issues, use this information to trace back the chain
            of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.LambdaFunctionTimedOutEventAttributes.TimeoutType">
            <summary>
            Gets and sets the property TimeoutType. 
            <para>
            The type of the timeout that caused this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            <summary>
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.LimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListActivityTypesRequest">
            <summary>
            Container for the parameters to the ListActivityTypes operation.
            Returns information about all activities registered in the specified domain that match
            the specified name and registration status. The result includes information like creation
            date, current status of the activity, etc. The results may be split into multiple
            pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListActivityTypesRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain in which the activity types have been registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListActivityTypesRequest.MaximumPageSize">
            <summary>
            Gets and sets the property MaximumPageSize. 
            <para>
            The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListActivityTypesRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            If specified, only lists the activity types that have this name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListActivityTypesRequest.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". 
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListActivityTypesRequest.RegistrationStatus">
            <summary>
            Gets and sets the property RegistrationStatus. 
            <para>
            Specifies the registration status of the activity types to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListActivityTypesRequest.ReverseOrder">
            <summary>
            Gets and sets the property ReverseOrder. 
            <para>
            When set to <code>true</code>, returns the results in reverse order. By default, the
            results are returned in ascending alphabetical order by <code>name</code> of the activity
            types.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListActivityTypesResponse">
            <summary>
            Contains the response data from the ListActivityTypes operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListActivityTypesResponse.ActivityTypeInfos">
            <summary>
            Gets and sets the ActivityTypeInfos member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest">
            <summary>
            Container for the parameters to the ListClosedWorkflowExecutions operation.
            Returns a list of closed workflow executions in the specified domain that meet the
            filtering criteria. The results may be split into multiple pages. To retrieve subsequent
            pages, make the call again using the nextPageToken returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest.CloseStatusFilter">
            <summary>
            Gets and sets the property CloseStatusFilter. 
            <para>
            If specified, only workflow executions that match this <i>close status</i> are listed.
            For example, if TERMINATED is specified, then only TERMINATED workflow executions
            are listed.
            </para>
             <note> 
            <para>
             <code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code>
            and <code>tagFilter</code> are mutually exclusive. You can specify at most one of
            these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest.CloseTimeFilter">
            <summary>
            Gets and sets the property CloseTimeFilter. 
            <para>
            If specified, the workflow executions are included in the returned results based on
            whether their close times are within the range specified by this filter. Also, if
            this parameter is specified, the returned results are ordered by their close times.
            </para>
             <note> 
            <para>
             <code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive.
            You must specify one of these in a request but not both.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain that contains the workflow executions to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest.ExecutionFilter">
            <summary>
            Gets and sets the property ExecutionFilter. 
            <para>
            If specified, only workflow executions matching the workflow ID specified in the filter
            are returned.
            </para>
             <note> 
            <para>
             <code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code>
            and <code>tagFilter</code> are mutually exclusive. You can specify at most one of
            these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest.MaximumPageSize">
            <summary>
            Gets and sets the property MaximumPageSize. 
            <para>
            The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". 
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest.ReverseOrder">
            <summary>
            Gets and sets the property ReverseOrder. 
            <para>
            When set to <code>true</code>, returns the results in reverse order. By default the
            results are returned in descending order of the start or the close time of the executions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest.StartTimeFilter">
            <summary>
            Gets and sets the property StartTimeFilter. 
            <para>
            If specified, the workflow executions are included in the returned results based on
            whether their start times are within the range specified by this filter. Also, if
            this parameter is specified, the returned results are ordered by their start times.
            </para>
             <note> 
            <para>
             <code>startTimeFilter</code> and <code>closeTimeFilter</code> are mutually exclusive.
            You must specify one of these in a request but not both.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest.TagFilter">
            <summary>
            Gets and sets the property TagFilter. 
            <para>
            If specified, only executions that have the matching tag are listed.
            </para>
             <note> 
            <para>
             <code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code>
            and <code>tagFilter</code> are mutually exclusive. You can specify at most one of
            these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest.TypeFilter">
            <summary>
            Gets and sets the property TypeFilter. 
            <para>
            If specified, only executions of the type specified in the filter are returned.
            </para>
             <note> 
            <para>
             <code>closeStatusFilter</code>, <code>executionFilter</code>, <code>typeFilter</code>
            and <code>tagFilter</code> are mutually exclusive. You can specify at most one of
            these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsResponse">
            <summary>
            Contains the response data from the ListClosedWorkflowExecutions operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsResponse.WorkflowExecutionInfos">
            <summary>
            Gets and sets the WorkflowExecutionInfos member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListDomainsRequest">
            <summary>
            Container for the parameters to the ListDomains operation.
            Returns the list of domains registered in the account. The results may be split into
            multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken
            returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains. The element must be set to <code>arn:aws:swf::AccountID:domain/*</code>,
            where <i>AccountID</i> is the account ID, with no dashes.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListDomainsRequest.MaximumPageSize">
            <summary>
            Gets and sets the property MaximumPageSize. 
            <para>
            The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListDomainsRequest.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". 
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListDomainsRequest.RegistrationStatus">
            <summary>
            Gets and sets the property RegistrationStatus. 
            <para>
            Specifies the registration status of the domains to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListDomainsRequest.ReverseOrder">
            <summary>
            Gets and sets the property ReverseOrder. 
            <para>
            When set to <code>true</code>, returns the results in reverse order. By default, the
            results are returned in ascending alphabetical order by <code>name</code> of the domains.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListDomainsResponse">
            <summary>
            Contains the response data from the ListDomains operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListDomainsResponse.DomainInfos">
            <summary>
            Gets and sets the DomainInfos member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest">
            <summary>
            Container for the parameters to the ListOpenWorkflowExecutions operation.
            Returns a list of open workflow executions in the specified domain that meet the filtering
            criteria. The results may be split into multiple pages. To retrieve subsequent pages,
            make the call again using the nextPageToken returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain that contains the workflow executions to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest.ExecutionFilter">
            <summary>
            Gets and sets the property ExecutionFilter. 
            <para>
            If specified, only workflow executions matching the workflow ID specified in the filter
            are returned.
            </para>
             <note> 
            <para>
             <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>
            are mutually exclusive. You can specify at most one of these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest.MaximumPageSize">
            <summary>
            Gets and sets the property MaximumPageSize. 
            <para>
            The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". 
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest.ReverseOrder">
            <summary>
            Gets and sets the property ReverseOrder. 
            <para>
            When set to <code>true</code>, returns the results in reverse order. By default the
            results are returned in descending order of the start time of the executions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest.StartTimeFilter">
            <summary>
            Gets and sets the property StartTimeFilter. 
            <para>
            Workflow executions are included in the returned results based on whether their start
            times are within the range specified by this filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest.TagFilter">
            <summary>
            Gets and sets the property TagFilter. 
            <para>
            If specified, only executions that have the matching tag are listed.
            </para>
             <note> 
            <para>
             <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>
            are mutually exclusive. You can specify at most one of these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest.TypeFilter">
            <summary>
            Gets and sets the property TypeFilter. 
            <para>
            If specified, only executions of the type specified in the filter are returned.
            </para>
             <note> 
            <para>
             <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code>
            are mutually exclusive. You can specify at most one of these in a request.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsResponse">
            <summary>
            Contains the response data from the ListOpenWorkflowExecutions operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsResponse.WorkflowExecutionInfos">
            <summary>
            Gets and sets the WorkflowExecutionInfos member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListTagsForResourceRequest">
            <summary>
            Container for the parameters to the ListTagsForResource operation.
            List tags for a given domain.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListTagsForResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) for the Amazon SWF domain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListTagsForResourceResponse">
            <summary>
            This is the response object from the ListTagsForResource operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListTagsForResourceResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            An array of tags associated with the domain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest">
            <summary>
            Container for the parameters to the ListWorkflowTypes operation.
            Returns information about workflow types in the specified domain. The results may
            be split into multiple pages that can be retrieved by making the call repeatedly.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain in which the workflow types have been registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest.MaximumPageSize">
            <summary>
            Gets and sets the property MaximumPageSize. 
            <para>
            The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            If specified, lists the workflow type with this name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". 
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest.RegistrationStatus">
            <summary>
            Gets and sets the property RegistrationStatus. 
            <para>
            Specifies the registration status of the workflow types to list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest.ReverseOrder">
            <summary>
            Gets and sets the property ReverseOrder. 
            <para>
            When set to <code>true</code>, returns the results in reverse order. By default the
            results are returned in ascending alphabetical order of the <code>name</code> of the
            workflow types.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListWorkflowTypesResponse">
            <summary>
            Contains the response data from the ListWorkflowTypes operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListWorkflowTypesResponse.WorkflowTypeInfos">
            <summary>
            Gets and sets the WorkflowTypeInfos member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.MarkerRecordedEventAttributes">
            <summary>
            Provides the details of the <code>MarkerRecorded</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.MarkerRecordedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>RecordMarker</code> decision that requested this marker.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.MarkerRecordedEventAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The details of the marker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.MarkerRecordedEventAttributes.MarkerName">
            <summary>
            Gets and sets the property MarkerName. 
            <para>
            The name of the marker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            <summary>
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.OperationNotPermittedException.#ctor(System.String)">
            <summary>
            Constructs a new OperationNotPermittedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.OperationNotPermittedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of OperationNotPermittedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.OperationNotPermittedException.#ctor(System.Exception)">
            <summary>
            Construct instance of OperationNotPermittedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.OperationNotPermittedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationNotPermittedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.OperationNotPermittedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationNotPermittedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.OperationNotPermittedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the OperationNotPermittedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.OperationNotPermittedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.PendingTaskCount">
            <summary>
            Contains the count of tasks in a task list.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PendingTaskCount.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of tasks in the task list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PendingTaskCount.Truncated">
            <summary>
            Gets and sets the property Truncated. 
            <para>
            If set to true, indicates that the actual count was more than the maximum supported
            by this API and the count returned is the truncated value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.PollForActivityTaskRequest">
            <summary>
            Container for the parameters to the PollForActivityTask operation.
            Used by workers to get an <a>ActivityTask</a> from the specified activity <code>taskList</code>.
            This initiates a long poll, where the service holds the HTTP connection open and responds
            as soon as a task becomes available. The maximum time the service holds on to the
            request before responding is 60 seconds. If no task is available within 60 seconds,
            the poll returns an empty result. An empty result, in this context, means that an
            ActivityTask is returned, but that the value of taskToken is an empty string. If a
            task is returned, the worker should use its type to identify and process it correctly.
            
             <important> 
            <para>
            Workers should set their client side socket timeout to at least 70 seconds (10 seconds
            higher than the maximum time service may hold the poll request).
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForActivityTaskRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain that contains the task lists being polled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForActivityTaskRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            Identity of the worker making the request, recorded in the <code>ActivityTaskStarted</code>
            event in the workflow history. This enables diagnostic tracing when problems arise.
            The form of this identity is user defined.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForActivityTaskRequest.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            Specifies the task list to poll for activity tasks.
            </para>
             
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.PollForActivityTaskResponse">
            <summary>
            Contains the response data from the PollForActivityTask operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForActivityTaskResponse.ActivityTask">
            <summary>
            Gets and sets the ActivityTask member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest">
            <summary>
            Container for the parameters to the PollForDecisionTask operation.
            Used by deciders to get a <a>DecisionTask</a> from the specified decision <code>taskList</code>.
            A decision task may be returned for any open workflow execution that is using the
            specified task list. The task includes a paginated view of the history of the workflow
            execution. The decider should use the workflow type and the history to determine how
            to properly handle the task.
            
             
            <para>
            This action initiates a long poll, where the service holds the HTTP connection open
            and responds as soon a task becomes available. If no decision task is available in
            the specified task list before the timeout of 60 seconds expires, an empty result
            is returned. An empty result, in this context, means that a DecisionTask is returned,
            but that the value of taskToken is an empty string.
            </para>
             <important> 
            <para>
            Deciders should set their client side socket timeout to at least 70 seconds (10 seconds
            higher than the timeout).
            </para>
             </important> <important> 
            <para>
            Because the number of workflow history events for a single workflow execution might
            be very large, the result returned might be split up across a number of pages. To
            retrieve subsequent pages, make additional calls to <code>PollForDecisionTask</code>
            using the <code>nextPageToken</code> returned by the initial call. Note that you do
            <i>not</i> call <code>GetWorkflowExecutionHistory</code> with this <code>nextPageToken</code>.
            Instead, call <code>PollForDecisionTask</code> again.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain containing the task lists to poll.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest.Identity">
            <summary>
            Gets and sets the property Identity. 
            <para>
            Identity of the decider making the request, which is recorded in the DecisionTaskStarted
            event in the workflow history. This enables diagnostic tracing when problems arise.
            The form of this identity is user defined.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest.MaximumPageSize">
            <summary>
            Gets and sets the property MaximumPageSize. 
            <para>
            The maximum number of results that are returned per call. Use <code>nextPageToken</code>
            to obtain further pages of results. 
            </para>
             
            <para>
            This is an upper limit only; the actual number of results returned per call may be
            fewer than the specified maximum.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If <code>NextPageToken</code> is returned there are more results available. The value
            of <code>NextPageToken</code> is a unique pagination token for each page. Make the
            call again using the returned token to retrieve the next page. Keep all other arguments
            unchanged. Each pagination token expires after 60 seconds. Using an expired pagination
            token will return a <code>400</code> error: "<code>Specified token has exceeded its
            maximum lifetime</code>". 
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call. 
            </para>
             <note> 
            <para>
            The <code>nextPageToken</code> returned by this action cannot be used with <a>GetWorkflowExecutionHistory</a>
            to get the next page. You must call <a>PollForDecisionTask</a> again (with the <code>nextPageToken</code>)
            to retrieve the next page of history records. Calling <a>PollForDecisionTask</a> with
            a <code>nextPageToken</code> doesn't return a new decision task.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest.ReverseOrder">
            <summary>
            Gets and sets the property ReverseOrder. 
            <para>
            When set to <code>true</code>, returns the events in reverse order. By default the
            results are returned in ascending order of the <code>eventTimestamp</code> of the
            events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            Specifies the task list to poll for decision tasks.
            </para>
             
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.PollForDecisionTaskResponse">
            <summary>
            Contains the response data from the PollForDecisionTask operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForDecisionTaskResponse.DecisionTask">
            <summary>
            Gets and sets the DecisionTask member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RecordActivityTaskHeartbeatRequest">
            <summary>
            Container for the parameters to the RecordActivityTaskHeartbeat operation.
            Used by activity workers to report to the service that the <a>ActivityTask</a> represented
            by the specified <code>taskToken</code> is still making progress. The worker can also
            specify details of the progress, for example percent complete, using the <code>details</code>
            parameter. This action can also be used by the worker as a mechanism to check if cancellation
            is being requested for the activity task. If a cancellation is being attempted for
            the specified task, then the boolean <code>cancelRequested</code> flag returned by
            the service is set to <code>true</code>.
            
             
            <para>
            This action resets the <code>taskHeartbeatTimeout</code> clock. The <code>taskHeartbeatTimeout</code>
            is specified in <a>RegisterActivityType</a>.
            </para>
             
            <para>
            This action doesn't in itself create an event in the workflow execution history. However,
            if the task times out, the workflow execution history contains a <code>ActivityTaskTimedOut</code>
            event that contains the information from the last heartbeat generated by the activity
            worker.
            </para>
             <note> 
            <para>
            The <code>taskStartToCloseTimeout</code> of an activity type is the maximum duration
            of an activity task, regardless of the number of <a>RecordActivityTaskHeartbeat</a>
            requests received. The <code>taskStartToCloseTimeout</code> is also specified in <a>RegisterActivityType</a>.
            </para>
             </note> <note> 
            <para>
            This operation is only useful for long-lived activities to report liveliness of the
            task and to determine if a cancellation is being attempted.
            </para>
             </note> <important> 
            <para>
            If the <code>cancelRequested</code> flag returns <code>true</code>, a cancellation
            is being attempted. If the worker can cancel the activity, it should respond with
            <a>RespondActivityTaskCanceled</a>. Otherwise, it should ignore the cancellation request.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RecordActivityTaskHeartbeatRequest.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            If specified, contains details about the progress of the task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RecordActivityTaskHeartbeatRequest.TaskToken">
            <summary>
            Gets and sets the property TaskToken. 
            <para>
            The <code>taskToken</code> of the <a>ActivityTask</a>.
            </para>
             <important> 
            <para>
             <code>taskToken</code> is generated by the service and should be treated as an opaque
            value. If the task is passed to another process, its <code>taskToken</code> must also
            be passed. This enables it to provide its progress and respond with results. 
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RecordActivityTaskHeartbeatResponse">
            <summary>
            Contains the response data from the RecordActivityTaskHeartbeat operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RecordActivityTaskHeartbeatResponse.ActivityTaskStatus">
            <summary>
            Gets and sets the ActivityTaskStatus member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RecordMarkerDecisionAttributes">
            <summary>
            Provides the details of the <code>RecordMarker</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RecordMarkerDecisionAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
             The details of the marker.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RecordMarkerDecisionAttributes.MarkerName">
            <summary>
            Gets and sets the property MarkerName. 
            <para>
             The name of the marker.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RecordMarkerFailedEventAttributes">
            <summary>
            Provides the details of the <code>RecordMarkerFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RecordMarkerFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RecordMarkerFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>RecordMarkerFailed</code> decision for this cancellation
            request. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RecordMarkerFailedEventAttributes.MarkerName">
            <summary>
            Gets and sets the property MarkerName. 
            <para>
            The marker's name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest">
            <summary>
            Container for the parameters to the RegisterActivityType operation.
            Registers a new <i>activity type</i> along with its configuration settings in the
            specified domain.
            
             <important> 
            <para>
            A <code>TypeAlreadyExists</code> fault is returned if the type already exists in the
            domain. You cannot change any configuration settings of the type after its registration,
            and it must be registered as a new version.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para>
             </li> <li> 
            <para>
             <code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest.DefaultTaskHeartbeatTimeout">
            <summary>
            Gets and sets the property DefaultTaskHeartbeatTimeout. 
            <para>
            If set, specifies the default maximum time before which a worker processing a task
            of this type must report progress by calling <a>RecordActivityTaskHeartbeat</a>. If
            the timeout is exceeded, the activity task is automatically timed out. This default
            can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code>
            <a>Decision</a>. If the activity worker subsequently attempts to record a heartbeat
            or returns a result, the activity worker receives an <code>UnknownResource</code>
            fault. In this case, Amazon SWF no longer considers the activity task to be valid;
            the activity worker should clean up the activity task.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest.DefaultTaskList">
            <summary>
            Gets and sets the property DefaultTaskList. 
            <para>
            If set, specifies the default task list to use for scheduling tasks of this activity
            type. This default task list is used if a task list isn't provided when a task is
            scheduled through the <code>ScheduleActivityTask</code> <a>Decision</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest.DefaultTaskPriority">
            <summary>
            Gets and sets the property DefaultTaskPriority. 
            <para>
            The default task priority to assign to the activity type. If not assigned, then <code>0</code>
            is used. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code>
            (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate
            higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>in the <i>Amazon SWF Developer Guide</i>.</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest.DefaultTaskScheduleToCloseTimeout">
            <summary>
            Gets and sets the property DefaultTaskScheduleToCloseTimeout. 
            <para>
            If set, specifies the default maximum duration for a task of this activity type. This
            default can be overridden when scheduling an activity task using the <code>ScheduleActivityTask</code>
            <a>Decision</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest.DefaultTaskScheduleToStartTimeout">
            <summary>
            Gets and sets the property DefaultTaskScheduleToStartTimeout. 
            <para>
            If set, specifies the default maximum duration that a task of this activity type can
            wait before being assigned to a worker. This default can be overridden when scheduling
            an activity task using the <code>ScheduleActivityTask</code> <a>Decision</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest.DefaultTaskStartToCloseTimeout">
            <summary>
            Gets and sets the property DefaultTaskStartToCloseTimeout. 
            <para>
            If set, specifies the default maximum duration that a worker can take to process tasks
            of this activity type. This default can be overridden when scheduling an activity
            task using the <code>ScheduleActivityTask</code> <a>Decision</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A textual description of the activity type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain in which this activity is to be registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the activity type within the domain.
            </para>
             
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the activity type.
            </para>
             <note> 
            <para>
            The activity type consists of the name and version, the combination of which must
            be unique within the domain.
            </para>
             </note> 
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RegisterActivityTypeResponse">
            <summary>
            This is the response object from the RegisterActivityType operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RegisterDomainRequest">
            <summary>
            Container for the parameters to the RegisterDomain operation.
            Registers a new domain.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            You cannot use an IAM policy to control domain access for this action. The name of
            the domain being registered is available as the resource of this action.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterDomainRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A text description of the domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterDomainRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            Name of the domain to register. The name must be unique in the region that the domain
            is registered in.
            </para>
             
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterDomainRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Tags to be added when registering a domain.
            </para>
             
            <para>
            Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_
            . : / = + - @</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterDomainRequest.WorkflowExecutionRetentionPeriodInDays">
            <summary>
            Gets and sets the property WorkflowExecutionRetentionPeriodInDays. 
            <para>
            The duration (in days) that records and histories of workflow executions on the domain
            should be kept by the service. After the retention period, the workflow execution
            isn't available in the results of visibility calls.
            </para>
             
            <para>
            If you pass the value <code>NONE</code> or <code>0</code> (zero), then the workflow
            execution history isn't retained. As soon as the workflow execution completes, the
            execution record and its history are deleted.
            </para>
             
            <para>
            The maximum workflow execution retention period is 90 days. For more information about
            Amazon SWF service limits, see: <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-limits.html">Amazon
            SWF Service Limits</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RegisterDomainResponse">
            <summary>
            This is the response object from the RegisterDomain operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest">
            <summary>
            Container for the parameters to the RegisterWorkflowType operation.
            Registers a new <i>workflow type</i> and its configuration settings in the specified
            domain.
            
             
            <para>
            The retention period for the workflow history is set by the <a>RegisterDomain</a>
            action.
            </para>
             <important> 
            <para>
            If the type already exists, then a <code>TypeAlreadyExists</code> fault is returned.
            You cannot change the configuration settings of a workflow type once it is registered
            and it must be registered as a new version.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para>
             </li> <li> 
            <para>
             <code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest.DefaultChildPolicy">
            <summary>
            Gets and sets the property DefaultChildPolicy. 
            <para>
            If set, specifies the default policy to use for the child workflow executions when
            a workflow execution of this type is terminated, by calling the <a>TerminateWorkflowExecution</a>
            action explicitly or due to an expired timeout. This default can be overridden when
            starting a workflow execution using the <a>StartWorkflowExecution</a> action or the
            <code>StartChildWorkflowExecution</code> <a>Decision</a>.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest.DefaultExecutionStartToCloseTimeout">
            <summary>
            Gets and sets the property DefaultExecutionStartToCloseTimeout. 
            <para>
            If set, specifies the default maximum duration for executions of this workflow type.
            You can override this default when starting an execution through the <a>StartWorkflowExecution</a>
            Action or <code>StartChildWorkflowExecution</code> <a>Decision</a>.
            </para>
             
            <para>
            The duration is specified in seconds; an integer greater than or equal to 0. Unlike
            some of the other timeout parameters in Amazon SWF, you cannot specify a value of
            "NONE" for <code>defaultExecutionStartToCloseTimeout</code>; there is a one-year max
            limit on the time that a workflow execution can run. Exceeding this limit always causes
            the workflow execution to time out.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest.DefaultLambdaRole">
            <summary>
            Gets and sets the property DefaultLambdaRole. 
            <para>
            The default IAM role attached to this workflow type.
            </para>
             <note> 
            <para>
            Executions of this workflow type need IAM roles to invoke Lambda functions. If you
            don't specify an IAM role when you start this workflow type, the default Lambda role
            is attached to the execution. For more information, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html">https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html</a>
            in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest.DefaultTaskList">
            <summary>
            Gets and sets the property DefaultTaskList. 
            <para>
            If set, specifies the default task list to use for scheduling decision tasks for executions
            of this workflow type. This default is used only if a task list isn't provided when
            starting the execution through the <a>StartWorkflowExecution</a> Action or <code>StartChildWorkflowExecution</code>
            <a>Decision</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest.DefaultTaskPriority">
            <summary>
            Gets and sets the property DefaultTaskPriority. 
            <para>
            The default task priority to assign to the workflow type. If not assigned, then <code>0</code>
            is used. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code>
            (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate
            higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest.DefaultTaskStartToCloseTimeout">
            <summary>
            Gets and sets the property DefaultTaskStartToCloseTimeout. 
            <para>
            If set, specifies the default maximum duration of decision tasks for this workflow
            type. This default can be overridden when starting a workflow execution using the
            <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code>
            <a>Decision</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            Textual description of the workflow type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain in which to register the workflow type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the workflow type.
            </para>
             
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            The version of the workflow type.
            </para>
             <note> 
            <para>
            The workflow type consists of the name and version, the combination of which must
            be unique within the domain. To get a list of all currently registered workflow types,
            use the <a>ListWorkflowTypes</a> action.
            </para>
             </note> 
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeResponse">
            <summary>
            This is the response object from the RegisterWorkflowType operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RequestCancelActivityTaskDecisionAttributes">
            <summary>
            Provides the details of the <code>RequestCancelActivityTask</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelActivityTaskDecisionAttributes.ActivityId">
            <summary>
            Gets and sets the property ActivityId. 
            <para>
            The <code>activityId</code> of the activity task to be canceled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RequestCancelActivityTaskFailedEventAttributes">
            <summary>
            Provides the details of the <code>RequestCancelActivityTaskFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelActivityTaskFailedEventAttributes.ActivityId">
            <summary>
            Gets and sets the property ActivityId. 
            <para>
            The activityId provided in the <code>RequestCancelActivityTask</code> decision that
            failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelActivityTaskFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelActivityTaskFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>RequestCancelActivityTask</code> decision for this
            cancellation request. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionDecisionAttributes">
            <summary>
            Provides the details of the <code>RequestCancelExternalWorkflowExecution</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionDecisionAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            The data attached to the event that can be used by the decider in subsequent workflow
            tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionDecisionAttributes.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            The <code>runId</code> of the external workflow execution to cancel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionDecisionAttributes.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
             The <code>workflowId</code> of the external workflow execution to cancel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionFailedEventAttributes">
            <summary>
            Provides the details of the <code>RequestCancelExternalWorkflowExecutionFailed</code>
            event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionFailedEventAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>RequestCancelExternalWorkflowExecution</code> decision
            for this cancellation request. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionFailedEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            The ID of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding
            to the <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this
            external workflow execution. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionFailedEventAttributes.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            The <code>runId</code> of the external workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionFailedEventAttributes.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The <code>workflowId</code> of the external workflow to which the cancel request was
            to be delivered.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionInitiatedEventAttributes">
            <summary>
            Provides the details of the <code>RequestCancelExternalWorkflowExecutionInitiated</code>
            event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionInitiatedEventAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            Data attached to the event that can be used by the decider in subsequent workflow
            tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionInitiatedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>RequestCancelExternalWorkflowExecution</code> decision
            for this cancellation request. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionInitiatedEventAttributes.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            The <code>runId</code> of the external workflow execution to be canceled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelExternalWorkflowExecutionInitiatedEventAttributes.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The <code>workflowId</code> of the external workflow execution to be canceled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionRequest">
            <summary>
            Container for the parameters to the RequestCancelWorkflowExecution operation.
            Records a <code>WorkflowExecutionCancelRequested</code> event in the currently running
            workflow execution identified by the given domain, workflowId, and runId. This logically
            requests the cancellation of the workflow execution as a whole. It is up to the decider
            to take appropriate actions when it receives an execution history with this event.
            
             <note> 
            <para>
            If the runId isn't specified, the <code>WorkflowExecutionCancelRequested</code> event
            is recorded in the history of the current open workflow execution with the specified
            workflowId in the domain.
            </para>
             </note> <note> 
            <para>
            Because this action allows the workflow to properly clean up and gracefully close,
            it should be used instead of <a>TerminateWorkflowExecution</a> when possible.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain containing the workflow execution to cancel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionRequest.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            The runId of the workflow execution to cancel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionRequest.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The workflowId of the workflow execution to cancel.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionResponse">
            <summary>
            This is the response object from the RequestCancelWorkflowExecution operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ResourceTag">
            <summary>
            Tags are key-value pairs that can be associated with Amazon SWF state machines and
            activities.
            
             
            <para>
            Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_
            . : / = + - @</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ResourceTag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The key of a tag.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ResourceTag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of a tag.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RespondActivityTaskCanceledRequest">
            <summary>
            Container for the parameters to the RespondActivityTaskCanceled operation.
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> was successfully canceled. Additional <code>details</code>
            can be provided using the <code>details</code> argument.
            
             
            <para>
            These <code>details</code> (if provided) appear in the <code>ActivityTaskCanceled</code>
            event added to the workflow history.
            </para>
             <important> 
            <para>
            Only use this operation if the <code>canceled</code> flag of a <a>RecordActivityTaskHeartbeat</a>
            request returns <code>true</code> and if the activity can be safely undone or abandoned.
            </para>
             </important> 
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to <a>RespondActivityTaskCompleted</a>, RespondActivityTaskCanceled,
            <a>RespondActivityTaskFailed</a>, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RespondActivityTaskCanceledRequest.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
             Information about the cancellation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RespondActivityTaskCanceledRequest.TaskToken">
            <summary>
            Gets and sets the property TaskToken. 
            <para>
            The <code>taskToken</code> of the <a>ActivityTask</a>.
            </para>
             <important> 
            <para>
             <code>taskToken</code> is generated by the service and should be treated as an opaque
            value. If the task is passed to another process, its <code>taskToken</code> must also
            be passed. This enables it to provide its progress and respond with results.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RespondActivityTaskCanceledResponse">
            <summary>
            This is the response object from the RespondActivityTaskCanceled operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RespondActivityTaskCompletedRequest">
            <summary>
            Container for the parameters to the RespondActivityTaskCompleted operation.
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> completed successfully with a <code>result</code> (if provided).
            The <code>result</code> appears in the <code>ActivityTaskCompleted</code> event in
            the workflow history.
            
             <important> 
            <para>
            If the requested task doesn't complete successfully, use <a>RespondActivityTaskFailed</a>
            instead. If the worker finds that the task is canceled through the <code>canceled</code>
            flag returned by <a>RecordActivityTaskHeartbeat</a>, it should cancel the task, clean
            up and then call <a>RespondActivityTaskCanceled</a>.
            </para>
             </important> 
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to RespondActivityTaskCompleted, <a>RespondActivityTaskCanceled</a>,
            <a>RespondActivityTaskFailed</a>, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RespondActivityTaskCompletedRequest.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The result of the activity task. It is a free form string that is implementation specific.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RespondActivityTaskCompletedRequest.TaskToken">
            <summary>
            Gets and sets the property TaskToken. 
            <para>
            The <code>taskToken</code> of the <a>ActivityTask</a>.
            </para>
             <important> 
            <para>
             <code>taskToken</code> is generated by the service and should be treated as an opaque
            value. If the task is passed to another process, its <code>taskToken</code> must also
            be passed. This enables it to provide its progress and respond with results.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RespondActivityTaskCompletedResponse">
            <summary>
            This is the response object from the RespondActivityTaskCompleted operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RespondActivityTaskFailedRequest">
            <summary>
            Container for the parameters to the RespondActivityTaskFailed operation.
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> has failed with <code>reason</code> (if specified). The <code>reason</code>
            and <code>details</code> appear in the <code>ActivityTaskFailed</code> event added
            to the workflow history.
            
             
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to <a>RespondActivityTaskCompleted</a>, <a>RespondActivityTaskCanceled</a>,
            RespondActivityTaskFailed, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RespondActivityTaskFailedRequest.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
             Detailed information about the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RespondActivityTaskFailedRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            Description of the error that may assist in diagnostics.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RespondActivityTaskFailedRequest.TaskToken">
            <summary>
            Gets and sets the property TaskToken. 
            <para>
            The <code>taskToken</code> of the <a>ActivityTask</a>.
            </para>
             <important> 
            <para>
             <code>taskToken</code> is generated by the service and should be treated as an opaque
            value. If the task is passed to another process, its <code>taskToken</code> must also
            be passed. This enables it to provide its progress and respond with results.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RespondActivityTaskFailedResponse">
            <summary>
            This is the response object from the RespondActivityTaskFailed operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RespondDecisionTaskCompletedRequest">
            <summary>
            Container for the parameters to the RespondDecisionTaskCompleted operation.
            Used by deciders to tell the service that the <a>DecisionTask</a> identified by the
            <code>taskToken</code> has successfully completed. The <code>decisions</code> argument
            specifies the list of decisions made while processing the task.
            
             
            <para>
            A <code>DecisionTaskCompleted</code> event is added to the workflow history. The <code>executionContext</code>
            specified is attached to the event in the workflow execution history.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            If an IAM policy grants permission to use <code>RespondDecisionTaskCompleted</code>,
            it can express permissions for the list of decisions in the <code>decisions</code>
            parameter. Each of the decisions has one or more parameters, much like a regular API
            call. To allow for policies to be as readable as possible, you can express permissions
            on decisions as if they were actual API calls, including applying conditions to some
            parameters. For more information, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RespondDecisionTaskCompletedRequest.Decisions">
            <summary>
            Gets and sets the property Decisions. 
            <para>
            The list of decisions (possibly empty) made by the decider while processing this decision
            task. See the docs for the <a>Decision</a> structure for details.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RespondDecisionTaskCompletedRequest.ExecutionContext">
            <summary>
            Gets and sets the property ExecutionContext. 
            <para>
            User defined context to add to workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.RespondDecisionTaskCompletedRequest.TaskToken">
            <summary>
            Gets and sets the property TaskToken. 
            <para>
            The <code>taskToken</code> from the <a>DecisionTask</a>.
            </para>
             <important> 
            <para>
             <code>taskToken</code> is generated by the service and should be treated as an opaque
            value. If the task is passed to another process, its <code>taskToken</code> must also
            be passed. This enables it to provide its progress and respond with results.
            </para>
             </important>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.RespondDecisionTaskCompletedResponse">
            <summary>
            This is the response object from the RespondDecisionTaskCompleted operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.Run">
            <summary>
            Specifies the <code>runId</code> of a workflow execution.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.Run.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            The <code>runId</code> of a workflow execution. This ID is generated by the service
            and can be used to uniquely identify the workflow execution within a domain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes">
            <summary>
            Provides the details of the <code>ScheduleActivityTask</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code> – String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code> – String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> <li> 
            <para>
             <code>taskList</code> – String constraint. The key is <code>swf:taskList.name</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes.ActivityId">
            <summary>
            Gets and sets the property ActivityId. 
            <para>
             The <code>activityId</code> of the activity task.
            </para>
             
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not contain the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes.ActivityType">
            <summary>
            Gets and sets the property ActivityType. 
            <para>
             The type of the activity task to schedule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            Data attached to the event that can be used by the decider in subsequent workflow
            tasks. This data isn't sent to the activity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes.HeartbeatTimeout">
            <summary>
            Gets and sets the property HeartbeatTimeout. 
            <para>
            If set, specifies the maximum time before which a worker processing a task of this
            type must report progress by calling <a>RecordActivityTaskHeartbeat</a>. If the timeout
            is exceeded, the activity task is automatically timed out. If the worker subsequently
            attempts to record a heartbeat or returns a result, it is ignored. This overrides
            the default heartbeat timeout specified when registering the activity type using <a>RegisterActivityType</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The input provided to the activity task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes.ScheduleToCloseTimeout">
            <summary>
            Gets and sets the property ScheduleToCloseTimeout. 
            <para>
            The maximum duration for this activity task.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
             <note> 
            <para>
            A schedule-to-close timeout for this activity task must be specified either as a default
            for the activity type or through this field. If neither this field is set nor a default
            schedule-to-close timeout was specified at registration time then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes.ScheduleToStartTimeout">
            <summary>
            Gets and sets the property ScheduleToStartTimeout. 
            <para>
             If set, specifies the maximum duration the activity task can wait to be assigned
            to a worker. This overrides the default schedule-to-start timeout specified when registering
            the activity type using <a>RegisterActivityType</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
             <note> 
            <para>
            A schedule-to-start timeout for this activity task must be specified either as a default
            for the activity type or through this field. If neither this field is set nor a default
            schedule-to-start timeout was specified at registration time then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes.StartToCloseTimeout">
            <summary>
            Gets and sets the property StartToCloseTimeout. 
            <para>
            If set, specifies the maximum duration a worker may take to process this activity
            task. This overrides the default start-to-close timeout specified when registering
            the activity type using <a>RegisterActivityType</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
             <note> 
            <para>
            A start-to-close timeout for this activity task must be specified either as a default
            for the activity type or through this field. If neither this field is set nor a default
            start-to-close timeout was specified at registration time then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            If set, specifies the name of the task list in which to schedule the activity task.
            If not specified, the <code>defaultTaskList</code> registered with the activity type
            is used.
            </para>
             <note> 
            <para>
            A task list for this activity task must be specified either as a default for the activity
            type or through this field. If neither this field is set nor a default task list was
            specified at registration time then a fault is returned.
            </para>
             </note> 
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not contain the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskDecisionAttributes.TaskPriority">
            <summary>
            Gets and sets the property TaskPriority. 
            <para>
             If set, specifies the priority with which the activity task is to be assigned to
            a worker. This overrides the defaultTaskPriority specified when registering the activity
            type using <a>RegisterActivityType</a>. Valid values are integers that range from
            Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code>
            (2147483647). Higher numbers indicate higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskFailedEventAttributes">
            <summary>
            Provides the details of the <code>ScheduleActivityTaskFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskFailedEventAttributes.ActivityId">
            <summary>
            Gets and sets the property ActivityId. 
            <para>
            The activityId provided in the <code>ScheduleActivityTask</code> decision that failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskFailedEventAttributes.ActivityType">
            <summary>
            Gets and sets the property ActivityType. 
            <para>
            The activity type provided in the <code>ScheduleActivityTask</code> decision that
            failed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleActivityTaskFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            that resulted in the scheduling of this activity task. This information can be useful
            for diagnosing problems by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionDecisionAttributes">
            <summary>
            Decision attributes specified in <code>scheduleLambdaFunctionDecisionAttributes</code>
            within the list of decisions <code>decisions</code> passed to <a>RespondDecisionTaskCompleted</a>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionDecisionAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the Lambda task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionDecisionAttributes.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            A string that identifies the Lambda function execution in the event history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionDecisionAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The optional input data to be supplied to the Lambda function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionDecisionAttributes.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name, or ARN, of the Lambda function to schedule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionDecisionAttributes.StartToCloseTimeout">
            <summary>
            Gets and sets the property StartToCloseTimeout. 
            <para>
            The timeout value, in seconds, after which the Lambda function is considered to be
            failed once it has started. This can be any integer from 1-300 (1s-5m). If no value
            is supplied, than a default value of 300s is assumed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionFailedEventAttributes">
            <summary>
            Provides the details of the <code>ScheduleLambdaFunctionFailed</code> event. It isn't
            set for other event types.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. To help diagnose issues, use this information to trace back
            the chain of events leading up to this event.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>LambdaFunctionCompleted</code> event corresponding to the decision
            that resulted in scheduling this Lambda task. To help diagnose issues, use this information
            to trace back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionFailedEventAttributes.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID provided in the <code>ScheduleLambdaFunction</code> decision that failed. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ScheduleLambdaFunctionFailedEventAttributes.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the Lambda function.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionDecisionAttributes">
            <summary>
            Provides the details of the <code>SignalExternalWorkflowExecution</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionDecisionAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            The data attached to the event that can be used by the decider in subsequent decision
            tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionDecisionAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
             The input data to be provided with the signal. The target workflow execution uses
            the signal name and input data to process the signal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionDecisionAttributes.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            The <code>runId</code> of the workflow execution to be signaled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionDecisionAttributes.SignalName">
            <summary>
            Gets and sets the property SignalName. 
            <para>
             The name of the signal.The target workflow execution uses the signal name and input
            to process the signal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionDecisionAttributes.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
             The <code>workflowId</code> of the workflow execution to be signaled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionFailedEventAttributes">
            <summary>
            Provides the details of the <code>SignalExternalWorkflowExecutionFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionFailedEventAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>SignalExternalWorkflowExecution</code> decision for
            this signal. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionFailedEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            The ID of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding
            to the <code>SignalExternalWorkflowExecution</code> decision to request this signal.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionFailedEventAttributes.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            The <code>runId</code> of the external workflow execution that the signal was being
            delivered to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionFailedEventAttributes.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The <code>workflowId</code> of the external workflow execution that the signal was
            being delivered to.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionInitiatedEventAttributes">
            <summary>
            Provides the details of the <code>SignalExternalWorkflowExecutionInitiated</code>
            event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionInitiatedEventAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            Data attached to the event that can be used by the decider in subsequent decision
            tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionInitiatedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>SignalExternalWorkflowExecution</code> decision for
            this signal. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionInitiatedEventAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The input provided to the signal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionInitiatedEventAttributes.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            The <code>runId</code> of the external workflow execution to send the signal to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionInitiatedEventAttributes.SignalName">
            <summary>
            Gets and sets the property SignalName. 
            <para>
            The name of the signal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalExternalWorkflowExecutionInitiatedEventAttributes.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The <code>workflowId</code> of the external workflow execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest">
            <summary>
            Container for the parameters to the SignalWorkflowExecution operation.
            Records a <code>WorkflowExecutionSignaled</code> event in the workflow execution history
            and creates a decision task for the workflow execution identified by the given domain,
            workflowId and runId. The event is recorded with the specified user defined signalName
            and input (if provided).
            
             <note> 
            <para>
            If a runId isn't specified, then the <code>WorkflowExecutionSignaled</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para>
             </note> <note> 
            <para>
            If the specified workflow execution isn't open, this method fails with <code>UnknownResource</code>.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain containing the workflow execution to signal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            Data to attach to the <code>WorkflowExecutionSignaled</code> event in the target workflow
            execution's history.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            The runId of the workflow execution to signal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest.SignalName">
            <summary>
            Gets and sets the property SignalName. 
            <para>
            The name of the signal. This name must be meaningful to the target workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The workflowId of the workflow execution to signal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionResponse">
            <summary>
            This is the response object from the SignalWorkflowExecution operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes">
            <summary>
            Provides the details of the <code>StartChildWorkflowExecution</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagList.member.N</code> – The key is "swf:tagList.N" where N is the tag number
            from 0 to 4, inclusive.
            </para>
             </li> <li> 
            <para>
             <code>taskList</code> – String constraint. The key is <code>swf:taskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.name</code> – String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code> – String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.ChildPolicy">
            <summary>
            Gets and sets the property ChildPolicy. 
            <para>
             If set, specifies the policy to use for the child workflow executions if the workflow
            execution being started is terminated by calling the <a>TerminateWorkflowExecution</a>
            action explicitly or due to an expired timeout. This policy overrides the default
            child policy specified when registering the workflow type using <a>RegisterWorkflowType</a>.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul> <note> 
            <para>
            A child policy for this workflow execution must be specified either as a default for
            the workflow type or through this parameter. If neither this parameter is set nor
            a default child policy was specified at registration time then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            The data attached to the event that can be used by the decider in subsequent workflow
            tasks. This data isn't sent to the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.ExecutionStartToCloseTimeout">
            <summary>
            Gets and sets the property ExecutionStartToCloseTimeout. 
            <para>
            The total duration for this workflow execution. This overrides the defaultExecutionStartToCloseTimeout
            specified when registering the workflow type.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
             <note> 
            <para>
            An execution start-to-close timeout for this workflow execution must be specified
            either as a default for the workflow type or through this parameter. If neither this
            parameter is set nor a default execution start-to-close timeout was specified at registration
            time then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The input to be provided to the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.LambdaRole">
            <summary>
            Gets and sets the property LambdaRole. 
            <para>
            The IAM role attached to the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.TagList">
            <summary>
            Gets and sets the property TagList. 
            <para>
            The list of tags to associate with the child workflow execution. A maximum of 5 tags
            can be specified. You can list workflow executions with a specific tag by calling
            <a>ListOpenWorkflowExecutions</a> or <a>ListClosedWorkflowExecutions</a> and specifying
            a <a>TagFilter</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The name of the task list to be used for decision tasks of the child workflow execution.
            </para>
             <note> 
            <para>
            A task list for this workflow execution must be specified either as a default for
            the workflow type or through this parameter. If neither this parameter is set nor
            a default task list was specified at registration time then a fault is returned.
            </para>
             </note> 
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not contain the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.TaskPriority">
            <summary>
            Gets and sets the property TaskPriority. 
            <para>
             A task priority that, if set, specifies the priority for a decision task of this
            workflow execution. This overrides the defaultTaskPriority specified when registering
            the workflow type. Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code>
            (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate
            higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.TaskStartToCloseTimeout">
            <summary>
            Gets and sets the property TaskStartToCloseTimeout. 
            <para>
            Specifies the maximum duration of decision tasks for this workflow execution. This
            parameter overrides the <code>defaultTaskStartToCloseTimout</code> specified when
            registering the workflow type using <a>RegisterWorkflowType</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
             <note> 
            <para>
            A task start-to-close timeout for this workflow execution must be specified either
            as a default for the workflow type or through this parameter. If neither this parameter
            is set nor a default task start-to-close timeout was specified at registration time
            then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
             The <code>workflowId</code> of the workflow execution.
            </para>
             
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not contain the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionDecisionAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
             The type of the workflow execution to be started.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionFailedEventAttributes">
            <summary>
            Provides the details of the <code>StartChildWorkflowExecutionFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            When <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            fails because it lacks sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">
            Using IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer
            Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionFailedEventAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            The data attached to the event that the decider can use in subsequent workflow tasks.
            This data isn't sent to the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>StartChildWorkflowExecution</code> <a>Decision</a>
            to request this child workflow execution. This information can be useful for diagnosing
            problems by tracing back the chain of events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionFailedEventAttributes.InitiatedEventId">
            <summary>
            Gets and sets the property InitiatedEventId. 
            <para>
            When the <code>cause</code> is <code>WORKFLOW_ALREADY_RUNNING</code>, <code>initiatedEventId</code>
            is the ID of the <code>StartChildWorkflowExecutionInitiated</code> event that corresponds
            to the <code>StartChildWorkflowExecution</code> <a>Decision</a> to start the workflow
            execution. You can use this information to diagnose problems by tracing back the chain
            of events leading up to this event.
            </para>
             
            <para>
            When the <code>cause</code> isn't <code>WORKFLOW_ALREADY_RUNNING</code>, <code>initiatedEventId</code>
            is set to <code>0</code> because the <code>StartChildWorkflowExecutionInitiated</code>
            event doesn't exist.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionFailedEventAttributes.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The <code>workflowId</code> of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionFailedEventAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The workflow type provided in the <code>StartChildWorkflowExecution</code> <a>Decision</a>
            that failed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes">
            <summary>
            Provides the details of the <code>StartChildWorkflowExecutionInitiated</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.ChildPolicy">
            <summary>
            Gets and sets the property ChildPolicy. 
            <para>
            The policy to use for the child workflow executions if this execution gets terminated
            by explicitly calling the <a>TerminateWorkflowExecution</a> action or due to an expired
            timeout.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            Data attached to the event that can be used by the decider in subsequent decision
            tasks. This data isn't sent to the activity.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>StartChildWorkflowExecution</code> <a>Decision</a>
            to request this child workflow execution. This information can be useful for diagnosing
            problems by tracing back the cause of events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.ExecutionStartToCloseTimeout">
            <summary>
            Gets and sets the property ExecutionStartToCloseTimeout. 
            <para>
            The maximum duration for the child workflow execution. If the workflow execution isn't
            closed within this duration, it is timed out and force-terminated.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The inputs provided to the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.LambdaRole">
            <summary>
            Gets and sets the property LambdaRole. 
            <para>
            The IAM role to attach to the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.TagList">
            <summary>
            Gets and sets the property TagList. 
            <para>
            The list of tags to associated with the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The name of the task list used for the decision tasks of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.TaskPriority">
            <summary>
            Gets and sets the property TaskPriority. 
            <para>
             The priority assigned for the decision tasks for this workflow execution. Valid values
            are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to
            <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.TaskStartToCloseTimeout">
            <summary>
            Gets and sets the property TaskStartToCloseTimeout. 
            <para>
            The maximum duration allowed for the decision tasks for this workflow execution.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The <code>workflowId</code> of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartChildWorkflowExecutionInitiatedEventAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The type of the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.StartLambdaFunctionFailedEventAttributes">
            <summary>
            Provides the details of the <code>StartLambdaFunctionFailed</code> event. It isn't
            set for other event types.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartLambdaFunctionFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. To help diagnose issues, use this information to trace back
            the chain of events leading up to this event.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because the IAM role attached to the execution lacked sufficient permissions.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html">Lambda
            Tasks</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartLambdaFunctionFailedEventAttributes.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A description that can help diagnose the cause of the fault.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartLambdaFunctionFailedEventAttributes.ScheduledEventId">
            <summary>
            Gets and sets the property ScheduledEventId. 
            <para>
            The ID of the <code>ActivityTaskScheduled</code> event that was recorded when this
            activity task was scheduled. To help diagnose issues, use this information to trace
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.StartTimerDecisionAttributes">
            <summary>
            Provides the details of the <code>StartTimer</code> decision.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this decision's access to Amazon SWF resources
            as follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartTimerDecisionAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            The data attached to the event that can be used by the decider in subsequent workflow
            tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartTimerDecisionAttributes.StartToFireTimeout">
            <summary>
            Gets and sets the property StartToFireTimeout. 
            <para>
             The duration to wait before firing the timer.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartTimerDecisionAttributes.TimerId">
            <summary>
            Gets and sets the property TimerId. 
            <para>
             The unique ID of the timer.
            </para>
             
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not contain the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.StartTimerFailedEventAttributes">
            <summary>
            Provides the details of the <code>StartTimerFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartTimerFailedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            The cause of the failure. This information is generated by the system and can be useful
            for diagnostic purposes.
            </para>
             <note> 
            <para>
            If <code>cause</code> is set to <code>OPERATION_NOT_PERMITTED</code>, the decision
            failed because it lacked sufficient permissions. For details and example IAM policies,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartTimerFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>StartTimer</code> decision for this activity task.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartTimerFailedEventAttributes.TimerId">
            <summary>
            Gets and sets the property TimerId. 
            <para>
            The timerId provided in the <code>StartTimer</code> decision that failed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest">
            <summary>
            Container for the parameters to the StartWorkflowExecution operation.
            Starts an execution of the workflow type in the specified domain using the provided
            <code>workflowId</code> and input data.
            
             
            <para>
            This action returns the newly started workflow execution.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagList.member.0</code>: The key is <code>swf:tagList.member.0</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.1</code>: The key is <code>swf:tagList.member.1</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.2</code>: The key is <code>swf:tagList.member.2</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.3</code>: The key is <code>swf:tagList.member.3</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.4</code>: The key is <code>swf:tagList.member.4</code>.
            </para>
             </li> <li> 
            <para>
             <code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.ChildPolicy">
            <summary>
            Gets and sets the property ChildPolicy. 
            <para>
            If set, specifies the policy to use for the child workflow executions of this workflow
            execution if it is terminated, by calling the <a>TerminateWorkflowExecution</a> action
            explicitly or due to an expired timeout. This policy overrides the default child policy
            specified when registering the workflow type using <a>RegisterWorkflowType</a>.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul> <note> 
            <para>
            A child policy for this workflow execution must be specified either as a default for
            the workflow type or through this parameter. If neither this parameter is set nor
            a default child policy was specified at registration time then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain in which the workflow execution is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.ExecutionStartToCloseTimeout">
            <summary>
            Gets and sets the property ExecutionStartToCloseTimeout. 
            <para>
            The total duration for this workflow execution. This overrides the defaultExecutionStartToCloseTimeout
            specified when registering the workflow type.
            </para>
             
            <para>
            The duration is specified in seconds; an integer greater than or equal to <code>0</code>.
            Exceeding this limit causes the workflow execution to time out. Unlike some of the
            other timeout parameters in Amazon SWF, you cannot specify a value of "NONE" for this
            timeout; there is a one-year max limit on the time that a workflow execution can run.
            </para>
             <note> 
            <para>
            An execution start-to-close timeout must be specified either through this parameter
            or as a default when the workflow type is registered. If neither this parameter nor
            a default execution start-to-close timeout is specified, a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The input for the workflow execution. This is a free form string which should be meaningful
            to the workflow you are starting. This <code>input</code> is made available to the
            new workflow execution in the <code>WorkflowExecutionStarted</code> history event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.LambdaRole">
            <summary>
            Gets and sets the property LambdaRole. 
            <para>
            The IAM role to attach to this workflow execution.
            </para>
             <note> 
            <para>
            Executions of this workflow type need IAM roles to invoke Lambda functions. If you
            don't attach an IAM role, any attempt to schedule a Lambda task fails. This results
            in a <code>ScheduleLambdaFunctionFailed</code> history event. For more information,
            see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html">https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html</a>
            in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.TagList">
            <summary>
            Gets and sets the property TagList. 
            <para>
            The list of tags to associate with the workflow execution. You can specify a maximum
            of 5 tags. You can list workflow executions with a specific tag by calling <a>ListOpenWorkflowExecutions</a>
            or <a>ListClosedWorkflowExecutions</a> and specifying a <a>TagFilter</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The task list to use for the decision tasks generated for this workflow execution.
            This overrides the <code>defaultTaskList</code> specified when registering the workflow
            type.
            </para>
             <note> 
            <para>
            A task list for this workflow execution must be specified either as a default for
            the workflow type or through this parameter. If neither this parameter is set nor
            a default task list was specified at registration time then a fault is returned.
            </para>
             </note> 
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.TaskPriority">
            <summary>
            Gets and sets the property TaskPriority. 
            <para>
            The task priority to use for this workflow execution. This overrides any default priority
            that was assigned when the workflow type was registered. If not set, then the default
            task priority for the workflow type is used. Valid values are integers that range
            from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code>
            (2147483647). Higher numbers indicate higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.TaskStartToCloseTimeout">
            <summary>
            Gets and sets the property TaskStartToCloseTimeout. 
            <para>
            Specifies the maximum duration of decision tasks for this workflow execution. This
            parameter overrides the <code>defaultTaskStartToCloseTimout</code> specified when
            registering the workflow type using <a>RegisterWorkflowType</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
             <note> 
            <para>
            A task start-to-close timeout for this workflow execution must be specified either
            as a default for the workflow type or through this parameter. If neither this parameter
            is set nor a default task start-to-close timeout was specified at registration time
            then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The user defined identifier associated with the workflow execution. You can use this
            to associate a custom identifier with the workflow execution. You may specify the
            same identifier if a workflow execution is logically a <i>restart</i> of a previous
            execution. You cannot have two open workflow executions with the same <code>workflowId</code>
            at the same time within the same domain.
            </para>
             
            <para>
            The specified string must not start or end with whitespace. It must not contain a
            <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or
            any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>).
            Also, it must not <i>be</i> the literal string <code>arn</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The type of the workflow to start.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionResponse">
            <summary>
            Contains the response data from the StartWorkflowExecution operation.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.StartWorkflowExecutionResponse.Run">
            <summary>
            Gets and sets the Run member
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TagFilter">
            <summary>
            Used to filter the workflow executions in visibility APIs based on a tag.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TagFilter.Tag">
            <summary>
            Gets and sets the property Tag. 
            <para>
             Specifies the tag that must be associated with the execution for it to meet the filter
            criteria.
            </para>
             
            <para>
            Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_
            . : / = + - @</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TagResourceRequest">
            <summary>
            Container for the parameters to the TagResource operation.
            Add a tag to a Amazon SWF domain.
            
             <note> 
            <para>
            Amazon SWF supports a maximum of 50 tags per resource.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) for the Amazon SWF domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TagResourceRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The list of tags to add to a domain. 
            </para>
             
            <para>
            Tags may only contain unicode letters, digits, whitespace, or these symbols: <code>_
            . : / = + - @</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TagResourceResponse">
            <summary>
            This is the response object from the TagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TaskList">
            <summary>
            Represents a task list.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TaskList.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the task list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest">
            <summary>
            Container for the parameters to the TerminateWorkflowExecution operation.
            Records a <code>WorkflowExecutionTerminated</code> event and forces closure of the
            workflow execution identified by the given domain, runId, and workflowId. The child
            policy, registered with the workflow type or specified when starting this execution,
            is applied to any open child workflow executions of this workflow execution.
            
             <important> 
            <para>
            If the identified workflow execution was in progress, it is terminated immediately.
            </para>
             </important> <note> 
            <para>
            If a runId isn't specified, then the <code>WorkflowExecutionTerminated</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para>
             </note> <note> 
            <para>
            You should consider using <a>RequestCancelWorkflowExecution</a> action instead because
            it allows the workflow to gracefully close while <a>TerminateWorkflowExecution</a>
            doesn't.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest.ChildPolicy">
            <summary>
            Gets and sets the property ChildPolicy. 
            <para>
            If set, specifies the policy to use for the child workflow executions of the workflow
            execution being terminated. This policy overrides the child policy specified for the
            workflow execution at registration time or when starting the execution.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul> <note> 
            <para>
            A child policy for this workflow execution must be specified either as a default for
            the workflow type or through this parameter. If neither this parameter is set nor
            a default child policy was specified at registration time then a fault is returned.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
             Details for terminating the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The domain of the workflow execution to terminate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
             A descriptive reason for terminating the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            The runId of the workflow execution to terminate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The workflowId of the workflow execution to terminate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionResponse">
            <summary>
            This is the response object from the TerminateWorkflowExecution operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TimerCanceledEventAttributes">
            <summary>
            Provides the details of the <code>TimerCanceled</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TimerCanceledEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>CancelTimer</code> decision to cancel this timer.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TimerCanceledEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>TimerStarted</code> event that was recorded when this timer was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TimerCanceledEventAttributes.TimerId">
            <summary>
            Gets and sets the property TimerId. 
            <para>
            The unique ID of the timer that was canceled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TimerFiredEventAttributes">
            <summary>
            Provides the details of the <code>TimerFired</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TimerFiredEventAttributes.StartedEventId">
            <summary>
            Gets and sets the property StartedEventId. 
            <para>
            The ID of the <code>TimerStarted</code> event that was recorded when this timer was
            started. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TimerFiredEventAttributes.TimerId">
            <summary>
            Gets and sets the property TimerId. 
            <para>
            The unique ID of the timer that fired.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TimerStartedEventAttributes">
            <summary>
            Provides the details of the <code>TimerStarted</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TimerStartedEventAttributes.Control">
            <summary>
            Gets and sets the property Control. 
            <para>
            Data attached to the event that can be used by the decider in subsequent workflow
            tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TimerStartedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>StartTimer</code> decision for this activity task.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TimerStartedEventAttributes.StartToFireTimeout">
            <summary>
            Gets and sets the property StartToFireTimeout. 
            <para>
            The duration of time after which the timer fires.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.TimerStartedEventAttributes.TimerId">
            <summary>
            Gets and sets the property TimerId. 
            <para>
            The unique ID of the timer that was started.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TooManyTagsException">
            <summary>
            You've exceeded the number of tags allowed for a domain.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TooManyTagsException.#ctor(System.String)">
            <summary>
            Constructs a new TooManyTagsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TooManyTagsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TooManyTagsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TooManyTagsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TooManyTagsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TooManyTagsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TooManyTagsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TooManyTagsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TooManyTagsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            <summary>
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new TypeAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TypeAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of TypeAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TypeAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TypeAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TypeAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            <summary>
            Returned when the specified activity or workflow type was already deprecated.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeDeprecatedException.#ctor(System.String)">
            <summary>
            Constructs a new TypeDeprecatedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeDeprecatedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TypeDeprecatedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeDeprecatedException.#ctor(System.Exception)">
            <summary>
            Construct instance of TypeDeprecatedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeDeprecatedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TypeDeprecatedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeDeprecatedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TypeDeprecatedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeDeprecatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the TypeDeprecatedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.TypeDeprecatedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.UndeprecateActivityTypeRequest">
            <summary>
            Container for the parameters to the UndeprecateActivityType operation.
            Undeprecates a previously deprecated <i>activity type</i>. After an activity type
            has been undeprecated, you can create new tasks of that activity type.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.UndeprecateActivityTypeRequest.ActivityType">
            <summary>
            Gets and sets the property ActivityType. 
            <para>
            The activity type to undeprecate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.UndeprecateActivityTypeRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain of the deprecated activity type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.UndeprecateActivityTypeResponse">
            <summary>
            This is the response object from the UndeprecateActivityType operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.UndeprecateDomainRequest">
            <summary>
            Container for the parameters to the UndeprecateDomain operation.
            Undeprecates a previously deprecated domain. After a domain has been undeprecated
            it can be used to create new workflow executions or register new types.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.UndeprecateDomainRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the domain of the deprecated workflow type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.UndeprecateDomainResponse">
            <summary>
            This is the response object from the UndeprecateDomain operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.UndeprecateWorkflowTypeRequest">
            <summary>
            Container for the parameters to the UndeprecateWorkflowType operation.
            Undeprecates a previously deprecated <i>workflow type</i>. After a workflow type has
            been undeprecated, you can create new executions of that type. 
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.UndeprecateWorkflowTypeRequest.Domain">
            <summary>
            Gets and sets the property Domain. 
            <para>
            The name of the domain of the deprecated workflow type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.UndeprecateWorkflowTypeRequest.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The name of the domain of the deprecated workflow type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.UndeprecateWorkflowTypeResponse">
            <summary>
            This is the response object from the UndeprecateWorkflowType operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            <summary>
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.UnknownResourceException.#ctor(System.String)">
            <summary>
            Constructs a new UnknownResourceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.UnknownResourceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnknownResourceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.UnknownResourceException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnknownResourceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.UnknownResourceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnknownResourceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.UnknownResourceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnknownResourceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.UnknownResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the UnknownResourceException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.UnknownResourceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.UntagResourceRequest">
            <summary>
            Container for the parameters to the UntagResource operation.
            Remove a tag from a Amazon SWF domain.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.UntagResourceRequest.ResourceArn">
            <summary>
            Gets and sets the property ResourceArn. 
            <para>
            The Amazon Resource Name (ARN) for the Amazon SWF domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.UntagResourceRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            The list of tags to remove from the Amazon SWF domain.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.UntagResourceResponse">
            <summary>
            This is the response object from the UntagResource operation.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecution">
            <summary>
            Represents a workflow execution.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecution.RunId">
            <summary>
            Gets and sets the property RunId. 
            <para>
            A system-generated unique identifier for the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecution.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The user defined identifier associated with the workflow execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException">
            <summary>
            Returned by <a>StartWorkflowExecution</a> when an open execution with the same workflowId
            is already running in the specified domain.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException.#ctor(System.String)">
            <summary>
            Constructs a new WorkflowExecutionAlreadyStartedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of WorkflowExecutionAlreadyStartedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException.#ctor(System.Exception)">
            <summary>
            Construct instance of WorkflowExecutionAlreadyStartedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of WorkflowExecutionAlreadyStartedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of WorkflowExecutionAlreadyStartedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the WorkflowExecutionAlreadyStartedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionCanceledEventAttributes">
            <summary>
            Provides the details of the <code>WorkflowExecutionCanceled</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionCanceledEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>CancelWorkflowExecution</code> decision for this cancellation
            request. This information can be useful for diagnosing problems by tracing back the
            chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionCanceledEventAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The details of the cancellation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionCancelRequestedEventAttributes">
            <summary>
            Provides the details of the <code>WorkflowExecutionCancelRequested</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionCancelRequestedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            If set, indicates that the request to cancel the workflow execution was automatically
            generated, and specifies the cause. This happens if the parent workflow execution
            times out or is terminated, and the child policy is set to cancel child executions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionCancelRequestedEventAttributes.ExternalInitiatedEventId">
            <summary>
            Gets and sets the property ExternalInitiatedEventId. 
            <para>
            The ID of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event corresponding
            to the <code>RequestCancelExternalWorkflowExecution</code> decision to cancel this
            workflow execution.The source event with this ID can be found in the history of the
            source workflow execution. This information can be useful for diagnosing problems
            by tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionCancelRequestedEventAttributes.ExternalWorkflowExecution">
            <summary>
            Gets and sets the property ExternalWorkflowExecution. 
            <para>
            The external workflow execution for which the cancellation was requested.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionCompletedEventAttributes">
            <summary>
            Provides the details of the <code>WorkflowExecutionCompleted</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionCompletedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>CompleteWorkflowExecution</code> decision to complete
            this execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionCompletedEventAttributes.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The result produced by the workflow execution upon successful completion.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionConfiguration">
            <summary>
            The configuration settings for a workflow execution including timeout values, tasklist
            etc. These configuration settings are determined from the defaults specified when
            registering the workflow type and those specified when starting the workflow execution.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionConfiguration.ChildPolicy">
            <summary>
            Gets and sets the property ChildPolicy. 
            <para>
            The policy to use for the child workflow executions if this workflow execution is
            terminated, by calling the <a>TerminateWorkflowExecution</a> action explicitly or
            due to an expired timeout.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionConfiguration.ExecutionStartToCloseTimeout">
            <summary>
            Gets and sets the property ExecutionStartToCloseTimeout. 
            <para>
            The total duration for this workflow execution.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionConfiguration.LambdaRole">
            <summary>
            Gets and sets the property LambdaRole. 
            <para>
            The IAM role attached to the child workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionConfiguration.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The task list used for the decision tasks generated for this workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionConfiguration.TaskPriority">
            <summary>
            Gets and sets the property TaskPriority. 
            <para>
            The priority assigned to decision tasks for this workflow execution. Valid values
            are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to
            <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionConfiguration.TaskStartToCloseTimeout">
            <summary>
            Gets and sets the property TaskStartToCloseTimeout. 
            <para>
            The maximum duration allowed for decision tasks for this workflow execution.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes">
            <summary>
            Provides the details of the <code>WorkflowExecutionContinuedAsNew</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.ChildPolicy">
            <summary>
            Gets and sets the property ChildPolicy. 
            <para>
            The policy to use for the child workflow executions of the new execution if it is
            terminated by calling the <a>TerminateWorkflowExecution</a> action explicitly or due
            to an expired timeout.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>ContinueAsNewWorkflowExecution</code> decision that
            started this execution. This information can be useful for diagnosing problems by
            tracing back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.ExecutionStartToCloseTimeout">
            <summary>
            Gets and sets the property ExecutionStartToCloseTimeout. 
            <para>
            The total duration allowed for the new workflow execution.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The input provided to the new workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.LambdaRole">
            <summary>
            Gets and sets the property LambdaRole. 
            <para>
            The IAM role to attach to the new (continued) workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.NewExecutionRunId">
            <summary>
            Gets and sets the property NewExecutionRunId. 
            <para>
            The <code>runId</code> of the new workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.TagList">
            <summary>
            Gets and sets the property TagList. 
            <para>
            The list of tags associated with the new workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The task list to use for the decisions of the new (continued) workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.TaskPriority">
            <summary>
            Gets and sets the property TaskPriority. 
            <para>
            The priority of the task to use for the decisions of the new (continued) workflow
            execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.TaskStartToCloseTimeout">
            <summary>
            Gets and sets the property TaskStartToCloseTimeout. 
            <para>
            The maximum duration of decision tasks for the new workflow execution.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionContinuedAsNewEventAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The workflow type of this execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionCount">
            <summary>
            Contains the count of workflow executions returned from <a>CountOpenWorkflowExecutions</a>
            or <a>CountClosedWorkflowExecutions</a>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionCount.Count">
            <summary>
            Gets and sets the property Count. 
            <para>
            The number of workflow executions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionCount.Truncated">
            <summary>
            Gets and sets the property Truncated. 
            <para>
            If set to true, indicates that the actual count was more than the maximum supported
            by this API and the count returned is the truncated value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionDetail">
            <summary>
            Contains details about a workflow execution.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionDetail.ExecutionConfiguration">
            <summary>
            Gets and sets the property ExecutionConfiguration. 
            <para>
            The configuration settings for this workflow execution including timeout values, tasklist
            etc.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionDetail.ExecutionInfo">
            <summary>
            Gets and sets the property ExecutionInfo. 
            <para>
            Information about the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionDetail.LatestActivityTaskTimestamp">
            <summary>
            Gets and sets the property LatestActivityTaskTimestamp. 
            <para>
            The time when the last activity task was scheduled for this workflow execution. You
            can use this information to determine if the workflow has not made progress for an
            unusually long period of time and might require a corrective action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionDetail.LatestExecutionContext">
            <summary>
            Gets and sets the property LatestExecutionContext. 
            <para>
            The latest executionContext provided by the decider for this workflow execution. A
            decider can provide an executionContext (a free-form string) when closing a decision
            task using <a>RespondDecisionTaskCompleted</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionDetail.OpenCounts">
            <summary>
            Gets and sets the property OpenCounts. 
            <para>
            The number of tasks for this workflow execution. This includes open and closed tasks
            of all types.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionFailedEventAttributes">
            <summary>
            Provides the details of the <code>WorkflowExecutionFailed</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionFailedEventAttributes.DecisionTaskCompletedEventId">
            <summary>
            Gets and sets the property DecisionTaskCompletedEventId. 
            <para>
            The ID of the <code>DecisionTaskCompleted</code> event corresponding to the decision
            task that resulted in the <code>FailWorkflowExecution</code> decision to fail this
            execution. This information can be useful for diagnosing problems by tracing back
            the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionFailedEventAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The details of the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionFailedEventAttributes.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The descriptive reason provided for the failure.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionFilter">
            <summary>
            Used to filter the workflow executions in visibility APIs by their <code>workflowId</code>.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionFilter.WorkflowId">
            <summary>
            Gets and sets the property WorkflowId. 
            <para>
            The workflowId to pass of match the criteria of this filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfo">
            <summary>
            Contains information about a workflow execution.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfo.CancelRequested">
            <summary>
            Gets and sets the property CancelRequested. 
            <para>
            Set to true if a cancellation is requested for this workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfo.CloseStatus">
            <summary>
            Gets and sets the property CloseStatus. 
            <para>
            If the execution status is closed then this specifies how the execution was closed:
            </para>
             <ul> <li> 
            <para>
             <code>COMPLETED</code> – the execution was successfully completed.
            </para>
             </li> <li> 
            <para>
             <code>CANCELED</code> – the execution was canceled.Cancellation allows the implementation
            to gracefully clean up before the execution is closed.
            </para>
             </li> <li> 
            <para>
             <code>TERMINATED</code> – the execution was force terminated.
            </para>
             </li> <li> 
            <para>
             <code>FAILED</code> – the execution failed to complete.
            </para>
             </li> <li> 
            <para>
             <code>TIMED_OUT</code> – the execution did not complete in the alloted time and was
            automatically timed out.
            </para>
             </li> <li> 
            <para>
             <code>CONTINUED_AS_NEW</code> – the execution is logically continued. This means
            the current execution was completed and a new execution was started to carry on the
            workflow.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfo.CloseTimestamp">
            <summary>
            Gets and sets the property CloseTimestamp. 
            <para>
            The time when the workflow execution was closed. Set only if the execution status
            is CLOSED.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfo.Execution">
            <summary>
            Gets and sets the property Execution. 
            <para>
            The workflow execution this information is about.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfo.ExecutionStatus">
            <summary>
            Gets and sets the property ExecutionStatus. 
            <para>
            The current status of the execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfo.Parent">
            <summary>
            Gets and sets the property Parent. 
            <para>
            If this workflow execution is a child of another execution then contains the workflow
            execution that started this execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfo.StartTimestamp">
            <summary>
            Gets and sets the property StartTimestamp. 
            <para>
            The time when the execution was started.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfo.TagList">
            <summary>
            Gets and sets the property TagList. 
            <para>
            The list of tags associated with the workflow execution. Tags can be used to identify
            and list workflow executions of interest through the visibility APIs. A workflow execution
            can have a maximum of 5 tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfo.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The type of the workflow execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfos">
            <summary>
            Contains a paginated list of information about workflow executions.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfos.ExecutionInfos">
            <summary>
            Gets and sets the property ExecutionInfos. 
            <para>
            The list of workflow information structures.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionInfos.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If a <code>NextPageToken</code> was returned by a previous call, there are more results
            available. To retrieve the next page of results, make the call again using the returned
            token in <code>nextPageToken</code>. Keep all other arguments unchanged.
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionOpenCounts">
            <summary>
            Contains the counts of open tasks, child workflow executions and timers for a workflow
            execution.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionOpenCounts.OpenActivityTasks">
            <summary>
            Gets and sets the property OpenActivityTasks. 
            <para>
            The count of activity tasks whose status is <code>OPEN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionOpenCounts.OpenChildWorkflowExecutions">
            <summary>
            Gets and sets the property OpenChildWorkflowExecutions. 
            <para>
            The count of child workflow executions whose status is <code>OPEN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionOpenCounts.OpenDecisionTasks">
            <summary>
            Gets and sets the property OpenDecisionTasks. 
            <para>
            The count of decision tasks whose status is OPEN. A workflow execution can have at
            most one open decision task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionOpenCounts.OpenLambdaFunctions">
            <summary>
            Gets and sets the property OpenLambdaFunctions. 
            <para>
            The count of Lambda tasks whose status is <code>OPEN</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionOpenCounts.OpenTimers">
            <summary>
            Gets and sets the property OpenTimers. 
            <para>
            The count of timers started by this workflow execution that have not fired yet.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionSignaledEventAttributes">
            <summary>
            Provides the details of the <code>WorkflowExecutionSignaled</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionSignaledEventAttributes.ExternalInitiatedEventId">
            <summary>
            Gets and sets the property ExternalInitiatedEventId. 
            <para>
            The ID of the <code>SignalExternalWorkflowExecutionInitiated</code> event corresponding
            to the <code>SignalExternalWorkflow</code> decision to signal this workflow execution.The
            source event with this ID can be found in the history of the source workflow execution.
            This information can be useful for diagnosing problems by tracing back the chain of
            events leading up to this event. This field is set only if the signal was initiated
            by another workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionSignaledEventAttributes.ExternalWorkflowExecution">
            <summary>
            Gets and sets the property ExternalWorkflowExecution. 
            <para>
            The workflow execution that sent the signal. This is set only of the signal was sent
            by another workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionSignaledEventAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The inputs provided with the signal. The decider can use the signal name and inputs
            to determine how to process the signal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionSignaledEventAttributes.SignalName">
            <summary>
            Gets and sets the property SignalName. 
            <para>
            The name of the signal received. The decider can use the signal name and inputs to
            determine how to the process the signal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes">
            <summary>
            Provides details of <code>WorkflowExecutionStarted</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.ChildPolicy">
            <summary>
            Gets and sets the property ChildPolicy. 
            <para>
            The policy to use for the child workflow executions if this workflow execution is
            terminated, by calling the <a>TerminateWorkflowExecution</a> action explicitly or
            due to an expired timeout.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.ContinuedExecutionRunId">
            <summary>
            Gets and sets the property ContinuedExecutionRunId. 
            <para>
            If this workflow execution was started due to a <code>ContinueAsNewWorkflowExecution</code>
            decision, then it contains the <code>runId</code> of the previous workflow execution
            that was closed and continued as this execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.ExecutionStartToCloseTimeout">
            <summary>
            Gets and sets the property ExecutionStartToCloseTimeout. 
            <para>
            The maximum duration for this workflow execution.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.Input">
            <summary>
            Gets and sets the property Input. 
            <para>
            The input provided to the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.LambdaRole">
            <summary>
            Gets and sets the property LambdaRole. 
            <para>
            The IAM role attached to the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.ParentInitiatedEventId">
            <summary>
            Gets and sets the property ParentInitiatedEventId. 
            <para>
            The ID of the <code>StartChildWorkflowExecutionInitiated</code> event corresponding
            to the <code>StartChildWorkflowExecution</code> <a>Decision</a> to start this workflow
            execution. The source event with this ID can be found in the history of the source
            workflow execution. This information can be useful for diagnosing problems by tracing
            back the chain of events leading up to this event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.ParentWorkflowExecution">
            <summary>
            Gets and sets the property ParentWorkflowExecution. 
            <para>
            The source workflow execution that started this workflow execution. The member isn't
            set if the workflow execution was not started by a workflow.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.TagList">
            <summary>
            Gets and sets the property TagList. 
            <para>
            The list of tags associated with this workflow execution. An execution can have up
            to 5 tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.TaskList">
            <summary>
            Gets and sets the property TaskList. 
            <para>
            The name of the task list for scheduling the decision tasks for this workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.TaskPriority">
            <summary>
            Gets and sets the property TaskPriority. 
            <para>
            The priority of the decision tasks in the workflow execution.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.TaskStartToCloseTimeout">
            <summary>
            Gets and sets the property TaskStartToCloseTimeout. 
            <para>
            The maximum duration of decision tasks for this workflow type.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionStartedEventAttributes.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The workflow type of this execution.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionTerminatedEventAttributes">
            <summary>
            Provides the details of the <code>WorkflowExecutionTerminated</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionTerminatedEventAttributes.Cause">
            <summary>
            Gets and sets the property Cause. 
            <para>
            If set, indicates that the workflow execution was automatically terminated, and specifies
            the cause. This happens if the parent workflow execution times out or is terminated
            and the child policy is set to terminate child executions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionTerminatedEventAttributes.ChildPolicy">
            <summary>
            Gets and sets the property ChildPolicy. 
            <para>
            The policy used for the child workflow executions of this workflow execution.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionTerminatedEventAttributes.Details">
            <summary>
            Gets and sets the property Details. 
            <para>
            The details provided for the termination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionTerminatedEventAttributes.Reason">
            <summary>
            Gets and sets the property Reason. 
            <para>
            The reason provided for the termination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionTimedOutEventAttributes">
            <summary>
            Provides the details of the <code>WorkflowExecutionTimedOut</code> event.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionTimedOutEventAttributes.ChildPolicy">
            <summary>
            Gets and sets the property ChildPolicy. 
            <para>
            The policy used for the child workflow executions of this workflow execution.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowExecutionTimedOutEventAttributes.TimeoutType">
            <summary>
            Gets and sets the property TimeoutType. 
            <para>
            The type of timeout that caused this event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowType">
            <summary>
            Represents a workflow type.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowType.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
             The name of the workflow type.
            </para>
             <note> 
            <para>
            The combination of workflow type name and version must be unique with in a domain.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowType.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
             The version of the workflow type.
            </para>
             <note> 
            <para>
            The combination of workflow type name and version must be unique with in a domain.
            </para>
             </note>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowTypeConfiguration">
            <summary>
            The configuration settings of a workflow type.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeConfiguration.DefaultChildPolicy">
            <summary>
            Gets and sets the property DefaultChildPolicy. 
            <para>
             The default policy to use for the child workflow executions when a workflow execution
            of this type is terminated, by calling the <a>TerminateWorkflowExecution</a> action
            explicitly or due to an expired timeout. This default can be overridden when starting
            a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code>
            <a>Decision</a>.
            </para>
             
            <para>
            The supported child policies are:
            </para>
             <ul> <li> 
            <para>
             <code>TERMINATE</code> – The child executions are terminated.
            </para>
             </li> <li> 
            <para>
             <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child execution
            by recording a <code>WorkflowExecutionCancelRequested</code> event in its history.
            It is up to the decider to take appropriate actions when it receives an execution
            history with this event.
            </para>
             </li> <li> 
            <para>
             <code>ABANDON</code> – No action is taken. The child executions continue to run.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeConfiguration.DefaultExecutionStartToCloseTimeout">
            <summary>
            Gets and sets the property DefaultExecutionStartToCloseTimeout. 
            <para>
             The default maximum duration, specified when registering the workflow type, for executions
            of this workflow type. This default can be overridden when starting a workflow execution
            using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code>
            <a>Decision</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeConfiguration.DefaultLambdaRole">
            <summary>
            Gets and sets the property DefaultLambdaRole. 
            <para>
            The default IAM role attached to this workflow type.
            </para>
             <note> 
            <para>
            Executions of this workflow type need IAM roles to invoke Lambda functions. If you
            don't specify an IAM role when starting this workflow type, the default Lambda role
            is attached to the execution. For more information, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html">https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html</a>
            in the <i>Amazon SWF Developer Guide</i>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeConfiguration.DefaultTaskList">
            <summary>
            Gets and sets the property DefaultTaskList. 
            <para>
             The default task list, specified when registering the workflow type, for decisions
            tasks scheduled for workflow executions of this type. This default can be overridden
            when starting a workflow execution using the <a>StartWorkflowExecution</a> action
            or the <code>StartChildWorkflowExecution</code> <a>Decision</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeConfiguration.DefaultTaskPriority">
            <summary>
            Gets and sets the property DefaultTaskPriority. 
            <para>
             The default task priority, specified when registering the workflow type, for all
            decision tasks of this workflow type. This default can be overridden when starting
            a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code>
            decision.
            </para>
             
            <para>
            Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648)
            to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.
            </para>
             
            <para>
            For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting
            Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeConfiguration.DefaultTaskStartToCloseTimeout">
            <summary>
            Gets and sets the property DefaultTaskStartToCloseTimeout. 
            <para>
             The default maximum duration, specified when registering the workflow type, that
            a decision task for executions of this workflow type might take before returning completion
            or failure. If the task doesn'tdo close in the specified time then the task is automatically
            timed out and rescheduled. If the decider eventually reports a completion or failure,
            it is ignored. This default can be overridden when starting a workflow execution using
            the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code>
            <a>Decision</a>.
            </para>
             
            <para>
            The duration is specified in seconds, an integer greater than or equal to <code>0</code>.
            You can use <code>NONE</code> to specify unlimited duration.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowTypeDetail">
            <summary>
            Contains details about a workflow type.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeDetail.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            Configuration settings of the workflow type registered through <a>RegisterWorkflowType</a>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeDetail.TypeInfo">
            <summary>
            Gets and sets the property TypeInfo. 
            <para>
            General information about the workflow type.
            </para>
             
            <para>
            The status of the workflow type (returned in the WorkflowTypeInfo structure) can be
            one of the following.
            </para>
             <ul> <li> 
            <para>
             <code>REGISTERED</code> – The type is registered and available. Workers supporting
            this type should be running.
            </para>
             </li> <li> 
            <para>
             <code>DEPRECATED</code> – The type was deprecated using <a>DeprecateWorkflowType</a>,
            but is still in use. You should keep workers supporting this type running. You cannot
            create new workflow executions of this type.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowTypeFilter">
            <summary>
            Used to filter workflow execution query results by type. Each parameter, if specified,
            defines a rule that must be satisfied by each returned result.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeFilter.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
             Name of the workflow type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeFilter.Version">
            <summary>
            Gets and sets the property Version. 
            <para>
            Version of the workflow type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowTypeInfo">
            <summary>
            Contains information about a workflow type.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeInfo.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date when this type was registered.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeInfo.DeprecationDate">
            <summary>
            Gets and sets the property DeprecationDate. 
            <para>
            If the type is in deprecated state, then it is set to the date when the type was deprecated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeInfo.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the type registered through <a>RegisterWorkflowType</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeInfo.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the workflow type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeInfo.WorkflowType">
            <summary>
            Gets and sets the property WorkflowType. 
            <para>
            The workflow type this information is about.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.WorkflowTypeInfos">
            <summary>
            Contains a paginated list of information structures about workflow types.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeInfos.NextPageToken">
            <summary>
            Gets and sets the property NextPageToken. 
            <para>
            If a <code>NextPageToken</code> was returned by a previous call, there are more results
            available. To retrieve the next page of results, make the call again using the returned
            token in <code>nextPageToken</code>. Keep all other arguments unchanged.
            </para>
             
            <para>
            The configured <code>maximumPageSize</code> determines how many results can be returned
            in a single call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.WorkflowTypeInfos.TypeInfos">
            <summary>
            Gets and sets the property TypeInfos. 
            <para>
            The list of workflow type information.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryPaginator">
            <summary>
            Base class for GetWorkflowExecutionHistory paginators.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.IGetWorkflowExecutionHistoryPaginator">
             <summary>
             Paginator for the GetWorkflowExecutionHistory operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IGetWorkflowExecutionHistoryPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IGetWorkflowExecutionHistoryPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.IListActivityTypesPaginator">
             <summary>
             Paginator for the ListActivityTypes operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IListActivityTypesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IListActivityTypesPaginator.TypeInfos">
            <summary>
            Enumerable containing all of the TypeInfos
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.IListClosedWorkflowExecutionsPaginator">
             <summary>
             Paginator for the ListClosedWorkflowExecutions operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IListClosedWorkflowExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IListClosedWorkflowExecutionsPaginator.ExecutionInfos">
            <summary>
            Enumerable containing all of the ExecutionInfos
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.IListDomainsPaginator">
             <summary>
             Paginator for the ListDomains operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IListDomainsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.IListOpenWorkflowExecutionsPaginator">
             <summary>
             Paginator for the ListOpenWorkflowExecutions operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IListOpenWorkflowExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IListOpenWorkflowExecutionsPaginator.ExecutionInfos">
            <summary>
            Enumerable containing all of the ExecutionInfos
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.IListWorkflowTypesPaginator">
             <summary>
             Paginator for the ListWorkflowTypes operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IListWorkflowTypesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IListWorkflowTypesPaginator.TypeInfos">
            <summary>
            Enumerable containing all of the TypeInfos
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.IPollForDecisionTaskPaginator">
             <summary>
             Paginator for the PollForDecisionTask operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IPollForDecisionTaskPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.IPollForDecisionTaskPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ISimpleWorkflowPaginatorFactory">
             <summary>
             Paginators for the SimpleWorkflow service
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.ISimpleWorkflowPaginatorFactory.GetWorkflowExecutionHistory(Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest)">
             <summary>
             Paginator for GetWorkflowExecutionHistory operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.ISimpleWorkflowPaginatorFactory.ListActivityTypes(Amazon.SimpleWorkflow.Model.ListActivityTypesRequest)">
             <summary>
             Paginator for ListActivityTypes operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.ISimpleWorkflowPaginatorFactory.ListClosedWorkflowExecutions(Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest)">
             <summary>
             Paginator for ListClosedWorkflowExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.ISimpleWorkflowPaginatorFactory.ListDomains(Amazon.SimpleWorkflow.Model.ListDomainsRequest)">
             <summary>
             Paginator for ListDomains operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.ISimpleWorkflowPaginatorFactory.ListOpenWorkflowExecutions(Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest)">
             <summary>
             Paginator for ListOpenWorkflowExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.ISimpleWorkflowPaginatorFactory.ListWorkflowTypes(Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest)">
             <summary>
             Paginator for ListWorkflowTypes operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.ISimpleWorkflowPaginatorFactory.PollForDecisionTask(Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest)">
             <summary>
             Paginator for PollForDecisionTask operation
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListActivityTypesPaginator">
            <summary>
            Base class for ListActivityTypes paginators.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListActivityTypesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListActivityTypesPaginator.TypeInfos">
            <summary>
            Enumerable containing all of the TypeInfos
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsPaginator">
            <summary>
            Base class for ListClosedWorkflowExecutions paginators.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsPaginator.ExecutionInfos">
            <summary>
            Enumerable containing all of the ExecutionInfos
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListDomainsPaginator">
            <summary>
            Base class for ListDomains paginators.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListDomainsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsPaginator">
            <summary>
            Base class for ListOpenWorkflowExecutions paginators.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsPaginator.ExecutionInfos">
            <summary>
            Enumerable containing all of the ExecutionInfos
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.ListWorkflowTypesPaginator">
            <summary>
            Base class for ListWorkflowTypes paginators.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListWorkflowTypesPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.ListWorkflowTypesPaginator.TypeInfos">
            <summary>
            Enumerable containing all of the TypeInfos
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.PollForDecisionTaskPaginator">
            <summary>
            Base class for PollForDecisionTask paginators.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForDecisionTaskPaginator.Responses">
            <summary>
            Enumerable containing all full responses for the operation
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.Model.PollForDecisionTaskPaginator.Events">
            <summary>
            Enumerable containing all of the Events
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.Model.SimpleWorkflowPaginatorFactory">
             <summary>
             Paginators for the SimpleWorkflow service
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.SimpleWorkflowPaginatorFactory.GetWorkflowExecutionHistory(Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest)">
             <summary>
             Paginator for GetWorkflowExecutionHistory operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.SimpleWorkflowPaginatorFactory.ListActivityTypes(Amazon.SimpleWorkflow.Model.ListActivityTypesRequest)">
             <summary>
             Paginator for ListActivityTypes operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.SimpleWorkflowPaginatorFactory.ListClosedWorkflowExecutions(Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest)">
             <summary>
             Paginator for ListClosedWorkflowExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.SimpleWorkflowPaginatorFactory.ListDomains(Amazon.SimpleWorkflow.Model.ListDomainsRequest)">
             <summary>
             Paginator for ListDomains operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.SimpleWorkflowPaginatorFactory.ListOpenWorkflowExecutions(Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest)">
             <summary>
             Paginator for ListOpenWorkflowExecutions operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.SimpleWorkflowPaginatorFactory.ListWorkflowTypes(Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest)">
             <summary>
             Paginator for ListWorkflowTypes operation
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.Model.SimpleWorkflowPaginatorFactory.PollForDecisionTask(Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest)">
             <summary>
             Paginator for PollForDecisionTask operation
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.AmazonSimpleWorkflowRequest">
            <summary>
            Base class for SimpleWorkflow operation requests.
            </summary>
        </member>
        <member name="T:Amazon.SimpleWorkflow.ActivityTaskTimeoutType">
            <summary>
            Constants used for properties of type ActivityTaskTimeoutType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ActivityTaskTimeoutType.HEARTBEAT">
            <summary>
            Constant HEARTBEAT for ActivityTaskTimeoutType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ActivityTaskTimeoutType.SCHEDULE_TO_CLOSE">
            <summary>
            Constant SCHEDULE_TO_CLOSE for ActivityTaskTimeoutType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ActivityTaskTimeoutType.SCHEDULE_TO_START">
            <summary>
            Constant SCHEDULE_TO_START for ActivityTaskTimeoutType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ActivityTaskTimeoutType.START_TO_CLOSE">
            <summary>
            Constant START_TO_CLOSE for ActivityTaskTimeoutType
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ActivityTaskTimeoutType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ActivityTaskTimeoutType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ActivityTaskTimeoutType.op_Implicit(System.String)~Amazon.SimpleWorkflow.ActivityTaskTimeoutType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.CancelTimerFailedCause">
            <summary>
            Constants used for properties of type CancelTimerFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CancelTimerFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for CancelTimerFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CancelTimerFailedCause.TIMER_ID_UNKNOWN">
            <summary>
            Constant TIMER_ID_UNKNOWN for CancelTimerFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CancelTimerFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CancelTimerFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CancelTimerFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.CancelTimerFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.CancelWorkflowExecutionFailedCause">
            <summary>
            Constants used for properties of type CancelWorkflowExecutionFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CancelWorkflowExecutionFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for CancelWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CancelWorkflowExecutionFailedCause.UNHANDLED_DECISION">
            <summary>
            Constant UNHANDLED_DECISION for CancelWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CancelWorkflowExecutionFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CancelWorkflowExecutionFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CancelWorkflowExecutionFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.CancelWorkflowExecutionFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.ChildPolicy">
            <summary>
            Constants used for properties of type ChildPolicy.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ChildPolicy.ABANDON">
            <summary>
            Constant ABANDON for ChildPolicy
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ChildPolicy.REQUEST_CANCEL">
            <summary>
            Constant REQUEST_CANCEL for ChildPolicy
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ChildPolicy.TERMINATE">
            <summary>
            Constant TERMINATE for ChildPolicy
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ChildPolicy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ChildPolicy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ChildPolicy.op_Implicit(System.String)~Amazon.SimpleWorkflow.ChildPolicy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.CloseStatus">
            <summary>
            Constants used for properties of type CloseStatus.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CloseStatus.CANCELED">
            <summary>
            Constant CANCELED for CloseStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CloseStatus.COMPLETED">
            <summary>
            Constant COMPLETED for CloseStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CloseStatus.CONTINUED_AS_NEW">
            <summary>
            Constant CONTINUED_AS_NEW for CloseStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CloseStatus.FAILED">
            <summary>
            Constant FAILED for CloseStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CloseStatus.TERMINATED">
            <summary>
            Constant TERMINATED for CloseStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CloseStatus.TIMED_OUT">
            <summary>
            Constant TIMED_OUT for CloseStatus
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CloseStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CloseStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CloseStatus.op_Implicit(System.String)~Amazon.SimpleWorkflow.CloseStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.CompleteWorkflowExecutionFailedCause">
            <summary>
            Constants used for properties of type CompleteWorkflowExecutionFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CompleteWorkflowExecutionFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for CompleteWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.CompleteWorkflowExecutionFailedCause.UNHANDLED_DECISION">
            <summary>
            Constant UNHANDLED_DECISION for CompleteWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CompleteWorkflowExecutionFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CompleteWorkflowExecutionFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.CompleteWorkflowExecutionFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.CompleteWorkflowExecutionFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause">
            <summary>
            Constants used for properties of type ContinueAsNewWorkflowExecutionFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED">
            <summary>
            Constant CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED for ContinueAsNewWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.DEFAULT_CHILD_POLICY_UNDEFINED">
            <summary>
            Constant DEFAULT_CHILD_POLICY_UNDEFINED for ContinueAsNewWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED">
            <summary>
            Constant DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED for ContinueAsNewWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.DEFAULT_TASK_LIST_UNDEFINED">
            <summary>
            Constant DEFAULT_TASK_LIST_UNDEFINED for ContinueAsNewWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED">
            <summary>
            Constant DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED for ContinueAsNewWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for ContinueAsNewWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.UNHANDLED_DECISION">
            <summary>
            Constant UNHANDLED_DECISION for ContinueAsNewWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.WORKFLOW_TYPE_DEPRECATED">
            <summary>
            Constant WORKFLOW_TYPE_DEPRECATED for ContinueAsNewWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.WORKFLOW_TYPE_DOES_NOT_EXIST">
            <summary>
            Constant WORKFLOW_TYPE_DOES_NOT_EXIST for ContinueAsNewWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.ContinueAsNewWorkflowExecutionFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.DecisionTaskTimeoutType">
            <summary>
            Constants used for properties of type DecisionTaskTimeoutType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionTaskTimeoutType.START_TO_CLOSE">
            <summary>
            Constant START_TO_CLOSE for DecisionTaskTimeoutType
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.DecisionTaskTimeoutType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.DecisionTaskTimeoutType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.DecisionTaskTimeoutType.op_Implicit(System.String)~Amazon.SimpleWorkflow.DecisionTaskTimeoutType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.DecisionType">
            <summary>
            Constants used for properties of type DecisionType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.CancelTimer">
            <summary>
            Constant CancelTimer for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.CancelWorkflowExecution">
            <summary>
            Constant CancelWorkflowExecution for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.CompleteWorkflowExecution">
            <summary>
            Constant CompleteWorkflowExecution for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.ContinueAsNewWorkflowExecution">
            <summary>
            Constant ContinueAsNewWorkflowExecution for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.FailWorkflowExecution">
            <summary>
            Constant FailWorkflowExecution for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.RecordMarker">
            <summary>
            Constant RecordMarker for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.RequestCancelActivityTask">
            <summary>
            Constant RequestCancelActivityTask for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.RequestCancelExternalWorkflowExecution">
            <summary>
            Constant RequestCancelExternalWorkflowExecution for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.ScheduleActivityTask">
            <summary>
            Constant ScheduleActivityTask for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.ScheduleLambdaFunction">
            <summary>
            Constant ScheduleLambdaFunction for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.SignalExternalWorkflowExecution">
            <summary>
            Constant SignalExternalWorkflowExecution for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.StartChildWorkflowExecution">
            <summary>
            Constant StartChildWorkflowExecution for DecisionType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.DecisionType.StartTimer">
            <summary>
            Constant StartTimer for DecisionType
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.DecisionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.DecisionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.DecisionType.op_Implicit(System.String)~Amazon.SimpleWorkflow.DecisionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.EventType">
            <summary>
            Constants used for properties of type EventType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ActivityTaskCanceled">
            <summary>
            Constant ActivityTaskCanceled for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ActivityTaskCancelRequested">
            <summary>
            Constant ActivityTaskCancelRequested for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ActivityTaskCompleted">
            <summary>
            Constant ActivityTaskCompleted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ActivityTaskFailed">
            <summary>
            Constant ActivityTaskFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ActivityTaskScheduled">
            <summary>
            Constant ActivityTaskScheduled for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ActivityTaskStarted">
            <summary>
            Constant ActivityTaskStarted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ActivityTaskTimedOut">
            <summary>
            Constant ActivityTaskTimedOut for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.CancelTimerFailed">
            <summary>
            Constant CancelTimerFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.CancelWorkflowExecutionFailed">
            <summary>
            Constant CancelWorkflowExecutionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ChildWorkflowExecutionCanceled">
            <summary>
            Constant ChildWorkflowExecutionCanceled for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ChildWorkflowExecutionCompleted">
            <summary>
            Constant ChildWorkflowExecutionCompleted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ChildWorkflowExecutionFailed">
            <summary>
            Constant ChildWorkflowExecutionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ChildWorkflowExecutionStarted">
            <summary>
            Constant ChildWorkflowExecutionStarted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ChildWorkflowExecutionTerminated">
            <summary>
            Constant ChildWorkflowExecutionTerminated for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ChildWorkflowExecutionTimedOut">
            <summary>
            Constant ChildWorkflowExecutionTimedOut for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.CompleteWorkflowExecutionFailed">
            <summary>
            Constant CompleteWorkflowExecutionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ContinueAsNewWorkflowExecutionFailed">
            <summary>
            Constant ContinueAsNewWorkflowExecutionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.DecisionTaskCompleted">
            <summary>
            Constant DecisionTaskCompleted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.DecisionTaskScheduled">
            <summary>
            Constant DecisionTaskScheduled for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.DecisionTaskStarted">
            <summary>
            Constant DecisionTaskStarted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.DecisionTaskTimedOut">
            <summary>
            Constant DecisionTaskTimedOut for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ExternalWorkflowExecutionCancelRequested">
            <summary>
            Constant ExternalWorkflowExecutionCancelRequested for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ExternalWorkflowExecutionSignaled">
            <summary>
            Constant ExternalWorkflowExecutionSignaled for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.FailWorkflowExecutionFailed">
            <summary>
            Constant FailWorkflowExecutionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.LambdaFunctionCompleted">
            <summary>
            Constant LambdaFunctionCompleted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.LambdaFunctionFailed">
            <summary>
            Constant LambdaFunctionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.LambdaFunctionScheduled">
            <summary>
            Constant LambdaFunctionScheduled for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.LambdaFunctionStarted">
            <summary>
            Constant LambdaFunctionStarted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.LambdaFunctionTimedOut">
            <summary>
            Constant LambdaFunctionTimedOut for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.MarkerRecorded">
            <summary>
            Constant MarkerRecorded for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.RecordMarkerFailed">
            <summary>
            Constant RecordMarkerFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.RequestCancelActivityTaskFailed">
            <summary>
            Constant RequestCancelActivityTaskFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.RequestCancelExternalWorkflowExecutionFailed">
            <summary>
            Constant RequestCancelExternalWorkflowExecutionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.RequestCancelExternalWorkflowExecutionInitiated">
            <summary>
            Constant RequestCancelExternalWorkflowExecutionInitiated for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ScheduleActivityTaskFailed">
            <summary>
            Constant ScheduleActivityTaskFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.ScheduleLambdaFunctionFailed">
            <summary>
            Constant ScheduleLambdaFunctionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.SignalExternalWorkflowExecutionFailed">
            <summary>
            Constant SignalExternalWorkflowExecutionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.SignalExternalWorkflowExecutionInitiated">
            <summary>
            Constant SignalExternalWorkflowExecutionInitiated for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.StartChildWorkflowExecutionFailed">
            <summary>
            Constant StartChildWorkflowExecutionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.StartChildWorkflowExecutionInitiated">
            <summary>
            Constant StartChildWorkflowExecutionInitiated for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.StartLambdaFunctionFailed">
            <summary>
            Constant StartLambdaFunctionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.StartTimerFailed">
            <summary>
            Constant StartTimerFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.TimerCanceled">
            <summary>
            Constant TimerCanceled for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.TimerFired">
            <summary>
            Constant TimerFired for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.TimerStarted">
            <summary>
            Constant TimerStarted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.WorkflowExecutionCanceled">
            <summary>
            Constant WorkflowExecutionCanceled for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.WorkflowExecutionCancelRequested">
            <summary>
            Constant WorkflowExecutionCancelRequested for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.WorkflowExecutionCompleted">
            <summary>
            Constant WorkflowExecutionCompleted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.WorkflowExecutionContinuedAsNew">
            <summary>
            Constant WorkflowExecutionContinuedAsNew for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.WorkflowExecutionFailed">
            <summary>
            Constant WorkflowExecutionFailed for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.WorkflowExecutionSignaled">
            <summary>
            Constant WorkflowExecutionSignaled for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.WorkflowExecutionStarted">
            <summary>
            Constant WorkflowExecutionStarted for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.WorkflowExecutionTerminated">
            <summary>
            Constant WorkflowExecutionTerminated for EventType
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.EventType.WorkflowExecutionTimedOut">
            <summary>
            Constant WorkflowExecutionTimedOut for EventType
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.EventType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.EventType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.EventType.op_Implicit(System.String)~Amazon.SimpleWorkflow.EventType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.ExecutionStatus">
            <summary>
            Constants used for properties of type ExecutionStatus.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ExecutionStatus.CLOSED">
            <summary>
            Constant CLOSED for ExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ExecutionStatus.OPEN">
            <summary>
            Constant OPEN for ExecutionStatus
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ExecutionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ExecutionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ExecutionStatus.op_Implicit(System.String)~Amazon.SimpleWorkflow.ExecutionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.FailWorkflowExecutionFailedCause">
            <summary>
            Constants used for properties of type FailWorkflowExecutionFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.FailWorkflowExecutionFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for FailWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.FailWorkflowExecutionFailedCause.UNHANDLED_DECISION">
            <summary>
            Constant UNHANDLED_DECISION for FailWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.FailWorkflowExecutionFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.FailWorkflowExecutionFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.FailWorkflowExecutionFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.FailWorkflowExecutionFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.LambdaFunctionTimeoutType">
            <summary>
            Constants used for properties of type LambdaFunctionTimeoutType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.LambdaFunctionTimeoutType.START_TO_CLOSE">
            <summary>
            Constant START_TO_CLOSE for LambdaFunctionTimeoutType
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.LambdaFunctionTimeoutType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.LambdaFunctionTimeoutType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.LambdaFunctionTimeoutType.op_Implicit(System.String)~Amazon.SimpleWorkflow.LambdaFunctionTimeoutType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.RecordMarkerFailedCause">
            <summary>
            Constants used for properties of type RecordMarkerFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.RecordMarkerFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for RecordMarkerFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RecordMarkerFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RecordMarkerFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RecordMarkerFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.RecordMarkerFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.RegistrationStatus">
            <summary>
            Constants used for properties of type RegistrationStatus.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.RegistrationStatus.DEPRECATED">
            <summary>
            Constant DEPRECATED for RegistrationStatus
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.RegistrationStatus.REGISTERED">
            <summary>
            Constant REGISTERED for RegistrationStatus
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RegistrationStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RegistrationStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RegistrationStatus.op_Implicit(System.String)~Amazon.SimpleWorkflow.RegistrationStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.RequestCancelActivityTaskFailedCause">
            <summary>
            Constants used for properties of type RequestCancelActivityTaskFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.RequestCancelActivityTaskFailedCause.ACTIVITY_ID_UNKNOWN">
            <summary>
            Constant ACTIVITY_ID_UNKNOWN for RequestCancelActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.RequestCancelActivityTaskFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for RequestCancelActivityTaskFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RequestCancelActivityTaskFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RequestCancelActivityTaskFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RequestCancelActivityTaskFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.RequestCancelActivityTaskFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.RequestCancelExternalWorkflowExecutionFailedCause">
            <summary>
            Constants used for properties of type RequestCancelExternalWorkflowExecutionFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.RequestCancelExternalWorkflowExecutionFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for RequestCancelExternalWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.RequestCancelExternalWorkflowExecutionFailedCause.REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED">
            <summary>
            Constant REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED for RequestCancelExternalWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.RequestCancelExternalWorkflowExecutionFailedCause.UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION">
            <summary>
            Constant UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION for RequestCancelExternalWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RequestCancelExternalWorkflowExecutionFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RequestCancelExternalWorkflowExecutionFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.RequestCancelExternalWorkflowExecutionFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.RequestCancelExternalWorkflowExecutionFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause">
            <summary>
            Constants used for properties of type ScheduleActivityTaskFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.ACTIVITY_CREATION_RATE_EXCEEDED">
            <summary>
            Constant ACTIVITY_CREATION_RATE_EXCEEDED for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.ACTIVITY_ID_ALREADY_IN_USE">
            <summary>
            Constant ACTIVITY_ID_ALREADY_IN_USE for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.ACTIVITY_TYPE_DEPRECATED">
            <summary>
            Constant ACTIVITY_TYPE_DEPRECATED for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.ACTIVITY_TYPE_DOES_NOT_EXIST">
            <summary>
            Constant ACTIVITY_TYPE_DOES_NOT_EXIST for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED">
            <summary>
            Constant DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED">
            <summary>
            Constant DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED">
            <summary>
            Constant DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED">
            <summary>
            Constant DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.DEFAULT_TASK_LIST_UNDEFINED">
            <summary>
            Constant DEFAULT_TASK_LIST_UNDEFINED for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.OPEN_ACTIVITIES_LIMIT_EXCEEDED">
            <summary>
            Constant OPEN_ACTIVITIES_LIMIT_EXCEEDED for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for ScheduleActivityTaskFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.ScheduleActivityTaskFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.ScheduleLambdaFunctionFailedCause">
            <summary>
            Constants used for properties of type ScheduleLambdaFunctionFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleLambdaFunctionFailedCause.ID_ALREADY_IN_USE">
            <summary>
            Constant ID_ALREADY_IN_USE for ScheduleLambdaFunctionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleLambdaFunctionFailedCause.LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED">
            <summary>
            Constant LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED for ScheduleLambdaFunctionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleLambdaFunctionFailedCause.LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION">
            <summary>
            Constant LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION for ScheduleLambdaFunctionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.ScheduleLambdaFunctionFailedCause.OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED">
            <summary>
            Constant OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED for ScheduleLambdaFunctionFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ScheduleLambdaFunctionFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ScheduleLambdaFunctionFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.ScheduleLambdaFunctionFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.ScheduleLambdaFunctionFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.SignalExternalWorkflowExecutionFailedCause">
            <summary>
            Constants used for properties of type SignalExternalWorkflowExecutionFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.SignalExternalWorkflowExecutionFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for SignalExternalWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.SignalExternalWorkflowExecutionFailedCause.SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED">
            <summary>
            Constant SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED for SignalExternalWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.SignalExternalWorkflowExecutionFailedCause.UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION">
            <summary>
            Constant UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION for SignalExternalWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.SignalExternalWorkflowExecutionFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.SignalExternalWorkflowExecutionFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.SignalExternalWorkflowExecutionFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.SignalExternalWorkflowExecutionFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause">
            <summary>
            Constants used for properties of type StartChildWorkflowExecutionFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.CHILD_CREATION_RATE_EXCEEDED">
            <summary>
            Constant CHILD_CREATION_RATE_EXCEEDED for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.DEFAULT_CHILD_POLICY_UNDEFINED">
            <summary>
            Constant DEFAULT_CHILD_POLICY_UNDEFINED for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED">
            <summary>
            Constant DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.DEFAULT_TASK_LIST_UNDEFINED">
            <summary>
            Constant DEFAULT_TASK_LIST_UNDEFINED for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED">
            <summary>
            Constant DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.OPEN_CHILDREN_LIMIT_EXCEEDED">
            <summary>
            Constant OPEN_CHILDREN_LIMIT_EXCEEDED for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.OPEN_WORKFLOWS_LIMIT_EXCEEDED">
            <summary>
            Constant OPEN_WORKFLOWS_LIMIT_EXCEEDED for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.WORKFLOW_ALREADY_RUNNING">
            <summary>
            Constant WORKFLOW_ALREADY_RUNNING for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.WORKFLOW_TYPE_DEPRECATED">
            <summary>
            Constant WORKFLOW_TYPE_DEPRECATED for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.WORKFLOW_TYPE_DOES_NOT_EXIST">
            <summary>
            Constant WORKFLOW_TYPE_DOES_NOT_EXIST for StartChildWorkflowExecutionFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.StartChildWorkflowExecutionFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.StartLambdaFunctionFailedCause">
            <summary>
            Constants used for properties of type StartLambdaFunctionFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartLambdaFunctionFailedCause.ASSUME_ROLE_FAILED">
            <summary>
            Constant ASSUME_ROLE_FAILED for StartLambdaFunctionFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.StartLambdaFunctionFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.StartLambdaFunctionFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.StartLambdaFunctionFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.StartLambdaFunctionFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.StartTimerFailedCause">
            <summary>
            Constants used for properties of type StartTimerFailedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartTimerFailedCause.OPEN_TIMERS_LIMIT_EXCEEDED">
            <summary>
            Constant OPEN_TIMERS_LIMIT_EXCEEDED for StartTimerFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartTimerFailedCause.OPERATION_NOT_PERMITTED">
            <summary>
            Constant OPERATION_NOT_PERMITTED for StartTimerFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartTimerFailedCause.TIMER_CREATION_RATE_EXCEEDED">
            <summary>
            Constant TIMER_CREATION_RATE_EXCEEDED for StartTimerFailedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.StartTimerFailedCause.TIMER_ID_ALREADY_IN_USE">
            <summary>
            Constant TIMER_ID_ALREADY_IN_USE for StartTimerFailedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.StartTimerFailedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.StartTimerFailedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.StartTimerFailedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.StartTimerFailedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.WorkflowExecutionCancelRequestedCause">
            <summary>
            Constants used for properties of type WorkflowExecutionCancelRequestedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.WorkflowExecutionCancelRequestedCause.CHILD_POLICY_APPLIED">
            <summary>
            Constant CHILD_POLICY_APPLIED for WorkflowExecutionCancelRequestedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.WorkflowExecutionCancelRequestedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.WorkflowExecutionCancelRequestedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.WorkflowExecutionCancelRequestedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.WorkflowExecutionCancelRequestedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.WorkflowExecutionTerminatedCause">
            <summary>
            Constants used for properties of type WorkflowExecutionTerminatedCause.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.WorkflowExecutionTerminatedCause.CHILD_POLICY_APPLIED">
            <summary>
            Constant CHILD_POLICY_APPLIED for WorkflowExecutionTerminatedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.WorkflowExecutionTerminatedCause.EVENT_LIMIT_EXCEEDED">
            <summary>
            Constant EVENT_LIMIT_EXCEEDED for WorkflowExecutionTerminatedCause
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.WorkflowExecutionTerminatedCause.OPERATOR_INITIATED">
            <summary>
            Constant OPERATOR_INITIATED for WorkflowExecutionTerminatedCause
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.WorkflowExecutionTerminatedCause.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.WorkflowExecutionTerminatedCause.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.WorkflowExecutionTerminatedCause.op_Implicit(System.String)~Amazon.SimpleWorkflow.WorkflowExecutionTerminatedCause">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.WorkflowExecutionTimeoutType">
            <summary>
            Constants used for properties of type WorkflowExecutionTimeoutType.
            </summary>
        </member>
        <member name="F:Amazon.SimpleWorkflow.WorkflowExecutionTimeoutType.START_TO_CLOSE">
            <summary>
            Constant START_TO_CLOSE for WorkflowExecutionTimeoutType
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.WorkflowExecutionTimeoutType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.WorkflowExecutionTimeoutType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.SimpleWorkflow.WorkflowExecutionTimeoutType.op_Implicit(System.String)~Amazon.SimpleWorkflow.WorkflowExecutionTimeoutType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient">
             <summary>
             Implementation for accessing SimpleWorkflow
            
             Amazon Simple Workflow Service 
             <para>
             The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications
             that use Amazon's cloud to coordinate work across distributed components. In Amazon
             SWF, a <i>task</i> represents a logical unit of work that is performed by a component
             of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies,
             scheduling, and concurrency in accordance with the logical flow of the application.
             </para>
              
             <para>
             Amazon SWF gives you full control over implementing tasks and coordinating them without
             worrying about underlying complexities such as tracking their progress and maintaining
             their state.
             </para>
              
             <para>
             This documentation serves as reference only. For a broader overview of the Amazon
             SWF programming model, see the <i> <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/">Amazon
             SWF Developer Guide</a> </i>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor">
             <summary>
             Constructs AmazonSimpleWorkflowClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonSimpleWorkflowClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(Amazon.SimpleWorkflow.AmazonSimpleWorkflowConfig)">
             <summary>
             Constructs AmazonSimpleWorkflowClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonSimpleWorkflowClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonSimpleWorkflowClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleWorkflowClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.SimpleWorkflow.AmazonSimpleWorkflowConfig)">
            <summary>
            Constructs AmazonSimpleWorkflowClient with AWS Credentials and an
            AmazonSimpleWorkflowClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonSimpleWorkflowClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonSimpleWorkflowClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleWorkflowClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(System.String,System.String,Amazon.SimpleWorkflow.AmazonSimpleWorkflowConfig)">
            <summary>
            Constructs AmazonSimpleWorkflowClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSimpleWorkflowClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonSimpleWorkflowClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonSimpleWorkflowClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonSimpleWorkflowClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.#ctor(System.String,System.String,System.String,Amazon.SimpleWorkflow.AmazonSimpleWorkflowConfig)">
            <summary>
            Constructs AmazonSimpleWorkflowClient with AWS Access Key ID, AWS Secret Key and an
            AmazonSimpleWorkflowClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonSimpleWorkflowClient Configuration Object</param>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.CountClosedWorkflowExecutions(Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest)">
            <summary>
            Returns the number of closed workflow executions within the given domain that meet
            the specified filtering criteria.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountClosedWorkflowExecutions service method.</param>
            
            <returns>The response from the CountClosedWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountClosedWorkflowExecutions">REST API Reference for CountClosedWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.CountClosedWorkflowExecutionsAsync(Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the number of closed workflow executions within the given domain that meet
            the specified filtering criteria.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountClosedWorkflowExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CountClosedWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountClosedWorkflowExecutions">REST API Reference for CountClosedWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.CountOpenWorkflowExecutions(Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest)">
            <summary>
            Returns the number of open workflow executions within the given domain that meet the
            specified filtering criteria.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountOpenWorkflowExecutions service method.</param>
            
            <returns>The response from the CountOpenWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountOpenWorkflowExecutions">REST API Reference for CountOpenWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.CountOpenWorkflowExecutionsAsync(Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the number of open workflow executions within the given domain that meet the
            specified filtering criteria.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountOpenWorkflowExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CountOpenWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountOpenWorkflowExecutions">REST API Reference for CountOpenWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.CountPendingActivityTasks(Amazon.SimpleWorkflow.Model.CountPendingActivityTasksRequest)">
            <summary>
            Returns the estimated number of activity tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no activity task was ever scheduled in then <code>0</code> is returned.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountPendingActivityTasks service method.</param>
            
            <returns>The response from the CountPendingActivityTasks service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountPendingActivityTasks">REST API Reference for CountPendingActivityTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.CountPendingActivityTasksAsync(Amazon.SimpleWorkflow.Model.CountPendingActivityTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the estimated number of activity tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no activity task was ever scheduled in then <code>0</code> is returned.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountPendingActivityTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CountPendingActivityTasks service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountPendingActivityTasks">REST API Reference for CountPendingActivityTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.CountPendingDecisionTasks(Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksRequest)">
            <summary>
            Returns the estimated number of decision tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no decision task was ever scheduled in then <code>0</code> is returned.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountPendingDecisionTasks service method.</param>
            
            <returns>The response from the CountPendingDecisionTasks service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountPendingDecisionTasks">REST API Reference for CountPendingDecisionTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.CountPendingDecisionTasksAsync(Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the estimated number of decision tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no decision task was ever scheduled in then <code>0</code> is returned.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountPendingDecisionTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CountPendingDecisionTasks service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountPendingDecisionTasks">REST API Reference for CountPendingDecisionTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DeprecateActivityType(Amazon.SimpleWorkflow.Model.DeprecateActivityTypeRequest)">
            <summary>
            Deprecates the specified <i>activity type</i>. After an activity type has been deprecated,
            you cannot create new tasks of that activity type. Tasks of this type that were scheduled
            before the type was deprecated continue to run.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateActivityType service method.</param>
            
            <returns>The response from the DeprecateActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateActivityType">REST API Reference for DeprecateActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DeprecateActivityTypeAsync(Amazon.SimpleWorkflow.Model.DeprecateActivityTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Deprecates the specified <i>activity type</i>. After an activity type has been deprecated,
            you cannot create new tasks of that activity type. Tasks of this type that were scheduled
            before the type was deprecated continue to run.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateActivityType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeprecateActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateActivityType">REST API Reference for DeprecateActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DeprecateDomain(Amazon.SimpleWorkflow.Model.DeprecateDomainRequest)">
            <summary>
            Deprecates the specified domain. After a domain has been deprecated it cannot be used
            to create new workflow executions or register new types. However, you can still use
            visibility actions on this domain. Deprecating a domain also deprecates all activity
            and workflow types registered in the domain. Executions that were started before the
            domain was deprecated continues to run.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateDomain service method.</param>
            
            <returns>The response from the DeprecateDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainDeprecatedException">
            Returned when the specified domain has been deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateDomain">REST API Reference for DeprecateDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DeprecateDomainAsync(Amazon.SimpleWorkflow.Model.DeprecateDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Deprecates the specified domain. After a domain has been deprecated it cannot be used
            to create new workflow executions or register new types. However, you can still use
            visibility actions on this domain. Deprecating a domain also deprecates all activity
            and workflow types registered in the domain. Executions that were started before the
            domain was deprecated continues to run.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeprecateDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainDeprecatedException">
            Returned when the specified domain has been deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateDomain">REST API Reference for DeprecateDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DeprecateWorkflowType(Amazon.SimpleWorkflow.Model.DeprecateWorkflowTypeRequest)">
            <summary>
            Deprecates the specified <i>workflow type</i>. After a workflow type has been deprecated,
            you cannot create new executions of that type. Executions that were started before
            the type was deprecated continues to run. A deprecated workflow type may still be
            used when calling visibility actions.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateWorkflowType service method.</param>
            
            <returns>The response from the DeprecateWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateWorkflowType">REST API Reference for DeprecateWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DeprecateWorkflowTypeAsync(Amazon.SimpleWorkflow.Model.DeprecateWorkflowTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Deprecates the specified <i>workflow type</i>. After a workflow type has been deprecated,
            you cannot create new executions of that type. Executions that were started before
            the type was deprecated continues to run. A deprecated workflow type may still be
            used when calling visibility actions.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateWorkflowType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeprecateWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateWorkflowType">REST API Reference for DeprecateWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DescribeActivityType(Amazon.SimpleWorkflow.Model.DescribeActivityTypeRequest)">
            <summary>
            Returns information about the specified activity type. This includes configuration
            settings provided when the type was registered and other general information about
            the type.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeActivityType service method.</param>
            
            <returns>The response from the DescribeActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeActivityType">REST API Reference for DescribeActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DescribeActivityTypeAsync(Amazon.SimpleWorkflow.Model.DescribeActivityTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified activity type. This includes configuration
            settings provided when the type was registered and other general information about
            the type.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeActivityType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeActivityType">REST API Reference for DescribeActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DescribeDomain(Amazon.SimpleWorkflow.Model.DescribeDomainRequest)">
            <summary>
            Returns information about the specified domain, including description and status.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDomain service method.</param>
            
            <returns>The response from the DescribeDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeDomain">REST API Reference for DescribeDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DescribeDomainAsync(Amazon.SimpleWorkflow.Model.DescribeDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified domain, including description and status.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeDomain">REST API Reference for DescribeDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DescribeWorkflowExecution(Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionRequest)">
            <summary>
            Returns information about the specified workflow execution including its type and
            some statistics.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeWorkflowExecution service method.</param>
            
            <returns>The response from the DescribeWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeWorkflowExecution">REST API Reference for DescribeWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DescribeWorkflowExecutionAsync(Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified workflow execution including its type and
            some statistics.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeWorkflowExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeWorkflowExecution">REST API Reference for DescribeWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DescribeWorkflowType(Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeRequest)">
            <summary>
            Returns information about the specified <i>workflow type</i>. This includes configuration
            settings specified when the type was registered and other information such as creation
            date, current status, etc.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeWorkflowType service method.</param>
            
            <returns>The response from the DescribeWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeWorkflowType">REST API Reference for DescribeWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.DescribeWorkflowTypeAsync(Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified <i>workflow type</i>. This includes configuration
            settings specified when the type was registered and other information such as creation
            date, current status, etc.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeWorkflowType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeWorkflowType">REST API Reference for DescribeWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.GetWorkflowExecutionHistory(Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest)">
            <summary>
            Returns the history of the specified workflow execution. The results may be split
            into multiple pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetWorkflowExecutionHistory service method.</param>
            
            <returns>The response from the GetWorkflowExecutionHistory service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/GetWorkflowExecutionHistory">REST API Reference for GetWorkflowExecutionHistory Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.GetWorkflowExecutionHistoryAsync(Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the history of the specified workflow execution. The results may be split
            into multiple pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetWorkflowExecutionHistory service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetWorkflowExecutionHistory service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/GetWorkflowExecutionHistory">REST API Reference for GetWorkflowExecutionHistory Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListActivityTypes(Amazon.SimpleWorkflow.Model.ListActivityTypesRequest)">
            <summary>
            Returns information about all activities registered in the specified domain that match
            the specified name and registration status. The result includes information like creation
            date, current status of the activity, etc. The results may be split into multiple
            pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListActivityTypes service method.</param>
            
            <returns>The response from the ListActivityTypes service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListActivityTypes">REST API Reference for ListActivityTypes Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListActivityTypesAsync(Amazon.SimpleWorkflow.Model.ListActivityTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about all activities registered in the specified domain that match
            the specified name and registration status. The result includes information like creation
            date, current status of the activity, etc. The results may be split into multiple
            pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListActivityTypes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListActivityTypes service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListActivityTypes">REST API Reference for ListActivityTypes Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListClosedWorkflowExecutions(Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest)">
            <summary>
            Returns a list of closed workflow executions in the specified domain that meet the
            filtering criteria. The results may be split into multiple pages. To retrieve subsequent
            pages, make the call again using the nextPageToken returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClosedWorkflowExecutions service method.</param>
            
            <returns>The response from the ListClosedWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListClosedWorkflowExecutions">REST API Reference for ListClosedWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListClosedWorkflowExecutionsAsync(Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of closed workflow executions in the specified domain that meet the
            filtering criteria. The results may be split into multiple pages. To retrieve subsequent
            pages, make the call again using the nextPageToken returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClosedWorkflowExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClosedWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListClosedWorkflowExecutions">REST API Reference for ListClosedWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListDomains(Amazon.SimpleWorkflow.Model.ListDomainsRequest)">
            <summary>
            Returns the list of domains registered in the account. The results may be split into
            multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken
            returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains. The element must be set to <code>arn:aws:swf::AccountID:domain/*</code>,
            where <i>AccountID</i> is the account ID, with no dashes.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDomains service method.</param>
            
            <returns>The response from the ListDomains service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListDomains">REST API Reference for ListDomains Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListDomainsAsync(Amazon.SimpleWorkflow.Model.ListDomainsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the list of domains registered in the account. The results may be split into
            multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken
            returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains. The element must be set to <code>arn:aws:swf::AccountID:domain/*</code>,
            where <i>AccountID</i> is the account ID, with no dashes.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDomains service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDomains service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListDomains">REST API Reference for ListDomains Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListOpenWorkflowExecutions(Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest)">
            <summary>
            Returns a list of open workflow executions in the specified domain that meet the filtering
            criteria. The results may be split into multiple pages. To retrieve subsequent pages,
            make the call again using the nextPageToken returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListOpenWorkflowExecutions service method.</param>
            
            <returns>The response from the ListOpenWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListOpenWorkflowExecutions">REST API Reference for ListOpenWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListOpenWorkflowExecutionsAsync(Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of open workflow executions in the specified domain that meet the filtering
            criteria. The results may be split into multiple pages. To retrieve subsequent pages,
            make the call again using the nextPageToken returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListOpenWorkflowExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListOpenWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListOpenWorkflowExecutions">REST API Reference for ListOpenWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListTagsForResource(Amazon.SimpleWorkflow.Model.ListTagsForResourceRequest)">
            <summary>
            List tags for a given domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListTagsForResourceAsync(Amazon.SimpleWorkflow.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List tags for a given domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListWorkflowTypes(Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest)">
            <summary>
            Returns information about workflow types in the specified domain. The results may
            be split into multiple pages that can be retrieved by making the call repeatedly.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListWorkflowTypes service method.</param>
            
            <returns>The response from the ListWorkflowTypes service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListWorkflowTypes">REST API Reference for ListWorkflowTypes Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.ListWorkflowTypesAsync(Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about workflow types in the specified domain. The results may
            be split into multiple pages that can be retrieved by making the call repeatedly.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListWorkflowTypes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListWorkflowTypes service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListWorkflowTypes">REST API Reference for ListWorkflowTypes Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.PollForActivityTask(Amazon.SimpleWorkflow.Model.PollForActivityTaskRequest)">
            <summary>
            Used by workers to get an <a>ActivityTask</a> from the specified activity <code>taskList</code>.
            This initiates a long poll, where the service holds the HTTP connection open and responds
            as soon as a task becomes available. The maximum time the service holds on to the
            request before responding is 60 seconds. If no task is available within 60 seconds,
            the poll returns an empty result. An empty result, in this context, means that an
            ActivityTask is returned, but that the value of taskToken is an empty string. If a
            task is returned, the worker should use its type to identify and process it correctly.
            
             <important> 
            <para>
            Workers should set their client side socket timeout to at least 70 seconds (10 seconds
            higher than the maximum time service may hold the poll request).
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PollForActivityTask service method.</param>
            
            <returns>The response from the PollForActivityTask service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/PollForActivityTask">REST API Reference for PollForActivityTask Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.PollForActivityTaskAsync(Amazon.SimpleWorkflow.Model.PollForActivityTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Used by workers to get an <a>ActivityTask</a> from the specified activity <code>taskList</code>.
            This initiates a long poll, where the service holds the HTTP connection open and responds
            as soon as a task becomes available. The maximum time the service holds on to the
            request before responding is 60 seconds. If no task is available within 60 seconds,
            the poll returns an empty result. An empty result, in this context, means that an
            ActivityTask is returned, but that the value of taskToken is an empty string. If a
            task is returned, the worker should use its type to identify and process it correctly.
            
             <important> 
            <para>
            Workers should set their client side socket timeout to at least 70 seconds (10 seconds
            higher than the maximum time service may hold the poll request).
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PollForActivityTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PollForActivityTask service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/PollForActivityTask">REST API Reference for PollForActivityTask Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.PollForDecisionTask(Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest)">
            <summary>
            Used by deciders to get a <a>DecisionTask</a> from the specified decision <code>taskList</code>.
            A decision task may be returned for any open workflow execution that is using the
            specified task list. The task includes a paginated view of the history of the workflow
            execution. The decider should use the workflow type and the history to determine how
            to properly handle the task.
            
             
            <para>
            This action initiates a long poll, where the service holds the HTTP connection open
            and responds as soon a task becomes available. If no decision task is available in
            the specified task list before the timeout of 60 seconds expires, an empty result
            is returned. An empty result, in this context, means that a DecisionTask is returned,
            but that the value of taskToken is an empty string.
            </para>
             <important> 
            <para>
            Deciders should set their client side socket timeout to at least 70 seconds (10 seconds
            higher than the timeout).
            </para>
             </important> <important> 
            <para>
            Because the number of workflow history events for a single workflow execution might
            be very large, the result returned might be split up across a number of pages. To
            retrieve subsequent pages, make additional calls to <code>PollForDecisionTask</code>
            using the <code>nextPageToken</code> returned by the initial call. Note that you do
            <i>not</i> call <code>GetWorkflowExecutionHistory</code> with this <code>nextPageToken</code>.
            Instead, call <code>PollForDecisionTask</code> again.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PollForDecisionTask service method.</param>
            
            <returns>The response from the PollForDecisionTask service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/PollForDecisionTask">REST API Reference for PollForDecisionTask Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.PollForDecisionTaskAsync(Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Used by deciders to get a <a>DecisionTask</a> from the specified decision <code>taskList</code>.
            A decision task may be returned for any open workflow execution that is using the
            specified task list. The task includes a paginated view of the history of the workflow
            execution. The decider should use the workflow type and the history to determine how
            to properly handle the task.
            
             
            <para>
            This action initiates a long poll, where the service holds the HTTP connection open
            and responds as soon a task becomes available. If no decision task is available in
            the specified task list before the timeout of 60 seconds expires, an empty result
            is returned. An empty result, in this context, means that a DecisionTask is returned,
            but that the value of taskToken is an empty string.
            </para>
             <important> 
            <para>
            Deciders should set their client side socket timeout to at least 70 seconds (10 seconds
            higher than the timeout).
            </para>
             </important> <important> 
            <para>
            Because the number of workflow history events for a single workflow execution might
            be very large, the result returned might be split up across a number of pages. To
            retrieve subsequent pages, make additional calls to <code>PollForDecisionTask</code>
            using the <code>nextPageToken</code> returned by the initial call. Note that you do
            <i>not</i> call <code>GetWorkflowExecutionHistory</code> with this <code>nextPageToken</code>.
            Instead, call <code>PollForDecisionTask</code> again.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PollForDecisionTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PollForDecisionTask service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/PollForDecisionTask">REST API Reference for PollForDecisionTask Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RecordActivityTaskHeartbeat(Amazon.SimpleWorkflow.Model.RecordActivityTaskHeartbeatRequest)">
            <summary>
            Used by activity workers to report to the service that the <a>ActivityTask</a> represented
            by the specified <code>taskToken</code> is still making progress. The worker can also
            specify details of the progress, for example percent complete, using the <code>details</code>
            parameter. This action can also be used by the worker as a mechanism to check if cancellation
            is being requested for the activity task. If a cancellation is being attempted for
            the specified task, then the boolean <code>cancelRequested</code> flag returned by
            the service is set to <code>true</code>.
            
             
            <para>
            This action resets the <code>taskHeartbeatTimeout</code> clock. The <code>taskHeartbeatTimeout</code>
            is specified in <a>RegisterActivityType</a>.
            </para>
             
            <para>
            This action doesn't in itself create an event in the workflow execution history. However,
            if the task times out, the workflow execution history contains a <code>ActivityTaskTimedOut</code>
            event that contains the information from the last heartbeat generated by the activity
            worker.
            </para>
             <note> 
            <para>
            The <code>taskStartToCloseTimeout</code> of an activity type is the maximum duration
            of an activity task, regardless of the number of <a>RecordActivityTaskHeartbeat</a>
            requests received. The <code>taskStartToCloseTimeout</code> is also specified in <a>RegisterActivityType</a>.
            </para>
             </note> <note> 
            <para>
            This operation is only useful for long-lived activities to report liveliness of the
            task and to determine if a cancellation is being attempted.
            </para>
             </note> <important> 
            <para>
            If the <code>cancelRequested</code> flag returns <code>true</code>, a cancellation
            is being attempted. If the worker can cancel the activity, it should respond with
            <a>RespondActivityTaskCanceled</a>. Otherwise, it should ignore the cancellation request.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RecordActivityTaskHeartbeat service method.</param>
            
            <returns>The response from the RecordActivityTaskHeartbeat service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RecordActivityTaskHeartbeat">REST API Reference for RecordActivityTaskHeartbeat Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RecordActivityTaskHeartbeatAsync(Amazon.SimpleWorkflow.Model.RecordActivityTaskHeartbeatRequest,System.Threading.CancellationToken)">
            <summary>
            Used by activity workers to report to the service that the <a>ActivityTask</a> represented
            by the specified <code>taskToken</code> is still making progress. The worker can also
            specify details of the progress, for example percent complete, using the <code>details</code>
            parameter. This action can also be used by the worker as a mechanism to check if cancellation
            is being requested for the activity task. If a cancellation is being attempted for
            the specified task, then the boolean <code>cancelRequested</code> flag returned by
            the service is set to <code>true</code>.
            
             
            <para>
            This action resets the <code>taskHeartbeatTimeout</code> clock. The <code>taskHeartbeatTimeout</code>
            is specified in <a>RegisterActivityType</a>.
            </para>
             
            <para>
            This action doesn't in itself create an event in the workflow execution history. However,
            if the task times out, the workflow execution history contains a <code>ActivityTaskTimedOut</code>
            event that contains the information from the last heartbeat generated by the activity
            worker.
            </para>
             <note> 
            <para>
            The <code>taskStartToCloseTimeout</code> of an activity type is the maximum duration
            of an activity task, regardless of the number of <a>RecordActivityTaskHeartbeat</a>
            requests received. The <code>taskStartToCloseTimeout</code> is also specified in <a>RegisterActivityType</a>.
            </para>
             </note> <note> 
            <para>
            This operation is only useful for long-lived activities to report liveliness of the
            task and to determine if a cancellation is being attempted.
            </para>
             </note> <important> 
            <para>
            If the <code>cancelRequested</code> flag returns <code>true</code>, a cancellation
            is being attempted. If the worker can cancel the activity, it should respond with
            <a>RespondActivityTaskCanceled</a>. Otherwise, it should ignore the cancellation request.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RecordActivityTaskHeartbeat service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RecordActivityTaskHeartbeat service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RecordActivityTaskHeartbeat">REST API Reference for RecordActivityTaskHeartbeat Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RegisterActivityType(Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest)">
            <summary>
            Registers a new <i>activity type</i> along with its configuration settings in the
            specified domain.
            
             <important> 
            <para>
            A <code>TypeAlreadyExists</code> fault is returned if the type already exists in the
            domain. You cannot change any configuration settings of the type after its registration,
            and it must be registered as a new version.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para>
             </li> <li> 
            <para>
             <code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterActivityType service method.</param>
            
            <returns>The response from the RegisterActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterActivityType">REST API Reference for RegisterActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RegisterActivityTypeAsync(Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a new <i>activity type</i> along with its configuration settings in the
            specified domain.
            
             <important> 
            <para>
            A <code>TypeAlreadyExists</code> fault is returned if the type already exists in the
            domain. You cannot change any configuration settings of the type after its registration,
            and it must be registered as a new version.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para>
             </li> <li> 
            <para>
             <code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterActivityType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterActivityType">REST API Reference for RegisterActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RegisterDomain(Amazon.SimpleWorkflow.Model.RegisterDomainRequest)">
            <summary>
            Registers a new domain.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            You cannot use an IAM policy to control domain access for this action. The name of
            the domain being registered is available as the resource of this action.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterDomain service method.</param>
            
            <returns>The response from the RegisterDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException">
            Returned if the domain already exists. You may get this fault if you are registering
            a domain that is either already registered or deprecated, or if you undeprecate a
            domain that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TooManyTagsException">
            You've exceeded the number of tags allowed for a domain.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterDomain">REST API Reference for RegisterDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RegisterDomainAsync(Amazon.SimpleWorkflow.Model.RegisterDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a new domain.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            You cannot use an IAM policy to control domain access for this action. The name of
            the domain being registered is available as the resource of this action.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException">
            Returned if the domain already exists. You may get this fault if you are registering
            a domain that is either already registered or deprecated, or if you undeprecate a
            domain that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TooManyTagsException">
            You've exceeded the number of tags allowed for a domain.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterDomain">REST API Reference for RegisterDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RegisterWorkflowType(Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest)">
            <summary>
            Registers a new <i>workflow type</i> and its configuration settings in the specified
            domain.
            
             
            <para>
            The retention period for the workflow history is set by the <a>RegisterDomain</a>
            action.
            </para>
             <important> 
            <para>
            If the type already exists, then a <code>TypeAlreadyExists</code> fault is returned.
            You cannot change the configuration settings of a workflow type once it is registered
            and it must be registered as a new version.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para>
             </li> <li> 
            <para>
             <code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterWorkflowType service method.</param>
            
            <returns>The response from the RegisterWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterWorkflowType">REST API Reference for RegisterWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RegisterWorkflowTypeAsync(Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a new <i>workflow type</i> and its configuration settings in the specified
            domain.
            
             
            <para>
            The retention period for the workflow history is set by the <a>RegisterDomain</a>
            action.
            </para>
             <important> 
            <para>
            If the type already exists, then a <code>TypeAlreadyExists</code> fault is returned.
            You cannot change the configuration settings of a workflow type once it is registered
            and it must be registered as a new version.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para>
             </li> <li> 
            <para>
             <code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterWorkflowType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterWorkflowType">REST API Reference for RegisterWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RequestCancelWorkflowExecution(Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionRequest)">
            <summary>
            Records a <code>WorkflowExecutionCancelRequested</code> event in the currently running
            workflow execution identified by the given domain, workflowId, and runId. This logically
            requests the cancellation of the workflow execution as a whole. It is up to the decider
            to take appropriate actions when it receives an execution history with this event.
            
             <note> 
            <para>
            If the runId isn't specified, the <code>WorkflowExecutionCancelRequested</code> event
            is recorded in the history of the current open workflow execution with the specified
            workflowId in the domain.
            </para>
             </note> <note> 
            <para>
            Because this action allows the workflow to properly clean up and gracefully close,
            it should be used instead of <a>TerminateWorkflowExecution</a> when possible.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestCancelWorkflowExecution service method.</param>
            
            <returns>The response from the RequestCancelWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RequestCancelWorkflowExecution">REST API Reference for RequestCancelWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RequestCancelWorkflowExecutionAsync(Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Records a <code>WorkflowExecutionCancelRequested</code> event in the currently running
            workflow execution identified by the given domain, workflowId, and runId. This logically
            requests the cancellation of the workflow execution as a whole. It is up to the decider
            to take appropriate actions when it receives an execution history with this event.
            
             <note> 
            <para>
            If the runId isn't specified, the <code>WorkflowExecutionCancelRequested</code> event
            is recorded in the history of the current open workflow execution with the specified
            workflowId in the domain.
            </para>
             </note> <note> 
            <para>
            Because this action allows the workflow to properly clean up and gracefully close,
            it should be used instead of <a>TerminateWorkflowExecution</a> when possible.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestCancelWorkflowExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RequestCancelWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RequestCancelWorkflowExecution">REST API Reference for RequestCancelWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RespondActivityTaskCanceled(Amazon.SimpleWorkflow.Model.RespondActivityTaskCanceledRequest)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> was successfully canceled. Additional <code>details</code>
            can be provided using the <code>details</code> argument.
            
             
            <para>
            These <code>details</code> (if provided) appear in the <code>ActivityTaskCanceled</code>
            event added to the workflow history.
            </para>
             <important> 
            <para>
            Only use this operation if the <code>canceled</code> flag of a <a>RecordActivityTaskHeartbeat</a>
            request returns <code>true</code> and if the activity can be safely undone or abandoned.
            </para>
             </important> 
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to <a>RespondActivityTaskCompleted</a>, RespondActivityTaskCanceled,
            <a>RespondActivityTaskFailed</a>, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskCanceled service method.</param>
            
            <returns>The response from the RespondActivityTaskCanceled service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskCanceled">REST API Reference for RespondActivityTaskCanceled Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RespondActivityTaskCanceledAsync(Amazon.SimpleWorkflow.Model.RespondActivityTaskCanceledRequest,System.Threading.CancellationToken)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> was successfully canceled. Additional <code>details</code>
            can be provided using the <code>details</code> argument.
            
             
            <para>
            These <code>details</code> (if provided) appear in the <code>ActivityTaskCanceled</code>
            event added to the workflow history.
            </para>
             <important> 
            <para>
            Only use this operation if the <code>canceled</code> flag of a <a>RecordActivityTaskHeartbeat</a>
            request returns <code>true</code> and if the activity can be safely undone or abandoned.
            </para>
             </important> 
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to <a>RespondActivityTaskCompleted</a>, RespondActivityTaskCanceled,
            <a>RespondActivityTaskFailed</a>, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskCanceled service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RespondActivityTaskCanceled service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskCanceled">REST API Reference for RespondActivityTaskCanceled Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RespondActivityTaskCompleted(Amazon.SimpleWorkflow.Model.RespondActivityTaskCompletedRequest)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> completed successfully with a <code>result</code> (if provided).
            The <code>result</code> appears in the <code>ActivityTaskCompleted</code> event in
            the workflow history.
            
             <important> 
            <para>
            If the requested task doesn't complete successfully, use <a>RespondActivityTaskFailed</a>
            instead. If the worker finds that the task is canceled through the <code>canceled</code>
            flag returned by <a>RecordActivityTaskHeartbeat</a>, it should cancel the task, clean
            up and then call <a>RespondActivityTaskCanceled</a>.
            </para>
             </important> 
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to RespondActivityTaskCompleted, <a>RespondActivityTaskCanceled</a>,
            <a>RespondActivityTaskFailed</a>, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskCompleted service method.</param>
            
            <returns>The response from the RespondActivityTaskCompleted service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskCompleted">REST API Reference for RespondActivityTaskCompleted Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RespondActivityTaskCompletedAsync(Amazon.SimpleWorkflow.Model.RespondActivityTaskCompletedRequest,System.Threading.CancellationToken)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> completed successfully with a <code>result</code> (if provided).
            The <code>result</code> appears in the <code>ActivityTaskCompleted</code> event in
            the workflow history.
            
             <important> 
            <para>
            If the requested task doesn't complete successfully, use <a>RespondActivityTaskFailed</a>
            instead. If the worker finds that the task is canceled through the <code>canceled</code>
            flag returned by <a>RecordActivityTaskHeartbeat</a>, it should cancel the task, clean
            up and then call <a>RespondActivityTaskCanceled</a>.
            </para>
             </important> 
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to RespondActivityTaskCompleted, <a>RespondActivityTaskCanceled</a>,
            <a>RespondActivityTaskFailed</a>, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskCompleted service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RespondActivityTaskCompleted service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskCompleted">REST API Reference for RespondActivityTaskCompleted Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RespondActivityTaskFailed(Amazon.SimpleWorkflow.Model.RespondActivityTaskFailedRequest)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> has failed with <code>reason</code> (if specified). The <code>reason</code>
            and <code>details</code> appear in the <code>ActivityTaskFailed</code> event added
            to the workflow history.
            
             
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to <a>RespondActivityTaskCompleted</a>, <a>RespondActivityTaskCanceled</a>,
            RespondActivityTaskFailed, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskFailed service method.</param>
            
            <returns>The response from the RespondActivityTaskFailed service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskFailed">REST API Reference for RespondActivityTaskFailed Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RespondActivityTaskFailedAsync(Amazon.SimpleWorkflow.Model.RespondActivityTaskFailedRequest,System.Threading.CancellationToken)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> has failed with <code>reason</code> (if specified). The <code>reason</code>
            and <code>details</code> appear in the <code>ActivityTaskFailed</code> event added
            to the workflow history.
            
             
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to <a>RespondActivityTaskCompleted</a>, <a>RespondActivityTaskCanceled</a>,
            RespondActivityTaskFailed, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskFailed service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RespondActivityTaskFailed service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskFailed">REST API Reference for RespondActivityTaskFailed Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RespondDecisionTaskCompleted(Amazon.SimpleWorkflow.Model.RespondDecisionTaskCompletedRequest)">
            <summary>
            Used by deciders to tell the service that the <a>DecisionTask</a> identified by the
            <code>taskToken</code> has successfully completed. The <code>decisions</code> argument
            specifies the list of decisions made while processing the task.
            
             
            <para>
            A <code>DecisionTaskCompleted</code> event is added to the workflow history. The <code>executionContext</code>
            specified is attached to the event in the workflow execution history.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            If an IAM policy grants permission to use <code>RespondDecisionTaskCompleted</code>,
            it can express permissions for the list of decisions in the <code>decisions</code>
            parameter. Each of the decisions has one or more parameters, much like a regular API
            call. To allow for policies to be as readable as possible, you can express permissions
            on decisions as if they were actual API calls, including applying conditions to some
            parameters. For more information, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondDecisionTaskCompleted service method.</param>
            
            <returns>The response from the RespondDecisionTaskCompleted service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondDecisionTaskCompleted">REST API Reference for RespondDecisionTaskCompleted Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.RespondDecisionTaskCompletedAsync(Amazon.SimpleWorkflow.Model.RespondDecisionTaskCompletedRequest,System.Threading.CancellationToken)">
            <summary>
            Used by deciders to tell the service that the <a>DecisionTask</a> identified by the
            <code>taskToken</code> has successfully completed. The <code>decisions</code> argument
            specifies the list of decisions made while processing the task.
            
             
            <para>
            A <code>DecisionTaskCompleted</code> event is added to the workflow history. The <code>executionContext</code>
            specified is attached to the event in the workflow execution history.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            If an IAM policy grants permission to use <code>RespondDecisionTaskCompleted</code>,
            it can express permissions for the list of decisions in the <code>decisions</code>
            parameter. Each of the decisions has one or more parameters, much like a regular API
            call. To allow for policies to be as readable as possible, you can express permissions
            on decisions as if they were actual API calls, including applying conditions to some
            parameters. For more information, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondDecisionTaskCompleted service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RespondDecisionTaskCompleted service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondDecisionTaskCompleted">REST API Reference for RespondDecisionTaskCompleted Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.SignalWorkflowExecution(Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest)">
            <summary>
            Records a <code>WorkflowExecutionSignaled</code> event in the workflow execution history
            and creates a decision task for the workflow execution identified by the given domain,
            workflowId and runId. The event is recorded with the specified user defined signalName
            and input (if provided).
            
             <note> 
            <para>
            If a runId isn't specified, then the <code>WorkflowExecutionSignaled</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para>
             </note> <note> 
            <para>
            If the specified workflow execution isn't open, this method fails with <code>UnknownResource</code>.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SignalWorkflowExecution service method.</param>
            
            <returns>The response from the SignalWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/SignalWorkflowExecution">REST API Reference for SignalWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.SignalWorkflowExecutionAsync(Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Records a <code>WorkflowExecutionSignaled</code> event in the workflow execution history
            and creates a decision task for the workflow execution identified by the given domain,
            workflowId and runId. The event is recorded with the specified user defined signalName
            and input (if provided).
            
             <note> 
            <para>
            If a runId isn't specified, then the <code>WorkflowExecutionSignaled</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para>
             </note> <note> 
            <para>
            If the specified workflow execution isn't open, this method fails with <code>UnknownResource</code>.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SignalWorkflowExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SignalWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/SignalWorkflowExecution">REST API Reference for SignalWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.StartWorkflowExecution(Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest)">
            <summary>
            Starts an execution of the workflow type in the specified domain using the provided
            <code>workflowId</code> and input data.
            
             
            <para>
            This action returns the newly started workflow execution.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagList.member.0</code>: The key is <code>swf:tagList.member.0</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.1</code>: The key is <code>swf:tagList.member.1</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.2</code>: The key is <code>swf:tagList.member.2</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.3</code>: The key is <code>swf:tagList.member.3</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.4</code>: The key is <code>swf:tagList.member.4</code>.
            </para>
             </li> <li> 
            <para>
             <code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartWorkflowExecution service method.</param>
            
            <returns>The response from the StartWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DefaultUndefinedException">
            The <code>StartWorkflowExecution</code> API action was called without the required
            parameters set.
            
             
            <para>
            Some workflow execution parameters, such as the decision <code>taskList</code>, must
            be set to start the execution. However, these parameters might have been set as defaults
            when the workflow type was registered. In this case, you can omit these parameters
            from the <code>StartWorkflowExecution</code> call and Amazon SWF uses the values defined
            in the workflow type.
            </para>
             <note> 
            <para>
            If these parameters aren't set and no default parameters were defined in the workflow
            type, this error is displayed.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException">
            Returned by <a>StartWorkflowExecution</a> when an open execution with the same workflowId
            is already running in the specified domain.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/StartWorkflowExecution">REST API Reference for StartWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.StartWorkflowExecutionAsync(Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts an execution of the workflow type in the specified domain using the provided
            <code>workflowId</code> and input data.
            
             
            <para>
            This action returns the newly started workflow execution.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagList.member.0</code>: The key is <code>swf:tagList.member.0</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.1</code>: The key is <code>swf:tagList.member.1</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.2</code>: The key is <code>swf:tagList.member.2</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.3</code>: The key is <code>swf:tagList.member.3</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.4</code>: The key is <code>swf:tagList.member.4</code>.
            </para>
             </li> <li> 
            <para>
             <code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartWorkflowExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DefaultUndefinedException">
            The <code>StartWorkflowExecution</code> API action was called without the required
            parameters set.
            
             
            <para>
            Some workflow execution parameters, such as the decision <code>taskList</code>, must
            be set to start the execution. However, these parameters might have been set as defaults
            when the workflow type was registered. In this case, you can omit these parameters
            from the <code>StartWorkflowExecution</code> call and Amazon SWF uses the values defined
            in the workflow type.
            </para>
             <note> 
            <para>
            If these parameters aren't set and no default parameters were defined in the workflow
            type, this error is displayed.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException">
            Returned by <a>StartWorkflowExecution</a> when an open execution with the same workflowId
            is already running in the specified domain.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/StartWorkflowExecution">REST API Reference for StartWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.TagResource(Amazon.SimpleWorkflow.Model.TagResourceRequest)">
            <summary>
            Add a tag to a Amazon SWF domain.
            
             <note> 
            <para>
            Amazon SWF supports a maximum of 50 tags per resource.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TooManyTagsException">
            You've exceeded the number of tags allowed for a domain.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.TagResourceAsync(Amazon.SimpleWorkflow.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Add a tag to a Amazon SWF domain.
            
             <note> 
            <para>
            Amazon SWF supports a maximum of 50 tags per resource.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TooManyTagsException">
            You've exceeded the number of tags allowed for a domain.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.TerminateWorkflowExecution(Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest)">
            <summary>
            Records a <code>WorkflowExecutionTerminated</code> event and forces closure of the
            workflow execution identified by the given domain, runId, and workflowId. The child
            policy, registered with the workflow type or specified when starting this execution,
            is applied to any open child workflow executions of this workflow execution.
            
             <important> 
            <para>
            If the identified workflow execution was in progress, it is terminated immediately.
            </para>
             </important> <note> 
            <para>
            If a runId isn't specified, then the <code>WorkflowExecutionTerminated</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para>
             </note> <note> 
            <para>
            You should consider using <a>RequestCancelWorkflowExecution</a> action instead because
            it allows the workflow to gracefully close while <a>TerminateWorkflowExecution</a>
            doesn't.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateWorkflowExecution service method.</param>
            
            <returns>The response from the TerminateWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/TerminateWorkflowExecution">REST API Reference for TerminateWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.TerminateWorkflowExecutionAsync(Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Records a <code>WorkflowExecutionTerminated</code> event and forces closure of the
            workflow execution identified by the given domain, runId, and workflowId. The child
            policy, registered with the workflow type or specified when starting this execution,
            is applied to any open child workflow executions of this workflow execution.
            
             <important> 
            <para>
            If the identified workflow execution was in progress, it is terminated immediately.
            </para>
             </important> <note> 
            <para>
            If a runId isn't specified, then the <code>WorkflowExecutionTerminated</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para>
             </note> <note> 
            <para>
            You should consider using <a>RequestCancelWorkflowExecution</a> action instead because
            it allows the workflow to gracefully close while <a>TerminateWorkflowExecution</a>
            doesn't.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateWorkflowExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TerminateWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/TerminateWorkflowExecution">REST API Reference for TerminateWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.UndeprecateActivityType(Amazon.SimpleWorkflow.Model.UndeprecateActivityTypeRequest)">
            <summary>
            Undeprecates a previously deprecated <i>activity type</i>. After an activity type
            has been undeprecated, you can create new tasks of that activity type.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateActivityType service method.</param>
            
            <returns>The response from the UndeprecateActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateActivityType">REST API Reference for UndeprecateActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.UndeprecateActivityTypeAsync(Amazon.SimpleWorkflow.Model.UndeprecateActivityTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Undeprecates a previously deprecated <i>activity type</i>. After an activity type
            has been undeprecated, you can create new tasks of that activity type.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateActivityType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UndeprecateActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateActivityType">REST API Reference for UndeprecateActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.UndeprecateDomain(Amazon.SimpleWorkflow.Model.UndeprecateDomainRequest)">
            <summary>
            Undeprecates a previously deprecated domain. After a domain has been undeprecated
            it can be used to create new workflow executions or register new types.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateDomain service method.</param>
            
            <returns>The response from the UndeprecateDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException">
            Returned if the domain already exists. You may get this fault if you are registering
            a domain that is either already registered or deprecated, or if you undeprecate a
            domain that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateDomain">REST API Reference for UndeprecateDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.UndeprecateDomainAsync(Amazon.SimpleWorkflow.Model.UndeprecateDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Undeprecates a previously deprecated domain. After a domain has been undeprecated
            it can be used to create new workflow executions or register new types.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UndeprecateDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException">
            Returned if the domain already exists. You may get this fault if you are registering
            a domain that is either already registered or deprecated, or if you undeprecate a
            domain that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateDomain">REST API Reference for UndeprecateDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.UndeprecateWorkflowType(Amazon.SimpleWorkflow.Model.UndeprecateWorkflowTypeRequest)">
            <summary>
            Undeprecates a previously deprecated <i>workflow type</i>. After a workflow type has
            been undeprecated, you can create new executions of that type. 
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateWorkflowType service method.</param>
            
            <returns>The response from the UndeprecateWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateWorkflowType">REST API Reference for UndeprecateWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.UndeprecateWorkflowTypeAsync(Amazon.SimpleWorkflow.Model.UndeprecateWorkflowTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Undeprecates a previously deprecated <i>workflow type</i>. After a workflow type has
            been undeprecated, you can create new executions of that type. 
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateWorkflowType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UndeprecateWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateWorkflowType">REST API Reference for UndeprecateWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.UntagResource(Amazon.SimpleWorkflow.Model.UntagResourceRequest)">
            <summary>
            Remove a tag from a Amazon SWF domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.AmazonSimpleWorkflowClient.UntagResourceAsync(Amazon.SimpleWorkflow.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Remove a tag from a Amazon SWF domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="T:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow">
             <summary>
             Interface for accessing SimpleWorkflow
            
             Amazon Simple Workflow Service 
             <para>
             The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications
             that use Amazon's cloud to coordinate work across distributed components. In Amazon
             SWF, a <i>task</i> represents a logical unit of work that is performed by a component
             of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies,
             scheduling, and concurrency in accordance with the logical flow of the application.
             </para>
              
             <para>
             Amazon SWF gives you full control over implementing tasks and coordinating them without
             worrying about underlying complexities such as tracking their progress and maintaining
             their state.
             </para>
              
             <para>
             This documentation serves as reference only. For a broader overview of the Amazon
             SWF programming model, see the <i> <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/">Amazon
             SWF Developer Guide</a> </i>.
             </para>
             </summary>
        </member>
        <member name="P:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.Paginators">
            <summary>
            Paginators for the service
            </summary>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.CountClosedWorkflowExecutions(Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest)">
            <summary>
            Returns the number of closed workflow executions within the given domain that meet
            the specified filtering criteria.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountClosedWorkflowExecutions service method.</param>
            
            <returns>The response from the CountClosedWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountClosedWorkflowExecutions">REST API Reference for CountClosedWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.CountClosedWorkflowExecutionsAsync(Amazon.SimpleWorkflow.Model.CountClosedWorkflowExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the number of closed workflow executions within the given domain that meet
            the specified filtering criteria.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountClosedWorkflowExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CountClosedWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountClosedWorkflowExecutions">REST API Reference for CountClosedWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.CountOpenWorkflowExecutions(Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest)">
            <summary>
            Returns the number of open workflow executions within the given domain that meet the
            specified filtering criteria.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountOpenWorkflowExecutions service method.</param>
            
            <returns>The response from the CountOpenWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountOpenWorkflowExecutions">REST API Reference for CountOpenWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.CountOpenWorkflowExecutionsAsync(Amazon.SimpleWorkflow.Model.CountOpenWorkflowExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the number of open workflow executions within the given domain that meet the
            specified filtering criteria.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountOpenWorkflowExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CountOpenWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountOpenWorkflowExecutions">REST API Reference for CountOpenWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.CountPendingActivityTasks(Amazon.SimpleWorkflow.Model.CountPendingActivityTasksRequest)">
            <summary>
            Returns the estimated number of activity tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no activity task was ever scheduled in then <code>0</code> is returned.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountPendingActivityTasks service method.</param>
            
            <returns>The response from the CountPendingActivityTasks service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountPendingActivityTasks">REST API Reference for CountPendingActivityTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.CountPendingActivityTasksAsync(Amazon.SimpleWorkflow.Model.CountPendingActivityTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the estimated number of activity tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no activity task was ever scheduled in then <code>0</code> is returned.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountPendingActivityTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CountPendingActivityTasks service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountPendingActivityTasks">REST API Reference for CountPendingActivityTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.CountPendingDecisionTasks(Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksRequest)">
            <summary>
            Returns the estimated number of decision tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no decision task was ever scheduled in then <code>0</code> is returned.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountPendingDecisionTasks service method.</param>
            
            <returns>The response from the CountPendingDecisionTasks service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountPendingDecisionTasks">REST API Reference for CountPendingDecisionTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.CountPendingDecisionTasksAsync(Amazon.SimpleWorkflow.Model.CountPendingDecisionTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the estimated number of decision tasks in the specified task list. The count
            returned is an approximation and isn't guaranteed to be exact. If you specify a task
            list that no decision task was ever scheduled in then <code>0</code> is returned.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CountPendingDecisionTasks service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the CountPendingDecisionTasks service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/CountPendingDecisionTasks">REST API Reference for CountPendingDecisionTasks Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DeprecateActivityType(Amazon.SimpleWorkflow.Model.DeprecateActivityTypeRequest)">
            <summary>
            Deprecates the specified <i>activity type</i>. After an activity type has been deprecated,
            you cannot create new tasks of that activity type. Tasks of this type that were scheduled
            before the type was deprecated continue to run.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateActivityType service method.</param>
            
            <returns>The response from the DeprecateActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateActivityType">REST API Reference for DeprecateActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DeprecateActivityTypeAsync(Amazon.SimpleWorkflow.Model.DeprecateActivityTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Deprecates the specified <i>activity type</i>. After an activity type has been deprecated,
            you cannot create new tasks of that activity type. Tasks of this type that were scheduled
            before the type was deprecated continue to run.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateActivityType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeprecateActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateActivityType">REST API Reference for DeprecateActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DeprecateDomain(Amazon.SimpleWorkflow.Model.DeprecateDomainRequest)">
            <summary>
            Deprecates the specified domain. After a domain has been deprecated it cannot be used
            to create new workflow executions or register new types. However, you can still use
            visibility actions on this domain. Deprecating a domain also deprecates all activity
            and workflow types registered in the domain. Executions that were started before the
            domain was deprecated continues to run.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateDomain service method.</param>
            
            <returns>The response from the DeprecateDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainDeprecatedException">
            Returned when the specified domain has been deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateDomain">REST API Reference for DeprecateDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DeprecateDomainAsync(Amazon.SimpleWorkflow.Model.DeprecateDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Deprecates the specified domain. After a domain has been deprecated it cannot be used
            to create new workflow executions or register new types. However, you can still use
            visibility actions on this domain. Deprecating a domain also deprecates all activity
            and workflow types registered in the domain. Executions that were started before the
            domain was deprecated continues to run.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeprecateDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainDeprecatedException">
            Returned when the specified domain has been deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateDomain">REST API Reference for DeprecateDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DeprecateWorkflowType(Amazon.SimpleWorkflow.Model.DeprecateWorkflowTypeRequest)">
            <summary>
            Deprecates the specified <i>workflow type</i>. After a workflow type has been deprecated,
            you cannot create new executions of that type. Executions that were started before
            the type was deprecated continues to run. A deprecated workflow type may still be
            used when calling visibility actions.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateWorkflowType service method.</param>
            
            <returns>The response from the DeprecateWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateWorkflowType">REST API Reference for DeprecateWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DeprecateWorkflowTypeAsync(Amazon.SimpleWorkflow.Model.DeprecateWorkflowTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Deprecates the specified <i>workflow type</i>. After a workflow type has been deprecated,
            you cannot create new executions of that type. Executions that were started before
            the type was deprecated continues to run. A deprecated workflow type may still be
            used when calling visibility actions.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeprecateWorkflowType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DeprecateWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DeprecateWorkflowType">REST API Reference for DeprecateWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DescribeActivityType(Amazon.SimpleWorkflow.Model.DescribeActivityTypeRequest)">
            <summary>
            Returns information about the specified activity type. This includes configuration
            settings provided when the type was registered and other general information about
            the type.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeActivityType service method.</param>
            
            <returns>The response from the DescribeActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeActivityType">REST API Reference for DescribeActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DescribeActivityTypeAsync(Amazon.SimpleWorkflow.Model.DescribeActivityTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified activity type. This includes configuration
            settings provided when the type was registered and other general information about
            the type.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeActivityType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeActivityType">REST API Reference for DescribeActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DescribeDomain(Amazon.SimpleWorkflow.Model.DescribeDomainRequest)">
            <summary>
            Returns information about the specified domain, including description and status.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDomain service method.</param>
            
            <returns>The response from the DescribeDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeDomain">REST API Reference for DescribeDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DescribeDomainAsync(Amazon.SimpleWorkflow.Model.DescribeDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified domain, including description and status.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeDomain">REST API Reference for DescribeDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DescribeWorkflowExecution(Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionRequest)">
            <summary>
            Returns information about the specified workflow execution including its type and
            some statistics.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeWorkflowExecution service method.</param>
            
            <returns>The response from the DescribeWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeWorkflowExecution">REST API Reference for DescribeWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DescribeWorkflowExecutionAsync(Amazon.SimpleWorkflow.Model.DescribeWorkflowExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified workflow execution including its type and
            some statistics.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeWorkflowExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeWorkflowExecution">REST API Reference for DescribeWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DescribeWorkflowType(Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeRequest)">
            <summary>
            Returns information about the specified <i>workflow type</i>. This includes configuration
            settings specified when the type was registered and other information such as creation
            date, current status, etc.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeWorkflowType service method.</param>
            
            <returns>The response from the DescribeWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeWorkflowType">REST API Reference for DescribeWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.DescribeWorkflowTypeAsync(Amazon.SimpleWorkflow.Model.DescribeWorkflowTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about the specified <i>workflow type</i>. This includes configuration
            settings specified when the type was registered and other information such as creation
            date, current status, etc.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeWorkflowType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/DescribeWorkflowType">REST API Reference for DescribeWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.GetWorkflowExecutionHistory(Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest)">
            <summary>
            Returns the history of the specified workflow execution. The results may be split
            into multiple pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetWorkflowExecutionHistory service method.</param>
            
            <returns>The response from the GetWorkflowExecutionHistory service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/GetWorkflowExecutionHistory">REST API Reference for GetWorkflowExecutionHistory Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.GetWorkflowExecutionHistoryAsync(Amazon.SimpleWorkflow.Model.GetWorkflowExecutionHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the history of the specified workflow execution. The results may be split
            into multiple pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetWorkflowExecutionHistory service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetWorkflowExecutionHistory service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/GetWorkflowExecutionHistory">REST API Reference for GetWorkflowExecutionHistory Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListActivityTypes(Amazon.SimpleWorkflow.Model.ListActivityTypesRequest)">
            <summary>
            Returns information about all activities registered in the specified domain that match
            the specified name and registration status. The result includes information like creation
            date, current status of the activity, etc. The results may be split into multiple
            pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListActivityTypes service method.</param>
            
            <returns>The response from the ListActivityTypes service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListActivityTypes">REST API Reference for ListActivityTypes Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListActivityTypesAsync(Amazon.SimpleWorkflow.Model.ListActivityTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about all activities registered in the specified domain that match
            the specified name and registration status. The result includes information like creation
            date, current status of the activity, etc. The results may be split into multiple
            pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code>
            returned by the initial call.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListActivityTypes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListActivityTypes service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListActivityTypes">REST API Reference for ListActivityTypes Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListClosedWorkflowExecutions(Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest)">
            <summary>
            Returns a list of closed workflow executions in the specified domain that meet the
            filtering criteria. The results may be split into multiple pages. To retrieve subsequent
            pages, make the call again using the nextPageToken returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClosedWorkflowExecutions service method.</param>
            
            <returns>The response from the ListClosedWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListClosedWorkflowExecutions">REST API Reference for ListClosedWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListClosedWorkflowExecutionsAsync(Amazon.SimpleWorkflow.Model.ListClosedWorkflowExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of closed workflow executions in the specified domain that meet the
            filtering criteria. The results may be split into multiple pages. To retrieve subsequent
            pages, make the call again using the nextPageToken returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListClosedWorkflowExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListClosedWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListClosedWorkflowExecutions">REST API Reference for ListClosedWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListDomains(Amazon.SimpleWorkflow.Model.ListDomainsRequest)">
            <summary>
            Returns the list of domains registered in the account. The results may be split into
            multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken
            returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains. The element must be set to <code>arn:aws:swf::AccountID:domain/*</code>,
            where <i>AccountID</i> is the account ID, with no dashes.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDomains service method.</param>
            
            <returns>The response from the ListDomains service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListDomains">REST API Reference for ListDomains Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListDomainsAsync(Amazon.SimpleWorkflow.Model.ListDomainsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the list of domains registered in the account. The results may be split into
            multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken
            returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains. The element must be set to <code>arn:aws:swf::AccountID:domain/*</code>,
            where <i>AccountID</i> is the account ID, with no dashes.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDomains service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListDomains service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListDomains">REST API Reference for ListDomains Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListOpenWorkflowExecutions(Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest)">
            <summary>
            Returns a list of open workflow executions in the specified domain that meet the filtering
            criteria. The results may be split into multiple pages. To retrieve subsequent pages,
            make the call again using the nextPageToken returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListOpenWorkflowExecutions service method.</param>
            
            <returns>The response from the ListOpenWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListOpenWorkflowExecutions">REST API Reference for ListOpenWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListOpenWorkflowExecutionsAsync(Amazon.SimpleWorkflow.Model.ListOpenWorkflowExecutionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns a list of open workflow executions in the specified domain that meet the filtering
            criteria. The results may be split into multiple pages. To retrieve subsequent pages,
            make the call again using the nextPageToken returned by the initial call.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListOpenWorkflowExecutions service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListOpenWorkflowExecutions service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListOpenWorkflowExecutions">REST API Reference for ListOpenWorkflowExecutions Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListTagsForResource(Amazon.SimpleWorkflow.Model.ListTagsForResourceRequest)">
            <summary>
            List tags for a given domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            
            <returns>The response from the ListTagsForResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListTagsForResourceAsync(Amazon.SimpleWorkflow.Model.ListTagsForResourceRequest,System.Threading.CancellationToken)">
            <summary>
            List tags for a given domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsForResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListTagsForResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListTagsForResource">REST API Reference for ListTagsForResource Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListWorkflowTypes(Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest)">
            <summary>
            Returns information about workflow types in the specified domain. The results may
            be split into multiple pages that can be retrieved by making the call repeatedly.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListWorkflowTypes service method.</param>
            
            <returns>The response from the ListWorkflowTypes service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListWorkflowTypes">REST API Reference for ListWorkflowTypes Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.ListWorkflowTypesAsync(Amazon.SimpleWorkflow.Model.ListWorkflowTypesRequest,System.Threading.CancellationToken)">
            <summary>
            Returns information about workflow types in the specified domain. The results may
            be split into multiple pages that can be retrieved by making the call repeatedly.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListWorkflowTypes service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the ListWorkflowTypes service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/ListWorkflowTypes">REST API Reference for ListWorkflowTypes Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.PollForActivityTask(Amazon.SimpleWorkflow.Model.PollForActivityTaskRequest)">
            <summary>
            Used by workers to get an <a>ActivityTask</a> from the specified activity <code>taskList</code>.
            This initiates a long poll, where the service holds the HTTP connection open and responds
            as soon as a task becomes available. The maximum time the service holds on to the
            request before responding is 60 seconds. If no task is available within 60 seconds,
            the poll returns an empty result. An empty result, in this context, means that an
            ActivityTask is returned, but that the value of taskToken is an empty string. If a
            task is returned, the worker should use its type to identify and process it correctly.
            
             <important> 
            <para>
            Workers should set their client side socket timeout to at least 70 seconds (10 seconds
            higher than the maximum time service may hold the poll request).
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PollForActivityTask service method.</param>
            
            <returns>The response from the PollForActivityTask service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/PollForActivityTask">REST API Reference for PollForActivityTask Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.PollForActivityTaskAsync(Amazon.SimpleWorkflow.Model.PollForActivityTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Used by workers to get an <a>ActivityTask</a> from the specified activity <code>taskList</code>.
            This initiates a long poll, where the service holds the HTTP connection open and responds
            as soon as a task becomes available. The maximum time the service holds on to the
            request before responding is 60 seconds. If no task is available within 60 seconds,
            the poll returns an empty result. An empty result, in this context, means that an
            ActivityTask is returned, but that the value of taskToken is an empty string. If a
            task is returned, the worker should use its type to identify and process it correctly.
            
             <important> 
            <para>
            Workers should set their client side socket timeout to at least 70 seconds (10 seconds
            higher than the maximum time service may hold the poll request).
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PollForActivityTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PollForActivityTask service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/PollForActivityTask">REST API Reference for PollForActivityTask Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.PollForDecisionTask(Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest)">
            <summary>
            Used by deciders to get a <a>DecisionTask</a> from the specified decision <code>taskList</code>.
            A decision task may be returned for any open workflow execution that is using the
            specified task list. The task includes a paginated view of the history of the workflow
            execution. The decider should use the workflow type and the history to determine how
            to properly handle the task.
            
             
            <para>
            This action initiates a long poll, where the service holds the HTTP connection open
            and responds as soon a task becomes available. If no decision task is available in
            the specified task list before the timeout of 60 seconds expires, an empty result
            is returned. An empty result, in this context, means that a DecisionTask is returned,
            but that the value of taskToken is an empty string.
            </para>
             <important> 
            <para>
            Deciders should set their client side socket timeout to at least 70 seconds (10 seconds
            higher than the timeout).
            </para>
             </important> <important> 
            <para>
            Because the number of workflow history events for a single workflow execution might
            be very large, the result returned might be split up across a number of pages. To
            retrieve subsequent pages, make additional calls to <code>PollForDecisionTask</code>
            using the <code>nextPageToken</code> returned by the initial call. Note that you do
            <i>not</i> call <code>GetWorkflowExecutionHistory</code> with this <code>nextPageToken</code>.
            Instead, call <code>PollForDecisionTask</code> again.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PollForDecisionTask service method.</param>
            
            <returns>The response from the PollForDecisionTask service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/PollForDecisionTask">REST API Reference for PollForDecisionTask Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.PollForDecisionTaskAsync(Amazon.SimpleWorkflow.Model.PollForDecisionTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Used by deciders to get a <a>DecisionTask</a> from the specified decision <code>taskList</code>.
            A decision task may be returned for any open workflow execution that is using the
            specified task list. The task includes a paginated view of the history of the workflow
            execution. The decider should use the workflow type and the history to determine how
            to properly handle the task.
            
             
            <para>
            This action initiates a long poll, where the service holds the HTTP connection open
            and responds as soon a task becomes available. If no decision task is available in
            the specified task list before the timeout of 60 seconds expires, an empty result
            is returned. An empty result, in this context, means that a DecisionTask is returned,
            but that the value of taskToken is an empty string.
            </para>
             <important> 
            <para>
            Deciders should set their client side socket timeout to at least 70 seconds (10 seconds
            higher than the timeout).
            </para>
             </important> <important> 
            <para>
            Because the number of workflow history events for a single workflow execution might
            be very large, the result returned might be split up across a number of pages. To
            retrieve subsequent pages, make additional calls to <code>PollForDecisionTask</code>
            using the <code>nextPageToken</code> returned by the initial call. Note that you do
            <i>not</i> call <code>GetWorkflowExecutionHistory</code> with this <code>nextPageToken</code>.
            Instead, call <code>PollForDecisionTask</code> again.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the <code>taskList.name</code> parameter by using a <code>Condition</code>
            element with the <code>swf:taskList.name</code> key to allow the action to access
            only certain task lists.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PollForDecisionTask service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the PollForDecisionTask service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/PollForDecisionTask">REST API Reference for PollForDecisionTask Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RecordActivityTaskHeartbeat(Amazon.SimpleWorkflow.Model.RecordActivityTaskHeartbeatRequest)">
            <summary>
            Used by activity workers to report to the service that the <a>ActivityTask</a> represented
            by the specified <code>taskToken</code> is still making progress. The worker can also
            specify details of the progress, for example percent complete, using the <code>details</code>
            parameter. This action can also be used by the worker as a mechanism to check if cancellation
            is being requested for the activity task. If a cancellation is being attempted for
            the specified task, then the boolean <code>cancelRequested</code> flag returned by
            the service is set to <code>true</code>.
            
             
            <para>
            This action resets the <code>taskHeartbeatTimeout</code> clock. The <code>taskHeartbeatTimeout</code>
            is specified in <a>RegisterActivityType</a>.
            </para>
             
            <para>
            This action doesn't in itself create an event in the workflow execution history. However,
            if the task times out, the workflow execution history contains a <code>ActivityTaskTimedOut</code>
            event that contains the information from the last heartbeat generated by the activity
            worker.
            </para>
             <note> 
            <para>
            The <code>taskStartToCloseTimeout</code> of an activity type is the maximum duration
            of an activity task, regardless of the number of <a>RecordActivityTaskHeartbeat</a>
            requests received. The <code>taskStartToCloseTimeout</code> is also specified in <a>RegisterActivityType</a>.
            </para>
             </note> <note> 
            <para>
            This operation is only useful for long-lived activities to report liveliness of the
            task and to determine if a cancellation is being attempted.
            </para>
             </note> <important> 
            <para>
            If the <code>cancelRequested</code> flag returns <code>true</code>, a cancellation
            is being attempted. If the worker can cancel the activity, it should respond with
            <a>RespondActivityTaskCanceled</a>. Otherwise, it should ignore the cancellation request.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RecordActivityTaskHeartbeat service method.</param>
            
            <returns>The response from the RecordActivityTaskHeartbeat service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RecordActivityTaskHeartbeat">REST API Reference for RecordActivityTaskHeartbeat Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RecordActivityTaskHeartbeatAsync(Amazon.SimpleWorkflow.Model.RecordActivityTaskHeartbeatRequest,System.Threading.CancellationToken)">
            <summary>
            Used by activity workers to report to the service that the <a>ActivityTask</a> represented
            by the specified <code>taskToken</code> is still making progress. The worker can also
            specify details of the progress, for example percent complete, using the <code>details</code>
            parameter. This action can also be used by the worker as a mechanism to check if cancellation
            is being requested for the activity task. If a cancellation is being attempted for
            the specified task, then the boolean <code>cancelRequested</code> flag returned by
            the service is set to <code>true</code>.
            
             
            <para>
            This action resets the <code>taskHeartbeatTimeout</code> clock. The <code>taskHeartbeatTimeout</code>
            is specified in <a>RegisterActivityType</a>.
            </para>
             
            <para>
            This action doesn't in itself create an event in the workflow execution history. However,
            if the task times out, the workflow execution history contains a <code>ActivityTaskTimedOut</code>
            event that contains the information from the last heartbeat generated by the activity
            worker.
            </para>
             <note> 
            <para>
            The <code>taskStartToCloseTimeout</code> of an activity type is the maximum duration
            of an activity task, regardless of the number of <a>RecordActivityTaskHeartbeat</a>
            requests received. The <code>taskStartToCloseTimeout</code> is also specified in <a>RegisterActivityType</a>.
            </para>
             </note> <note> 
            <para>
            This operation is only useful for long-lived activities to report liveliness of the
            task and to determine if a cancellation is being attempted.
            </para>
             </note> <important> 
            <para>
            If the <code>cancelRequested</code> flag returns <code>true</code>, a cancellation
            is being attempted. If the worker can cancel the activity, it should respond with
            <a>RespondActivityTaskCanceled</a>. Otherwise, it should ignore the cancellation request.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RecordActivityTaskHeartbeat service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RecordActivityTaskHeartbeat service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RecordActivityTaskHeartbeat">REST API Reference for RecordActivityTaskHeartbeat Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RegisterActivityType(Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest)">
            <summary>
            Registers a new <i>activity type</i> along with its configuration settings in the
            specified domain.
            
             <important> 
            <para>
            A <code>TypeAlreadyExists</code> fault is returned if the type already exists in the
            domain. You cannot change any configuration settings of the type after its registration,
            and it must be registered as a new version.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para>
             </li> <li> 
            <para>
             <code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterActivityType service method.</param>
            
            <returns>The response from the RegisterActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterActivityType">REST API Reference for RegisterActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RegisterActivityTypeAsync(Amazon.SimpleWorkflow.Model.RegisterActivityTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a new <i>activity type</i> along with its configuration settings in the
            specified domain.
            
             <important> 
            <para>
            A <code>TypeAlreadyExists</code> fault is returned if the type already exists in the
            domain. You cannot change any configuration settings of the type after its registration,
            and it must be registered as a new version.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para>
             </li> <li> 
            <para>
             <code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterActivityType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterActivityType">REST API Reference for RegisterActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RegisterDomain(Amazon.SimpleWorkflow.Model.RegisterDomainRequest)">
            <summary>
            Registers a new domain.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            You cannot use an IAM policy to control domain access for this action. The name of
            the domain being registered is available as the resource of this action.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterDomain service method.</param>
            
            <returns>The response from the RegisterDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException">
            Returned if the domain already exists. You may get this fault if you are registering
            a domain that is either already registered or deprecated, or if you undeprecate a
            domain that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TooManyTagsException">
            You've exceeded the number of tags allowed for a domain.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterDomain">REST API Reference for RegisterDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RegisterDomainAsync(Amazon.SimpleWorkflow.Model.RegisterDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a new domain.
            
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            You cannot use an IAM policy to control domain access for this action. The name of
            the domain being registered is available as the resource of this action.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException">
            Returned if the domain already exists. You may get this fault if you are registering
            a domain that is either already registered or deprecated, or if you undeprecate a
            domain that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TooManyTagsException">
            You've exceeded the number of tags allowed for a domain.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterDomain">REST API Reference for RegisterDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RegisterWorkflowType(Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest)">
            <summary>
            Registers a new <i>workflow type</i> and its configuration settings in the specified
            domain.
            
             
            <para>
            The retention period for the workflow history is set by the <a>RegisterDomain</a>
            action.
            </para>
             <important> 
            <para>
            If the type already exists, then a <code>TypeAlreadyExists</code> fault is returned.
            You cannot change the configuration settings of a workflow type once it is registered
            and it must be registered as a new version.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para>
             </li> <li> 
            <para>
             <code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterWorkflowType service method.</param>
            
            <returns>The response from the RegisterWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterWorkflowType">REST API Reference for RegisterWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RegisterWorkflowTypeAsync(Amazon.SimpleWorkflow.Model.RegisterWorkflowTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a new <i>workflow type</i> and its configuration settings in the specified
            domain.
            
             
            <para>
            The retention period for the workflow history is set by the <a>RegisterDomain</a>
            action.
            </para>
             <important> 
            <para>
            If the type already exists, then a <code>TypeAlreadyExists</code> fault is returned.
            You cannot change the configuration settings of a workflow type once it is registered
            and it must be registered as a new version.
            </para>
             </important> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>name</code>: String constraint. The key is <code>swf:name</code>.
            </para>
             </li> <li> 
            <para>
             <code>version</code>: String constraint. The key is <code>swf:version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterWorkflowType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RegisterWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RegisterWorkflowType">REST API Reference for RegisterWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RequestCancelWorkflowExecution(Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionRequest)">
            <summary>
            Records a <code>WorkflowExecutionCancelRequested</code> event in the currently running
            workflow execution identified by the given domain, workflowId, and runId. This logically
            requests the cancellation of the workflow execution as a whole. It is up to the decider
            to take appropriate actions when it receives an execution history with this event.
            
             <note> 
            <para>
            If the runId isn't specified, the <code>WorkflowExecutionCancelRequested</code> event
            is recorded in the history of the current open workflow execution with the specified
            workflowId in the domain.
            </para>
             </note> <note> 
            <para>
            Because this action allows the workflow to properly clean up and gracefully close,
            it should be used instead of <a>TerminateWorkflowExecution</a> when possible.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestCancelWorkflowExecution service method.</param>
            
            <returns>The response from the RequestCancelWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RequestCancelWorkflowExecution">REST API Reference for RequestCancelWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RequestCancelWorkflowExecutionAsync(Amazon.SimpleWorkflow.Model.RequestCancelWorkflowExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Records a <code>WorkflowExecutionCancelRequested</code> event in the currently running
            workflow execution identified by the given domain, workflowId, and runId. This logically
            requests the cancellation of the workflow execution as a whole. It is up to the decider
            to take appropriate actions when it receives an execution history with this event.
            
             <note> 
            <para>
            If the runId isn't specified, the <code>WorkflowExecutionCancelRequested</code> event
            is recorded in the history of the current open workflow execution with the specified
            workflowId in the domain.
            </para>
             </note> <note> 
            <para>
            Because this action allows the workflow to properly clean up and gracefully close,
            it should be used instead of <a>TerminateWorkflowExecution</a> when possible.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RequestCancelWorkflowExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RequestCancelWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RequestCancelWorkflowExecution">REST API Reference for RequestCancelWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RespondActivityTaskCanceled(Amazon.SimpleWorkflow.Model.RespondActivityTaskCanceledRequest)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> was successfully canceled. Additional <code>details</code>
            can be provided using the <code>details</code> argument.
            
             
            <para>
            These <code>details</code> (if provided) appear in the <code>ActivityTaskCanceled</code>
            event added to the workflow history.
            </para>
             <important> 
            <para>
            Only use this operation if the <code>canceled</code> flag of a <a>RecordActivityTaskHeartbeat</a>
            request returns <code>true</code> and if the activity can be safely undone or abandoned.
            </para>
             </important> 
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to <a>RespondActivityTaskCompleted</a>, RespondActivityTaskCanceled,
            <a>RespondActivityTaskFailed</a>, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskCanceled service method.</param>
            
            <returns>The response from the RespondActivityTaskCanceled service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskCanceled">REST API Reference for RespondActivityTaskCanceled Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RespondActivityTaskCanceledAsync(Amazon.SimpleWorkflow.Model.RespondActivityTaskCanceledRequest,System.Threading.CancellationToken)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> was successfully canceled. Additional <code>details</code>
            can be provided using the <code>details</code> argument.
            
             
            <para>
            These <code>details</code> (if provided) appear in the <code>ActivityTaskCanceled</code>
            event added to the workflow history.
            </para>
             <important> 
            <para>
            Only use this operation if the <code>canceled</code> flag of a <a>RecordActivityTaskHeartbeat</a>
            request returns <code>true</code> and if the activity can be safely undone or abandoned.
            </para>
             </important> 
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to <a>RespondActivityTaskCompleted</a>, RespondActivityTaskCanceled,
            <a>RespondActivityTaskFailed</a>, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskCanceled service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RespondActivityTaskCanceled service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskCanceled">REST API Reference for RespondActivityTaskCanceled Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RespondActivityTaskCompleted(Amazon.SimpleWorkflow.Model.RespondActivityTaskCompletedRequest)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> completed successfully with a <code>result</code> (if provided).
            The <code>result</code> appears in the <code>ActivityTaskCompleted</code> event in
            the workflow history.
            
             <important> 
            <para>
            If the requested task doesn't complete successfully, use <a>RespondActivityTaskFailed</a>
            instead. If the worker finds that the task is canceled through the <code>canceled</code>
            flag returned by <a>RecordActivityTaskHeartbeat</a>, it should cancel the task, clean
            up and then call <a>RespondActivityTaskCanceled</a>.
            </para>
             </important> 
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to RespondActivityTaskCompleted, <a>RespondActivityTaskCanceled</a>,
            <a>RespondActivityTaskFailed</a>, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskCompleted service method.</param>
            
            <returns>The response from the RespondActivityTaskCompleted service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskCompleted">REST API Reference for RespondActivityTaskCompleted Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RespondActivityTaskCompletedAsync(Amazon.SimpleWorkflow.Model.RespondActivityTaskCompletedRequest,System.Threading.CancellationToken)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> completed successfully with a <code>result</code> (if provided).
            The <code>result</code> appears in the <code>ActivityTaskCompleted</code> event in
            the workflow history.
            
             <important> 
            <para>
            If the requested task doesn't complete successfully, use <a>RespondActivityTaskFailed</a>
            instead. If the worker finds that the task is canceled through the <code>canceled</code>
            flag returned by <a>RecordActivityTaskHeartbeat</a>, it should cancel the task, clean
            up and then call <a>RespondActivityTaskCanceled</a>.
            </para>
             </important> 
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to RespondActivityTaskCompleted, <a>RespondActivityTaskCanceled</a>,
            <a>RespondActivityTaskFailed</a>, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskCompleted service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RespondActivityTaskCompleted service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskCompleted">REST API Reference for RespondActivityTaskCompleted Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RespondActivityTaskFailed(Amazon.SimpleWorkflow.Model.RespondActivityTaskFailedRequest)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> has failed with <code>reason</code> (if specified). The <code>reason</code>
            and <code>details</code> appear in the <code>ActivityTaskFailed</code> event added
            to the workflow history.
            
             
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to <a>RespondActivityTaskCompleted</a>, <a>RespondActivityTaskCanceled</a>,
            RespondActivityTaskFailed, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskFailed service method.</param>
            
            <returns>The response from the RespondActivityTaskFailed service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskFailed">REST API Reference for RespondActivityTaskFailed Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RespondActivityTaskFailedAsync(Amazon.SimpleWorkflow.Model.RespondActivityTaskFailedRequest,System.Threading.CancellationToken)">
            <summary>
            Used by workers to tell the service that the <a>ActivityTask</a> identified by the
            <code>taskToken</code> has failed with <code>reason</code> (if specified). The <code>reason</code>
            and <code>details</code> appear in the <code>ActivityTaskFailed</code> event added
            to the workflow history.
            
             
            <para>
            A task is considered open from the time that it is scheduled until it is closed. Therefore
            a task is reported as open while a worker is processing it. A task is closed after
            it has been specified in a call to <a>RespondActivityTaskCompleted</a>, <a>RespondActivityTaskCanceled</a>,
            RespondActivityTaskFailed, or the task has <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
            out</a>.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondActivityTaskFailed service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RespondActivityTaskFailed service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondActivityTaskFailed">REST API Reference for RespondActivityTaskFailed Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RespondDecisionTaskCompleted(Amazon.SimpleWorkflow.Model.RespondDecisionTaskCompletedRequest)">
            <summary>
            Used by deciders to tell the service that the <a>DecisionTask</a> identified by the
            <code>taskToken</code> has successfully completed. The <code>decisions</code> argument
            specifies the list of decisions made while processing the task.
            
             
            <para>
            A <code>DecisionTaskCompleted</code> event is added to the workflow history. The <code>executionContext</code>
            specified is attached to the event in the workflow execution history.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            If an IAM policy grants permission to use <code>RespondDecisionTaskCompleted</code>,
            it can express permissions for the list of decisions in the <code>decisions</code>
            parameter. Each of the decisions has one or more parameters, much like a regular API
            call. To allow for policies to be as readable as possible, you can express permissions
            on decisions as if they were actual API calls, including applying conditions to some
            parameters. For more information, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondDecisionTaskCompleted service method.</param>
            
            <returns>The response from the RespondDecisionTaskCompleted service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondDecisionTaskCompleted">REST API Reference for RespondDecisionTaskCompleted Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.RespondDecisionTaskCompletedAsync(Amazon.SimpleWorkflow.Model.RespondDecisionTaskCompletedRequest,System.Threading.CancellationToken)">
            <summary>
            Used by deciders to tell the service that the <a>DecisionTask</a> identified by the
            <code>taskToken</code> has successfully completed. The <code>decisions</code> argument
            specifies the list of decisions made while processing the task.
            
             
            <para>
            A <code>DecisionTaskCompleted</code> event is added to the workflow history. The <code>executionContext</code>
            specified is attached to the event in the workflow execution history.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            If an IAM policy grants permission to use <code>RespondDecisionTaskCompleted</code>,
            it can express permissions for the list of decisions in the <code>decisions</code>
            parameter. Each of the decisions has one or more parameters, much like a regular API
            call. To allow for policies to be as readable as possible, you can express permissions
            on decisions as if they were actual API calls, including applying conditions to some
            parameters. For more information, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RespondDecisionTaskCompleted service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the RespondDecisionTaskCompleted service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/RespondDecisionTaskCompleted">REST API Reference for RespondDecisionTaskCompleted Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.SignalWorkflowExecution(Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest)">
            <summary>
            Records a <code>WorkflowExecutionSignaled</code> event in the workflow execution history
            and creates a decision task for the workflow execution identified by the given domain,
            workflowId and runId. The event is recorded with the specified user defined signalName
            and input (if provided).
            
             <note> 
            <para>
            If a runId isn't specified, then the <code>WorkflowExecutionSignaled</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para>
             </note> <note> 
            <para>
            If the specified workflow execution isn't open, this method fails with <code>UnknownResource</code>.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SignalWorkflowExecution service method.</param>
            
            <returns>The response from the SignalWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/SignalWorkflowExecution">REST API Reference for SignalWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.SignalWorkflowExecutionAsync(Amazon.SimpleWorkflow.Model.SignalWorkflowExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Records a <code>WorkflowExecutionSignaled</code> event in the workflow execution history
            and creates a decision task for the workflow execution identified by the given domain,
            workflowId and runId. The event is recorded with the specified user defined signalName
            and input (if provided).
            
             <note> 
            <para>
            If a runId isn't specified, then the <code>WorkflowExecutionSignaled</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para>
             </note> <note> 
            <para>
            If the specified workflow execution isn't open, this method fails with <code>UnknownResource</code>.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the SignalWorkflowExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SignalWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/SignalWorkflowExecution">REST API Reference for SignalWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.StartWorkflowExecution(Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest)">
            <summary>
            Starts an execution of the workflow type in the specified domain using the provided
            <code>workflowId</code> and input data.
            
             
            <para>
            This action returns the newly started workflow execution.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagList.member.0</code>: The key is <code>swf:tagList.member.0</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.1</code>: The key is <code>swf:tagList.member.1</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.2</code>: The key is <code>swf:tagList.member.2</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.3</code>: The key is <code>swf:tagList.member.3</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.4</code>: The key is <code>swf:tagList.member.4</code>.
            </para>
             </li> <li> 
            <para>
             <code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartWorkflowExecution service method.</param>
            
            <returns>The response from the StartWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DefaultUndefinedException">
            The <code>StartWorkflowExecution</code> API action was called without the required
            parameters set.
            
             
            <para>
            Some workflow execution parameters, such as the decision <code>taskList</code>, must
            be set to start the execution. However, these parameters might have been set as defaults
            when the workflow type was registered. In this case, you can omit these parameters
            from the <code>StartWorkflowExecution</code> call and Amazon SWF uses the values defined
            in the workflow type.
            </para>
             <note> 
            <para>
            If these parameters aren't set and no default parameters were defined in the workflow
            type, this error is displayed.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException">
            Returned by <a>StartWorkflowExecution</a> when an open execution with the same workflowId
            is already running in the specified domain.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/StartWorkflowExecution">REST API Reference for StartWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.StartWorkflowExecutionAsync(Amazon.SimpleWorkflow.Model.StartWorkflowExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts an execution of the workflow type in the specified domain using the provided
            <code>workflowId</code> and input data.
            
             
            <para>
            This action returns the newly started workflow execution.
            </para>
             
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>tagList.member.0</code>: The key is <code>swf:tagList.member.0</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.1</code>: The key is <code>swf:tagList.member.1</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.2</code>: The key is <code>swf:tagList.member.2</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.3</code>: The key is <code>swf:tagList.member.3</code>.
            </para>
             </li> <li> 
            <para>
             <code>tagList.member.4</code>: The key is <code>swf:tagList.member.4</code>.
            </para>
             </li> <li> 
            <para>
             <code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the StartWorkflowExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the StartWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DefaultUndefinedException">
            The <code>StartWorkflowExecution</code> API action was called without the required
            parameters set.
            
             
            <para>
            Some workflow execution parameters, such as the decision <code>taskList</code>, must
            be set to start the execution. However, these parameters might have been set as defaults
            when the workflow type was registered. In this case, you can omit these parameters
            from the <code>StartWorkflowExecution</code> call and Amazon SWF uses the values defined
            in the workflow type.
            </para>
             <note> 
            <para>
            If these parameters aren't set and no default parameters were defined in the workflow
            type, this error is displayed.
            </para>
             </note>
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeDeprecatedException">
            Returned when the specified activity or workflow type was already deprecated.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.WorkflowExecutionAlreadyStartedException">
            Returned by <a>StartWorkflowExecution</a> when an open execution with the same workflowId
            is already running in the specified domain.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/StartWorkflowExecution">REST API Reference for StartWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.TagResource(Amazon.SimpleWorkflow.Model.TagResourceRequest)">
            <summary>
            Add a tag to a Amazon SWF domain.
            
             <note> 
            <para>
            Amazon SWF supports a maximum of 50 tags per resource.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            
            <returns>The response from the TagResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TooManyTagsException">
            You've exceeded the number of tags allowed for a domain.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.TagResourceAsync(Amazon.SimpleWorkflow.Model.TagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Add a tag to a Amazon SWF domain.
            
             <note> 
            <para>
            Amazon SWF supports a maximum of 50 tags per resource.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TagResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TooManyTagsException">
            You've exceeded the number of tags allowed for a domain.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/TagResource">REST API Reference for TagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.TerminateWorkflowExecution(Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest)">
            <summary>
            Records a <code>WorkflowExecutionTerminated</code> event and forces closure of the
            workflow execution identified by the given domain, runId, and workflowId. The child
            policy, registered with the workflow type or specified when starting this execution,
            is applied to any open child workflow executions of this workflow execution.
            
             <important> 
            <para>
            If the identified workflow execution was in progress, it is terminated immediately.
            </para>
             </important> <note> 
            <para>
            If a runId isn't specified, then the <code>WorkflowExecutionTerminated</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para>
             </note> <note> 
            <para>
            You should consider using <a>RequestCancelWorkflowExecution</a> action instead because
            it allows the workflow to gracefully close while <a>TerminateWorkflowExecution</a>
            doesn't.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateWorkflowExecution service method.</param>
            
            <returns>The response from the TerminateWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/TerminateWorkflowExecution">REST API Reference for TerminateWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.TerminateWorkflowExecutionAsync(Amazon.SimpleWorkflow.Model.TerminateWorkflowExecutionRequest,System.Threading.CancellationToken)">
            <summary>
            Records a <code>WorkflowExecutionTerminated</code> event and forces closure of the
            workflow execution identified by the given domain, runId, and workflowId. The child
            policy, registered with the workflow type or specified when starting this execution,
            is applied to any open child workflow executions of this workflow execution.
            
             <important> 
            <para>
            If the identified workflow execution was in progress, it is terminated immediately.
            </para>
             </important> <note> 
            <para>
            If a runId isn't specified, then the <code>WorkflowExecutionTerminated</code> event
            is recorded in the history of the current open workflow with the matching workflowId
            in the domain.
            </para>
             </note> <note> 
            <para>
            You should consider using <a>RequestCancelWorkflowExecution</a> action instead because
            it allows the workflow to gracefully close while <a>TerminateWorkflowExecution</a>
            doesn't.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TerminateWorkflowExecution service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the TerminateWorkflowExecution service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/TerminateWorkflowExecution">REST API Reference for TerminateWorkflowExecution Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.UndeprecateActivityType(Amazon.SimpleWorkflow.Model.UndeprecateActivityTypeRequest)">
            <summary>
            Undeprecates a previously deprecated <i>activity type</i>. After an activity type
            has been undeprecated, you can create new tasks of that activity type.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateActivityType service method.</param>
            
            <returns>The response from the UndeprecateActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateActivityType">REST API Reference for UndeprecateActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.UndeprecateActivityTypeAsync(Amazon.SimpleWorkflow.Model.UndeprecateActivityTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Undeprecates a previously deprecated <i>activity type</i>. After an activity type
            has been undeprecated, you can create new tasks of that activity type.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateActivityType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UndeprecateActivityType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateActivityType">REST API Reference for UndeprecateActivityType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.UndeprecateDomain(Amazon.SimpleWorkflow.Model.UndeprecateDomainRequest)">
            <summary>
            Undeprecates a previously deprecated domain. After a domain has been undeprecated
            it can be used to create new workflow executions or register new types.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateDomain service method.</param>
            
            <returns>The response from the UndeprecateDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException">
            Returned if the domain already exists. You may get this fault if you are registering
            a domain that is either already registered or deprecated, or if you undeprecate a
            domain that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateDomain">REST API Reference for UndeprecateDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.UndeprecateDomainAsync(Amazon.SimpleWorkflow.Model.UndeprecateDomainRequest,System.Threading.CancellationToken)">
            <summary>
            Undeprecates a previously deprecated domain. After a domain has been undeprecated
            it can be used to create new workflow executions or register new types.
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            You cannot use an IAM policy to constrain this action's parameters.
            </para>
             </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateDomain service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UndeprecateDomain service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.DomainAlreadyExistsException">
            Returned if the domain already exists. You may get this fault if you are registering
            a domain that is either already registered or deprecated, or if you undeprecate a
            domain that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateDomain">REST API Reference for UndeprecateDomain Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.UndeprecateWorkflowType(Amazon.SimpleWorkflow.Model.UndeprecateWorkflowTypeRequest)">
            <summary>
            Undeprecates a previously deprecated <i>workflow type</i>. After a workflow type has
            been undeprecated, you can create new executions of that type. 
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateWorkflowType service method.</param>
            
            <returns>The response from the UndeprecateWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateWorkflowType">REST API Reference for UndeprecateWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.UndeprecateWorkflowTypeAsync(Amazon.SimpleWorkflow.Model.UndeprecateWorkflowTypeRequest,System.Threading.CancellationToken)">
            <summary>
            Undeprecates a previously deprecated <i>workflow type</i>. After a workflow type has
            been undeprecated, you can create new executions of that type. 
            
             <note> 
            <para>
            This operation is eventually consistent. The results are best effort and may not exactly
            reflect recent updates and changes.
            </para>
             </note> 
            <para>
             <b>Access Control</b> 
            </para>
             
            <para>
            You can use IAM policies to control this action's access to Amazon SWF resources as
            follows:
            </para>
             <ul> <li> 
            <para>
            Use a <code>Resource</code> element with the domain name to limit the action to only
            specified domains.
            </para>
             </li> <li> 
            <para>
            Use an <code>Action</code> element to allow or deny permission to call this action.
            </para>
             </li> <li> 
            <para>
            Constrain the following parameters by using a <code>Condition</code> element with
            the appropriate keys.
            </para>
             <ul> <li> 
            <para>
             <code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.
            </para>
             </li> <li> 
            <para>
             <code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.
            </para>
             </li> </ul> </li> </ul> 
            <para>
            If the caller doesn't have sufficient permissions to invoke the action, or the parameter
            values fall outside the specified constraints, the action fails. The associated event
            attribute's <code>cause</code> parameter is set to <code>OPERATION_NOT_PERMITTED</code>.
            For details and example IAM policies, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
            IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF Developer Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UndeprecateWorkflowType service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UndeprecateWorkflowType service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.TypeAlreadyExistsException">
            Returned if the type already exists in the specified domain. You may get this fault
            if you are registering a type that is either already registered or deprecated, or
            if you undeprecate a type that is currently registered.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UndeprecateWorkflowType">REST API Reference for UndeprecateWorkflowType Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.UntagResource(Amazon.SimpleWorkflow.Model.UntagResourceRequest)">
            <summary>
            Remove a tag from a Amazon SWF domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            
            <returns>The response from the UntagResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
        <member name="M:Amazon.SimpleWorkflow.IAmazonSimpleWorkflow.UntagResourceAsync(Amazon.SimpleWorkflow.Model.UntagResourceRequest,System.Threading.CancellationToken)">
            <summary>
            Remove a tag from a Amazon SWF domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagResource service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the UntagResource service method, as returned by SimpleWorkflow.</returns>
            <exception cref="T:Amazon.SimpleWorkflow.Model.LimitExceededException">
            Returned by any operation if a system imposed limitation has been reached. To address
            this fault you should either clean up unused resources or increase the limit by contacting
            AWS.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.OperationNotPermittedException">
            Returned when the caller doesn't have sufficient permissions to invoke the action.
            </exception>
            <exception cref="T:Amazon.SimpleWorkflow.Model.UnknownResourceException">
            Returned when the named resource cannot be found with in the scope of this operation
            (region or domain). This could happen if the named resource was never created or is
            no longer available for this operation.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/swf-2012-01-25/UntagResource">REST API Reference for UntagResource Operation</seealso>
        </member>
    </members>
</doc>
