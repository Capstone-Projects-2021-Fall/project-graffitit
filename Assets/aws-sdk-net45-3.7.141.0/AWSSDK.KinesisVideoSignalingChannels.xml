<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.KinesisVideoSignalingChannels</name>
    </assembly>
    <members>
        <member name="T:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsConfig">
            <summary>
            Configuration for accessing Amazon KinesisVideoSignalingChannels service
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsException">
            <summary>
             Common exception for the KinesisVideoSignalingChannels service.
             </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonKinesisVideoSignalingChannelsException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonKinesisVideoSignalingChannelsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonKinesisVideoSignalingChannelsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonKinesisVideoSignalingChannelsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonKinesisVideoSignalingChannelsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonKinesisVideoSignalingChannelsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Internal.AmazonKinesisVideoSignalingChannelsMetadata">
            <summary>
            Service metadata for  Amazon KinesisVideoSignalingChannels service
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Internal.AmazonKinesisVideoSignalingChannelsMetadata.ServiceId">
            <summary>
            Gets the value of the Service Id.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Internal.AmazonKinesisVideoSignalingChannelsMetadata.OperationNameMapping">
            <summary>
            Gets the dictionary that gives mapping of renamed operations
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsRequest">
            <summary>
            Base class for KinesisVideoSignalingChannels operation requests.
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException">
            <summary>
            Your request was throttled because you have exceeded the limit of allowed client calls.
            Try making the call later.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new ClientLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ClientLimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigRequest">
            <summary>
            Container for the parameters to the GetIceServerConfig operation.
            Gets the Interactive Connectivity Establishment (ICE) server configuration information,
            including URIs, username, and password which can be used to configure the WebRTC connection.
            The ICE component uses this configuration information to setup the WebRTC connection,
            including authenticating with the Traversal Using Relays around NAT (TURN) relay server.
            
            
             
            <para>
            TURN is a protocol that is used to improve the connectivity of peer-to-peer applications.
            By providing a cloud-based relay service, TURN ensures that a connection can be established
            even when one or more peers are incapable of a direct peer-to-peer connection. For
            more information, see <a href="https://tools.ietf.org/html/draft-uberti-rtcweb-turn-rest-00">A
            REST API For Access To TURN Services</a>.
            </para>
             
            <para>
             You can invoke this API to establish a fallback mechanism in case either of the peers
            is unable to establish a direct peer-to-peer connection over a signaling channel.
            You must specify either a signaling channel ARN or the client ID in order to invoke
            this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigRequest.ChannelARN">
            <summary>
            Gets and sets the property ChannelARN. 
            <para>
            The ARN of the signaling channel to be used for the peer-to-peer connection between
            configured peers. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigRequest.ClientId">
            <summary>
            Gets and sets the property ClientId. 
            <para>
            Unique identifier for the viewer. Must be unique within the signaling channel.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigRequest.Service">
            <summary>
            Gets and sets the property Service. 
            <para>
            Specifies the desired service. Currently, <code>TURN</code> is the only valid value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigRequest.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            An optional user ID to be associated with the credentials.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigResponse">
            <summary>
            This is the response object from the GetIceServerConfig operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigResponse.IceServerList">
            <summary>
            Gets and sets the property IceServerList. 
            <para>
            The list of ICE server information objects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.IceServer">
            <summary>
            A structure for the ICE server connection data.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.IceServer.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            A password to login to the ICE server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.IceServer.Ttl">
            <summary>
            Gets and sets the property Ttl. 
            <para>
            The period of time, in seconds, during which the username and password are valid.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.IceServer.Uris">
            <summary>
            Gets and sets the property Uris. 
            <para>
            An array of URIs, in the form specified in the <a href="https://tools.ietf.org/html/draft-petithuguenin-behave-turn-uris-03">I-D.petithuguenin-behave-turn-uris</a>
            spec. These URIs provide the different addresses and/or protocols that can be used
            to reach the TURN server.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.IceServer.Username">
            <summary>
            Gets and sets the property Username. 
            <para>
            A username to login to the ICE server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ClientLimitExceededException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.ClientLimitExceededExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.GetIceServerConfigRequestMarshaller">
            <summary>
            GetIceServerConfig Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.GetIceServerConfigRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.GetIceServerConfigRequestMarshaller.Marshall(Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.GetIceServerConfigRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.GetIceServerConfigResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetIceServerConfig operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.GetIceServerConfigResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.GetIceServerConfigResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.GetIceServerConfigResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.IceServerUnmarshaller">
            <summary>
            Response Unmarshaller for IceServer Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.IceServerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#KinesisVideoSignalingChannels#Model#IceServer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.IceServerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.IceServerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidArgumentException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.InvalidArgumentExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.InvalidClientExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for InvalidClientException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.InvalidClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.InvalidClientExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.InvalidClientExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for NotAuthorizedException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.NotAuthorizedExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for ResourceNotFoundException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.ResourceNotFoundExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SendAlexaOfferToMasterRequestMarshaller">
            <summary>
            SendAlexaOfferToMaster Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SendAlexaOfferToMasterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SendAlexaOfferToMasterRequestMarshaller.Marshall(Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SendAlexaOfferToMasterRequestMarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SendAlexaOfferToMasterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SendAlexaOfferToMaster operation
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SendAlexaOfferToMasterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SendAlexaOfferToMasterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SendAlexaOfferToMasterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SessionExpiredExceptionUnmarshaller">
            <summary>
            Response Unmarshaller for SessionExpiredException Object
            </summary>  
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SessionExpiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SessionExpiredExceptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,Amazon.Runtime.Internal.ErrorResponse)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <param name="errorResponse"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.Internal.MarshallTransformations.SessionExpiredExceptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException">
            <summary>
            The value for this input parameter is invalid.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidArgumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidArgumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidArgumentException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException">
            <summary>
            The specified client is invalid.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidClientException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException">
            <summary>
            The caller is not authorized to perform this operation.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException.#ctor(System.String)">
            <summary>
            Constructs a new NotAuthorizedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotAuthorizedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the NotAuthorizedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException">
            <summary>
            The specified resource is not found.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterRequest">
            <summary>
            Container for the parameters to the SendAlexaOfferToMaster operation.
            This API allows you to connect WebRTC-enabled devices with Alexa display devices.
            When invoked, it sends the Alexa Session Description Protocol (SDP) offer to the master
            peer. The offer is delivered as soon as the master is connected to the specified signaling
            channel. This API returns the SDP answer from the connected master. If the master
            is not connected to the signaling channel, redelivery requests are made until the
            message expires.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterRequest.ChannelARN">
            <summary>
            Gets and sets the property ChannelARN. 
            <para>
            The ARN of the signaling channel by which Alexa and the master peer communicate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterRequest.MessagePayload">
            <summary>
            Gets and sets the property MessagePayload. 
            <para>
            The base64-encoded SDP offer content.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterRequest.SenderClientId">
            <summary>
            Gets and sets the property SenderClientId. 
            <para>
            The unique identifier for the sender client.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterResponse">
            <summary>
            This is the response object from the SendAlexaOfferToMaster operation.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterResponse.Answer">
            <summary>
            Gets and sets the property Answer. 
            <para>
            The base64-encoded SDP answer content.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException">
            <summary>
            If the client session is expired. Once the client is connected, the session is valid
            for 45 minutes. Client should reconnect to the channel to continue sending/receiving
            messages.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException.#ctor(System.String)">
            <summary>
            Constructs a new SessionExpiredException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SessionExpiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException.#ctor(System.Exception)">
            <summary>
            Construct instance of SessionExpiredException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SessionExpiredException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SessionExpiredException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the SessionExpiredException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (Nothing in Visual Basic). </exception>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.Service">
            <summary>
            Constants used for properties of type Service.
            </summary>
        </member>
        <member name="F:Amazon.KinesisVideoSignalingChannels.Service.TURN">
            <summary>
            Constant TURN for Service
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Service.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Service.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.Service.op_Implicit(System.String)~Amazon.KinesisVideoSignalingChannels.Service">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient">
             <summary>
             Implementation for accessing KinesisVideoSignalingChannels
            
             Kinesis Video Streams Signaling Service is a intermediate service that establishes
             a communication channel for discovering peers, transmitting offers and answers in
             order to establish peer-to-peer connection in webRTC technology.
             </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor">
             <summary>
             Constructs AmazonKinesisVideoSignalingChannelsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonKinesisVideoSignalingChannelsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsConfig)">
             <summary>
             Constructs AmazonKinesisVideoSignalingChannelsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonKinesisVideoSignalingChannelsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonKinesisVideoSignalingChannelsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisVideoSignalingChannelsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsConfig)">
            <summary>
            Constructs AmazonKinesisVideoSignalingChannelsClient with AWS Credentials and an
            AmazonKinesisVideoSignalingChannelsClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonKinesisVideoSignalingChannelsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonKinesisVideoSignalingChannelsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisVideoSignalingChannelsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(System.String,System.String,Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsConfig)">
            <summary>
            Constructs AmazonKinesisVideoSignalingChannelsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisVideoSignalingChannelsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonKinesisVideoSignalingChannelsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonKinesisVideoSignalingChannelsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonKinesisVideoSignalingChannelsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.#ctor(System.String,System.String,System.String,Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsConfig)">
            <summary>
            Constructs AmazonKinesisVideoSignalingChannelsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonKinesisVideoSignalingChannelsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonKinesisVideoSignalingChannelsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="P:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.ServiceMetadata">
            <summary>
            Capture metadata for the service.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.GetIceServerConfig(Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigRequest)">
            <summary>
            Gets the Interactive Connectivity Establishment (ICE) server configuration information,
            including URIs, username, and password which can be used to configure the WebRTC connection.
            The ICE component uses this configuration information to setup the WebRTC connection,
            including authenticating with the Traversal Using Relays around NAT (TURN) relay server.
            
            
             
            <para>
            TURN is a protocol that is used to improve the connectivity of peer-to-peer applications.
            By providing a cloud-based relay service, TURN ensures that a connection can be established
            even when one or more peers are incapable of a direct peer-to-peer connection. For
            more information, see <a href="https://tools.ietf.org/html/draft-uberti-rtcweb-turn-rest-00">A
            REST API For Access To TURN Services</a>.
            </para>
             
            <para>
             You can invoke this API to establish a fallback mechanism in case either of the peers
            is unable to establish a direct peer-to-peer connection over a signaling channel.
            You must specify either a signaling channel ARN or the client ID in order to invoke
            this API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIceServerConfig service method.</param>
            
            <returns>The response from the GetIceServerConfig service method, as returned by KinesisVideoSignalingChannels.</returns>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException">
            Your request was throttled because you have exceeded the limit of allowed client calls.
            Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException">
            The specified client is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException">
            The specified resource is not found.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException">
            If the client session is expired. Once the client is connected, the session is valid
            for 45 minutes. Client should reconnect to the channel to continue sending/receiving
            messages.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-signaling-2019-12-04/GetIceServerConfig">REST API Reference for GetIceServerConfig Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.GetIceServerConfigAsync(Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the Interactive Connectivity Establishment (ICE) server configuration information,
            including URIs, username, and password which can be used to configure the WebRTC connection.
            The ICE component uses this configuration information to setup the WebRTC connection,
            including authenticating with the Traversal Using Relays around NAT (TURN) relay server.
            
            
             
            <para>
            TURN is a protocol that is used to improve the connectivity of peer-to-peer applications.
            By providing a cloud-based relay service, TURN ensures that a connection can be established
            even when one or more peers are incapable of a direct peer-to-peer connection. For
            more information, see <a href="https://tools.ietf.org/html/draft-uberti-rtcweb-turn-rest-00">A
            REST API For Access To TURN Services</a>.
            </para>
             
            <para>
             You can invoke this API to establish a fallback mechanism in case either of the peers
            is unable to establish a direct peer-to-peer connection over a signaling channel.
            You must specify either a signaling channel ARN or the client ID in order to invoke
            this API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIceServerConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIceServerConfig service method, as returned by KinesisVideoSignalingChannels.</returns>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException">
            Your request was throttled because you have exceeded the limit of allowed client calls.
            Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException">
            The specified client is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException">
            The specified resource is not found.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException">
            If the client session is expired. Once the client is connected, the session is valid
            for 45 minutes. Client should reconnect to the channel to continue sending/receiving
            messages.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-signaling-2019-12-04/GetIceServerConfig">REST API Reference for GetIceServerConfig Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.SendAlexaOfferToMaster(Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterRequest)">
            <summary>
            This API allows you to connect WebRTC-enabled devices with Alexa display devices.
            When invoked, it sends the Alexa Session Description Protocol (SDP) offer to the master
            peer. The offer is delivered as soon as the master is connected to the specified signaling
            channel. This API returns the SDP answer from the connected master. If the master
            is not connected to the signaling channel, redelivery requests are made until the
            message expires.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendAlexaOfferToMaster service method.</param>
            
            <returns>The response from the SendAlexaOfferToMaster service method, as returned by KinesisVideoSignalingChannels.</returns>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException">
            Your request was throttled because you have exceeded the limit of allowed client calls.
            Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException">
            The specified resource is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-signaling-2019-12-04/SendAlexaOfferToMaster">REST API Reference for SendAlexaOfferToMaster Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.AmazonKinesisVideoSignalingChannelsClient.SendAlexaOfferToMasterAsync(Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterRequest,System.Threading.CancellationToken)">
            <summary>
            This API allows you to connect WebRTC-enabled devices with Alexa display devices.
            When invoked, it sends the Alexa Session Description Protocol (SDP) offer to the master
            peer. The offer is delivered as soon as the master is connected to the specified signaling
            channel. This API returns the SDP answer from the connected master. If the master
            is not connected to the signaling channel, redelivery requests are made until the
            message expires.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendAlexaOfferToMaster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SendAlexaOfferToMaster service method, as returned by KinesisVideoSignalingChannels.</returns>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException">
            Your request was throttled because you have exceeded the limit of allowed client calls.
            Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException">
            The specified resource is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-signaling-2019-12-04/SendAlexaOfferToMaster">REST API Reference for SendAlexaOfferToMaster Operation</seealso>
        </member>
        <member name="T:Amazon.KinesisVideoSignalingChannels.IAmazonKinesisVideoSignalingChannels">
             <summary>
             Interface for accessing KinesisVideoSignalingChannels
            
             Kinesis Video Streams Signaling Service is a intermediate service that establishes
             a communication channel for discovering peers, transmitting offers and answers in
             order to establish peer-to-peer connection in webRTC technology.
             </summary>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.IAmazonKinesisVideoSignalingChannels.GetIceServerConfig(Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigRequest)">
            <summary>
            Gets the Interactive Connectivity Establishment (ICE) server configuration information,
            including URIs, username, and password which can be used to configure the WebRTC connection.
            The ICE component uses this configuration information to setup the WebRTC connection,
            including authenticating with the Traversal Using Relays around NAT (TURN) relay server.
            
            
             
            <para>
            TURN is a protocol that is used to improve the connectivity of peer-to-peer applications.
            By providing a cloud-based relay service, TURN ensures that a connection can be established
            even when one or more peers are incapable of a direct peer-to-peer connection. For
            more information, see <a href="https://tools.ietf.org/html/draft-uberti-rtcweb-turn-rest-00">A
            REST API For Access To TURN Services</a>.
            </para>
             
            <para>
             You can invoke this API to establish a fallback mechanism in case either of the peers
            is unable to establish a direct peer-to-peer connection over a signaling channel.
            You must specify either a signaling channel ARN or the client ID in order to invoke
            this API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIceServerConfig service method.</param>
            
            <returns>The response from the GetIceServerConfig service method, as returned by KinesisVideoSignalingChannels.</returns>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException">
            Your request was throttled because you have exceeded the limit of allowed client calls.
            Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException">
            The specified client is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException">
            The specified resource is not found.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException">
            If the client session is expired. Once the client is connected, the session is valid
            for 45 minutes. Client should reconnect to the channel to continue sending/receiving
            messages.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-signaling-2019-12-04/GetIceServerConfig">REST API Reference for GetIceServerConfig Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.IAmazonKinesisVideoSignalingChannels.GetIceServerConfigAsync(Amazon.KinesisVideoSignalingChannels.Model.GetIceServerConfigRequest,System.Threading.CancellationToken)">
            <summary>
            Gets the Interactive Connectivity Establishment (ICE) server configuration information,
            including URIs, username, and password which can be used to configure the WebRTC connection.
            The ICE component uses this configuration information to setup the WebRTC connection,
            including authenticating with the Traversal Using Relays around NAT (TURN) relay server.
            
            
             
            <para>
            TURN is a protocol that is used to improve the connectivity of peer-to-peer applications.
            By providing a cloud-based relay service, TURN ensures that a connection can be established
            even when one or more peers are incapable of a direct peer-to-peer connection. For
            more information, see <a href="https://tools.ietf.org/html/draft-uberti-rtcweb-turn-rest-00">A
            REST API For Access To TURN Services</a>.
            </para>
             
            <para>
             You can invoke this API to establish a fallback mechanism in case either of the peers
            is unable to establish a direct peer-to-peer connection over a signaling channel.
            You must specify either a signaling channel ARN or the client ID in order to invoke
            this API.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetIceServerConfig service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the GetIceServerConfig service method, as returned by KinesisVideoSignalingChannels.</returns>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException">
            Your request was throttled because you have exceeded the limit of allowed client calls.
            Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidClientException">
            The specified client is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException">
            The specified resource is not found.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.SessionExpiredException">
            If the client session is expired. Once the client is connected, the session is valid
            for 45 minutes. Client should reconnect to the channel to continue sending/receiving
            messages.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-signaling-2019-12-04/GetIceServerConfig">REST API Reference for GetIceServerConfig Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.IAmazonKinesisVideoSignalingChannels.SendAlexaOfferToMaster(Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterRequest)">
            <summary>
            This API allows you to connect WebRTC-enabled devices with Alexa display devices.
            When invoked, it sends the Alexa Session Description Protocol (SDP) offer to the master
            peer. The offer is delivered as soon as the master is connected to the specified signaling
            channel. This API returns the SDP answer from the connected master. If the master
            is not connected to the signaling channel, redelivery requests are made until the
            message expires.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendAlexaOfferToMaster service method.</param>
            
            <returns>The response from the SendAlexaOfferToMaster service method, as returned by KinesisVideoSignalingChannels.</returns>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException">
            Your request was throttled because you have exceeded the limit of allowed client calls.
            Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException">
            The specified resource is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-signaling-2019-12-04/SendAlexaOfferToMaster">REST API Reference for SendAlexaOfferToMaster Operation</seealso>
        </member>
        <member name="M:Amazon.KinesisVideoSignalingChannels.IAmazonKinesisVideoSignalingChannels.SendAlexaOfferToMasterAsync(Amazon.KinesisVideoSignalingChannels.Model.SendAlexaOfferToMasterRequest,System.Threading.CancellationToken)">
            <summary>
            This API allows you to connect WebRTC-enabled devices with Alexa display devices.
            When invoked, it sends the Alexa Session Description Protocol (SDP) offer to the master
            peer. The offer is delivered as soon as the master is connected to the specified signaling
            channel. This API returns the SDP answer from the connected master. If the master
            is not connected to the signaling channel, redelivery requests are made until the
            message expires.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SendAlexaOfferToMaster service method.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the SendAlexaOfferToMaster service method, as returned by KinesisVideoSignalingChannels.</returns>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ClientLimitExceededException">
            Your request was throttled because you have exceeded the limit of allowed client calls.
            Try making the call later.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.InvalidArgumentException">
            The value for this input parameter is invalid.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.NotAuthorizedException">
            The caller is not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.KinesisVideoSignalingChannels.Model.ResourceNotFoundException">
            The specified resource is not found.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/kinesis-video-signaling-2019-12-04/SendAlexaOfferToMaster">REST API Reference for SendAlexaOfferToMaster Operation</seealso>
        </member>
    </members>
</doc>
